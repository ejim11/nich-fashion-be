var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AccessTokenGuard.html",[0,2.742,1,3.055]],["body/guards/AccessTokenGuard.html",[0,3.157,1,3.518,2,2.55,3,0.114,4,0.069,5,0.069,6,5.802,7,4.907,8,3.015,9,0.686,10,4.276,11,4.359,12,0.259,13,1.059,14,1.523,15,5.29,16,1.549,17,5.03,18,1.453,19,2.749,20,6.253,21,5.29,22,4.602,23,0.557,24,3.42,25,1.318,26,0.01,27,1.112,28,0.503,29,0.957,30,4.044,31,4.602,32,3.42,33,1.639,34,5.03,35,1.625,36,4.173,37,1.476,38,2.171,39,2.291,40,2.39,41,4.436,42,3.324,43,4.436,44,5.03,45,3.71,46,3.42,47,5.03,48,3.752,49,0.747,50,3.011,51,0.199,52,3.28,53,0.454,54,4.173,55,0.396,56,1.681,57,2.259,58,2.55,59,2.392,60,3.42,61,2.749,62,3.015,63,0.077,64,0.07,65,2.55,66,1.639,67,1.111,68,3.518,69,1.808,70,2.749,71,3.42,72,3.42,73,2.266,74,3.015,75,3.015,76,2.392,77,3.42,78,1.603,79,1.415,80,3.42,81,1.147,82,2.749,83,5.29,84,3.015,85,3.42,86,0.916,87,3.42,88,3.42,89,3.015,90,3.42,91,3.015,92,2.765,93,2.765,94,2.473,95,2.765,96,2.659,97,2.765,98,2.765,99,2.765,100,1.147,101,4.436,102,3.42,103,3.42,104,2.55,105,1.808,106,3.42,107,1.009,108,3.42,109,0.005,110,0.005]],["title/interfaces/ActiveUserData.html",[111,3.055,112,2.148]],["body/interfaces/ActiveUserData.html",[3,0.131,4,0.118,5,0.118,9,1.163,12,0.438,26,0.009,28,0.661,35,2.041,49,1.317,63,0.131,83,4.662,109,0.007,110,0.007,111,5.039,112,3.542,113,4.662,114,3.322,115,5.114,116,5.114,117,1.93,118,3.949,119,3.598,120,6.59,121,2.027]],["title/controllers/AppController.html",[122,1.587,123,3.258]],["body/controllers/AppController.html",[3,0.14,4,0.126,5,0.126,12,0.468,13,1.579,23,0.578,26,0.009,37,1.303,49,1.113,51,0.203,55,0.717,63,0.14,64,0.127,67,1.368,107,1.242,109,0.008,110,0.008,122,2.725,123,5.594,124,2.25,125,5.461,126,7.395,127,1.543,128,6.193,129,5.331,130,5.461,131,5.461,132,6.193]],["title/modules/AppModule.html",[133,1.062,134,3.258]],["body/modules/AppModule.html",[1,3.115,3,0.066,4,0.059,5,0.059,7,2.169,26,0.01,28,0.245,39,1.117,40,2.116,51,0.24,52,1.599,55,0.337,56,1.43,57,1.922,59,2.034,63,0.066,64,0.059,68,2.034,69,2.355,73,1.002,107,0.583,109,0.005,110,0.005,123,4.037,124,1.618,129,4.558,130,2.564,133,1.678,134,6.671,135,1.149,136,1.182,137,1.255,138,1.255,139,1.182,140,2.336,141,1.255,142,2.564,143,2.564,144,2.564,145,4.558,146,4.825,147,4.825,148,4.558,149,4.558,150,4.825,151,4.825,152,4.825,153,4.825,154,4.33,155,4.33,156,4.825,157,4.825,158,4.558,159,4.33,160,1.922,161,1.057,162,1.182,163,2.338,164,2.488,165,2.908,166,3.581,167,4.008,168,4.454,169,2.908,170,4.454,171,2.908,172,4.454,173,2.908,174,1.481,175,0.86,176,2.908,177,2.908,178,2.908,179,2.908,180,5.413,181,4.454,182,2.034,183,3.322,184,2.908,185,2.338,186,2.908,187,3.322,188,2.908,189,3.322,190,2.908,191,2.908,192,2.564,193,2.908,194,2.564,195,2.908,196,1.35,197,1.538,198,2.338,199,1.922,200,2.908,201,2.908,202,2.908,203,2.908,204,1.922,205,1.825,206,2.564,207,1.666,208,2.034,209,2.908,210,2.908,211,2.908,212,2.908,213,2.564,214,2.564,215,4.352,216,4.773,217,2.908,218,2.908,219,2.908,220,2.908,221,2.908,222,2.908,223,2.908,224,2.564,225,2.908,226,2.908,227,2.908,228,2.908,229,2.908,230,2.564,231,2.908,232,2.908,233,2.908,234,2.169,235,2.908,236,2.564,237,2.908,238,1.43,239,2.908,240,2.908,241,2.564,242,2.564,243,2.908,244,2.564,245,2.908,246,2.908,247,2.564,248,2.564,249,2.564,250,2.564,251,2.564,252,2.564,253,5.413,254,5.413]],["title/injectables/AppService.html",[53,0.394,129,2.886]],["body/injectables/AppService.html",[3,0.144,4,0.13,5,0.13,12,0.484,13,1.61,23,0.597,26,0.009,37,1.347,49,1.135,51,0.174,53,0.691,55,0.741,63,0.144,64,0.131,107,1.283,109,0.008,110,0.008,126,7.477,129,5.055,255,1.633,256,5.644,257,6.4,258,6.4,259,6.4]],["title/classes/ApplyForDiscountDto.html",[64,0.089,260,3.258]],["body/classes/ApplyForDiscountDto.html",[3,0.144,4,0.129,5,0.129,12,0.481,23,0.594,26,0.009,28,0.536,49,1.131,51,0.173,63,0.144,64,0.156,109,0.008,110,0.008,117,2.042,127,1.585,260,5.685,261,2.311,262,6.722,263,5.114,264,5.709,265,3.992,266,5.609,267,3.747,268,3.621,269,2.375]],["title/injectables/ApplyForDiscountProvider.html",[53,0.394,270,2.886]],["body/injectables/ApplyForDiscountProvider.html",[3,0.091,4,0.082,5,0.082,9,0.811,12,0.306,13,1.195,14,1.673,16,1.254,18,1.254,23,0.53,25,1.254,26,0.01,27,1.058,28,0.478,29,0.91,33,1.008,35,1.648,37,1.195,45,1.859,49,0.973,51,0.211,53,0.512,55,0.469,63,0.091,64,0.083,66,1.414,67,1.254,73,1.393,78,1.809,79,1.597,81,1.905,86,1.521,100,1.357,107,1.138,109,0.006,110,0.006,112,3.495,114,2.318,175,1.196,204,3.75,238,1.989,255,1.032,264,5.574,270,3.75,271,5.782,272,3.252,273,1.595,274,4.563,275,3.567,276,2.957,277,5.266,278,4.045,279,5.005,280,4.563,281,4.045,282,1.393,283,3.98,284,3.398,285,2.179,286,4.045,287,4.045,288,1.111,289,3.017,290,1.694,291,2.318,292,2.422,293,3.252,294,3.567,295,1.348,296,3.567,297,4.563,298,1.431,299,3.252,300,3.567,301,3.567,302,3.567,303,3.567,304,4.045,305,3.567,306,4.045,307,2.609,308,3.252,309,4.045,310,1.955,311,3.017,312,2.318,313,2.318,314,2.318,315,2.224,316,2.318,317,2.318,318,3.017,319,3.562,320,4.045,321,2.539,322,3.567,323,5.005,324,4.045,325,3.567,326,4.045,327,4.045,328,2.829]],["title/controllers/AuthController.html",[122,1.587,329,3.258]],["body/controllers/AuthController.html",[3,0.06,4,0.054,5,0.054,9,1.516,10,3.821,11,3.663,12,0.201,13,0.874,14,1.305,16,0.587,18,0.918,23,0.477,25,1.13,26,0.01,27,0.953,28,0.623,29,0.82,35,1.667,37,1.217,39,2.554,43,3.663,45,3.057,51,0.195,55,0.308,63,0.06,64,0.054,66,1.035,67,0.587,79,1.169,82,5.587,84,5.099,86,0.712,107,1.026,109,0.004,110,0.004,118,2.658,122,1.858,124,0.966,127,1.274,234,3.814,273,1.798,282,0.916,295,0.631,298,0.94,329,3.098,330,2.344,331,1.461,332,3.196,333,5.782,334,3.663,335,3.34,336,4.96,337,2.344,338,4.752,339,4.112,340,5.865,341,2.658,342,5.347,343,3.814,344,3.981,345,4.484,346,5.114,347,3.416,348,5.347,349,6.651,350,2.658,351,2.658,352,2.137,353,4.884,354,2.284,355,4.912,356,2.658,357,4.652,358,3.098,359,2.658,360,2.658,361,2.658,362,2.137,363,4.884,364,2.658,365,2.658,366,2.658,367,2.658,368,2.906,369,1.461,370,1.859,371,1.756,372,1.982,373,1.756,374,2.344,375,2.137,376,3.821,377,2.344,378,2.658,379,1.591,380,2.658,381,1.354,382,2.344,383,2.137,384,5.782,385,4.649,386,4.649,387,2.658,388,1.307,389,2.137,390,2.658,391,2.658,392,6.078,393,3.379,394,5.513,395,3.34,396,5.782,397,3.814,398,5.114,399,4.154,400,2.658,401,5.114,402,5.114,403,5.114,404,2.658,405,3.577,406,4.112,407,2.658,408,2.658,409,1.461,410,2.658,411,2.658,412,2.658,413,2.658,414,2.658,415,2.658,416,2.658,417,2.658,418,2.658]],["title/modules/AuthModule.html",[133,1.062,145,2.886]],["body/modules/AuthModule.html",[3,0.107,4,0.096,5,0.096,26,0.009,51,0.236,55,0.548,56,2.325,57,3.124,59,3.307,63,0.107,64,0.097,68,3.307,69,2.5,109,0.006,110,0.006,124,2.295,133,1.924,135,1.868,136,1.922,137,2.041,138,2.041,139,1.922,140,3.069,141,2.726,145,5.859,159,3.964,160,2.726,161,1.718,162,1.922,164,2.173,166,3.802,194,4.17,248,4.17,249,4.17,250,4.17,251,4.17,252,4.17,329,5.304,376,5.377,377,4.17,419,4.17,420,4.17,421,5.107,422,5.377,423,5.377,424,5.377,425,4.729,426,4.417,427,4.729,428,4.17,429,4.729,430,4.17,431,4.729,432,3.802,433,3.802,434,4.729,435,4.17,436,4.729,437,4.17]],["title/injectables/AuthService.html",[53,0.394,376,2.886]],["body/injectables/AuthService.html",[3,0.082,4,0.074,5,0.074,9,0.727,10,4.115,11,3.144,12,0.274,13,1.105,14,2.056,16,1.363,18,1.494,23,0.631,25,1.494,26,0.01,27,1.261,28,0.57,29,1.085,33,1.865,35,1.568,37,1.575,51,0.209,53,0.474,55,0.42,63,0.082,64,0.074,66,1.923,67,1.363,86,1.653,107,1.238,109,0.005,110,0.005,133,1.277,234,3.916,255,0.926,273,1.959,282,2.126,295,1.465,298,1.857,332,3.446,334,4.63,335,4.221,336,3.916,337,4.63,338,4.743,347,2.581,352,4.221,353,4.945,355,4.698,357,4.731,362,4.221,363,4.945,368,4.316,375,2.915,376,3.469,383,2.915,389,2.915,422,5.1,423,5.223,424,5.1,430,3.198,435,3.198,437,3.198,438,3.198,439,3.626,440,3.626,441,3.626,442,5.25,443,3.626,444,5.25,445,4.63,446,3.626,447,4.63,448,2.915,449,2.915,450,3.626,451,3.626,452,2.369,453,3.626,454,3.626,455,3.626,456,3.626]],["title/guards/AuthenticationGuard.html",[0,2.742,187,3.258]],["body/guards/AuthenticationGuard.html",[0,3.821,1,5.493,2,5.536,3,0.08,4,0.072,5,0.072,7,2.641,9,0.71,10,3.347,11,1.804,12,0.268,13,1.086,14,1.554,15,6.438,16,1.64,18,1.478,23,0.481,25,1.14,26,0.01,27,1.135,28,0.513,29,0.828,30,4.148,31,4.679,33,1.286,35,1.55,36,4.258,37,1.281,38,2.227,39,2.568,40,2.451,42,3.409,51,0.201,53,0.466,54,3.609,55,0.41,62,3.122,63,0.08,64,0.152,65,2.641,66,1.517,67,1.64,73,2.304,78,1.645,79,0.996,81,1.188,86,0.949,100,1.188,105,2.728,107,0.71,109,0.005,110,0.005,116,4.55,117,0.949,182,2.476,187,3.848,192,3.122,247,3.122,295,1.225,310,2.097,332,3.408,379,2.12,381,1.804,457,3.122,458,4.55,459,5.16,460,5.368,461,5.16,462,3.122,463,7.175,464,3.541,465,3.541,466,5.16,467,3.122,468,2.847,469,2.339,470,2.847,471,2.339,472,3.122,473,3.848,474,3.122,475,3.122,476,3.122,477,2.837,478,5.16,479,2.641,480,4.54,481,3.122,482,3.541,483,3.541,484,3.122,485,3.541,486,2.476,487,3.122,488,4.55,489,3.122,490,3.122,491,3.541,492,3.122,493,3.122,494,3.541,495,1.627,496,3.541,497,3.541,498,2.641,499,2.641,500,3.541,501,2.641,502,3.541,503,3.409]],["title/injectables/ClearOtpAndExpiryTimeProvider.html",[53,0.394,504,2.886]],["body/injectables/ClearOtpAndExpiryTimeProvider.html",[3,0.108,4,0.097,5,0.097,12,0.362,13,1.339,14,1.825,16,1.056,18,1.684,23,0.594,25,1.406,26,0.01,27,1.186,28,0.536,29,1.021,33,1.585,35,1.986,37,1.339,51,0.207,53,0.574,55,0.554,63,0.108,64,0.098,66,1.585,67,1.056,73,1.647,78,1.524,79,1.345,81,1.605,86,1.281,100,1.605,107,0.959,109,0.007,110,0.007,175,1.413,255,1.221,273,1.739,276,3.136,282,1.647,285,1.836,288,1.313,290,2.002,295,1.135,310,1.647,328,4.451,343,4.746,347,4.013,504,4.205,505,6.307,506,4.489,507,3.845,508,5.612,509,3.16,510,4.782,511,4.489,512,5.612,513,4.782,514,5.612,515,2.863,516,2.74,517,3.001,518,4.217,519,3.567,520,4.217,521,2.629]],["title/classes/CreateDeliveryStateDto.html",[64,0.089,522,2.886]],["body/classes/CreateDeliveryStateDto.html",[3,0.135,4,0.121,5,0.121,12,0.451,23,0.684,26,0.009,28,0.618,49,1.088,51,0.162,63,0.135,64,0.15,109,0.008,110,0.008,117,1.964,127,1.826,207,4.547,261,2.167,265,3.743,267,3.901,268,3.482,269,2.227,522,4.843,523,4.981,524,6.998,525,4.795,526,6.998,527,5.244,528,2.397,529,4.448,530,5.964,531,5.964,532,4.03]],["title/classes/CreateDiscountDto.html",[64,0.089,533,2.886]],["body/classes/CreateDiscountDto.html",[3,0.131,4,0.118,5,0.118,12,0.438,23,0.731,26,0.009,28,0.661,49,1.069,51,0.157,63,0.131,64,0.147,109,0.007,110,0.007,117,1.93,127,1.953,261,2.107,263,4.662,264,5.481,265,3.64,266,5.114,267,4.03,268,3.423,269,2.166,307,3.311,308,6.301,528,2.356,529,4.325,532,3.961,533,4.76,534,7.229,535,6.911,536,5.799,537,5.799,538,5.799,539,5.792]],["title/injectables/CreateDiscountProvider.html",[53,0.394,540,2.886]],["body/injectables/CreateDiscountProvider.html",[3,0.104,4,0.094,5,0.094,9,0.927,12,0.35,13,1.31,14,1.795,16,1.021,18,1.374,23,0.581,25,1.374,26,0.01,27,1.16,28,0.524,29,0.998,33,1.152,37,1.31,38,2.685,45,2.126,51,0.213,53,0.562,55,0.536,63,0.104,64,0.095,66,1.152,67,1.021,78,1.474,79,1.301,81,2.088,86,1.239,92,2.542,93,2.542,94,2.273,95,2.542,96,2.445,97,2.542,98,2.542,99,2.542,100,1.552,107,0.927,109,0.006,110,0.006,175,1.367,204,3.055,238,2.273,255,1.18,272,3.718,273,1.71,275,4.078,276,3.1,279,5.487,283,3.99,285,2.389,288,1.269,289,3.449,290,1.936,295,1.098,296,4.078,310,2.143,312,2.649,313,2.649,314,2.649,315,2.542,316,2.649,317,2.649,354,2.542,533,5.459,540,4.111,541,6.201,542,5.654,543,4.624,544,3.718,545,4.624,546,6.222,547,2.445,548,3.718,549,4.624,550,3.055,551,2.902,552,4.624]],["title/classes/CreateProductDto.html",[64,0.089,553,2.886]],["body/classes/CreateProductDto.html",[3,0.095,4,0.085,5,0.085,12,0.317,23,0.796,26,0.009,27,1.247,28,0.73,39,1.612,49,1.308,51,0.196,63,0.095,64,0.137,109,0.006,110,0.006,117,1.561,127,2.125,196,1.272,197,2.22,261,1.526,265,5.153,267,4.229,268,3.961,269,1.568,283,3.178,528,2.362,529,4.345,532,3.677,553,3.849,554,3.703,555,5.378,556,4.42,557,4.42,558,4.42,559,5.378,560,5.378,561,4.004,562,5.378,563,3.537,564,4.199,565,4.199,566,4.199,567,4.199,568,4.199,569,4.199,570,4.199,571,4.199,572,4.199,573,4.199,574,3.677,575,3.376,576,3.132,577,4.199,578,2.937,579,4.074,580,4.345,581,4.074,582,2.237,583,3.376,584,2.937,585,2.635,586,2.774]],["title/injectables/CreateProductProvider.html",[53,0.394,587,2.886]],["body/injectables/CreateProductProvider.html",[3,0.068,4,0.061,5,0.061,9,0.913,12,0.417,13,0.959,14,1.407,16,1.006,18,1.006,23,0.425,25,1.006,26,0.01,27,0.849,28,0.519,29,0.731,33,0.746,37,0.959,38,1.966,42,1.979,49,0.676,51,0.197,53,0.411,55,0.347,63,0.068,64,0.061,66,1.373,67,1.006,73,2.69,78,1.757,79,1.551,81,1.85,86,2.052,92,2.504,93,2.504,94,2.24,95,2.504,96,2.409,97,2.504,98,2.504,99,2.504,100,1.85,107,0.913,109,0.005,110,0.005,196,2.439,197,1.584,199,1.979,255,0.764,273,1.341,285,1.15,288,0.822,295,1.082,298,1.059,310,1.899,354,1.647,488,2.641,495,2.831,498,4.111,499,4.111,501,2.234,550,1.979,551,1.88,553,4.94,563,3.257,574,2.504,582,1.749,585,1.88,587,3.01,588,4.861,589,2.408,590,4.432,591,2.995,592,6.157,593,4.793,594,2.995,595,2.408,596,5.611,597,3.398,598,2.995,599,2.234,600,2.095,601,2.408,602,2.995,603,1.979,604,2.408,605,2.995,606,3.186,607,2.095,608,3.01,609,3.46,610,4.432,611,3.662,612,2.408,613,2.408,614,3.662,615,2.408,616,2.408,617,3.662,618,2.995,619,5.513,620,2.995,621,3.662,622,2.995,623,2.995,624,2.995,625,2.995,626,4.556,627,2.408,628,1.793,629,2.995,630,2.995,631,2.995,632,2.859,633,2.995,634,1.059,635,1.584,636,2.995,637,2.995,638,2.641,639,2.995,640,2.995,641,3.398,642,2.995,643,2.995,644,2.995,645,2.995,646,2.995,647,2.641,648,2.995,649,2.641,650,2.995,651,2.641,652,2.995,653,2.995,654,4.111,655,2.641,656,2.641,657,4.017,658,2.641,659,2.408,660,2.995,661,3.662,662,2.408,663,2.408,664,2.408,665,2.408,666,3.662,667,2.408,668,2.408,669,4.432,670,3.662,671,2.408]],["title/classes/CreateProductVariantDto.html",[64,0.089,581,3.055]],["body/classes/CreateProductVariantDto.html",[3,0.116,4,0.105,5,0.105,12,0.39,23,0.733,26,0.009,28,0.703,29,1.073,39,1.98,49,1.259,51,0.181,63,0.116,64,0.152,109,0.007,110,0.007,117,1.792,127,1.956,196,2.465,261,1.874,265,4.198,267,3.86,268,3.526,269,1.926,528,2.187,532,3.677,576,3.847,578,3.608,579,4.678,580,4.988,581,4.678,582,3.124,583,6.541,586,3.408,596,5.967,672,4.147,673,5.535,674,5.191,675,5.535,676,5.158,677,5.158,678,5.158,679,4.549,680,5.158,681,5.158,682,3.536,683,4.549,684,4.549]],["title/classes/CreateReviewDto.html",[64,0.089,685,2.886]],["body/classes/CreateReviewDto.html",[3,0.118,4,0.106,5,0.106,12,0.395,23,0.736,26,0.009,28,0.665,49,1.241,51,0.142,63,0.118,64,0.138,109,0.007,110,0.007,117,1.806,127,1.966,261,1.898,265,4.686,267,4.015,268,3.748,269,1.95,409,4.337,528,2.204,532,3.706,679,4.605,683,4.605,684,4.605,685,4.454,686,7.202,687,4.605,688,3.803,689,4.277,690,6.002,691,6.566,692,5.222,693,5.222,694,5.222,695,7.89,696,4.036,697,5.222,698,6.742,699,5.028,700,5.222,701,5.222,702,5.222,703,5.222]],["title/injectables/CreateReviewProvider.html",[53,0.394,704,2.886]],["body/injectables/CreateReviewProvider.html",[3,0.093,4,0.084,5,0.084,9,0.829,12,0.312,13,1.213,14,1.693,16,1.273,18,1.273,23,0.538,25,1.273,26,0.01,27,1.074,28,0.486,29,0.924,33,1.03,37,1.213,38,2.486,45,1.9,51,0.212,53,0.52,55,0.479,63,0.093,64,0.084,66,1.435,67,1.273,73,1.424,78,1.317,79,1.621,81,1.933,86,1.544,92,2.272,93,2.272,94,2.032,95,2.272,96,2.185,97,2.272,98,2.272,99,2.272,100,1.387,107,0.829,109,0.006,110,0.006,121,1.163,175,1.222,196,2.287,238,2.032,255,1.055,273,1.613,276,2.98,285,2.212,288,1.135,290,1.731,295,1.368,298,1.462,310,1.985,312,2.368,313,2.368,314,2.368,315,2.272,316,2.368,317,2.368,354,2.272,495,1.9,547,2.185,550,2.731,551,2.594,685,5.163,688,2.105,689,4.686,690,4.632,691,4.632,704,3.807,705,5.849,706,3.644,707,4.632,708,4.133,709,4.8,710,4.133,711,5.081,712,4.632,713,4.133,714,3.323,715,3.323,716,3.644,717,3.082,718,3.644,719,2.105,720,2.368,721,4.133,722,4.133,723,5.762,724,4.133,725,4.133,726,4.133,727,4.133,728,4.133,729,4.133,730,4.133,731,4.133,732,4.133,733,3.323,734,4.133,735,4.133]],["title/classes/CreateSubscriberDto.html",[64,0.089,736,3.258]],["body/classes/CreateSubscriberDto.html",[3,0.13,4,0.117,5,0.117,9,1.437,12,0.435,23,0.537,26,0.009,28,0.485,49,1.064,51,0.194,63,0.13,64,0.147,109,0.007,110,0.007,117,1.92,118,3.997,127,1.433,261,2.09,267,3.524,269,2.148,345,4.106,388,2.828,635,3.79,736,5.346,737,6.32,738,5.072,739,5.346,740,5.13,741,4.023,742,4.624,743,5.752,744,5.346,745,5.013,746,5.762,747,4.624,748,4.624,749,4.624]],["title/classes/CreateUserDto.html",[64,0.089,750,2.886]],["body/classes/CreateUserDto.html",[3,0.111,4,0.1,5,0.1,9,1.457,12,0.374,23,0.607,26,0.009,28,0.548,35,2.017,49,0.965,51,0.218,63,0.111,64,0.158,109,0.007,110,0.007,117,1.742,118,3.86,119,3.672,127,1.62,261,1.795,267,3.573,269,1.845,345,4.424,381,3.702,388,2.428,635,4.083,739,4.849,741,4.547,742,3.971,744,4.849,745,5.083,746,5.227,747,3.971,748,3.971,749,3.971,750,4.296,751,6.409,752,3.455,753,4.356,754,4.356,755,4.356,756,4.356,757,4.94,758,4.94,759,3.574,760,3.971,761,4.356]],["title/injectables/CreateUsersProvider.html",[53,0.394,762,2.886]],["body/injectables/CreateUsersProvider.html",[3,0.097,4,0.088,5,0.088,9,1.19,12,0.326,13,1.249,14,1.731,16,0.952,18,1.614,23,0.554,25,1.31,26,0.01,27,1.106,28,0.5,29,0.951,33,1.478,35,1.967,37,1.249,45,1.982,51,0.208,52,2.37,53,0.535,55,0.499,63,0.097,64,0.139,66,1.82,67,0.952,78,1.374,79,1.669,81,1.991,86,1.155,100,1.447,107,0.864,109,0.006,110,0.006,118,1.982,119,1.805,121,1.213,175,1.274,238,2.119,255,1.1,273,1.65,276,3.026,282,1.485,284,2.581,285,2.278,288,1.183,290,1.805,310,2.043,312,2.47,313,2.47,314,2.47,315,2.37,316,2.47,317,2.47,358,4.424,426,3.015,452,2.278,495,1.982,509,2.848,511,4.257,515,2.581,517,2.706,547,2.279,550,2.848,551,2.706,739,5.449,750,5.359,762,3.92,763,5.981,764,3.802,765,5.231,766,4.311,767,5.231,768,4.311,769,3.215,770,3.802,771,2.47,772,4.311,773,5.932,774,4.311,775,4.311,776,4.311,777,4.311,778,4.311]],["title/injectables/DataResponseInterceptor.html",[53,0.394,183,3.258]],["body/injectables/DataResponseInterceptor.html",[3,0.103,4,0.093,5,0.093,9,0.917,12,0.346,13,1.3,16,1.01,18,1.654,23,0.576,25,1.364,26,0.01,27,1.151,28,0.521,29,0.991,31,5.237,33,1.539,36,4.32,37,1.3,51,0.19,53,0.558,55,0.53,56,2.249,63,0.103,64,0.094,65,3.411,66,1.742,67,1.01,69,2.418,94,3.682,107,0.917,109,0.006,110,0.006,167,5.443,183,4.607,185,5.622,255,1.167,295,1.086,298,1.618,452,2.371,467,6.167,468,3.677,479,3.411,487,5.447,489,5.447,779,6.167,780,4.033,781,5.86,782,5.636,783,5.447,784,6.177,785,4.033,786,4.574,787,6.177,788,7.489,789,4.574,790,6.177,791,6.994,792,6.177,793,6.177,794,6.177,795,4.574,796,4.574,797,4.574,798,4.574,799,4.574]],["title/entities/DeliveryState.html",[634,1.545,800,3.055]],["body/entities/DeliveryState.html",[3,0.121,4,0.109,5,0.109,12,0.406,23,0.744,26,0.009,28,0.672,49,1.183,51,0.146,63,0.121,64,0.11,109,0.007,110,0.007,117,1.839,121,2.128,127,1.986,208,5.762,288,1.474,307,3.155,523,5.17,526,6.67,527,4.998,528,2.244,634,2.428,733,6.082,800,4.8,801,2.735,802,4.735,803,4.998,804,5.369,805,4.529,806,5.369,807,3.773,808,5.369,809,5.369,810,6.052,811,6.052,812,2.839,813,4.735,814,6.863,815,5.369]],["title/controllers/DeliveryStatesController.html",[122,1.587,816,3.258]],["body/controllers/DeliveryStatesController.html",[3,0.088,4,0.08,5,0.08,12,0.296,13,1.168,16,0.865,18,0.865,23,0.601,25,1.423,26,0.01,27,1.306,28,0.543,29,1.033,33,1.605,37,1.557,49,1.14,51,0.219,55,0.454,63,0.088,64,0.08,66,1.746,67,0.865,107,1.292,109,0.006,110,0.006,119,1.64,122,1.423,124,1.423,127,1.605,207,4.822,208,4.901,273,1.996,295,0.93,298,1.386,331,2.153,332,1.995,354,2.153,369,3.542,372,2.921,373,3.666,379,2.345,381,2.826,405,2.74,469,2.588,522,5.331,523,4.398,527,5.498,547,2.071,759,2.153,816,4.138,817,3.454,818,5.681,819,5.681,820,5.548,821,5.681,822,3.454,823,3.454,824,3.917,825,3.917,826,3.917,827,3.917,828,3.454,829,5.74,830,3.917,831,3.917,832,5.681,833,3.666,834,4.257,835,3.454,836,3.454,837,4.461,838,2.345,839,2.588,840,2.921,841,3.454,842,3.917,843,4.138,844,3.917,845,2.588,846,3.917,847,3.917,848,3.917,849,2.74,850,3.917,851,3.917,852,3.917]],["title/modules/DeliveryStatesModule.html",[133,1.062,146,3.055]],["body/modules/DeliveryStatesModule.html",[3,0.129,4,0.117,5,0.117,26,0.009,51,0.228,55,0.664,63,0.129,64,0.117,109,0.007,110,0.007,124,2.6,133,1.897,135,2.265,136,2.332,137,2.475,138,2.475,139,2.332,140,3.366,141,2.475,146,5.993,160,3.088,161,2.084,162,2.332,164,2.636,174,2.922,175,1.695,207,4.099,208,4.012,523,3.6,800,4.012,816,5.816,834,5.662,835,5.058,836,5.058,853,5.058,854,5.058,855,5.736,856,5.736,857,5.058,858,5.736]],["title/injectables/DeliveryStatesService.html",[53,0.394,834,2.886]],["body/injectables/DeliveryStatesService.html",[3,0.068,4,0.061,5,0.061,9,1.105,12,0.226,13,0.959,14,1.955,16,0.662,18,1.006,23,0.575,25,1.361,26,0.01,27,1.148,28,0.519,29,0.988,33,1.373,35,1.056,37,1.469,45,2.534,49,1.036,51,0.189,53,0.411,55,0.347,63,0.068,64,0.061,66,1.373,67,0.662,78,2.224,79,1.963,81,2.434,86,1.65,92,3.031,93,3.031,94,2.71,95,3.031,96,2.915,97,3.031,98,3.031,99,3.031,100,2.067,105,1.584,107,1.105,109,0.005,110,0.005,121,0.843,175,0.885,207,4.758,238,2.71,255,0.764,273,1.862,276,2.617,282,1.899,284,1.793,285,2.365,288,0.822,290,1.254,295,0.711,310,2.283,312,3.158,313,3.158,314,3.158,315,3.031,316,3.158,317,3.158,318,2.234,319,3.46,354,1.647,503,3.01,522,4.793,523,4.159,527,5.57,547,1.584,720,1.716,800,5.854,818,2.641,819,4.861,821,4.861,822,2.641,828,2.641,829,5.356,832,4.861,833,3.01,834,3.01,837,3.662,841,2.641,845,1.979,849,2.095,857,2.641,859,5.843,860,2.641,861,4.556,862,2.995,863,2.995,864,4.556,865,2.995,866,4.556,867,2.995,868,2.995,869,2.995,870,2.641,871,2.995,872,4.556,873,4.556,874,2.641,875,2.408,876,2.995,877,2.095]],["title/entities/Discount.html",[283,2.075,634,1.545]],["body/entities/Discount.html",[3,0.114,4,0.103,5,0.103,12,0.383,23,0.774,26,0.009,28,0.722,39,2.54,49,1.158,50,3.036,51,0.138,63,0.114,64,0.104,79,1.427,109,0.007,110,0.007,117,1.772,121,2.071,127,2.067,264,5.148,283,3.142,288,1.392,305,6.491,307,3.719,308,5.918,477,4.047,528,2.551,535,6.491,634,2.34,696,3.96,801,2.583,805,4.712,807,3.636,812,2.681,878,4.472,879,7.361,880,5.071,881,5.071,882,5.071,883,4.472,884,5.071,885,4.37,886,5.818,887,5.071,888,4.37,889,5.071]],["title/entities/DiscountUsage.html",[634,1.545,890,2.742]],["body/entities/DiscountUsage.html",[3,0.11,4,0.099,5,0.099,12,0.37,23,0.746,26,0.009,28,0.674,35,1.942,39,1.879,49,0.959,51,0.209,63,0.11,64,0.1,109,0.007,110,0.007,117,1.731,121,2.035,127,1.993,205,5.157,283,3.981,288,1.343,292,4.919,307,2.97,634,2.286,801,2.493,803,4.78,807,3.552,812,2.587,888,4.269,890,4.055,891,4.315,892,5.687,893,7.234,894,4.819,895,4.894,896,4.894,897,4.315,898,5.698,899,4.894,900,4.894,901,4.894,902,4.894,903,4.315,904,4.315,905,3.65,906,4.519,907,5.395,908,5.698]],["title/controllers/DiscountsController.html",[122,1.587,909,3.258]],["body/controllers/DiscountsController.html",[3,0.106,4,0.096,5,0.096,12,0.356,13,1.325,16,1.04,18,1.04,23,0.588,25,1.391,26,0.009,27,1.174,28,0.531,29,1.01,35,1.756,37,1.325,51,0.229,55,0.545,63,0.106,64,0.096,67,1.04,107,1.263,109,0.006,110,0.006,112,3.725,114,2.697,119,1.971,122,1.71,124,1.71,127,1.569,204,4.161,260,6.189,273,1.976,274,5.705,280,3.784,291,2.697,295,1.118,298,1.665,331,2.588,369,3.462,370,3.292,371,3.11,373,4.161,381,2.398,406,3.784,533,5.37,542,5.063,544,3.784,547,2.489,548,5.063,759,2.588,823,4.151,838,2.818,839,3.11,843,3.511,909,4.696,910,4.151,911,4.707,912,4.707,913,4.707,914,4.688,915,4.151,916,4.404,917,3.292,918,3.784,919,4.707,920,4.707,921,4.707,922,4.707,923,4.707,924,3.784,925,4.707,926,4.707]],["title/modules/DiscountsModule.html",[133,1.062,147,3.055]],["body/modules/DiscountsModule.html",[3,0.116,4,0.105,5,0.105,26,0.009,51,0.233,55,0.596,63,0.116,64,0.105,109,0.007,110,0.007,124,2.426,133,1.803,135,2.032,136,2.092,137,2.221,138,2.221,139,2.092,140,3.199,141,2.221,147,6.211,148,5.504,160,2.882,161,1.87,162,2.092,164,3.069,174,2.621,175,1.521,205,3.229,206,4.537,270,5.504,283,2.445,289,3.838,292,3.08,540,5.504,909,5.529,914,5.504,915,4.537,927,4.537,928,4.537,929,5.146,930,5.146,931,5.146,932,5.146,933,5.888,934,3.838,935,5.146]],["title/injectables/DiscountsService.html",[53,0.394,914,2.886]],["body/injectables/DiscountsService.html",[3,0.097,4,0.087,5,0.087,12,0.324,13,1.243,14,2.017,16,1.305,18,1.305,23,0.631,25,1.493,26,0.009,27,1.26,28,0.57,29,1.084,33,1.472,35,1.689,37,1.534,38,2.549,49,1.003,51,0.214,53,0.533,55,0.496,63,0.097,64,0.088,66,1.684,67,1.305,86,1.583,107,1.185,109,0.006,110,0.006,112,3.582,114,2.455,255,1.094,264,5.527,270,5.35,273,1.922,274,4.749,280,4.749,282,1.476,283,3.92,289,3.196,291,2.455,295,1.403,299,3.445,300,3.778,301,3.778,302,3.778,303,3.778,354,2.356,358,4.406,452,2.268,495,2.715,533,5.35,540,5.221,542,5.435,544,3.445,547,2.265,548,3.445,914,3.903,933,5.209,936,3.778,937,4.285,938,4.285,939,4.285,940,4.285,941,5.209,942,5.907,943,4.285,944,4.285]],["title/modules/DiscountsUsageModule.html",[133,1.062,148,2.886]],["body/modules/DiscountsUsageModule.html",[3,0.129,4,0.116,5,0.116,26,0.009,51,0.221,55,0.663,63,0.129,64,0.117,109,0.007,110,0.007,133,1.894,135,2.259,136,2.325,137,2.469,138,2.469,139,2.325,140,3.361,141,3.361,148,5.739,160,3.083,161,2.078,162,2.325,164,2.629,174,2.914,175,1.691,204,3.78,205,3.59,277,5.954,292,3.424,294,5.044,890,3.59,945,5.044,946,5.044,947,5.044,948,5.72,949,5.72,950,4.266,951,5.72]],["title/injectables/DiscountsUsageService.html",[53,0.394,277,2.886]],["body/injectables/DiscountsUsageService.html",[3,0.099,4,0.089,5,0.089,9,0.883,12,0.333,13,1.267,14,1.75,16,0.972,18,1.329,23,0.561,25,1.329,26,0.01,27,1.121,28,0.507,29,0.965,33,1.097,35,1.708,37,1.267,45,2.023,49,1.182,51,0.2,53,0.543,55,0.51,63,0.099,64,0.09,66,1.499,67,0.972,78,1.403,79,1.238,81,2.019,86,1.179,92,2.42,93,2.42,94,2.164,95,2.42,96,2.327,97,2.42,98,2.42,99,2.42,100,1.477,107,0.883,109,0.006,110,0.006,121,1.693,175,1.301,204,3.976,238,2.164,255,1.123,273,1.668,276,3.048,277,3.976,282,1.516,283,3.501,285,2.31,288,1.208,290,1.843,292,4.105,293,5.512,295,1.045,297,6.204,310,2.073,312,2.522,313,2.522,314,2.522,315,2.42,316,2.522,317,2.522,321,2.762,322,6.046,323,6.046,890,2.762,950,3.283,952,3.881,953,6.017,954,4.402,955,4.402,956,6.017,957,6.017,958,4.62,959,4.402,960,5.512,961,4.402,962,4.402,963,2.908,964,4.402]],["title/injectables/FindAllProductsProvider.html",[53,0.394,965,2.886]],["body/injectables/FindAllProductsProvider.html",[3,0.078,4,0.07,5,0.07,12,0.26,13,1.063,14,1.527,16,1.115,18,1.115,23,0.471,25,1.115,26,0.01,27,1.115,28,0.426,29,0.81,33,0.856,37,1.063,38,2.179,50,5.011,51,0.206,53,0.456,55,0.398,63,0.078,64,0.07,66,0.856,67,1.115,73,2.615,78,1.095,79,0.967,81,1.153,86,0.921,92,1.889,93,1.889,94,1.689,95,1.889,96,1.817,97,1.889,98,1.889,99,1.889,100,1.153,107,1.012,109,0.005,110,0.005,175,1.016,196,1.53,255,0.877,273,1.455,276,2.775,288,0.943,290,1.439,295,1.199,310,1.184,318,2.563,328,2.403,452,1.319,556,2.271,557,2.271,558,2.271,561,2.057,563,3.164,600,2.403,606,3.531,628,2.057,673,2.563,675,2.563,696,2.057,719,3.742,845,2.271,963,4.357,965,3.336,966,5.277,967,3.03,968,4.463,969,3.03,970,4.765,971,3.436,972,4.059,973,3.03,974,4.139,975,3.436,976,5.302,977,3.428,978,5.048,979,2.763,980,2.403,981,2.563,982,2.763,983,4.452,984,3.03,985,2.763,986,2.563,987,2.763,988,3.436,989,4.612,990,5.048,991,3.436,992,3.436,993,5.984,994,3.436,995,3.436,996,3.436,997,5.048,998,3.436,999,3.436,1000,3.436,1001,3.436,1002,3.436,1003,3.436,1004,2.763,1005,3.436,1006,3.436,1007,3.436,1008,3.436,1009,4.452,1010,3.436,1011,3.436,1012,3.436,1013,3.436,1014,3.436,1015,3.436,1016,3.436,1017,5.048,1018,3.436,1019,5.048,1020,3.436,1021,4.059,1022,2.563,1023,3.436,1024,3.03,1025,3.436,1026,3.436]],["title/injectables/FindOneByIdProvider.html",[53,0.394,1027,2.886]],["body/injectables/FindOneByIdProvider.html",[3,0.097,4,0.087,5,0.087,9,1.188,12,0.325,13,1.247,14,1.729,16,0.95,18,1.612,23,0.553,25,1.309,26,0.01,27,1.104,28,0.499,29,0.95,33,1.476,35,2.028,37,1.247,45,1.978,49,1.006,51,0.198,53,0.535,55,0.498,63,0.097,64,0.139,66,1.476,67,0.95,78,1.888,79,1.667,81,1.988,86,1.153,92,2.365,93,2.365,94,2.115,95,2.365,96,2.275,97,2.365,98,2.365,99,2.365,100,1.444,105,3.132,107,0.863,109,0.006,110,0.006,121,2.281,175,1.272,238,2.115,255,1.098,273,1.648,276,3.024,282,1.482,284,2.576,285,2.274,288,1.181,290,1.801,295,1.021,310,1.482,312,2.465,313,2.465,314,2.465,315,2.365,316,2.465,317,2.465,318,3.209,319,3.718,452,2.274,503,2.843,509,2.843,511,4.252,515,2.576,517,2.7,874,3.794,1027,3.914,1028,5.053,1029,4.805,1030,3.794,1031,5.869,1032,5.924,1033,4.302,1034,5.924,1035,4.302,1036,3.794]],["title/injectables/FindOneUserByEmailProvider.html",[53,0.394,1037,2.886]],["body/injectables/FindOneUserByEmailProvider.html",[3,0.099,4,0.089,5,0.089,9,1.203,12,0.331,13,1.263,14,1.746,16,0.968,18,1.625,23,0.56,25,1.325,26,0.01,27,1.118,28,0.506,29,0.962,33,1.495,35,2.054,37,1.263,49,1.015,50,3.592,51,0.2,53,0.542,54,3.065,55,0.508,63,0.099,64,0.09,66,1.495,67,0.968,78,1.912,79,1.688,81,1.471,86,1.174,100,1.471,105,3.89,107,0.879,109,0.006,110,0.006,118,3.868,119,1.835,121,1.233,175,1.295,255,1.119,273,1.664,276,2.906,282,1.51,285,1.683,288,1.203,290,1.835,295,1.041,310,1.51,319,2.751,452,2.304,509,2.896,511,4.618,515,2.624,517,2.751,521,2.41,1028,5.103,1029,4.294,1031,5.915,1037,3.964,1038,3.865,1039,5.291,1040,4.383,1041,5.291,1042,4.383,1043,4.383,1044,3.865,1045,3.269,1046,4.383]],["title/injectables/FindUserByOtpAndExpiryTimeProvider.html",[53,0.394,1047,2.886]],["body/injectables/FindUserByOtpAndExpiryTimeProvider.html",[3,0.096,4,0.086,5,0.086,9,1.175,11,3.693,12,0.32,13,1.233,14,1.714,16,0.935,18,1.601,23,0.547,25,1.294,26,0.009,27,1.092,28,0.494,29,0.94,33,1.459,35,2.011,37,1.233,49,0.997,51,0.197,53,0.529,54,2.96,55,0.49,63,0.096,64,0.137,66,1.459,67,0.935,78,1.867,79,1.648,81,1.42,82,3.403,86,1.134,100,1.42,105,3.833,107,0.849,109,0.006,110,0.006,161,2.933,175,1.251,255,1.08,273,1.634,276,3.006,282,1.458,285,1.625,288,1.162,290,1.772,295,1.005,307,1.946,310,1.458,347,3.968,452,2.249,506,5.066,507,3.403,509,2.797,511,4.216,515,2.534,516,2.425,517,2.657,519,3.157,521,2.327,1028,5.01,1031,5.828,1045,3.157,1047,3.87,1048,5.828,1049,5.07,1050,5.858,1051,4.233,1052,5.858,1053,4.233,1054,4.233,1055,4.233,1056,4.233,1057,5.858,1058,4.233,1059,4.233]],["title/injectables/GenerateTokensProvider.html",[53,0.394,421,2.742]],["body/injectables/GenerateTokensProvider.html",[3,0.139,4,0.074,5,0.074,9,0.727,10,3.393,11,2.675,12,0.274,13,1.105,14,1.91,16,1.16,18,1.494,19,2.915,20,6.206,21,5.439,22,4.731,23,0.576,25,1.494,26,0.01,27,1.15,28,0.57,29,0.99,33,1.685,35,1.921,37,1.424,49,0.916,51,0.203,52,1.994,53,0.474,55,0.42,56,1.783,57,2.396,59,2.536,63,0.082,64,0.074,66,1.865,67,1.16,68,4.731,69,1.917,70,2.915,73,1.249,83,6.206,86,1.407,107,1.053,109,0.005,110,0.005,112,1.783,118,1.667,119,1.518,120,2.915,255,0.926,273,1.82,282,1.808,291,2.078,295,1.246,298,1.283,340,4.63,355,3.873,357,5.235,368,3.672,395,4.221,397,3.916,421,3.295,433,2.915,452,2.016,471,3.469,528,2.018,905,2.705,941,4.63,958,3.695,1060,5.965,1061,3.198,1062,5.965,1063,5.25,1064,5.25,1065,3.626,1066,5.25,1067,3.626,1068,5.25,1069,7.179,1070,5.439,1071,3.626,1072,2.915,1073,5.25,1074,3.198,1075,3.626,1076,3.198,1077,3.198,1078,3.198,1079,3.198,1080,3.198,1081,3.198,1082,2.915,1083,3.469,1084,3.626,1085,2.705,1086,3.626,1087,2.705,1088,2.705,1089,3.626,1090,3.626]],["title/classes/GetProductsBaseDto.html",[64,0.089,1091,3.258]],["body/classes/GetProductsBaseDto.html",[3,0.091,4,0.082,5,0.082,9,0.811,12,0.306,23,0.744,26,0.01,27,1.395,28,0.672,29,1.391,49,1.287,51,0.178,63,0.091,64,0.134,109,0.006,110,0.006,117,1.521,127,1.986,196,2.59,261,1.47,268,3.865,269,1.511,388,1.989,556,4.946,557,4.332,558,4.332,561,4.482,635,3.467,682,4.301,719,2.891,974,2.539,1091,4.89,1092,6.54,1093,3.017,1094,4.233,1095,5.005,1096,6.602,1097,6.602,1098,5.945,1099,4.045,1100,4.045,1101,5.005,1102,4.045,1103,4.045,1104,5.005,1105,5.005,1106,4.045,1107,3.567,1108,4.045,1109,4.233,1110,3.398,1111,2.673,1112,2.829,1113,3.567,1114,2.539]],["title/classes/GetProductsDto.html",[64,0.089,974,2.742]],["body/classes/GetProductsDto.html",[3,0.114,4,0.103,5,0.103,9,1.017,26,0.01,27,1.233,49,1.254,51,0.2,63,0.114,64,0.15,109,0.007,110,0.007,196,2.515,261,1.843,268,4.072,269,1.894,388,2.493,556,4.37,557,3.351,558,3.351,561,3.96,635,3.892,682,4.531,719,2.583,974,4.151,1091,5.49,1092,4.077,1093,3.782,1094,3.782,1095,4.472,1096,5.833,1097,5.833,1101,4.472,1104,4.472,1105,4.472,1109,5.49,1110,4.407,1111,3.351,1112,3.547,1113,5.833,1114,4.151]],["title/classes/GetUsersBaseDto.html",[64,0.089,1115,3.258]],["body/classes/GetUsersBaseDto.html",[3,0.118,4,0.106,5,0.106,9,1.05,12,0.396,23,0.63,26,0.009,28,0.569,29,1.267,35,1.732,51,0.203,63,0.152,64,0.171,109,0.007,110,0.007,117,1.809,127,1.682,261,1.902,269,1.955,307,3.966,388,2.574,539,6.009,608,4.462,635,3.952,682,3.952,752,3.662,753,4.617,1094,5.036,1109,5.036,1110,4.042,1111,3.459,1112,3.662,1114,3.286,1115,5.575,1116,6.009,1117,6.591,1118,6.591,1119,6.753,1120,5.955,1121,5.235,1122,3.459]],["title/classes/GetUsersDto.html",[64,0.089,1122,2.886]],["body/classes/GetUsersDto.html",[3,0.127,4,0.115,5,0.115,9,1.132,26,0.009,35,1.794,51,0.21,63,0.16,64,0.174,109,0.007,110,0.007,261,2.051,269,2.107,307,3.732,388,2.774,539,6.223,608,3.729,635,4.093,682,4.093,752,3.947,1094,4.209,1109,5.773,1110,4.634,1111,3.729,1112,3.947,1114,4.445,1115,5.773,1116,4.537,1117,4.976,1118,4.976,1120,4.976,1122,4.68]],["title/classes/InitiatePaymentDto.html",[64,0.089,1123,2.742]],["body/classes/InitiatePaymentDto.html",[3,0.11,4,0.099,5,0.099,12,0.369,23,0.717,26,0.009,28,0.706,29,1.317,39,2.477,49,1.243,51,0.196,63,0.11,64,0.157,109,0.007,110,0.007,117,1.728,127,1.915,196,1.48,261,1.774,267,3.93,268,3.798,269,1.823,528,1.596,532,3.547,561,2.923,563,2.581,575,3.925,576,3.641,578,3.415,579,5.054,580,5.389,582,1.875,584,3.415,586,4.263,682,4.064,688,2.487,719,3.681,960,5.809,1098,5.389,1123,4.049,1124,6.426,1125,3.925,1126,5.054,1127,5.054,1128,4.882,1129,4.882,1130,4.882,1131,5.733,1132,4.882,1133,4.774,1134,3.415]],["title/injectables/InitiatePaymentProvider.html",[53,0.394,1135,2.886]],["body/injectables/InitiatePaymentProvider.html",[3,0.086,4,0.048,5,0.048,9,0.765,12,0.18,13,0.803,14,1.39,16,1.53,18,0.843,22,3.808,23,0.445,25,0.843,26,0.01,27,0.711,28,0.322,29,0.612,33,0.95,35,1.697,37,1.003,42,1.577,45,1.097,48,1.78,49,0.354,51,0.21,52,1.312,53,0.344,55,0.276,56,1.173,63,0.054,64,0.049,67,1.315,69,2.017,73,2.522,76,3.808,78,1.519,79,1.341,81,1.599,86,2.04,100,1.599,107,0.956,109,0.004,110,0.004,112,2.677,114,1.367,118,1.097,121,1.073,167,4.404,196,1.804,207,1.367,255,0.609,273,1.159,282,0.822,283,3.167,285,0.916,288,0.655,291,1.367,295,1.414,298,1.686,310,1.642,311,1.78,321,1.498,332,1.943,393,1.577,452,0.916,473,1.78,479,1.78,481,2.104,486,1.669,495,1.753,498,1.78,499,3.555,501,1.78,516,1.367,551,1.498,563,3.357,582,0.916,586,2.521,592,5.887,599,1.78,608,2.521,609,2.394,610,3.832,611,3.067,612,1.918,613,1.918,614,3.067,615,1.918,616,1.918,617,3.067,628,2.284,632,1.498,638,2.104,651,2.104,654,3.555,655,2.104,656,2.104,657,3.364,658,2.104,659,1.918,661,1.918,662,1.918,663,1.918,664,1.918,665,1.918,666,3.067,667,1.918,668,1.918,669,3.832,670,3.067,671,1.918,674,2.668,688,1.943,719,1.216,720,2.186,744,2.845,782,2.668,903,2.104,905,1.78,958,1.428,1029,1.498,1082,1.918,1123,3.985,1126,2.668,1127,2.668,1135,2.521,1136,4.802,1137,1.918,1138,4.802,1139,4.766,1140,2.104,1141,3.665,1142,3.991,1143,2.386,1144,3.364,1145,2.386,1146,2.394,1147,4.061,1148,4.787,1149,2.386,1150,2.386,1151,1.918,1152,1.918,1153,1.918,1154,1.918,1155,3.067,1156,1.78,1157,2.731,1158,2.104,1159,1.78,1160,2.104,1161,1.669,1162,1.78,1163,2.104,1164,1.669,1165,2.104,1166,3.815,1167,2.386,1168,4.766,1169,2.386,1170,2.386,1171,1.918,1172,2.386,1173,2.386,1174,2.386,1175,2.386,1176,2.386,1177,2.386,1178,2.386,1179,3.364,1180,5.445,1181,2.104,1182,3.067,1183,2.845,1184,1.918,1185,2.386,1186,2.104,1187,3.815,1188,3.364,1189,3.815,1190,2.386,1191,2.386,1192,2.386,1193,4.203,1194,5.567,1195,2.386,1196,3.815,1197,2.386,1198,2.386,1199,3.815,1200,5.445,1201,3.815,1202,2.386,1203,2.104,1204,3.364,1205,2.386,1206,2.386,1207,2.386,1208,2.386,1209,2.386,1210,2.386,1211,2.386,1212,2.386,1213,2.386,1214,2.104,1215,2.104,1216,2.386,1217,1.918,1218,2.386,1219,2.104,1220,2.104,1221,2.386,1222,2.104]],["title/modules/MailModule.html",[133,1.062,149,2.886]],["body/modules/MailModule.html",[3,0.102,4,0.092,5,0.092,14,1.15,26,0.01,35,1.044,39,2.347,40,2.905,51,0.218,52,3.361,55,0.522,56,2.215,63,0.102,64,0.092,69,3.232,79,1.267,107,0.903,109,0.006,110,0.006,133,1.996,135,1.779,136,1.832,137,1.944,138,1.944,139,1.832,140,2.995,141,2.995,149,5.422,160,2.638,161,1.637,162,1.832,164,2.071,167,4.585,224,5.391,230,3.973,236,3.973,242,3.973,298,1.594,332,2.295,473,3.36,477,2.477,484,3.973,771,4.986,1004,3.622,1021,3.622,1223,3.973,1224,3.973,1225,3.973,1226,4.505,1227,6.114,1228,4.505,1229,4.505,1230,4.56,1231,3.622,1232,3.622,1233,6.114,1234,4.505,1235,4.505,1236,3.151,1237,4.505,1238,3.973,1239,4.505,1240,5.391,1241,4.505,1242,6.114,1243,6.114,1244,6.114,1245,4.505,1246,4.505,1247,4.505,1248,4.505,1249,4.505,1250,3.973,1251,3.973,1252,3.973,1253,4.505,1254,4.505,1255,4.505,1256,4.505,1257,4.505,1258,4.505]],["title/injectables/MailService.html",[53,0.394,771,2.503]],["body/injectables/MailService.html",[3,0.07,4,0.063,5,0.063,9,0.619,12,0.233,13,0.981,14,2.068,16,0.682,18,1.382,23,0.627,25,1.483,26,0.01,27,1.251,28,0.566,29,1.077,33,1.759,35,2.013,36,4.375,37,1.317,38,3.257,49,1.048,51,0.199,53,0.421,55,0.358,63,0.07,64,0.063,66,1.759,86,1.676,109,0.005,110,0.005,118,2.876,121,0.869,133,1.134,161,2.44,196,1.896,234,2.303,255,0.788,273,1.971,295,0.733,298,1.986,343,2.303,347,4.137,719,3.421,740,4.432,771,2.671,905,2.303,1087,5.266,1230,2.303,1231,2.482,1232,3.748,1236,5.278,1240,2.723,1250,5.517,1251,5.517,1252,5.517,1259,2.723,1260,4.662,1261,5.616,1262,4.662,1263,4.662,1264,3.088,1265,7.331,1266,3.088,1267,4.662,1268,3.088,1269,7.061,1270,3.088,1271,3.088,1272,4.662,1273,3.088,1274,4.662,1275,3.088,1276,4.662,1277,4.952,1278,2.482,1279,3.088,1280,2.303,1281,3.088,1282,6.256,1283,5.616,1284,4.662,1285,2.482,1286,6.256,1287,6.256,1288,3.088,1289,3.088,1290,3.088,1291,6.256,1292,3.088,1293,3.088,1294,3.088,1295,3.088,1296,3.088,1297,3.088,1298,3.088,1299,2.723,1300,3.088,1301,3.088,1302,2.482,1303,3.088,1304,4.662,1305,3.088,1306,3.088,1307,3.088,1308,3.088]],["title/entities/Order.html",[634,1.545,892,2.886]],["body/entities/Order.html",[3,0.08,4,0.072,5,0.072,12,0.267,23,0.791,26,0.009,27,1.132,28,0.72,29,1.258,39,3.012,40,2.445,49,1.237,50,3.638,51,0.181,63,0.08,64,0.072,109,0.005,110,0.005,117,1.379,121,1.998,127,2.113,196,2.024,205,2.215,288,0.969,292,2.113,307,3.408,477,2.83,528,2.184,634,1.821,688,1.798,719,3.095,801,1.798,803,4.015,805,4.624,807,2.83,812,1.866,885,2.332,888,5.058,890,5.022,892,3.401,897,3.112,906,3.6,908,4.539,950,2.632,958,3.638,1126,4.25,1127,4.25,1194,4.885,1280,2.632,1309,3.112,1310,6.076,1311,6.076,1312,4.885,1313,6.076,1314,6.076,1315,6.919,1316,4.885,1317,4.885,1318,3.529,1319,3.529,1320,3.529,1321,3.529,1322,3.529,1323,4.138,1324,3.529,1325,5.147,1326,3.529,1327,3.529,1328,3.529,1329,5.37,1330,3.529,1331,3.112,1332,5.147,1333,4.539,1334,3.529,1335,3.529,1336,4.885,1337,3.529,1338,3.529,1339,4.539,1340,4.539,1341,3.529,1342,3.529,1343,3.529,1344,3.529,1345,4.539]],["title/controllers/OrdersController.html",[122,1.587,1346,3.258]],["body/controllers/OrdersController.html",[3,0.152,4,0.137,5,0.137,26,0.009,51,0.183,55,0.782,63,0.152,64,0.138,109,0.008,110,0.008,122,2.453,124,2.453,331,3.711,1346,5.888,1347,5.952,1348,6.75,1349,6.75]],["title/modules/OrdersModule.html",[133,1.062,150,3.055]],["body/modules/OrdersModule.html",[3,0.131,4,0.118,5,0.118,26,0.009,51,0.229,55,0.674,63,0.131,64,0.119,109,0.007,110,0.007,124,2.622,133,1.908,135,2.297,136,2.364,137,2.51,138,2.51,139,2.364,140,3.387,141,2.51,150,6.013,160,3.115,161,2.113,162,2.364,164,2.673,174,2.962,175,1.719,892,3.842,1346,5.852,1350,5.128,1351,5.128,1352,6.013,1353,5.815,1354,5.815,1355,5.815,1356,5.815,1357,5.815]],["title/injectables/OrdersService.html",[53,0.394,1352,3.055]],["body/injectables/OrdersService.html",[3,0.153,4,0.138,5,0.138,26,0.009,51,0.184,53,0.715,55,0.787,63,0.153,64,0.139,109,0.008,110,0.008,255,1.734,1352,5.542,1358,5.991]],["title/classes/OtpSigninDto.html",[64,0.089,338,2.886]],["body/classes/OtpSigninDto.html",[3,0.131,4,0.118,5,0.118,9,1.447,12,0.44,23,0.543,26,0.009,28,0.49,51,0.196,63,0.131,64,0.148,109,0.007,110,0.007,117,1.933,127,1.449,161,2.622,261,2.113,267,3.548,269,2.172,336,5.382,338,4.768,345,4.135,347,4.366,368,5.047,388,2.859,528,2.36,532,3.967,635,3.816,741,4.067,745,5.047,1359,5.128,1360,5.815,1361,5.815,1362,5.815]],["title/injectables/OtpSigninProvider.html",[53,0.394,422,2.886]],["body/injectables/OtpSigninProvider.html",[3,0.102,4,0.092,5,0.092,10,3.376,11,3.547,12,0.343,13,1.292,14,1.777,16,1.356,18,1.356,23,0.573,25,1.356,26,0.01,27,1.144,28,0.518,29,0.985,35,1.614,37,0.954,51,0.212,53,0.554,55,0.525,63,0.102,64,0.093,67,1.356,73,2.398,86,1.865,105,2.397,107,0.909,109,0.006,110,0.006,118,2.084,119,1.899,121,1.276,255,1.157,273,1.693,282,1.562,295,1.458,298,1.604,338,5.152,347,3.423,355,2.846,389,3.646,395,4.937,397,4.58,421,4.683,422,4.057,432,3.646,452,1.741,506,2.846,516,2.598,720,2.598,886,3.382,1049,3.171,1083,4.057,1085,3.382,1087,3.382,1088,3.382,1141,4.419,1156,3.382,1363,6.14,1364,3.999,1365,6.141,1366,3.999,1367,5.598,1368,4.535,1369,6.141,1370,4.535,1371,5.598,1372,4.535,1373,3.999,1374,3.999,1375,3.999,1376,4.535,1377,3.646,1378,4.535,1379,4.535,1380,3.999,1381,4.535,1382,3.999,1383,3.999]],["title/interfaces/Paginated.html",[111,3.055,977,2.503]],["body/interfaces/Paginated.html",[3,0.122,4,0.11,5,0.11,9,1.085,12,0.409,26,0.009,28,0.723,49,1.225,63,0.122,94,2.66,109,0.007,110,0.007,111,4.823,113,4.35,117,1.848,486,4.823,528,2.614,597,5.962,781,6.182,782,3.784,977,4.349,987,4.35,1070,6.103,1384,4.771,1385,7.445,1386,7.05,1387,5.545,1388,6.897,1389,6.897,1390,4.771,1391,4.771,1392,4.771,1393,4.771,1394,4.771,1395,4.771,1396,4.771,1397,4.771]],["title/modules/PaginationModule.html",[133,1.062,1398,2.886]],["body/modules/PaginationModule.html",[3,0.135,4,0.122,5,0.122,26,0.009,51,0.199,55,0.693,63,0.135,64,0.122,109,0.008,110,0.008,133,1.932,135,2.362,136,2.431,137,2.581,138,2.581,139,2.431,140,3.429,141,3.429,160,3.169,161,2.173,162,2.431,970,5.688,1398,5.794,1399,5.274,1400,5.274,1401,5.274,1402,5.981,1403,5.981]],["title/injectables/PaginationProvider.html",[53,0.394,970,2.742]],["body/injectables/PaginationProvider.html",[3,0.081,4,0.073,5,0.073,9,0.723,12,0.273,13,1.101,14,1.57,16,0.797,18,1.491,23,0.488,25,1.359,26,0.01,27,0.975,28,0.519,29,0.839,33,1.303,37,1.101,38,2.257,45,3.805,51,0.203,52,2.876,53,0.472,55,0.418,58,2.691,63,0.081,64,0.074,66,1.681,67,0.797,73,2.719,79,1.015,86,1.401,94,1.774,107,0.723,109,0.007,110,0.005,182,2.523,255,0.921,273,1.496,276,3.118,288,0.99,295,0.856,452,2.362,486,3.658,495,1.658,609,3.283,696,4.04,720,2.997,781,4.304,968,3.901,970,3.283,977,2.997,986,3.901,987,5.426,1021,5.426,1022,2.691,1029,3.283,1044,3.181,1070,2.9,1072,2.9,1110,4.04,1112,2.523,1385,5.426,1386,3.181,1390,3.181,1391,5.426,1392,3.181,1393,5.951,1394,3.181,1395,3.181,1396,3.181,1397,3.181,1404,3.181,1405,7.471,1406,3.608,1407,3.608,1408,3.608,1409,3.608,1410,5.231,1411,3.608,1412,3.608,1413,3.608,1414,3.608,1415,3.608,1416,3.608,1417,4.612,1418,5.231,1419,7.894,1420,6.749,1421,5.231,1422,3.608,1423,3.608,1424,3.608,1425,3.608,1426,5.231,1427,3.608,1428,3.608,1429,3.608,1430,3.608,1431,3.608,1432,3.608,1433,3.608,1434,3.608,1435,3.608,1436,5.231,1437,3.608,1438,3.608,1439,3.608,1440,3.608,1441,3.608]],["title/classes/PaginationQueryDto.html",[64,0.089,1110,2.615]],["body/classes/PaginationQueryDto.html",[3,0.121,4,0.109,5,0.109,9,1.079,12,0.407,23,0.641,26,0.009,28,0.579,29,1.28,51,0.146,63,0.121,64,0.141,109,0.007,110,0.007,117,1.842,127,1.713,261,1.956,269,2.01,394,5.127,477,3.779,528,2.837,609,4.314,628,4.115,635,3.634,682,4.219,696,4.115,963,5.447,986,5.127,989,5.766,1110,4.115,1111,5.004,1417,6.062,1442,4.747,1443,5.383,1444,7.979,1445,5.383,1446,5.383,1447,6.874]],["title/classes/PatchProductDto.html",[64,0.089,1448,2.886]],["body/classes/PatchProductDto.html",[3,0.091,4,0.082,5,0.082,12,0.305,23,0.797,26,0.009,27,1.219,28,0.72,29,1.406,49,1.321,51,0.154,63,0.091,64,0.116,109,0.006,110,0.006,117,1.516,121,1.841,127,2.128,196,1.221,261,1.464,268,4.02,269,1.505,283,3.109,528,1.851,532,3.112,555,5.26,556,4.323,557,4.323,558,4.323,559,5.26,560,5.26,561,3.917,562,5.26,563,3.459,579,3.959,582,1.547,584,2.818,682,4.551,1093,3.006,1098,6.243,1107,3.554,1133,4.323,1134,2.818,1448,3.74,1449,7.591,1450,4.03,1451,4.03,1452,4.03,1453,4.03,1454,4.03,1455,4.03,1456,4.03,1457,4.03,1458,4.03,1459,4.03,1460,4.03,1461,4.03,1462,4.03]],["title/classes/PatchProductVariantDto.html",[64,0.089,1133,2.886]],["body/classes/PatchProductVariantDto.html",[3,0.126,4,0.113,5,0.113,12,0.421,23,0.655,26,0.009,28,0.592,29,1.296,49,1.042,51,0.209,63,0.126,64,0.144,109,0.007,110,0.007,117,1.882,121,2.164,127,1.75,196,2.448,261,2.023,268,3.337,269,2.079,480,4.153,495,2.56,581,5.381,582,2.954,584,3.895,672,4.477,682,4.068,1098,4.153,1114,4.408,1133,4.641,1134,5.381,1463,6.185,1464,6.185,1465,5.569,1466,5.647,1467,5.569,1468,5.569,1469,4.477,1470,7.024]],["title/classes/PatchUserDto.html",[64,0.089,1471,3.055]],["body/classes/PatchUserDto.html",[3,0.101,4,0.091,5,0.091,12,0.339,23,0.778,26,0.009,28,0.703,29,1.425,49,1.307,51,0.188,63,0.101,64,0.125,109,0.006,110,0.006,117,1.633,127,2.078,261,1.63,268,3.963,269,1.675,480,3.346,495,2.062,527,4.575,528,1.993,532,3.351,682,4.471,750,2.964,752,3.137,755,3.956,769,3.346,1114,3.826,1302,5.567,1463,3.607,1469,3.607,1471,4.263,1472,7.457,1473,6.096,1474,6.106,1475,6.106,1476,6.924,1477,6.106,1478,6.106,1479,6.106,1480,8.197,1481,4.486,1482,4.486,1483,4.486,1484,4.486,1485,4.486,1486,4.486,1487,4.486,1488,4.486]],["title/entities/Payment.html",[634,1.545,1157,2.503]],["body/entities/Payment.html",[3,0.089,4,0.08,5,0.08,9,0.794,12,0.3,23,0.778,26,0.009,27,1.208,28,0.711,29,0.897,39,2.704,40,2.657,49,1.238,50,3.881,51,0.176,63,0.089,64,0.081,109,0.006,110,0.006,117,1.498,121,2.09,127,2.078,197,2.094,288,1.087,307,3.237,393,4.283,452,2.489,477,3.075,528,1.829,563,3.427,574,3.872,582,1.521,585,2.486,634,2.491,801,2.018,803,4.283,805,4.356,807,3.075,812,2.094,885,2.617,888,3.695,906,3.911,958,3.881,1157,4.035,1159,5.54,1183,2.954,1193,5.716,1217,5.212,1219,3.493,1220,5.716,1312,5.212,1316,5.212,1317,4.496,1323,4.496,1329,5.662,1331,3.493,1333,4.932,1336,5.212,1339,4.932,1340,4.932,1345,4.932,1489,3.493,1490,4.932,1491,4.171,1492,4.932,1493,4.496,1494,3.961,1495,3.961,1496,3.961,1497,3.961,1498,3.961,1499,3.961,1500,3.961,1501,3.961,1502,3.961,1503,3.961,1504,5.593,1505,3.961,1506,3.961,1507,2.771,1508,3.961]],["title/controllers/PaymentController.html",[122,1.587,1509,3.258]],["body/controllers/PaymentController.html",[3,0.152,4,0.137,5,0.137,26,0.009,51,0.183,55,0.782,63,0.152,64,0.138,109,0.008,110,0.008,122,2.453,124,2.453,331,3.711,1157,3.867,1509,5.888,1510,5.952,1511,6.75]],["title/modules/PaymentModule.html",[133,1.062,151,3.055]],["body/modules/PaymentModule.html",[3,0.143,4,0.129,5,0.129,26,0.009,51,0.229,55,0.735,63,0.143,64,0.13,109,0.008,110,0.008,124,2.765,133,1.85,135,2.505,151,5.322,164,2.915,174,3.231,175,1.875,1157,3.634,1509,6.08,1512,6.342,1513,6.342,1514,6.342,1515,6.342]],["title/controllers/PaystackController.html",[122,1.587,1516,3.258]],["body/controllers/PaystackController.html",[3,0.101,4,0.091,5,0.091,12,0.338,13,1.279,14,1.763,16,0.987,18,0.987,23,0.567,25,1.343,26,0.009,27,1.133,28,0.512,29,0.975,35,1.798,37,1.279,48,3.332,49,1.025,51,0.229,55,0.517,63,0.101,64,0.091,67,0.987,104,5.969,107,1.219,109,0.006,110,0.006,112,3.646,114,2.559,119,1.87,122,1.623,124,1.623,127,1.514,273,1.68,282,1.539,291,2.559,295,1.061,298,1.58,331,2.456,332,2.276,369,4.265,370,3.124,371,2.951,373,2.951,379,2.674,381,3.096,405,4.251,406,3.591,469,2.951,759,2.456,838,2.674,839,2.951,840,3.332,916,4.251,917,3.124,918,3.591,924,3.591,1123,5.023,1148,5.555,1151,3.591,1152,3.591,1157,2.559,1516,4.533,1517,3.939,1518,6.909,1519,6.093,1520,4.467,1521,6.237,1522,4.467,1523,4.467,1524,3.939,1525,6.078,1526,4.467,1527,4.467,1528,4.565,1529,3.939,1530,4.467,1531,4.467,1532,4.467,1533,4.467,1534,4.467]],["title/modules/PaystackModule.html",[133,1.062,152,3.055]],["body/modules/PaystackModule.html",[3,0.11,4,0.099,5,0.099,26,0.009,51,0.235,55,0.563,56,2.389,63,0.11,64,0.099,109,0.007,110,0.007,124,2.337,133,1.753,135,1.919,136,1.976,137,2.097,138,2.097,139,1.976,140,3.111,141,2.097,152,6.275,154,5.147,155,5.147,159,5.147,160,2.776,161,1.766,162,1.976,164,2.956,166,3.907,197,2.569,198,3.907,428,4.285,582,1.866,1135,5.419,1153,3.907,1154,3.907,1516,5.377,1528,5.419,1529,4.285,1535,4.285,1536,4.285,1537,4.86,1538,5.419,1539,4.86,1540,4.86,1541,4.86,1542,5.672,1543,4.285,1544,4.86,1545,4.86]],["title/injectables/PaystackService.html",[53,0.394,1528,2.886]],["body/injectables/PaystackService.html",[3,0.103,4,0.093,5,0.093,12,0.347,13,1.302,14,2.058,16,1.366,18,1.366,23,0.653,25,1.546,26,0.009,27,1.305,28,0.59,29,1.123,35,1.814,37,1.302,49,1.039,51,0.212,53,0.558,55,0.531,63,0.103,64,0.094,67,1.366,86,1.657,104,5.59,107,1.24,109,0.006,110,0.006,112,3.685,114,2.626,255,1.17,273,1.961,282,2.131,291,2.626,295,1.469,369,3.401,452,2.375,1123,5.174,1135,5.328,1151,3.685,1152,3.685,1157,3.544,1519,6.174,1521,6.026,1524,4.042,1528,4.087,1538,5.446,1542,5.455,1546,4.042,1547,5.455,1548,4.584,1549,4.584,1550,4.584,1551,6.186,1552,4.584,1553,6.186,1554,4.973,1555,4.584,1556,4.584]],["title/entities/Product.html",[196,1.324,634,1.545]],["body/entities/Product.html",[3,0.076,4,0.069,5,0.069,12,0.256,23,0.792,26,0.01,27,1.106,28,0.715,29,1.05,39,2.978,49,1.282,51,0.161,63,0.076,64,0.069,109,0.005,110,0.005,117,1.338,121,1.669,127,2.114,196,1.513,197,1.79,283,2.819,288,0.93,307,3.01,477,2.746,528,2.141,555,4.77,556,3.92,557,3.92,558,3.92,559,4.77,560,4.77,561,3.552,562,4.77,563,3.137,574,3.6,582,1.3,585,2.125,628,2.99,632,3.134,634,1.767,689,4.186,699,3.725,717,4.425,801,1.725,803,3.92,805,4.725,807,2.746,810,4.404,811,4.404,812,1.79,813,2.986,1312,4.77,1316,4.77,1323,5.265,1336,4.77,1490,5.775,1491,3.725,1492,5.775,1493,5.265,1557,2.986,1558,3.387,1559,3.387,1560,3.387,1561,3.387,1562,3.387,1563,3.387,1564,3.387,1565,3.387,1566,3.387,1567,3.387,1568,3.387,1569,4.404,1570,4.994,1571,5.265,1572,5.775,1573,3.387,1574,3.387,1575,3.387,1576,4.994,1577,3.387,1578,3.387,1579,5.232,1580,4.994,1581,3.387,1582,4.994,1583,3.387,1584,4.994,1585,3.387,1586,4.994,1587,3.387]],["title/entities/ProductImage.html",[603,2.886,634,1.545]],["body/entities/ProductImage.html",[3,0.116,4,0.105,5,0.105,12,0.39,23,0.733,26,0.009,28,0.662,49,1.165,51,0.181,63,0.116,64,0.105,109,0.007,110,0.007,117,1.792,121,2.088,127,1.956,197,2.727,199,5.376,288,1.416,477,3.677,528,2.187,574,4.665,582,3.201,585,3.237,603,4.419,628,4.004,632,4.198,634,2.366,647,6.545,649,6.545,801,2.628,805,4.08,807,3.677,812,2.727,894,3.847,906,4.678,907,4.988,1571,4.147,1588,4.549,1589,5.898,1590,5.158,1591,5.158,1592,5.158,1593,6.688,1594,5.898,1595,4.549,1596,5.158]],["title/modules/ProductImagesModule.html",[133,1.062,153,3.055]],["body/modules/ProductImagesModule.html",[3,0.133,4,0.12,5,0.12,26,0.009,51,0.224,55,0.683,63,0.133,64,0.121,109,0.007,110,0.007,133,1.92,135,2.329,136,2.397,137,2.545,138,2.545,139,2.397,140,3.408,141,2.545,153,6.034,160,3.141,161,2.143,162,2.397,164,2.711,174,3.004,175,1.743,196,1.787,199,3.896,582,2.264,603,3.896,604,4.741,1597,5.2,1598,5.2,1599,6.034,1600,5.897,1601,5.2,1602,5.897,1603,5.897]],["title/injectables/ProductImagesService.html",[53,0.394,1599,3.055]],["body/injectables/ProductImagesService.html",[3,0.152,4,0.137,5,0.137,26,0.009,51,0.183,53,0.713,55,0.782,63,0.152,64,0.138,109,0.008,110,0.008,255,1.723,582,2.591,1599,5.522,1604,5.952,1605,5.952]],["title/entities/ProductVariant.html",[574,2.402,634,1.545]],["body/entities/ProductVariant.html",[3,0.1,4,0.09,5,0.09,12,0.334,23,0.761,26,0.009,28,0.688,29,0.966,39,2.832,40,2.863,49,1.183,51,0.186,63,0.1,64,0.09,109,0.006,110,0.006,117,1.614,121,1.931,127,2.033,196,2.553,197,4.393,199,2.914,288,1.211,477,2.425,528,1.97,574,3.313,582,3.235,596,5.518,603,4.874,604,3.546,634,2.131,641,4.494,673,5.119,674,4.801,675,5.119,801,2.247,805,4.383,807,3.313,812,2.332,883,3.889,894,3.29,906,4.214,907,4.494,1280,3.29,1464,5.518,1466,4.845,1569,3.889,1571,5.518,1572,5.314,1579,5.314,1589,5.314,1594,5.314,1595,3.889,1606,3.889,1607,4.411,1608,4.411,1609,6.026,1610,4.411,1611,6.026,1612,4.411,1613,4.411,1614,4.411,1615,4.411]],["title/modules/ProductVariantsModule.html",[133,1.062,154,2.742]],["body/modules/ProductVariantsModule.html",[3,0.129,4,0.116,5,0.116,26,0.009,51,0.221,55,0.663,63,0.129,64,0.117,109,0.007,110,0.007,133,1.894,135,2.259,136,2.325,137,2.469,138,2.469,139,2.325,140,3.361,141,3.361,154,5.452,160,3.083,161,2.078,162,2.325,164,2.629,174,2.914,175,1.691,196,1.733,197,3.024,574,3.145,582,2.196,585,3.59,1142,5.394,1162,4.266,1601,5.044,1616,5.044,1617,5.044,1618,5.044,1619,5.72,1620,5.72]],["title/injectables/ProductVariantsService.html",[53,0.394,1142,2.615]],["body/injectables/ProductVariantsService.html",[3,0.063,4,0.056,5,0.056,10,1.523,12,0.209,13,0.903,14,1.987,16,0.612,18,0.948,23,0.597,25,1.413,26,0.01,27,1.192,28,0.539,29,1.085,33,1.308,37,1.424,38,2.76,40,1.316,49,1.225,51,0.16,53,0.387,55,0.321,63,0.063,64,0.057,66,1.758,67,0.612,73,1.809,78,1.884,79,1.663,86,1.714,107,0.86,109,0.004,110,0.004,121,2.106,161,1.007,162,1.744,175,0.819,196,2.359,238,1.362,255,0.707,273,1.82,276,2.526,284,3.54,288,0.76,290,1.16,295,0.658,299,2.227,321,3.295,328,1.937,528,2.092,574,3.251,582,2.597,585,1.739,632,5.506,673,2.066,674,5.722,675,2.066,688,4.267,845,1.83,979,3.449,1045,3.916,1072,2.227,1142,2.568,1161,4.732,1183,6.102,1184,2.227,1464,2.227,1621,2.443,1622,5.251,1623,5.251,1624,4.29,1625,5.251,1626,2.77,1627,2.77,1628,4.29,1629,2.77,1630,6.765,1631,2.77,1632,7.056,1633,2.77,1634,2.77,1635,2.77,1636,2.77,1637,2.77,1638,2.77,1639,2.77,1640,2.77,1641,3.2,1642,2.77,1643,2.77,1644,2.77,1645,2.77,1646,2.443,1647,2.77,1648,5.251,1649,2.77,1650,2.77,1651,4.29,1652,4.29,1653,2.77,1654,4.29,1655,4.29,1656,4.29,1657,2.77,1658,4.29,1659,3.783,1660,2.443,1661,2.443,1662,4.29,1663,4.29,1664,3.783,1665,5.251,1666,5.64,1667,2.77,1668,2.77,1669,2.77,1670,2.77,1671,2.77,1672,2.77]],["title/classes/ProductWithVariantDto.html",[64,0.089,1131,3.258]],["body/classes/ProductWithVariantDto.html",[3,0.115,4,0.103,5,0.103,12,0.384,23,0.688,26,0.009,28,0.7,39,2.544,49,1.202,51,0.2,63,0.115,64,0.16,109,0.007,110,0.007,117,1.775,127,1.836,196,1.54,261,1.847,265,3.19,267,3.981,268,3.847,269,1.898,528,2.166,529,3.791,532,3.642,561,4.412,563,3.897,575,4.087,576,3.791,578,3.555,579,5.154,580,5.496,582,1.952,584,3.555,586,4.377,682,4.129,688,3.754,719,2.59,960,4.087,1123,3.19,1124,6.278,1125,4.087,1126,3.555,1127,3.555,1131,5.824,1133,5.159,1134,3.555,1673,5.083,1674,5.083,1675,5.083]],["title/controllers/ProductsController.html",[122,1.587,1676,3.258]],["body/controllers/ProductsController.html",[3,0.056,4,0.05,5,0.05,9,1.539,11,1.254,12,0.186,13,0.823,16,0.544,18,0.544,23,0.564,25,1.336,26,0.01,27,1.406,28,0.657,29,1.032,33,1.212,35,0.571,37,1.518,38,1.688,39,1.868,40,2.873,49,1.139,51,0.205,55,0.285,58,1.836,63,0.056,64,0.05,66,1.797,67,0.544,76,2.735,101,2.171,105,2.93,107,1.353,109,0.004,110,0.004,119,1.031,121,1.559,122,0.894,124,0.894,127,1.506,196,2.392,273,1.942,295,0.584,298,0.871,331,1.353,332,1.254,333,4.456,339,3.144,342,4.456,344,3.175,345,3.688,348,5.63,369,2.675,370,1.722,371,1.626,372,1.836,373,2.584,379,1.474,381,1.992,385,3.912,386,3.912,388,1.21,392,3.144,393,2.584,405,2.735,409,2.15,469,1.626,528,2.29,553,4.459,590,4.456,595,1.979,597,2.917,601,1.979,606,1.722,607,1.722,609,3.054,627,4.861,688,3.567,696,1.474,709,2.913,719,3.766,759,1.353,781,1.722,783,2.171,833,2.584,838,1.474,839,1.626,840,1.836,843,3.629,845,3.662,849,1.722,963,2.584,974,3.478,976,3.912,977,1.41,980,1.722,981,2.917,989,3.876,1083,1.626,1146,3.478,1147,2.917,1164,1.722,1171,1.979,1387,3.144,1448,4.766,1491,2.917,1507,2.735,1676,2.917,1677,2.171,1678,3.912,1679,3.911,1680,3.449,1681,4.866,1682,3.911,1683,2.462,1684,2.462,1685,2.171,1686,2.462,1687,2.462,1688,3.144,1689,2.584,1690,2.462,1691,2.171,1692,4.887,1693,2.171,1694,3.449,1695,3.449,1696,2.171,1697,3.449,1698,3.449,1699,3.449,1700,2.462,1701,2.462,1702,2.171,1703,2.171,1704,2.171,1705,4.866,1706,3.144,1707,2.171,1708,2.462,1709,2.462,1710,3.911,1711,3.449,1712,2.462,1713,2.462,1714,2.462,1715,1.979,1716,3.911,1717,3.911,1718,2.462,1719,3.449,1720,3.449,1721,4.29,1722,3.911,1723,2.171,1724,2.171,1725,1.722,1726,2.462,1727,2.462,1728,2.171,1729,2.462,1730,1.979,1731,2.462,1732,2.462,1733,2.462,1734,2.462,1735,2.171,1736,1.979,1737,3.144,1738,2.462,1739,2.462,1740,2.462,1741,2.462,1742,2.462,1743,2.462,1744,3.911,1745,2.462,1746,1.722,1747,2.462,1748,2.171,1749,2.462]],["title/modules/ProductsModule.html",[133,1.062,155,2.742]],["body/modules/ProductsModule.html",[3,0.103,4,0.093,5,0.093,26,0.009,51,0.235,55,0.527,63,0.103,64,0.093,109,0.006,110,0.006,124,2.238,133,1.697,135,1.799,136,1.851,137,1.965,138,1.965,139,1.851,140,3.011,141,3.011,154,5.052,155,5.644,158,5.318,160,2.658,161,1.655,162,1.851,164,2.831,174,2.32,175,1.346,196,1.38,197,2.408,198,3.661,582,1.749,587,5.318,600,3.185,709,5.219,934,3.397,965,5.318,1398,5.318,1676,5.204,1724,4.016,1750,4.016,1751,4.016,1752,4.016,1753,4.554,1754,5.318,1755,4.554,1756,4.554,1757,5.431,1758,4.554,1759,4.016,1760,4.016,1761,4.016,1762,4.554,1763,4.554]],["title/injectables/ProductsService.html",[53,0.394,709,2.615]],["body/injectables/ProductsService.html",[3,0.064,4,0.058,5,0.058,12,0.214,13,0.919,14,2.097,16,1.322,18,0.964,23,0.637,25,1.508,26,0.01,27,1.272,28,0.619,29,1.095,33,1.61,37,1.62,38,3.321,49,1.142,51,0.212,53,0.394,55,0.328,63,0.064,64,0.058,66,1.772,67,1.322,73,0.976,78,1.698,79,1.498,81,1.465,86,1.603,100,1.465,107,1.296,109,0.004,110,0.004,121,2.001,175,0.838,196,2.548,255,0.723,273,1.999,276,2.553,285,1.088,288,0.778,290,1.186,295,1.421,310,1.504,344,3.051,354,1.558,358,3.256,409,2.928,452,2.045,495,2.007,521,2.4,553,4.701,587,4.511,590,4.282,595,2.278,597,3.256,600,1.982,601,2.278,606,1.982,607,1.982,627,5.196,688,3.624,709,2.614,719,3.048,720,2.501,833,2.885,849,1.982,877,3.054,965,4.701,968,3.972,972,4.282,973,2.499,974,3.756,976,4.282,977,1.623,979,2.278,980,1.982,981,3.256,982,2.278,985,2.278,1146,1.778,1448,4.979,1641,2.113,1678,3.51,1680,3.85,1685,3.85,1688,3.51,1689,3.519,1702,3.85,1725,1.982,1746,1.982,1754,4.701,1757,3.85,1761,2.499,1764,2.499,1765,4.697,1766,2.834,1767,2.834,1768,2.834,1769,2.834,1770,2.834,1771,2.834,1772,2.499,1773,2.834,1774,2.834,1775,2.834,1776,2.834,1777,2.834,1778,2.834,1779,2.834]],["title/classes/RefreshTokenDto.html",[64,0.089,353,2.886]],["body/classes/RefreshTokenDto.html",[3,0.131,4,0.118,5,0.118,9,1.442,11,4.374,12,0.437,23,0.54,26,0.009,28,0.487,49,1.067,51,0.195,63,0.131,64,0.147,109,0.007,110,0.007,117,1.927,127,1.441,261,2.101,267,3.536,268,3.417,269,2.16,345,4.12,353,4.752,355,5.389,388,2.843,397,5.838,449,5.782,635,3.803,741,4.045,745,5.03,1780,5.1,1781,5.783,1782,5.783,1783,5.783]],["title/injectables/RefreshTokenProvider.html",[53,0.394,423,2.886]],["body/injectables/RefreshTokenProvider.html",[3,0.084,4,0.076,5,0.076,9,0.749,10,3.771,11,4.06,12,0.282,13,1.129,14,1.602,16,1.515,18,1.515,19,3.004,20,6.407,21,5.514,22,4.797,23,0.501,25,1.185,26,0.01,27,1,28,0.452,29,0.86,33,1.336,35,1.455,37,1.129,51,0.216,52,2.054,53,0.484,54,2.613,55,0.433,56,1.837,57,2.468,59,2.613,63,0.084,64,0.076,66,1.81,67,1.515,68,3.752,69,1.975,70,3.004,73,1.848,78,1.191,79,1.766,81,1.254,86,1.681,100,1.254,105,1.975,107,0.749,109,0.006,110,0.006,112,1.837,120,3.004,121,1.051,255,0.953,273,1.526,282,1.287,291,2.14,295,1.628,298,1.321,310,1.287,335,4.313,352,4.313,353,4.996,355,4.888,357,2.613,382,3.294,383,3.004,421,4.305,423,3.544,426,2.613,432,3.004,433,3.004,452,2.41,471,4.147,551,2.345,1045,2.786,1074,3.294,1076,3.294,1077,3.294,1078,3.294,1079,3.294,1080,3.294,1081,3.294,1083,4.799,1141,4.528,1156,2.786,1367,5.514,1383,3.294,1554,3.004,1784,5.534,1785,3.294,1786,5.364,1787,3.736,1788,3.736,1789,5.364,1790,3.294,1791,3.736,1792,3.736,1793,3.736,1794,3.736,1795,3.736]],["title/entities/Review.html",[634,1.545,689,2.503]],["body/entities/Review.html",[3,0.112,4,0.101,5,0.101,12,0.376,23,0.77,26,0.009,28,0.709,49,1.225,51,0.177,63,0.112,64,0.102,109,0.007,110,0.007,117,1.75,121,2.052,127,2.056,196,2.616,288,1.366,307,3.002,321,3.122,528,2.136,634,2.31,689,4.608,690,5.863,691,5.863,696,3.91,699,4.872,733,5.863,801,2.534,803,4.819,805,4.257,807,3.591,812,2.63,885,3.287,894,3.71,907,4.872,983,5.76,1280,3.71,1796,4.387,1797,4.975,1798,4.975,1799,6.532,1800,4.975,1801,6.532,1802,4.975,1803,4.975,1804,4.975,1805,4.975,1806,4.975,1807,4.975,1808,4.975]],["title/controllers/ReviewsController.html",[122,1.587,1809,3.258]],["body/controllers/ReviewsController.html",[3,0.101,4,0.091,5,0.091,12,0.339,13,1.283,16,0.991,18,0.991,23,0.569,25,1.346,26,0.01,27,1.136,28,0.514,29,0.978,33,1.519,37,1.564,38,3.206,49,1.028,51,0.222,55,0.52,63,0.101,64,0.092,66,1.725,67,0.991,107,1.222,109,0.006,110,0.006,119,1.878,122,1.63,124,1.63,127,1.519,196,1.359,273,1.949,295,1.065,298,1.587,331,2.466,332,2.285,344,3.493,354,2.466,369,2.466,370,3.137,371,2.964,373,4.028,379,2.686,381,3.105,405,3.137,409,3.351,469,2.964,547,2.372,685,5.416,688,2.285,689,3.967,707,4.901,712,3.607,714,3.607,717,4.546,759,2.466,838,2.686,839,2.964,840,3.346,843,3.346,1171,3.607,1678,5.567,1688,4.901,1689,4.028,1715,3.607,1746,3.137,1748,3.956,1809,4.546,1810,3.956,1811,4.486,1812,4.486,1813,4.486,1814,4.486,1815,4.486,1816,5.376,1817,4.575,1818,3.956,1819,4.486,1820,4.486,1821,4.486,1822,4.486,1823,4.486,1824,4.486]],["title/modules/ReviewsModule.html",[133,1.062,156,3.055]],["body/modules/ReviewsModule.html",[3,0.121,4,0.109,5,0.109,26,0.009,51,0.232,55,0.623,63,0.121,64,0.11,109,0.007,110,0.007,124,2.498,133,1.842,135,2.126,136,2.188,137,2.323,138,2.323,139,2.188,140,3.268,141,2.323,155,5.292,156,6.176,160,2.967,161,1.956,162,2.188,164,3.16,174,2.742,175,1.591,689,3.084,704,5.571,715,4.328,934,4.015,1543,4.747,1809,5.648,1817,5.571,1818,4.747,1825,4.747,1826,5.383,1827,4.747,1828,5.383,1829,5.383,1830,4.747,1831,5.383]],["title/injectables/ReviewsService.html",[53,0.394,1817,2.886]],["body/injectables/ReviewsService.html",[3,0.096,4,0.087,5,0.087,12,0.322,13,1.238,14,2.013,16,1.299,18,1.299,23,0.629,25,1.489,26,0.01,27,1.256,28,0.568,29,1.081,33,1.466,37,1.53,38,3.137,49,1,51,0.214,53,0.531,55,0.493,63,0.096,64,0.087,66,1.679,67,1.299,78,1.357,79,1.198,81,1.429,86,1.141,100,1.429,107,1.18,109,0.006,110,0.006,175,1.259,196,1.291,255,1.087,273,1.918,276,3.013,285,1.635,288,1.169,290,1.783,295,1.397,310,1.467,344,3.861,354,2.341,409,3.705,452,1.635,495,2.704,521,2.341,547,2.252,685,5.212,688,2.169,689,4.72,704,5.212,707,4.729,711,5.943,712,4.729,714,3.424,715,3.424,717,3.176,718,3.755,1689,4.453,1746,2.978,1816,5.943,1817,3.887,1830,3.755,1832,3.755,1833,5.883,1834,4.259,1835,4.259,1836,4.259,1837,5.883,1838,4.259,1839,4.259,1840,4.259]],["title/guards/RolesGuard.html",[0,2.742,189,3.258]],["body/guards/RolesGuard.html",[0,3.697,2,3.183,3,0.096,4,0.087,5,0.087,9,0.856,10,3.239,12,0.323,13,1.24,15,5.848,16,0.943,18,1.49,23,0.55,25,1.301,26,0.01,27,1.257,28,0.497,29,0.945,30,4.736,31,5.088,33,1.468,35,1.686,36,4.12,37,1.24,39,2.793,40,2.799,41,5.195,42,3.892,51,0.197,53,0.532,55,0.494,63,0.096,64,0.12,65,3.183,66,1.468,67,0.943,73,2.324,74,3.763,78,1.878,79,1.657,107,1.181,109,0.006,110,0.006,119,3.638,131,3.763,182,2.984,189,4.393,381,2.174,460,5.195,462,3.763,463,7.133,471,2.82,472,3.763,473,3.183,474,3.763,475,3.763,476,3.763,492,3.763,493,3.763,516,3.375,759,2.346,870,3.763,1088,3.183,1466,4.736,1641,3.183,1841,3.763,1842,4.267,1843,4.267,1844,5.891,1845,5.891,1846,5.891,1847,5.195,1848,5.891,1849,3.431,1850,4.267,1851,4.267,1852,3.763,1853,5.891,1854,4.267,1855,4.267,1856,4.267,1857,5.891,1858,4.267,1859,4.267]],["title/classes/SignInDto.html",[64,0.089,363,2.886]],["body/classes/SignInDto.html",[3,0.117,4,0.105,5,0.105,9,1.492,12,0.392,23,0.626,26,0.009,28,0.566,35,1.996,49,0.996,51,0.202,63,0.117,64,0.137,109,0.007,110,0.007,117,1.798,118,3.905,119,3.675,127,1.672,261,1.884,267,3.657,269,1.936,345,4.507,363,4.433,368,4.692,381,2.641,388,2.548,448,5.981,635,3.547,741,4.692,742,4.167,744,5.004,745,5.203,746,5.394,747,4.167,748,4.167,749,4.167,754,4.571,756,4.571,760,4.167,761,4.571,1860,4.571,1861,5.184,1862,5.184,1863,5.184]],["title/injectables/SignInProvider.html",[53,0.394,424,2.886]],["body/injectables/SignInProvider.html",[3,0.088,4,0.079,5,0.079,9,0.783,10,3.042,12,0.295,13,1.165,14,1.641,16,1.222,18,1.545,23,0.516,25,1.222,26,0.01,27,1.031,28,0.466,29,0.888,33,1.379,35,1.927,37,1.165,51,0.208,52,2.145,53,0.499,55,0.452,63,0.088,64,0.08,66,1.743,67,1.222,73,1.906,78,1.764,79,1.098,81,1.31,86,1.874,100,1.31,107,0.783,109,0.006,110,0.006,118,2.955,119,2.317,121,1.557,255,0.996,273,1.564,282,1.344,285,1.498,295,1.314,298,1.957,310,1.344,311,2.911,319,3.473,336,4.127,347,3.161,355,3.473,357,3.87,362,4.449,363,5.069,374,3.441,375,3.137,424,3.656,426,2.729,447,4.88,452,2.125,471,2.579,495,1.794,516,4.008,521,2.145,551,2.449,720,2.236,770,3.441,771,4.52,1083,2.579,1085,2.911,1087,2.911,1088,2.911,1141,4.432,1156,2.911,1236,2.729,1366,3.441,1367,3.137,1371,5.624,1374,4.88,1375,3.441,1377,3.137,1790,3.441,1864,5.67,1865,3.441,1866,5.534,1867,3.903,1868,3.903,1869,3.903,1870,3.137,1871,3.903,1872,3.903,1873,3.903,1874,3.903,1875,3.903,1876,3.903,1877,3.903,1878,3.903,1879,3.903,1880,3.441,1881,3.903,1882,3.903,1883,3.903]],["title/injectables/StoreOtpAndExpireProvider.html",[53,0.394,1884,2.886]],["body/injectables/StoreOtpAndExpireProvider.html",[3,0.1,4,0.09,5,0.09,9,0.888,12,0.335,13,1.272,14,1.756,16,0.978,18,1.632,23,0.564,25,1.335,26,0.01,27,1.126,28,0.509,29,0.969,33,1.506,35,1.955,37,1.272,49,1.021,51,0.2,53,0.545,55,0.513,63,0.1,64,0.141,66,1.714,67,0.978,73,2.082,78,1.412,79,1.7,81,1.486,86,1.187,100,1.486,107,0.888,109,0.006,110,0.006,175,1.309,255,1.13,273,1.673,276,3.055,282,1.526,285,1.701,288,1.216,290,1.855,295,1.052,307,3.397,310,1.526,347,4.295,452,2.32,506,4.638,509,2.927,511,4.317,515,2.652,516,2.538,517,2.78,518,3.906,519,3.303,520,3.906,521,2.435,699,3.303,1884,3.993,1885,6.066,1886,3.906,1887,6.516,1888,6.043,1889,4.429,1890,6.043,1891,4.429,1892,6.043,1893,4.429,1894,3.906,1895,4.429]],["title/entities/Subscriber.html",[634,1.545,740,2.742]],["body/entities/Subscriber.html",[3,0.128,4,0.116,5,0.116,9,1.141,12,0.43,23,0.664,26,0.009,28,0.655,39,2.733,40,3.382,49,1.057,51,0.154,63,0.128,64,0.116,109,0.007,110,0.007,117,1.907,118,3.571,121,2.186,127,1.774,238,3.5,288,1.562,528,2.328,634,2.88,740,5.11,801,2.898,805,3.914,812,4.108,885,3.759,888,4.704,1507,4.979,1730,5.723,1896,5.017,1897,5.723,1898,6.278,1899,6.278,1900,5.689,1901,5.689]],["title/controllers/SubscribersController.html",[122,1.587,1902,3.258]],["body/controllers/SubscribersController.html",[3,0.152,4,0.137,5,0.137,26,0.009,51,0.183,55,0.782,63,0.152,64,0.138,109,0.008,110,0.008,122,2.453,124,2.453,331,3.711,1902,5.888,1903,5.952,1904,6.75,1905,6.75]],["title/modules/SubscribersModule.html",[133,1.062,157,3.055]],["body/modules/SubscribersModule.html",[3,0.126,4,0.113,5,0.113,26,0.009,51,0.231,55,0.647,63,0.126,64,0.114,109,0.007,110,0.007,124,2.556,133,1.873,135,2.205,136,2.27,137,2.41,138,2.41,139,2.27,140,3.324,141,2.41,149,5.623,157,6.113,160,3.036,161,2.029,162,2.27,164,3.234,174,2.844,175,1.65,740,3.504,1902,5.745,1906,4.923,1907,4.923,1908,5.583,1909,5.952,1910,5.583,1911,5.583,1912,4.923,1913,5.583,1914,5.583,1915,5.583]],["title/injectables/SubscribersService.html",[53,0.394,1909,3.055]],["body/injectables/SubscribersService.html",[3,0.087,4,0.079,5,0.079,9,0.775,12,0.292,13,1.157,14,1.952,16,1.214,18,1.539,23,0.597,25,1.413,26,0.01,27,1.192,28,0.539,29,1.026,33,1.736,37,1.466,51,0.207,53,0.496,55,0.448,63,0.087,64,0.079,66,1.736,67,1.214,73,1.332,78,1.752,79,1.547,81,1.845,86,1.714,100,1.845,107,1.102,109,0.006,110,0.006,121,1.547,133,1.337,175,1.143,255,0.987,273,1.86,276,2.907,282,1.894,285,1.485,288,1.061,290,1.619,295,1.305,298,2.263,310,1.894,344,3.991,409,4.205,521,3.022,528,2.092,547,2.044,736,5.704,740,5.269,771,4.607,1236,2.704,1277,7.091,1870,3.109,1909,3.845,1912,3.41,1916,3.41,1917,5.498,1918,5.498,1919,3.867,1920,3.867,1921,6.397,1922,5.498,1923,3.867,1924,5.498,1925,6.397,1926,5.498,1927,3.867,1928,5.498,1929,6.397,1930,3.867,1931,3.867,1932,3.867,1933,3.867,1934,3.867,1935,3.867]],["title/classes/UpdateDeliveryStateDto.html",[64,0.089,829,3.055]],["body/classes/UpdateDeliveryStateDto.html",[3,0.145,4,0.13,5,0.13,26,0.009,51,0.208,63,0.145,64,0.131,109,0.008,110,0.008,207,4.391,261,2.333,480,4.788,495,2.951,522,5.414,523,4.029,525,5.161,829,5.36,837,5.161,1114,4.81,1463,6.588,1469,5.161,1936,5.661]],["title/injectables/UpdateProductProvider.html",[53,0.394,1754,2.886]],["body/injectables/UpdateProductProvider.html",[3,0.071,4,0.064,5,0.064,9,0.631,12,0.238,13,0.996,14,1.45,16,1.045,18,1.045,23,0.441,25,1.045,26,0.01,27,0.881,28,0.399,29,0.759,37,0.663,39,2.914,40,1.496,45,1.447,49,0.843,50,4.872,51,0.193,53,0.427,55,0.365,63,0.071,64,0.064,67,1.045,73,1.629,78,1.811,79,1.598,81,1.907,86,1.692,92,1.731,93,1.731,94,1.548,95,1.731,96,1.664,97,1.731,98,1.731,99,1.731,100,1.587,107,0.948,109,0.005,110,0.005,121,1.598,175,0.93,196,2.397,238,1.548,255,0.803,273,1.382,276,2.675,282,1.084,284,1.885,285,1.816,288,0.864,290,1.318,295,1.123,298,1.113,310,1.629,312,1.804,313,1.804,314,1.804,315,1.731,316,1.804,317,1.804,319,1.976,503,2.08,550,3.125,563,3.004,582,1.209,589,2.531,600,2.202,628,1.885,632,3.566,720,1.804,782,2.202,833,3.125,875,2.531,877,4.418,969,2.776,972,3.803,981,2.348,985,2.531,1022,2.348,1142,4.417,1161,2.202,1162,2.348,1182,2.531,1448,4.875,1646,2.776,1659,2.776,1660,2.776,1661,2.776,1666,2.776,1725,2.202,1728,5.01,1754,3.125,1765,4.171,1772,4.171,1937,5.01,1938,3.148,1939,3.148,1940,3.148,1941,4.73,1942,3.148,1943,4.73,1944,4.73,1945,4.73,1946,7.91,1947,4.73,1948,3.148,1949,4.73,1950,3.148,1951,4.73,1952,3.148,1953,4.73,1954,3.148,1955,4.73,1956,3.148,1957,4.73,1958,3.148,1959,4.73,1960,3.148,1961,4.73,1962,3.148,1963,3.148,1964,4.73,1965,3.148,1966,3.148,1967,3.148,1968,3.148,1969,3.148,1970,4.73,1971,4.73,1972,4.73,1973,4.73,1974,3.148,1975,3.148]],["title/injectables/UploadToAwsProvider.html",[53,0.394,1976,2.886]],["body/injectables/UploadToAwsProvider.html",[3,0.087,4,0.078,5,0.176,9,0.771,12,0.291,13,1.153,14,1.628,16,1.535,18,1.535,23,0.595,25,1.409,26,0.01,27,1.544,28,0.538,29,1.023,33,1.902,37,1.463,38,1.66,49,0.571,51,0.199,53,0.494,55,0.445,56,1.89,63,0.087,64,0.079,66,1.589,67,0.849,69,2.033,73,2.53,75,4.829,78,1.226,79,1.794,81,1.29,86,1.03,100,1.29,107,1.279,109,0.006,110,0.006,167,5.19,255,0.981,273,1.551,282,1.325,285,1.476,295,0.913,298,1.36,310,1.325,369,2.114,521,2.114,606,2.689,607,5.339,621,3.092,641,5.989,785,3.391,886,4.084,1009,3.391,1048,4.403,1049,2.689,1062,6.128,1083,2.541,1232,4.403,1976,3.618,1977,6.128,1978,3.391,1979,5.476,1980,5.476,1981,3.845,1982,5.476,1983,3.845,1984,4.829,1985,5.127,1986,5.476,1987,3.845,1988,5.476,1989,6.128,1990,3.391,1991,3.845,1992,3.845,1993,4.829,1994,3.845,1995,3.391,1996,3.845,1997,3.845,1998,3.845,1999,3.845,2000,3.845,2001,3.845,2002,3.845,2003,3.845,2004,3.845,2005,3.845,2006,3.845,2007,5.476,2008,3.845,2009,3.845,2010,3.845,2011,3.845]],["title/modules/UploadsModule.html",[133,1.062,158,2.886]],["body/modules/UploadsModule.html",[3,0.13,4,0.117,5,0.117,26,0.009,51,0.212,55,0.666,63,0.13,64,0.118,109,0.007,110,0.007,133,1.899,135,2.272,136,2.338,137,2.482,138,2.482,139,2.338,140,3.37,141,3.37,158,5.857,160,3.093,161,2.09,162,2.338,593,5.958,1976,5.666,2012,5.072,2013,5.072,2014,5.072,2015,5.752,2016,5.752,2017,5.752,2018,5.072]],["title/injectables/UploadsService.html",[53,0.394,593,2.886]],["body/injectables/UploadsService.html",[3,0.102,4,0.092,5,0.17,12,0.341,13,1.289,14,1.773,16,1.352,18,1.645,23,0.571,25,1.352,26,0.01,27,1.295,28,0.586,29,0.982,33,1.525,37,1.289,51,0.188,53,0.553,55,0.523,56,2.22,63,0.102,64,0.092,66,1.731,67,1.352,69,2.387,73,1.555,78,2.214,79,1.722,81,1.515,86,1.21,100,1.515,107,0.905,109,0.006,110,0.006,167,5.519,255,1.152,273,1.69,282,1.555,284,2.703,295,1.454,298,1.597,310,2.109,452,1.733,593,4.045,599,3.367,607,4.859,621,5.585,641,5.555,1976,5.425,1984,5.399,1985,4.922,1989,3.981,1995,3.981,2018,3.981,2019,3.981,2020,6.123,2021,4.515,2022,4.515,2023,6.123,2024,4.515,2025,6.947,2026,4.515,2027,4.515,2028,4.515,2029,4.515,2030,4.515,2031,4.515,2032,4.515,2033,4.515,2034,4.515,2035,4.515,2036,4.515]],["title/entities/User.html",[35,1.012,634,1.545]],["body/entities/User.html",[3,0.072,4,0.065,5,0.065,9,0.638,12,0.241,23,0.769,26,0.009,28,0.74,29,1.387,35,1.655,39,3.348,40,3.017,49,1.283,51,0.129,63,0.072,64,0.065,109,0.005,110,0.005,117,1.277,118,2.628,119,3.189,121,1.609,127,2.055,238,2.344,288,0.873,307,2.191,347,2.811,381,1.621,519,4.264,527,3.778,528,1.559,634,2.246,759,1.749,801,1.621,805,4.534,807,2.621,812,1.682,885,5.32,886,3.556,888,5.782,1302,4.597,1317,2.558,1329,5.106,1474,5.042,1475,5.042,1477,5.042,1478,5.042,1479,5.042,1507,3.334,1730,6.884,1897,3.833,1898,7.55,1899,7.457,2037,2.805,2038,5.718,2039,3.181,2040,3.181,2041,3.181,2042,3.181,2043,3.181,2044,3.181,2045,3.181,2046,3.181,2047,4.768,2048,3.181,2049,3.181,2050,3.181,2051,3.181,2052,3.181]],["title/controllers/UsersController.html",[122,1.587,2053,3.258]],["body/controllers/UsersController.html",[3,0.057,4,0.051,5,0.051,9,1.676,11,2.525,12,0.192,13,0.842,16,0.559,18,0.559,23,0.525,25,1.244,26,0.009,27,1.481,28,0.652,29,1.094,35,2.006,37,1.436,39,2.62,40,3.242,49,1.106,51,0.197,55,0.293,63,0.057,64,0.052,66,1.403,67,0.559,76,4.558,105,3.446,107,1.307,109,0.004,110,0.004,112,2.768,114,1.451,119,1.061,121,1.725,122,0.92,124,0.92,127,1.403,273,1.881,291,1.451,295,0.601,331,1.392,333,5.239,339,3.986,342,4.527,344,3.226,345,4.052,348,6.388,369,2.199,372,2.983,381,1.29,385,4.527,386,4.527,388,1.245,392,3.986,393,3.275,409,2.199,516,4.171,528,2.313,609,3.111,696,1.516,759,1.392,769,2.983,838,1.516,839,1.674,845,3.721,916,2.798,917,1.771,918,2.036,924,2.036,958,4.463,963,2.643,977,1.451,980,1.771,989,3.938,1122,3.721,1141,3.096,1146,3.534,1147,4.86,1164,3.467,1387,3.216,1471,4.772,1491,1.889,1507,3.938,1689,3.275,1691,2.234,1692,4.966,1693,2.234,1694,3.527,1695,3.527,1696,2.234,1697,3.527,1698,3.527,1699,3.527,1703,3.527,1704,2.234,1706,4.527,1707,3.527,1715,2.036,1719,4.966,1720,4.372,1721,4.372,1725,1.771,1735,3.527,1736,3.986,1737,5.239,1746,2.798,1852,3.527,2053,2.983,2054,2.234,2055,3.527,2056,4,2057,4,2058,4.957,2059,2.234,2060,4,2061,2.533,2062,2.533,2063,2.533,2064,3.527,2065,4,2066,2.533,2067,2.533,2068,2.533,2069,2.533,2070,4.957,2071,2.533,2072,2.533,2073,2.533,2074,2.533,2075,2.533,2076,2.533,2077,2.234,2078,2.533,2079,2.533,2080,2.533,2081,2.533,2082,2.533,2083,2.533,2084,2.533,2085,2.533,2086,2.533,2087,2.533]],["title/modules/UsersModule.html",[133,1.062,159,2.742]],["body/modules/UsersModule.html",[3,0.096,4,0.086,5,0.086,26,0.009,35,1.56,51,0.235,55,0.492,63,0.096,64,0.087,109,0.006,110,0.006,124,2.134,133,1.637,135,1.679,136,1.728,137,1.834,138,1.834,139,1.728,140,2.905,141,2.905,145,3.881,159,5.635,160,2.535,161,2.134,162,1.728,164,2.7,174,2.165,175,1.256,347,3.31,426,4.108,504,5.208,506,3.687,515,2.544,762,5.208,934,3.17,1027,5.208,1029,3.687,1037,5.208,1047,5.208,1141,4.739,1398,5.208,1759,3.748,1760,5.936,1884,5.208,2053,5.021,2077,3.748,2088,3.748,2089,3.748,2090,3.748,2091,4.25,2092,4.25,2093,4.25,2094,4.25,2095,3.748,2096,3.748,2097,4.25,2098,3.748,2099,5.18,2100,3.748,2101,4.25,2102,4.25]],["title/injectables/UsersService.html",[53,0.394,1141,2.402]],["body/injectables/UsersService.html",[3,0.04,4,0.036,5,0.036,9,0.604,11,3.762,12,0.135,13,0.634,14,2.093,16,1.365,18,1.011,23,0.62,25,1.467,26,0.01,27,1.238,28,0.56,29,1.066,33,1.866,35,2.038,37,1.596,38,1.3,45,0.823,49,1.138,51,0.2,53,0.413,55,0.207,63,0.04,64,0.037,66,1.89,67,1.365,73,0.617,78,1.627,79,1.655,81,1.713,86,1.655,92,0.984,93,0.984,94,0.88,95,0.984,96,0.946,97,0.984,98,0.984,99,0.984,100,1.536,105,3.698,107,1.289,109,0.003,110,0.003,118,2.543,121,1.869,133,0.733,161,2.414,175,0.529,238,0.88,255,0.457,273,1.994,276,2.017,282,2.128,284,1.072,285,1.157,288,0.491,290,0.75,295,1.467,298,1.066,307,2.84,310,1.576,312,1.026,313,1.026,314,1.026,315,0.984,316,1.026,317,1.026,319,1.124,328,1.252,343,2.247,344,1.026,347,3.358,409,2.145,445,2.657,452,2.372,495,2.103,503,1.183,504,3.888,506,4.287,508,2.657,511,2.872,512,2.657,514,2.657,515,1.072,516,2.622,517,1.124,521,1.656,547,0.946,654,2.247,720,3.17,739,2.247,750,3.656,762,3.023,765,2.657,767,2.657,769,2.91,875,1.439,877,1.252,958,2.336,963,1.183,968,2.247,970,3.878,977,1.026,980,1.252,982,1.439,984,1.579,986,1.335,989,1.252,1022,1.335,1024,1.579,1027,4.082,1029,2.449,1036,1.579,1037,4.248,1039,2.657,1041,2.657,1047,3.023,1048,4.448,1049,1.252,1122,3.023,1141,1.656,1146,3.878,1380,2.657,1471,4.321,1689,1.183,1725,1.252,1880,2.657,1884,3.023,1887,2.657,2055,2.657,2059,2.657,2064,2.657,2095,1.579,2096,1.579,2098,1.579,2099,2.657,2100,1.579,2103,1.579,2104,3.013,2105,3.013,2106,3.013,2107,3.013,2108,1.79,2109,4.576,2110,3.901,2111,1.79,2112,3.901,2113,1.79,2114,1.79,2115,1.79,2116,3.013,2117,3.013,2118,1.79,2119,3.013,2120,1.79,2121,3.013,2122,1.79,2123,3.013,2124,1.79,2125,3.013,2126,1.79,2127,3.013,2128,1.79,2129,1.79,2130,1.79,2131,1.79,2132,1.79,2133,1.79,2134,1.79,2135,1.79,2136,1.79,2137,1.79,2138,1.79,2139,1.79,2140,1.79,2141,1.79,2142,1.79]],["title/injectables/VerifyPaymentProvider.html",[53,0.394,1538,2.886]],["body/injectables/VerifyPaymentProvider.html",[3,0.048,4,0.043,5,0.043,9,0.692,12,0.159,13,0.726,14,1.616,16,1.592,18,0.762,22,3.54,23,0.472,25,0.967,26,0.01,27,0.816,28,0.427,29,0.702,33,1.391,35,1.467,37,1.262,38,1.488,42,1.392,45,0.968,48,1.571,49,0.939,51,0.203,52,1.158,53,0.311,55,0.244,56,1.035,63,0.048,64,0.043,66,1.261,67,1.233,69,1.114,73,2.618,76,3.062,78,2.105,79,1.858,81,1.698,86,2.111,100,1.698,104,3.775,107,0.878,109,0.004,110,0.004,121,0.593,196,1.327,205,1.322,255,0.538,273,1.065,282,0.725,283,3.249,285,0.809,288,0.578,292,1.261,295,1.326,297,4.069,298,1.549,310,1.508,311,1.571,321,1.322,325,1.857,332,1.073,344,1.207,369,2.407,371,1.392,393,1.392,409,1.158,479,1.571,495,2.013,499,1.571,501,1.571,503,1.392,550,2.278,563,2.315,582,0.809,586,1.392,592,5.656,599,1.571,608,1.392,609,2.164,610,2.772,611,2.772,612,1.693,613,1.693,614,2.772,615,1.693,616,1.693,617,2.772,632,1.322,654,2.572,659,1.693,661,1.693,663,1.693,664,1.693,665,1.693,666,2.772,667,1.693,668,1.693,669,3.52,670,2.772,671,1.693,674,2.412,688,1.757,709,3.789,716,1.857,719,2.844,771,3.627,781,3.062,782,1.473,833,1.392,877,1.473,890,3.177,892,4.649,898,1.857,904,1.857,950,1.571,958,1.261,1082,1.693,1085,1.571,1126,3.062,1127,3.062,1137,1.693,1138,4.463,1140,1.857,1142,3.789,1144,3.041,1146,1.322,1147,3.775,1148,4.489,1153,1.693,1154,1.693,1155,2.772,1157,4.514,1158,1.857,1159,1.571,1160,1.857,1161,1.473,1162,1.571,1163,1.857,1164,1.473,1165,3.041,1179,1.857,1181,1.857,1182,2.772,1183,2.572,1184,1.693,1186,1.857,1188,1.857,1194,3.52,1203,1.857,1214,1.857,1215,1.857,1217,1.693,1222,1.857,1236,2.412,1299,1.857,1371,3.52,1373,3.041,1377,1.693,1382,3.041,1521,5.089,1538,2.278,1547,3.041,1554,2.772,1641,1.571,1711,3.861,1870,1.693,2143,4.924,2144,3.448,2145,2.106,2146,2.106,2147,3.448,2148,2.106,2149,3.448,2150,3.041,2151,3.448,2152,5.996,2153,3.448,2154,2.106,2155,3.448,2156,3.448,2157,2.106,2158,2.106,2159,2.106,2160,4.379,2161,2.106,2162,2.106,2163,2.106,2164,2.106,2165,2.106,2166,2.106,2167,3.041,2168,3.448,2169,2.106,2170,2.106,2171,3.448,2172,4.379,2173,3.448,2174,2.106,2175,2.106,2176,2.106,2177,3.041,2178,2.106,2179,2.106,2180,2.106,2181,2.106,2182,2.106,2183,2.106,2184,2.106,2185,2.106,2186,3.448,2187,2.106,2188,2.106,2189,3.448,2190,3.448,2191,2.106,2192,2.106,2193,2.106,2194,2.106,2195,2.106,2196,2.106]],["title/coverage.html",[2197,4.813]],["body/coverage.html",[0,2.845,1,1.549,5,0.045,6,1.953,7,1.652,8,1.953,26,0.009,28,0.187,33,0.552,35,1.209,53,0.786,61,1.781,64,0.169,79,0.623,109,0.004,110,0.004,111,2.513,112,1.089,114,1.269,115,1.953,122,2.659,123,1.652,125,1.953,129,1.463,139,0.9,161,0.805,163,1.781,183,1.652,185,1.781,187,1.652,189,1.652,196,1.374,197,1.171,199,1.463,205,1.39,207,2.058,208,2.513,215,1.781,256,1.953,260,1.652,262,1.953,263,2.889,270,1.463,271,1.953,272,2.889,277,1.463,283,1.052,292,2.151,293,1.781,329,1.652,330,1.953,332,1.128,338,1.463,347,2.228,353,1.463,363,1.463,376,1.463,421,1.39,422,1.463,423,1.463,424,1.463,438,1.953,448,1.781,449,1.781,457,1.953,470,1.781,504,1.463,505,1.953,506,2.255,507,2.889,522,1.463,523,3.598,524,1.953,525,2.889,533,1.463,534,1.953,540,1.463,541,1.953,553,1.463,554,1.953,574,1.218,581,1.549,582,2.357,583,1.781,587,1.463,588,1.953,589,2.889,593,1.463,603,1.463,628,5.304,634,2.588,672,2.889,685,1.463,686,1.953,687,1.953,689,1.269,704,1.463,705,1.953,706,1.953,709,1.326,736,1.652,737,1.953,738,1.953,740,1.39,750,1.463,751,1.953,752,3.647,762,1.463,763,1.953,764,1.953,771,1.269,779,1.953,780,1.953,800,1.549,802,1.953,816,1.652,817,1.953,829,1.549,834,1.463,838,1.326,859,1.953,860,1.953,878,1.953,890,1.39,891,1.953,892,1.463,909,1.652,910,1.953,914,1.463,916,1.549,917,1.549,936,1.953,952,1.953,965,1.463,966,1.953,967,1.953,970,1.39,974,1.39,977,1.269,1027,1.463,1028,3.381,1029,2.255,1030,1.953,1037,1.463,1038,1.953,1047,1.463,1060,1.953,1061,1.953,1091,1.652,1092,2.889,1093,3.381,1110,1.326,1111,1.463,1115,1.652,1116,2.889,1122,1.463,1123,1.39,1124,2.889,1125,2.889,1131,1.652,1133,1.463,1134,1.549,1135,1.463,1136,1.953,1137,2.889,1141,1.218,1142,1.326,1157,1.269,1161,1.549,1204,7.747,1259,1.953,1278,1.781,1309,1.953,1346,1.652,1347,1.953,1352,1.549,1358,1.953,1359,1.953,1363,1.953,1364,1.953,1384,1.953,1404,1.953,1442,1.953,1448,1.463,1449,1.953,1471,1.549,1472,1.953,1489,1.953,1509,1.652,1510,1.953,1516,1.652,1517,1.953,1528,1.463,1538,1.463,1546,1.953,1557,1.953,1588,1.953,1599,1.549,1604,1.953,1605,1.953,1606,1.953,1621,1.953,1676,1.652,1677,1.953,1706,1.781,1754,1.463,1764,1.953,1780,1.953,1784,1.953,1785,1.953,1796,1.953,1809,1.652,1810,1.953,1817,1.463,1832,1.953,1841,1.953,1849,1.781,1860,1.953,1864,1.953,1865,1.953,1884,1.463,1885,1.953,1886,1.953,1894,1.953,1896,1.953,1897,1.781,1902,1.652,1903,1.953,1909,1.549,1916,1.953,1936,1.953,1937,1.953,1976,1.463,1977,1.953,1978,1.953,2019,1.953,2037,1.953,2053,1.652,2054,1.953,2103,1.953,2143,1.953,2197,1.781,2198,1.953,2199,2.215,2200,4.533,2201,6.736,2202,7.698,2203,6.139,2204,3.168,2205,1.953,2206,1.953,2207,1.953,2208,1.953,2209,4.533,2210,7.698,2211,3.593,2212,7.587,2213,1.953,2214,7.698,2215,6.139,2216,5.215,2217,2.215,2218,2.215,2219,1.953,2220,2.215,2221,2.215,2222,2.215,2223,2.215,2224,2.215,2225,2.215,2226,2.215,2227,2.215,2228,2.215,2229,2.215,2230,2.215,2231,2.215,2232,2.215,2233,3.593,2234,3.593,2235,2.215,2236,2.215,2237,2.215,2238,2.215,2239,2.215]],["title/dependencies.html",[136,2.139,2240,3.207]],["body/dependencies.html",[26,0.009,55,0.67,56,2.843,57,3.821,58,4.313,64,0.147,109,0.007,110,0.007,136,2.351,175,1.709,182,4.045,269,2.16,288,1.588,388,2.843,468,4.649,486,4.045,578,4.045,1155,4.649,1230,4.313,1231,4.649,1723,5.1,1985,4.649,1990,5.1,1993,5.1,2241,5.783,2242,5.783,2243,5.783,2244,7.192,2245,5.783,2246,7.192,2247,5.783,2248,5.783,2249,5.783,2250,5.783,2251,5.783,2252,5.783,2253,5.783,2254,5.783,2255,5.783,2256,5.783,2257,5.783,2258,5.783,2259,5.783,2260,5.783,2261,5.783,2262,5.783,2263,5.783,2264,5.783,2265,5.783]],["title/miscellaneous/enumerations.html",[2266,2.403,2267,4.639]],["body/miscellaneous/enumerations.html",[12,0.441,26,0.009,35,1.676,109,0.007,110,0.007,119,3.027,207,4.142,379,4.328,394,6.671,469,3.853,759,3.206,760,5.812,1159,5.392,1164,4.078,1315,6.375,2167,6.375,2177,6.375,2266,3.853,2267,5.142,2268,5.831,2269,8.214,2270,5.831,2271,7.229,2272,5.831,2273,5.831,2274,5.831,2275,5.831,2276,7.229,2277,7.229,2278,7.229,2279,7.229,2280,5.831,2281,7.229]],["title/miscellaneous/functions.html",[2266,2.403,2282,4.639]],["body/miscellaneous/functions.html",[12,0.522,26,0.008,33,1.72,109,0.008,110,0.008,139,3.434,2219,6.089,2266,4.562,2282,6.089,2283,6.905,2284,6.905,2285,6.089]],["title/index.html",[12,0.275,1146,2.282,2286,3.636]],["body/index.html",[4,0.093,9,0.915,26,0.009,96,2.413,109,0.006,110,0.006,162,3.042,241,4.025,244,4.025,276,1.803,315,3.391,321,4.696,345,4.002,471,3.016,498,3.404,608,3.016,662,3.669,849,3.192,1004,3.669,1049,4.886,1230,5.58,1238,4.025,1285,6.015,1736,3.669,2150,4.025,2197,3.669,2198,4.025,2285,6.16,2287,4.564,2288,4.564,2289,6.986,2290,4.564,2291,4.564,2292,4.564,2293,4.564,2294,4.564,2295,4.564,2296,7.482,2297,4.564,2298,8.234,2299,4.564,2300,8.234,2301,4.564,2302,6.168,2303,4.564,2304,4.564,2305,6.986,2306,4.564,2307,6.168,2308,4.564,2309,4.564,2310,4.564,2311,4.564,2312,4.564,2313,4.564,2314,4.564,2315,4.564,2316,6.168,2317,4.564,2318,6.986,2319,4.564,2320,4.564,2321,4.564,2322,4.564,2323,4.564,2324,4.564,2325,4.564,2326,6.986,2327,4.564,2328,4.564,2329,4.564,2330,6.168,2331,4.025,2332,4.564,2333,4.564,2334,4.564,2335,4.564,2336,4.564,2337,4.564,2338,4.564,2339,6.168,2340,4.564,2341,4.564,2342,4.564,2343,6.168,2344,4.564,2345,4.564,2346,4.564,2347,6.168,2348,6.168,2349,4.564,2350,4.564,2351,4.564,2352,4.564,2353,4.564,2354,4.564,2355,4.564,2356,4.564,2357,4.564,2358,4.025,2359,4.564,2360,4.564,2361,4.564,2362,4.564,2363,4.564,2364,4.564,2365,4.025]],["title/modules.html",[135,2.364]],["body/modules.html",[26,0.007,109,0.007,110,0.007,134,4.142,135,2.194,145,3.67,146,3.884,147,3.884,148,3.67,149,3.67,150,3.884,151,3.884,152,3.884,153,3.884,154,3.486,155,3.486,156,3.884,157,3.884,158,3.67,159,3.486,1285,7.319,1398,3.67,1664,4.897,2331,4.897,2366,9.103,2367,9.103,2368,9.126]],["title/overview.html",[2369,5.279]],["body/overview.html",[2,2.102,26,0.009,109,0.004,110,0.004,113,2.266,124,1.024,129,3.507,133,0.685,134,6.629,135,1.113,136,1.146,137,1.216,138,1.216,139,1.146,140,1.216,141,1.216,142,2.485,143,2.485,144,2.485,145,5.312,146,4.509,147,5.47,148,4.691,149,4.691,150,4.509,151,3.712,152,5.741,153,4.509,154,4.602,155,5.334,156,5.262,157,4.966,158,4.971,159,5.361,160,1.876,161,1.024,162,1.146,255,0.719,261,1.024,270,3.507,277,4.691,376,3.507,419,2.485,420,2.485,421,3.332,422,3.507,423,3.507,424,3.507,504,3.507,540,3.507,587,3.507,593,4.691,704,3.507,709,4.251,762,3.507,771,4.068,801,1.436,834,3.507,853,2.485,854,2.485,914,3.507,927,2.485,928,2.485,945,2.485,946,2.485,947,2.485,965,3.507,970,4.456,1027,3.507,1037,3.507,1047,3.507,1135,3.507,1141,3.904,1142,4.251,1223,2.485,1224,2.485,1225,2.485,1350,2.485,1351,2.485,1352,3.712,1398,4.691,1399,2.485,1400,2.485,1401,2.485,1493,2.266,1528,3.507,1535,2.485,1536,2.485,1538,3.507,1597,2.485,1598,2.485,1599,3.712,1616,2.485,1617,2.485,1618,2.485,1750,2.485,1751,2.485,1752,2.485,1754,3.507,1817,3.507,1825,2.485,1827,2.485,1884,3.507,1906,2.485,1907,2.485,1909,3.712,1976,3.507,2012,2.485,2013,2.485,2014,2.485,2088,2.485,2089,2.485,2090,2.485,2369,2.485,2370,2.818,2371,4.348,2372,2.818,2373,2.818,2374,2.818]],["title/properties.html",[117,1.409,2240,3.207]],["body/properties.html",[9,1.385,26,0.009,109,0.008,110,0.008,117,1.85,2358,6.089,2365,6.089,2375,6.905,2376,6.905,2377,6.905]],["title/miscellaneous/variables.html",[2266,2.403,2378,4.639]],["body/miscellaneous/variables.html",[12,0.369,26,0.009,28,0.648,31,3.415,35,1.941,45,2.966,49,1.072,50,2.923,61,5.187,66,1.216,73,2.222,89,4.305,91,4.305,107,0.979,109,0.007,110,0.007,112,3.172,119,2.044,163,3.925,213,4.305,214,4.305,215,5.187,216,4.305,332,3.681,379,3.862,394,6.34,458,4.305,470,5.187,477,4.729,490,5.689,838,5.014,916,4.512,917,3.415,1278,5.187,1737,3.925,1847,5.689,1849,5.187,2204,4.305,2205,4.305,2206,5.689,2207,4.305,2208,4.305,2213,4.305,2266,3.226,2378,4.305,2379,4.882,2380,4.882,2381,6.452,2382,4.882,2383,4.882,2384,4.882,2385,4.882,2386,4.882,2387,6.452,2388,4.882,2389,4.882,2390,4.882,2391,4.882,2392,4.882,2393,4.882,2394,4.882,2395,7.226,2396,4.882,2397,4.882,2398,4.882,2399,4.882,2400,4.882]],["title/routes.html",[2401,5.279]],["body/routes.html",[26,0.008,109,0.008,110,0.008,2401,6.296]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["0",{"_index":628,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"classes/PaginationQueryDto.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"injectables/UpdateProductProvider.html":{},"coverage.html":{}}}],["0.0.1",{"_index":2376,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":2256,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":2262,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":2264,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":2255,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2214,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2225,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2227,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2200,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2212,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2215,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2216,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2224,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2230,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2235,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":696,"title":{},"body":{"classes/CreateReviewDto.html":{},"entities/Discount.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"controllers/ProductsController.html":{},"entities/Review.html":{},"controllers/UsersController.html":{}}}],["1.0.0",{"_index":792,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["1.1.26",{"_index":2242,"title":{},"body":{"dependencies.html":{}}}],["1.4.12",{"_index":2250,"title":{},"body":{"dependencies.html":{}}}],["1.8.4",{"_index":2252,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2202,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2221,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1491,"title":{},"body":{"entities/Payment.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["10.0.0",{"_index":2244,"title":{},"body":{"dependencies.html":{}}}],["10.4.15",{"_index":2247,"title":{},"body":{"dependencies.html":{}}}],["10/11",{"_index":2237,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1204,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"coverage.html":{}}}],["1000",{"_index":1895,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["1000000",{"_index":1878,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["10})@apiquery({name",{"_index":1696,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["11",{"_index":2371,"title":{},"body":{"overview.html":{}}}],["11.0.0",{"_index":2246,"title":{},"body":{"dependencies.html":{}}}],["11.0.6",{"_index":2248,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":2265,"title":{},"body":{"dependencies.html":{}}}],["12345",{"_index":1735,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["12345'})@apiheaders(['undefined",{"_index":1707,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["17",{"_index":2370,"title":{},"body":{"overview.html":{}}}],["17.13.3",{"_index":2258,"title":{},"body":{"dependencies.html":{}}}],["1})@apiheaders(['undefined",{"_index":2067,"title":{},"body":{"controllers/UsersController.html":{}}}],["1})@auth(authtype.none)@get",{"_index":1700,"title":{},"body":{"controllers/ProductsController.html":{}}}],["2",{"_index":1493,"title":{},"body":{"entities/Payment.html":{},"entities/Product.html":{},"overview.html":{}}}],["2.0.2",{"_index":2243,"title":{},"body":{"dependencies.html":{}}}],["2.1692.0",{"_index":2251,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":2209,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":2234,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":2223,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":2229,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2047,"title":{},"body":{"entities/User.html":{}}}],["200",{"_index":342,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["204",{"_index":2060,"title":{},"body":{"controllers/UsersController.html":{}}}],["22",{"_index":2373,"title":{},"body":{"overview.html":{}}}],["2343",{"_index":1362,"title":{},"body":{"classes/OtpSigninDto.html":{}}}],["2343})@isint()@isnotempty",{"_index":1360,"title":{},"body":{"classes/OtpSigninDto.html":{}}}],["2354",{"_index":410,"title":{},"body":{"controllers/AuthController.html":{}}}],["25",{"_index":2220,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":2374,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":2210,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":2232,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":2238,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":2228,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":2372,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":2245,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":2203,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":2222,"title":{},"body":{"coverage.html":{}}}],["465",{"_index":1247,"title":{},"body":{"modules/MailModule.html":{}}}],["5",{"_index":699,"title":{},"body":{"classes/CreateReviewDto.html":{},"entities/Product.html":{},"entities/Review.html":{},"injectables/StoreOtpAndExpireProvider.html":{}}}],["5.1.1",{"_index":2254,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":2211,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":2218,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1733,"title":{},"body":{"controllers/ProductsController.html":{}}}],["60",{"_index":1894,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{},"coverage.html":{}}}],["66",{"_index":2233,"title":{},"body":{"coverage.html":{}}}],["7.8.1",{"_index":2263,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":2231,"title":{},"body":{"coverage.html":{}}}],["8.13.3",{"_index":2260,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":2226,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":2217,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":2236,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":1899,"title":{},"body":{"entities/Subscriber.html":{},"entities/User.html":{}}}],["_",{"_index":101,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/ProductsController.html":{}}}],["acc",{"_index":1201,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["accept",{"_index":102,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["accepts",{"_index":1211,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["access",{"_index":10,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/RefreshTokenProvider.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{}}}],["accesstoken",{"_index":395,"title":{},"body":{"controllers/AuthController.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{}}}],["accesstokenguard",{"_index":1,"title":{"guards/AccessTokenGuard.html":{}},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["accounttype",{"_index":757,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["active",{"_index":2392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activeuser",{"_index":916,"title":{},"body":{"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["activeuserdata",{"_index":112,"title":{"interfaces/ActiveUserData.html":{}},"body":{"interfaces/ActiveUserData.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ad",{"_index":1808,"title":{},"body":{"entities/Review.html":{}}}],["adapter",{"_index":1256,"title":{},"body":{"modules/MailModule.html":{}}}],["add",{"_index":2172,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["address",{"_index":744,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/InitiatePaymentProvider.html":{},"classes/SignInDto.html":{}}}],["admin",{"_index":760,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"miscellaneous/enumerations.html":{}}}],["admin'})@isenum(role)@isnotempty",{"_index":754,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["allow",{"_index":1855,"title":{},"body":{"guards/RolesGuard.html":{}}}],["already",{"_index":1873,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["amazing",{"_index":2353,"title":{},"body":{"index.html":{}}}],["amount",{"_index":1193,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{}}}],["amounts",{"_index":1212,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["api",{"_index":1699,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apibody",{"_index":384,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes",{"_index":1718,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiconsumes('multipart/form",{"_index":1682,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiheaders",{"_index":1719,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apioperation",{"_index":385,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":339,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apiparam",{"_index":1720,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":745,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/OtpSigninDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{}}}],["apiproperty({description",{"_index":741,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/OtpSigninDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{}}}],["apiquery",{"_index":1721,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apiresponse",{"_index":386,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apiresponse({status",{"_index":1691,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":387,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('auth",{"_index":390,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiversion",{"_index":791,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["app",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["app.controller",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":130,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["app_interceptor",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["appconfig",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":123,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":2330,"title":{},"body":{"index.html":{}}}],["applications",{"_index":2294,"title":{},"body":{"index.html":{}}}],["applied",{"_index":2174,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["apply",{"_index":942,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["applyfordiscount",{"_index":274,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{}}}],["applyfordiscount(user",{"_index":280,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{}}}],["applyfordiscountdto",{"_index":260,"title":{"classes/ApplyForDiscountDto.html":{}},"body":{"classes/ApplyForDiscountDto.html":{},"controllers/DiscountsController.html":{},"coverage.html":{}}}],["applyfordiscountdto.code",{"_index":926,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["applyfordiscountprovider",{"_index":270,"title":{"injectables/ApplyForDiscountProvider.html":{}},"body":{"injectables/ApplyForDiscountProvider.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":134,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":129,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":488,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{}}}],["array.from",{"_index":1729,"title":{},"body":{"controllers/ProductsController.html":{}}}],["async",{"_index":14,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["asynchrousnously",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["audience",{"_index":1076,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["auth",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/DeliveryStatesController.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth(authtype.none",{"_index":405,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["auth(authtype.none)@get('/:state",{"_index":826,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["auth.controller",{"_index":427,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/config/jwt.config",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/access",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/authentication/authentication.guard",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/roles/roles.guard",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["auth_type_key",{"_index":470,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":329,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticating",{"_index":466,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authentication",{"_index":458,"title":{},"body":{"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["authenticationguard",{"_index":187,"title":{"guards/AuthenticationGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["authenticationguard.defaultauthtype",{"_index":494,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authmodule",{"_index":145,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2358,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":1147,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["authorizationurl",{"_index":1220,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{}}}],["authservice",{"_index":376,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authtype",{"_index":379,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"controllers/DeliveryStatesController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["authtype.bearer",{"_index":478,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtype.none",{"_index":483,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtypeguardmap",{"_index":459,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtypes",{"_index":490,"title":{},"body":{"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["authtypes.map((type",{"_index":496,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["autoloadentities",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["availability",{"_index":1184,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["available",{"_index":1664,"title":{},"body":{"injectables/ProductVariantsService.html":{},"modules.html":{}}}],["await",{"_index":86,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["aws",{"_index":1985,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"dependencies.html":{}}}],["aws.provider",{"_index":2018,"title":{},"body":{"modules/UploadsModule.html":{},"injectables/UploadsService.html":{}}}],["aws.provider.ts",{"_index":1978,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"coverage.html":{}}}],["aws.provider.ts:25",{"_index":1983,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["aws.provider.ts:49",{"_index":1987,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["aws.provider.ts:8",{"_index":1981,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["axios",{"_index":1155,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"dependencies.html":{}}}],["axios.get",{"_index":2157,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["axios.post",{"_index":1206,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["back",{"_index":1289,"title":{},"body":{"injectables/MailService.html":{}}}],["backers",{"_index":2354,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":284,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('delivery",{"_index":876,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["badrequestexception('mime",{"_index":2031,"title":{},"body":{"injectables/UploadsService.html":{}}}],["badrequestexception('product",{"_index":1942,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["badrequestexception('the",{"_index":874,"title":{},"body":{"injectables/DeliveryStatesService.html":{},"injectables/FindOneByIdProvider.html":{}}}],["badrequestexception('user",{"_index":2141,"title":{},"body":{"injectables/UsersService.html":{}}}],["base",{"_index":1094,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["based",{"_index":105,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/DeliveryStatesService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/OtpSigninProvider.html":{},"controllers/ProductsController.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["baseurl",{"_index":1426,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["bcrypt",{"_index":2253,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":1164,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"injectables/VerifyPaymentProvider.html":{},"miscellaneous/enumerations.html":{}}}],["becomes",{"_index":1670,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["before",{"_index":796,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["beforeinsert",{"_index":810,"title":{},"body":{"entities/DeliveryState.html":{},"entities/Product.html":{}}}],["beforeupdate",{"_index":811,"title":{},"body":{"entities/DeliveryState.html":{},"entities/Product.html":{}}}],["belongs",{"_index":1645,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["best",{"_index":1295,"title":{},"body":{"injectables/MailService.html":{}}}],["between",{"_index":983,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"entities/Review.html":{}}}],["board",{"_index":2346,"title":{},"body":{"index.html":{}}}],["body",{"_index":369,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"injectables/UploadToAwsProvider.html":{},"controllers/UsersController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["boolean",{"_index":1466,"title":{},"body":{"classes/PatchProductVariantDto.html":{},"entities/ProductVariant.html":{},"guards/RolesGuard.html":{}}}],["boostrap",{"_index":2284,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["both",{"_index":2176,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["brand",{"_index":555,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["browse",{"_index":2368,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2366,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":1995,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["building",{"_index":2290,"title":{},"body":{"index.html":{}}}],["buy",{"_index":1181,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["buyer",{"_index":1166,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["buyer.city",{"_index":1174,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["buyer.email",{"_index":1208,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["buyer.firstname",{"_index":1177,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["buyer.id",{"_index":1216,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["buyer.lastname",{"_index":1178,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["buyer.state",{"_index":1175,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["buyer.streetaddress",{"_index":1173,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["calculate",{"_index":1191,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["callback_url",{"_index":1209,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["called",{"_index":2149,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["callhandler",{"_index":788,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["canactivate",{"_index":15,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":30,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["carrier",{"_index":1310,"title":{},"body":{"entities/Order.html":{}}}],["carrierphonenumber",{"_index":1311,"title":{},"body":{"entities/Order.html":{}}}],["cascade",{"_index":1571,"title":{},"body":{"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{}}}],["cascade'})@joincolumn",{"_index":1595,"title":{},"body":{"entities/ProductImage.html":{},"entities/ProductVariant.html":{}}}],["catch",{"_index":100,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["category",{"_index":556,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["changeuserpasswordprovider",{"_index":2130,"title":{},"body":{"injectables/UsersService.html":{}}}],["channel",{"_index":2321,"title":{},"body":{"index.html":{}}}],["charge.success",{"_index":2188,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["check",{"_index":321,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsUsageService.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/ProductVariantsService.html":{},"entities/Review.html":{},"injectables/VerifyPaymentProvider.html":{},"index.html":{}}}],["check('\"stars",{"_index":1807,"title":{},"body":{"entities/Review.html":{}}}],["checking",{"_index":34,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["checks",{"_index":299,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsService.html":{},"injectables/ProductVariantsService.html":{}}}],["checkvariantavailability",{"_index":1622,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["checkvariantavailability(manager",{"_index":1629,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["checkwhereoptions",{"_index":1019,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["city",{"_index":1474,"title":{},"body":{"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["class",{"_index":64,"title":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/OtpSigninDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{},"classes/UpdateDeliveryStateDto.html":{}},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":261,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/OtpSigninDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{},"classes/UpdateDeliveryStateDto.html":{},"overview.html":{}}}],["clear",{"_index":1380,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/UsersService.html":{}}}],["clearing",{"_index":514,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/UsersService.html":{}}}],["clearotpandexpirytime",{"_index":508,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/UsersService.html":{}}}],["clearotpandexpirytime(user",{"_index":512,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/UsersService.html":{}}}],["clearotpandexpirytimeprovider",{"_index":504,"title":{"injectables/ClearOtpAndExpiryTimeProvider.html":{}},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["clothtype",{"_index":557,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["cluster_appmodule",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":419,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":420,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_deliverystatesmodule",{"_index":853,"title":{},"body":{"modules/DeliveryStatesModule.html":{},"overview.html":{}}}],["cluster_deliverystatesmodule_providers",{"_index":854,"title":{},"body":{"modules/DeliveryStatesModule.html":{},"overview.html":{}}}],["cluster_discountsmodule",{"_index":927,"title":{},"body":{"modules/DiscountsModule.html":{},"overview.html":{}}}],["cluster_discountsmodule_imports",{"_index":929,"title":{},"body":{"modules/DiscountsModule.html":{}}}],["cluster_discountsmodule_providers",{"_index":928,"title":{},"body":{"modules/DiscountsModule.html":{},"overview.html":{}}}],["cluster_discountsusagemodule",{"_index":945,"title":{},"body":{"modules/DiscountsUsageModule.html":{},"overview.html":{}}}],["cluster_discountsusagemodule_exports",{"_index":947,"title":{},"body":{"modules/DiscountsUsageModule.html":{},"overview.html":{}}}],["cluster_discountsusagemodule_providers",{"_index":946,"title":{},"body":{"modules/DiscountsUsageModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":1223,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":1225,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":1224,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_ordersmodule",{"_index":1350,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_ordersmodule_providers",{"_index":1351,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_paginationmodule",{"_index":1399,"title":{},"body":{"modules/PaginationModule.html":{},"overview.html":{}}}],["cluster_paginationmodule_exports",{"_index":1401,"title":{},"body":{"modules/PaginationModule.html":{},"overview.html":{}}}],["cluster_paginationmodule_providers",{"_index":1400,"title":{},"body":{"modules/PaginationModule.html":{},"overview.html":{}}}],["cluster_paystackmodule",{"_index":1535,"title":{},"body":{"modules/PaystackModule.html":{},"overview.html":{}}}],["cluster_paystackmodule_imports",{"_index":1537,"title":{},"body":{"modules/PaystackModule.html":{}}}],["cluster_paystackmodule_providers",{"_index":1536,"title":{},"body":{"modules/PaystackModule.html":{},"overview.html":{}}}],["cluster_productimagesmodule",{"_index":1597,"title":{},"body":{"modules/ProductImagesModule.html":{},"overview.html":{}}}],["cluster_productimagesmodule_providers",{"_index":1598,"title":{},"body":{"modules/ProductImagesModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":1750,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_exports",{"_index":1751,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_imports",{"_index":1753,"title":{},"body":{"modules/ProductsModule.html":{}}}],["cluster_productsmodule_providers",{"_index":1752,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productvariantsmodule",{"_index":1616,"title":{},"body":{"modules/ProductVariantsModule.html":{},"overview.html":{}}}],["cluster_productvariantsmodule_exports",{"_index":1617,"title":{},"body":{"modules/ProductVariantsModule.html":{},"overview.html":{}}}],["cluster_productvariantsmodule_providers",{"_index":1618,"title":{},"body":{"modules/ProductVariantsModule.html":{},"overview.html":{}}}],["cluster_reviewsmodule",{"_index":1825,"title":{},"body":{"modules/ReviewsModule.html":{},"overview.html":{}}}],["cluster_reviewsmodule_imports",{"_index":1826,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["cluster_reviewsmodule_providers",{"_index":1827,"title":{},"body":{"modules/ReviewsModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule",{"_index":1906,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule_imports",{"_index":1908,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["cluster_subscribersmodule_providers",{"_index":1907,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_uploadsmodule",{"_index":2012,"title":{},"body":{"modules/UploadsModule.html":{},"overview.html":{}}}],["cluster_uploadsmodule_exports",{"_index":2013,"title":{},"body":{"modules/UploadsModule.html":{},"overview.html":{}}}],["cluster_uploadsmodule_providers",{"_index":2014,"title":{},"body":{"modules/UploadsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":2088,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":2089,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":2091,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":2090,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":264,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"classes/CreateDiscountDto.html":{},"entities/Discount.html":{},"injectables/DiscountsService.html":{}}}],["color",{"_index":673,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"injectables/FindAllProductsProvider.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{}}}],["colors",{"_index":1096,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["column",{"_index":805,"title":{},"body":{"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{}}}],["column('decimal",{"_index":1323,"title":{},"body":{"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{}}}],["column('int",{"_index":1589,"title":{},"body":{"entities/ProductImage.html":{},"entities/ProductVariant.html":{}}}],["column('text",{"_index":1801,"title":{},"body":{"entities/Review.html":{}}}],["column({default",{"_index":883,"title":{},"body":{"entities/Discount.html":{},"entities/ProductVariant.html":{}}}],["column({nullable",{"_index":1317,"title":{},"body":{"entities/Order.html":{},"entities/Payment.html":{},"entities/User.html":{}}}],["column({type",{"_index":885,"title":{},"body":{"entities/Discount.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{}}}],["column({unique",{"_index":1499,"title":{},"body":{"entities/Payment.html":{}}}],["come",{"_index":2313,"title":{},"body":{"index.html":{}}}],["commit",{"_index":655,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["committed",{"_index":658,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["common/interceptors/data",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["complete",{"_index":665,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["compodoc/compodoc",{"_index":2241,"title":{},"body":{"dependencies.html":{}}}],["concurrent",{"_index":1650,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["conditions",{"_index":993,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["conditions.variants",{"_index":1013,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["conditions.variants.color",{"_index":1011,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["conditions.variants.size",{"_index":1012,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["config",{"_index":69,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["config.get('appconfig.mailhost",{"_index":1242,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('appconfig.smtppassword",{"_index":1244,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('appconfig.smtpusername",{"_index":1243,"title":{},"body":{"modules/MailModule.html":{}}}],["config/app.config",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["config/database.config",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["config/enviroment.validation",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["config/jwt.config",{"_index":433,"title":{},"body":{"modules/AuthModule.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["config/paths.config",{"_index":1279,"title":{},"body":{"injectables/MailService.html":{}}}],["config/paystack.config",{"_index":1154,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"modules/PaystackModule.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["configmodule",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PaystackModule.html":{}}}],["configmodule.forfeature(jwtconfig",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forfeature(paystackconfig",{"_index":1545,"title":{},"body":{"modules/PaystackModule.html":{}}}],["configmodule.forroot",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["configservice.get('database.autoloadentities",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.host",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.name",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.password",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.port",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.synchronize",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.user",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["configtype",{"_index":22,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["configure",{"_index":1239,"title":{},"body":{"modules/MailModule.html":{}}}],["confirmation",{"_index":1300,"title":{},"body":{"injectables/MailService.html":{}}}],["conflictexception",{"_index":599,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/UploadsService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["conflictexception('could",{"_index":664,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["conflictexception(err",{"_index":2182,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["conflictexception(error",{"_index":2036,"title":{},"body":{"injectables/UploadsService.html":{}}}],["connect",{"_index":614,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["connecting",{"_index":317,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["connection",{"_index":669,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["console.log",{"_index":1241,"title":{},"body":{"modules/MailModule.html":{}}}],["console.log('before",{"_index":795,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["console.log('createing",{"_index":2170,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["console.log('payment",{"_index":2192,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["console.log('re",{"_index":417,"title":{},"body":{"controllers/AuthController.html":{}}}],["console.log(error",{"_index":311,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SignInProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["console.log(newurl",{"_index":1431,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["const",{"_index":73,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"injectables/ApplyForDiscountProvider.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"miscellaneous/variables.html":{}}}],["constant",{"_index":2395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["constructor(configservice",{"_index":785,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"injectables/UploadToAwsProvider.html":{}}}],["constructor(creatediscountprovider",{"_index":937,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["constructor(createproductprovider",{"_index":1766,"title":{},"body":{"injectables/ProductsService.html":{}}}],["constructor(createreviewprovider",{"_index":1834,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["constructor(createuserprovider",{"_index":2108,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(datasource",{"_index":591,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["constructor(deliverystaterepository",{"_index":862,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["constructor(discountsrepository",{"_index":275,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{}}}],["constructor(discountsusagerepository",{"_index":954,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["constructor(initiatepaymentprovider",{"_index":1548,"title":{},"body":{"injectables/PaystackService.html":{}}}],["constructor(jwtservice",{"_index":19,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["constructor(mailerservice",{"_index":1264,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(paystackconfiguration",{"_index":1140,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["constructor(private",{"_index":131,"title":{},"body":{"controllers/AppController.html":{},"guards/RolesGuard.html":{}}}],["constructor(productrepository",{"_index":969,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/UpdateProductProvider.html":{}}}],["constructor(productvariantrepository",{"_index":1626,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["constructor(reflector",{"_index":462,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["constructor(request",{"_index":1406,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["constructor(reviewsrepository",{"_index":708,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["constructor(signinprovider",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(subscriberrepository",{"_index":1919,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["constructor(uploadtoawsprovider",{"_index":2021,"title":{},"body":{"injectables/UploadsService.html":{}}}],["constructor(usersrepository",{"_index":509,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{}}}],["constructor(usersservice",{"_index":1366,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{}}}],["containing",{"_index":1073,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["contains",{"_index":84,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{}}}],["contenttype",{"_index":1999,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["context",{"_index":36,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{}}}],["context.getclass",{"_index":493,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":492,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":74,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/RolesGuard.html":{}}}],["controller",{"_index":122,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":391,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('delivery",{"_index":842,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["controller('discounts",{"_index":920,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["controller('orders",{"_index":1349,"title":{},"body":{"controllers/OrdersController.html":{}}}],["controller('payment",{"_index":1511,"title":{},"body":{"controllers/PaymentController.html":{}}}],["controller('paystack",{"_index":1530,"title":{},"body":{"controllers/PaystackController.html":{}}}],["controller('products",{"_index":1726,"title":{},"body":{"controllers/ProductsController.html":{}}}],["controller('reviews",{"_index":1819,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["controller('subscribers",{"_index":1905,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["controller('users",{"_index":2078,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":124,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["count",{"_index":322,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsUsageService.html":{}}}],["countdiscountusage",{"_index":953,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["countdiscountusage(discountid",{"_index":957,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["country",{"_index":1475,"title":{},"body":{"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["courses",{"_index":2328,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":2197,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":495,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DiscountsService.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["created",{"_index":358,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DiscountsService.html":{},"injectables/ProductsService.html":{}}}],["createdat",{"_index":1312,"title":{},"body":{"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{}}}],["createdatecolumn",{"_index":803,"title":{},"body":{"entities/DeliveryState.html":{},"entities/DiscountUsage.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/Review.html":{}}}],["createdeliverystate",{"_index":819,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{}}}],["createdeliverystate(createdeliverystatedto",{"_index":822,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{}}}],["createdeliverystatedto",{"_index":522,"title":{"classes/CreateDeliveryStateDto.html":{}},"body":{"classes/CreateDeliveryStateDto.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"classes/UpdateDeliveryStateDto.html":{},"coverage.html":{}}}],["creatediscount",{"_index":542,"title":{},"body":{"injectables/CreateDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{}}}],["creatediscount(@body",{"_index":921,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["creatediscount(creatediscountdto",{"_index":544,"title":{},"body":{"injectables/CreateDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{}}}],["creatediscountdto",{"_index":533,"title":{"classes/CreateDiscountDto.html":{}},"body":{"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"coverage.html":{}}}],["creatediscountprovider",{"_index":540,"title":{"injectables/CreateDiscountProvider.html":{}},"body":{"injectables/CreateDiscountProvider.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"coverage.html":{},"overview.html":{}}}],["createhash('sha256",{"_index":1375,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{}}}],["createhmac('sha512",{"_index":2184,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["createparamdecorator",{"_index":2386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproduct",{"_index":590,"title":{},"body":{"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createproduct(createproductdto",{"_index":595,"title":{},"body":{"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createproductdto",{"_index":553,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["createproductdto.variants",{"_index":633,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["createproductprovider",{"_index":587,"title":{"injectables/CreateProductProvider.html":{}},"body":{"injectables/CreateProductProvider.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["createproductvariantdto",{"_index":581,"title":{"classes/CreateProductVariantDto.html":{}},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/PatchProductVariantDto.html":{},"coverage.html":{}}}],["createquerybuilder(productvariant",{"_index":1651,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["createreview",{"_index":707,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["createreview(@body",{"_index":1820,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["createreview(createreviewdto",{"_index":712,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["createreviewdto",{"_index":685,"title":{"classes/CreateReviewDto.html":{}},"body":{"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"coverage.html":{}}}],["createreviewdto.productid",{"_index":722,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["createreviewdto.review",{"_index":726,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["createreviewdto.reviewer",{"_index":725,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["createreviewdto.stars",{"_index":727,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["createreviewprovider",{"_index":704,"title":{"injectables/CreateReviewProvider.html":{}},"body":{"injectables/CreateReviewProvider.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"coverage.html":{},"overview.html":{}}}],["creates",{"_index":354,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["createsubscriber",{"_index":1917,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["createsubscriber(createsubscriberdto",{"_index":1922,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["createsubscriberdto",{"_index":736,"title":{"classes/CreateSubscriberDto.html":{}},"body":{"classes/CreateSubscriberDto.html":{},"injectables/SubscribersService.html":{},"coverage.html":{}}}],["createuser",{"_index":765,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"injectables/UsersService.html":{}}}],["createuser(createuserdto",{"_index":767,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"injectables/UsersService.html":{}}}],["createuserdto",{"_index":750,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"classes/PatchUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserprovider",{"_index":2112,"title":{},"body":{"injectables/UsersService.html":{}}}],["createusersprovider",{"_index":762,"title":{"injectables/CreateUsersProvider.html":{}},"body":{"injectables/CreateUsersProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["creating",{"_index":739,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/UsersService.html":{}}}],["creatng",{"_index":1924,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["crypto",{"_index":1371,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["ctx",{"_index":2389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":2390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cur",{"_index":1200,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["current",{"_index":1396,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["currentpage",{"_index":1392,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["custom",{"_index":1737,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":781,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"controllers/ProductsController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["data')@useinterceptors(undefined)@roles(role.admin)@post",{"_index":1683,"title":{},"body":{"controllers/ProductsController.html":{}}}],["data.interface",{"_index":291,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/UsersController.html":{}}}],["data.interface.ts",{"_index":115,"title":{},"body":{"interfaces/ActiveUserData.html":{},"coverage.html":{}}}],["database",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/ProductVariantsService.html":{},"entities/Subscriber.html":{},"injectables/UpdateProductProvider.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["databaseconfig",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["dataresponseinterceptor",{"_index":183,"title":{"injectables/DataResponseInterceptor.html":{}},"body":{"modules/AppModule.html":{},"injectables/DataResponseInterceptor.html":{},"coverage.html":{}}}],["datasource",{"_index":592,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["date",{"_index":307,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"classes/CreateDiscountDto.html":{},"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/Review.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["date().gettime().tostring().trim",{"_index":2010,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["date(date.now",{"_index":1893,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["datecreated",{"_index":733,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"entities/DeliveryState.html":{},"entities/Review.html":{}}}],["db",{"_index":551,"title":{},"body":{"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["declarations",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decoraror",{"_index":2397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorator",{"_index":1847,"title":{},"body":{"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["decorator/auth.decorator",{"_index":378,"title":{},"body":{"controllers/AuthController.html":{}}}],["decorators",{"_index":127,"title":{},"body":{"controllers/AppController.html":{},"classes/ApplyForDiscountDto.html":{},"controllers/AuthController.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/InitiatePaymentDto.html":{},"entities/Order.html":{},"classes/OtpSigninDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaystackController.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"classes/RefreshTokenDto.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"classes/SignInDto.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["decrementing",{"_index":1668,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["deeper",{"_index":2323,"title":{},"body":{"index.html":{}}}],["default",{"_index":477,"title":{},"body":{"guards/AuthenticationGuard.html":{},"entities/Discount.html":{},"modules/MailModule.html":{},"entities/Order.html":{},"classes/PaginationQueryDto.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"miscellaneous/variables.html":{}}}],["defaultauthtype",{"_index":461,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["defaultroletype",{"_index":1851,"title":{},"body":{"guards/RolesGuard.html":{}}}],["defined",{"_index":23,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["delete",{"_index":1715,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{}}}],["delete('/:productid",{"_index":1747,"title":{},"body":{"controllers/ProductsController.html":{}}}],["delete('/:productid')@roles(role.admin)@httpcode(httpstatus.no_content",{"_index":1686,"title":{},"body":{"controllers/ProductsController.html":{}}}],["delete('/:reviewid",{"_index":1822,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["delete('/:reviewid')@roles(role.admin)@httpcode(httpstatus.no_content",{"_index":1814,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["delete('/:userid",{"_index":2085,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleted",{"_index":1689,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleted'})@apiparam({name",{"_index":2061,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteproduct",{"_index":1678,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{}}}],["deleteproduct(productid",{"_index":1685,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["deleteproduct(reviewid",{"_index":1813,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["deletereview",{"_index":1833,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["deletereview(reviewid",{"_index":1837,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["deletes",{"_index":1746,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/UsersController.html":{}}}],["deleteuser",{"_index":2055,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteuser(@param('userid",{"_index":2086,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser(userid",{"_index":2059,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleting",{"_index":2064,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deletion",{"_index":2116,"title":{},"body":{"injectables/UsersService.html":{}}}],["delivered",{"_index":2279,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["delivery",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateDeliveryStateDto.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"injectables/InitiatePaymentProvider.html":{},"classes/UpdateDeliveryStateDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["deliveryaddress",{"_index":1126,"title":{},"body":{"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/Order.html":{},"classes/ProductWithVariantDto.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["deliverypicker",{"_index":1127,"title":{},"body":{"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/Order.html":{},"classes/ProductWithVariantDto.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["deliverystate",{"_index":800,"title":{"entities/DeliveryState.html":{}},"body":{"entities/DeliveryState.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"coverage.html":{}}}],["deliverystaterepository",{"_index":864,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["deliverystatescontroller",{"_index":816,"title":{"controllers/DeliveryStatesController.html":{}},"body":{"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"coverage.html":{}}}],["deliverystatesmodule",{"_index":146,"title":{"modules/DeliveryStatesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DeliveryStatesModule.html":{},"modules.html":{},"overview.html":{}}}],["deliverystatesservice",{"_index":834,"title":{"injectables/DeliveryStatesService.html":{}},"body":{"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"coverage.html":{},"overview.html":{}}}],["deny",{"_index":103,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["dependencies",{"_index":136,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":41,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/RolesGuard.html":{}}}],["description",{"_index":9,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"entities/Payment.html":{},"controllers/ProductsController.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"index.html":{},"properties.html":{}}}],["details",{"_index":1170,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["development",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["devtools",{"_index":2334,"title":{},"body":{"index.html":{}}}],["diff",{"_index":485,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["digest('hex",{"_index":1377,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["dir",{"_index":1253,"title":{},"body":{"modules/MailModule.html":{}}}],["directly",{"_index":1974,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["disable",{"_index":93,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["discord",{"_index":2320,"title":{},"body":{"index.html":{}}}],["discount",{"_index":283,"title":{"entities/Discount.html":{}},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/InitiatePaymentProvider.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["discount.dto",{"_index":548,"title":{},"body":{"injectables/CreateDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{}}}],["discount.dto.ts",{"_index":263,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDiscountDto.html":{},"coverage.html":{}}}],["discount.dto.ts:10",{"_index":536,"title":{},"body":{"classes/CreateDiscountDto.html":{}}}],["discount.dto.ts:14",{"_index":538,"title":{},"body":{"classes/CreateDiscountDto.html":{}}}],["discount.dto.ts:6",{"_index":266,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDiscountDto.html":{}}}],["discount.id",{"_index":325,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["discount.percentoff",{"_index":1203,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["discount.provider",{"_index":933,"title":{},"body":{"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{}}}],["discount.provider.ts",{"_index":272,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"coverage.html":{}}}],["discount.provider.ts:13",{"_index":278,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["discount.provider.ts:22",{"_index":545,"title":{},"body":{"injectables/CreateDiscountProvider.html":{}}}],["discount.provider.ts:33",{"_index":281,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["discount.provider.ts:8",{"_index":543,"title":{},"body":{"injectables/CreateDiscountProvider.html":{}}}],["discount.usagelimit",{"_index":327,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["discountapplied",{"_index":1313,"title":{},"body":{"entities/Order.html":{}}}],["discountid",{"_index":960,"title":{},"body":{"injectables/DiscountsUsageService.html":{},"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["discounts",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{}}}],["discounts.controller",{"_index":931,"title":{},"body":{"modules/DiscountsModule.html":{}}}],["discounts.entity",{"_index":289,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{}}}],["discounts/discounts.module",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["discountscontroller",{"_index":909,"title":{"controllers/DiscountsController.html":{}},"body":{"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"coverage.html":{}}}],["discountsmodule",{"_index":147,"title":{"modules/DiscountsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DiscountsModule.html":{},"modules.html":{},"overview.html":{}}}],["discountsrepository",{"_index":279,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{}}}],["discountsservice",{"_index":914,"title":{"injectables/DiscountsService.html":{}},"body":{"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"coverage.html":{},"overview.html":{}}}],["discountsusagemodule",{"_index":148,"title":{"modules/DiscountsUsageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules.html":{},"overview.html":{}}}],["discountsusagerepository",{"_index":956,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["discountsusageservice",{"_index":277,"title":{"injectables/DiscountsUsageService.html":{}},"body":{"injectables/ApplyForDiscountProvider.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"coverage.html":{},"overview.html":{}}}],["discountusage",{"_index":890,"title":{"entities/DiscountUsage.html":{}},"body":{"entities/DiscountUsage.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"entities/Order.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["discountusage.order",{"_index":1325,"title":{},"body":{"entities/Order.html":{}}}],["displayorder",{"_index":649,"title":{},"body":{"injectables/CreateProductProvider.html":{},"entities/ProductImage.html":{}}}],["dive",{"_index":2322,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":2198,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dressing",{"_index":1104,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["dressstyle",{"_index":558,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["dto",{"_index":635,"title":{},"body":{"injectables/CreateProductProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/OtpSigninDto.html":{},"classes/PaginationQueryDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{}}}],["dtos/apply",{"_index":919,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["dtos/create",{"_index":547,"title":{},"body":{"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["dtos/createproductdto",{"_index":601,"title":{},"body":{"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["dtos/get",{"_index":980,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/initiate",{"_index":1151,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{}}}],["dtos/otpsignin.dto",{"_index":389,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/OtpSigninProvider.html":{}}}],["dtos/pagination",{"_index":1411,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["dtos/patch",{"_index":1725,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/refresh",{"_index":382,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RefreshTokenProvider.html":{}}}],["dtos/sign",{"_index":374,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SignInProvider.html":{}}}],["dtos/update",{"_index":841,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{}}}],["dynamically",{"_index":1727,"title":{},"body":{"controllers/ProductsController.html":{}}}],["e2e",{"_index":2308,"title":{},"body":{"index.html":{}}}],["each",{"_index":586,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"classes/ProductWithVariantDto.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["eager",{"_index":1572,"title":{},"body":{"entities/Product.html":{},"entities/ProductVariant.html":{}}}],["efficient",{"_index":2291,"title":{},"body":{"index.html":{}}}],["ejsadapter",{"_index":1233,"title":{},"body":{"modules/MailModule.html":{}}}],["email",{"_index":118,"title":{},"body":{"interfaces/ActiveUserData.html":{},"controllers/AuthController.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["email.provider",{"_index":2096,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["email.provider.ts",{"_index":1038,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"coverage.html":{}}}],["email.provider.ts:14",{"_index":1040,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{}}}],["email.provider.ts:32",{"_index":1042,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{}}}],["end",{"_index":1120,"title":{},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["enddate",{"_index":1117,"title":{},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["ensures",{"_index":656,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["ensuring",{"_index":1644,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["enterprise",{"_index":2338,"title":{},"body":{"index.html":{}}}],["entities",{"_index":801,"title":{},"body":{"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"overview.html":{}}}],["entity",{"_index":634,"title":{"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{}},"body":{"injectables/CreateProductProvider.html":{},"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"coverage.html":{}}}],["entitymanager",{"_index":1630,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["entries",{"_index":1694,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["enum",{"_index":1329,"title":{},"body":{"entities/Order.html":{},"entities/Payment.html":{},"entities/User.html":{}}}],["enumerations",{"_index":2267,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/account",{"_index":758,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["enums/auth",{"_index":380,"title":{},"body":{"controllers/AuthController.html":{}}}],["enums/order",{"_index":1341,"title":{},"body":{"entities/Order.html":{}}}],["enums/paymentstatus.enum",{"_index":1506,"title":{},"body":{"entities/Payment.html":{}}}],["enums/role",{"_index":1863,"title":{},"body":{"classes/SignInDto.html":{}}}],["env",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["env.${env",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["enviroment",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["enviromentvalidation",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":503,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DeliveryStatesService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["error",{"_index":310,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["error('purchase",{"_index":2165,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["eslint",{"_index":92,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["eslint/no",{"_index":97,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["estimateddeliverydate",{"_index":1314,"title":{},"body":{"entities/Order.html":{}}}],["event",{"_index":1711,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["eventid",{"_index":1705,"title":{},"body":{"controllers/ProductsController.html":{}}}],["events",{"_index":1113,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["example",{"_index":345,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/OtpSigninDto.html":{},"controllers/ProductsController.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["example1",{"_index":398,"title":{},"body":{"controllers/AuthController.html":{}}}],["example2",{"_index":401,"title":{},"body":{"controllers/AuthController.html":{}}}],["examples",{"_index":349,"title":{},"body":{"controllers/AuthController.html":{}}}],["exceed",{"_index":698,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["exceeds",{"_index":1663,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["exception",{"_index":1871,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["excetion",{"_index":72,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["execution",{"_index":487,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{}}}],["executioncontext",{"_index":31,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":319,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/SignInProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["exists",{"_index":1657,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["experience",{"_index":2325,"title":{},"body":{"index.html":{}}}],["expire.provider",{"_index":2098,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["expire.provider.ts",{"_index":1886,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{},"coverage.html":{}}}],["expire.provider.ts:10",{"_index":1889,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["expire.provider.ts:29",{"_index":1891,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["expired",{"_index":320,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["expires",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["expiresin",{"_index":1069,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["expiry",{"_index":506,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["export",{"_index":63,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["exports",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":58,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/PaginationProvider.html":{},"controllers/ProductsController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":607,"title":{},"body":{"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["extends",{"_index":1114,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/UpdateDeliveryStateDto.html":{}}}],["extension",{"_index":2007,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["extract",{"_index":75,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/UploadToAwsProvider.html":{}}}],["extracting",{"_index":47,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["extractrequestfromheader",{"_index":17,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["extractrequestfromheader(request",{"_index":44,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["failed",{"_index":2177,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{},"miscellaneous/enumerations.html":{}}}],["false",{"_index":40,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"modules/MailModule.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"guards/RolesGuard.html":{},"entities/Subscriber.html":{},"injectables/UpdateProductProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["fashion",{"_index":1251,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["favour@gmail.com",{"_index":748,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["favour@gmail.com'})@isemail()@maxlength(96)@isnotempty",{"_index":742,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["fee",{"_index":526,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"entities/DeliveryState.html":{}}}],["fetch",{"_index":1045,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/RefreshTokenProvider.html":{}}}],["fetched",{"_index":1692,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["few",{"_index":2311,"title":{},"body":{"index.html":{}}}],["field",{"_index":2387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fields",{"_index":1728,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/UpdateProductProvider.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["file.buffer",{"_index":1997,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["file.mimetype",{"_index":2000,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["file.originalname.split('.')[0",{"_index":2002,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["filearray",{"_index":624,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["filefieldsinterceptor",{"_index":1722,"title":{},"body":{"controllers/ProductsController.html":{}}}],["filename",{"_index":1988,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["files",{"_index":627,"title":{},"body":{"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["fileupload",{"_index":1979,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["fileupload(file",{"_index":1982,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["filteredconditions",{"_index":1014,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["filtering",{"_index":988,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["finally",{"_index":667,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["finalresponse",{"_index":1436,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["find",{"_index":720,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductsService.html":{},"injectables/SignInProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["findall",{"_index":968,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["findall(productquery",{"_index":973,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/ProductsService.html":{}}}],["findall(userquery",{"_index":2117,"title":{},"body":{"injectables/UsersService.html":{}}}],["findallproducts",{"_index":1679,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findallproducts(@query",{"_index":1741,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findallproducts(productquery",{"_index":1690,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findallproductsprovider",{"_index":965,"title":{"injectables/FindAllProductsProvider.html":{}},"body":{"injectables/FindAllProductsProvider.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["findallusers",{"_index":2056,"title":{},"body":{"controllers/UsersController.html":{}}}],["findallusers(@query",{"_index":2082,"title":{},"body":{"controllers/UsersController.html":{}}}],["findallusers(usersquery",{"_index":2066,"title":{},"body":{"controllers/UsersController.html":{}}}],["findbyid",{"_index":1032,"title":{},"body":{"injectables/FindOneByIdProvider.html":{}}}],["findbyid(id",{"_index":1034,"title":{},"body":{"injectables/FindOneByIdProvider.html":{}}}],["finddeliverystatebyname",{"_index":861,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["finddeliverystatebyname(state",{"_index":866,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["finddeliverystatebystate",{"_index":820,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["finddeliverystatebystate(@param('state",{"_index":847,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["finddeliverystatebystate(state",{"_index":825,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["finding",{"_index":1031,"title":{},"body":{"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["findonebyemail",{"_index":1039,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"injectables/UsersService.html":{}}}],["findonebyemail(email",{"_index":1041,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"injectables/UsersService.html":{}}}],["findonebyid",{"_index":2104,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyid(id",{"_index":2121,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyidprovider",{"_index":1027,"title":{"injectables/FindOneByIdProvider.html":{}},"body":{"injectables/FindOneByIdProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["findoneuserbyemailprovider",{"_index":1037,"title":{"injectables/FindOneUserByEmailProvider.html":{}},"body":{"injectables/FindOneUserByEmailProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["findproductbyid",{"_index":1680,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findproductbyid(@param('productid",{"_index":1739,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findproductbyid(productid",{"_index":1702,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findproductvariantbyid",{"_index":1623,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["findproductvariantbyid(variantid",{"_index":1633,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["finds",{"_index":845,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["finduser",{"_index":2057,"title":{},"body":{"controllers/UsersController.html":{}}}],["finduser(@param('userid",{"_index":2080,"title":{},"body":{"controllers/UsersController.html":{}}}],["finduser(userid",{"_index":2071,"title":{},"body":{"controllers/UsersController.html":{}}}],["finduserbyotpandexpiresprovider",{"_index":2110,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyotpandexpirytime",{"_index":1050,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["finduserbyotpandexpirytime(otp",{"_index":1052,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["finduserbyotpandexpirytimeprovider",{"_index":1047,"title":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["finduserbyresetotpandexpiresprovider",{"_index":2129,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyresetotpandexpirytime",{"_index":2105,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyresetotpandexpirytime(otp",{"_index":2123,"title":{},"body":{"injectables/UsersService.html":{}}}],["fire",{"_index":500,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["first",{"_index":1394,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["firstname",{"_index":1302,"title":{},"body":{"injectables/MailService.html":{},"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["flat",{"_index":651,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["follow",{"_index":2340,"title":{},"body":{"index.html":{}}}],["forbiddenexception",{"_index":1848,"title":{},"body":{"guards/RolesGuard.html":{}}}],["forbiddenexception('user",{"_index":1856,"title":{},"body":{"guards/RolesGuard.html":{}}}],["forgotpasswordprovider",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["format",{"_index":793,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["formatting",{"_index":790,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["forwardref",{"_index":426,"title":{},"body":{"modules/AuthModule.html":{},"injectables/CreateUsersProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{},"modules/UsersModule.html":{}}}],["fot",{"_index":1095,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["found",{"_index":1641,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"guards/RolesGuard.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["framework",{"_index":2289,"title":{},"body":{"index.html":{}}}],["full",{"_index":2337,"title":{},"body":{"index.html":{}}}],["fullname",{"_index":1293,"title":{},"body":{"injectables/MailService.html":{}}}],["function",{"_index":33,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":2282,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gaurding",{"_index":2398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generate",{"_index":1083,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"controllers/ProductsController.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{},"injectables/UploadToAwsProvider.html":{}}}],["generated",{"_index":2033,"title":{},"body":{"injectables/UploadsService.html":{}}}],["generatefilename",{"_index":1980,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["generatefilename(file",{"_index":1986,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["generatetoken",{"_index":1372,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["generatetokenprovider",{"_index":1367,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["generatetokens",{"_index":1063,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["generatetokens(user",{"_index":1066,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["generatetokensprovider",{"_index":421,"title":{"injectables/GenerateTokensProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{},"coverage.html":{},"overview.html":{}}}],["generating",{"_index":1062,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/UploadToAwsProvider.html":{}}}],["get('/:productid",{"_index":1738,"title":{},"body":{"controllers/ProductsController.html":{}}}],["get('/:state",{"_index":846,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["get('/:userid",{"_index":2079,"title":{},"body":{"controllers/UsersController.html":{}}}],["getauthheader",{"_index":1138,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["gethello",{"_index":126,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getone",{"_index":1656,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["getproductsbasedto",{"_index":1091,"title":{"classes/GetProductsBaseDto.html":{}},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"coverage.html":{}}}],["getproductsdto",{"_index":974,"title":{"classes/GetProductsDto.html":{}},"body":{"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["gets",{"_index":962,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["getting",{"_index":1146,"title":{"index.html":{}},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["getusersbasedto",{"_index":1115,"title":{"classes/GetUsersBaseDto.html":{}},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"coverage.html":{}}}],["getusersdto",{"_index":1122,"title":{"classes/GetUsersDto.html":{}},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["global",{"_index":1227,"title":{},"body":{"modules/MailModule.html":{}}}],["gotten",{"_index":1793,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["grab",{"_index":71,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["graph",{"_index":2331,"title":{},"body":{"index.html":{},"modules.html":{}}}],["grow",{"_index":2350,"title":{},"body":{"index.html":{}}}],["guard",{"_index":0,"title":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["guarding",{"_index":2394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["handle",{"_index":318,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{}}}],["handlepaymentwebhook",{"_index":1518,"title":{},"body":{"controllers/PaystackController.html":{}}}],["handlepaymentwebhook(body",{"_index":1520,"title":{},"body":{"controllers/PaystackController.html":{}}}],["hands",{"_index":2324,"title":{},"body":{"index.html":{}}}],["handy",{"_index":2314,"title":{},"body":{"index.html":{}}}],["hased",{"_index":1378,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["hash",{"_index":1373,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["hashedotp",{"_index":1374,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{}}}],["hashingprovider",{"_index":770,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"injectables/SignInProvider.html":{}}}],["hasrole",{"_index":1857,"title":{},"body":{"guards/RolesGuard.html":{}}}],["hdfbwojefbnqpkfbjoqfehfewfeqwf234jr",{"_index":1783,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["hdfbwojefbnqpkfbjoqfehfewfeqwf234jr'})@isnotempty()@isstring",{"_index":1781,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["header",{"_index":76,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/InitiatePaymentProvider.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["headers",{"_index":48,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["headers('x",{"_index":1533,"title":{},"body":{"controllers/PaystackController.html":{}}}],["hello",{"_index":258,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":2335,"title":{},"body":{"index.html":{}}}],["here",{"_index":662,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"index.html":{}}}],["hive",{"_index":1284,"title":{},"body":{"injectables/MailService.html":{}}}],["hive's",{"_index":1306,"title":{},"body":{"injectables/MailService.html":{}}}],["host",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["httpcode",{"_index":370,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":1748,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["httpcode(httpstatus.ok",{"_index":406,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{}}}],["httpexception",{"_index":2156,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["httpexception('invalid",{"_index":2186,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["https://nestjs.com",{"_index":2362,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":371,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["httpstatus.bad_request",{"_index":2189,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["httpstatus.forbidden",{"_index":2187,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["id",{"_index":121,"title":{},"body":{"interfaces/ActiveUserData.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"entities/DeliveryState.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"injectables/OtpSigninProvider.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"injectables/SignInProvider.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["id'})@apiparam({name",{"_index":1704,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["id'})@apiresponse({status",{"_index":1703,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["id.provider",{"_index":2100,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["id.provider.ts",{"_index":1030,"title":{},"body":{"injectables/FindOneByIdProvider.html":{},"coverage.html":{}}}],["id.provider.ts:14",{"_index":1033,"title":{},"body":{"injectables/FindOneByIdProvider.html":{}}}],["id.provider.ts:32",{"_index":1035,"title":{},"body":{"injectables/FindOneByIdProvider.html":{}}}],["identifier",{"_index":1706,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["iloghaluagneskc@gmail.com",{"_index":399,"title":{},"body":{"controllers/AuthController.html":{}}}],["image",{"_index":641,"title":{},"body":{"injectables/CreateProductProvider.html":{},"entities/ProductVariant.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["image.entity",{"_index":604,"title":{},"body":{"injectables/CreateProductProvider.html":{},"modules/ProductImagesModule.html":{},"entities/ProductVariant.html":{}}}],["image.entity.ts",{"_index":1588,"title":{},"body":{"entities/ProductImage.html":{},"coverage.html":{}}}],["image.entity.ts:13",{"_index":1591,"title":{},"body":{"entities/ProductImage.html":{}}}],["image.entity.ts:16",{"_index":1592,"title":{},"body":{"entities/ProductImage.html":{}}}],["image.entity.ts:19",{"_index":1590,"title":{},"body":{"entities/ProductImage.html":{}}}],["image.entity.ts:25",{"_index":1596,"title":{},"body":{"entities/ProductImage.html":{}}}],["image.productvariant",{"_index":1609,"title":{},"body":{"entities/ProductVariant.html":{}}}],["image/jpeg",{"_index":2028,"title":{},"body":{"injectables/UploadsService.html":{}}}],["image/jpg'].includes(file.mimetype",{"_index":2030,"title":{},"body":{"injectables/UploadsService.html":{}}}],["image/png",{"_index":2029,"title":{},"body":{"injectables/UploadsService.html":{}}}],["imagepath",{"_index":647,"title":{},"body":{"injectables/CreateProductProvider.html":{},"entities/ProductImage.html":{}}}],["images",{"_index":596,"title":{},"body":{"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"entities/ProductVariant.html":{}}}],["images.module",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["images.module.ts",{"_index":1600,"title":{},"body":{"modules/ProductImagesModule.html":{}}}],["images.service",{"_index":1602,"title":{},"body":{"modules/ProductImagesModule.html":{}}}],["images.service.ts",{"_index":1605,"title":{},"body":{"injectables/ProductImagesService.html":{},"coverage.html":{}}}],["images/product",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"injectables/CreateProductProvider.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"entities/ProductVariant.html":{},"coverage.html":{}}}],["images/providers/product",{"_index":1604,"title":{},"body":{"injectables/ProductImagesService.html":{},"coverage.html":{}}}],["imgurl",{"_index":648,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["imgurls.map((imgurl",{"_index":645,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["implements",{"_index":65,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{},"guards/RolesGuard.html":{}}}],["import",{"_index":51,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["importation",{"_index":1235,"title":{},"body":{"modules/MailModule.html":{}}}],["importing",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["imports",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaymentModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["in')@auth(authtype.none)@httpcode(httpstatus.ok",{"_index":366,"title":{},"body":{"controllers/AuthController.html":{}}}],["in(productquery['category'].slice().split",{"_index":995,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["in(productquery['clothtype'].slice().split",{"_index":999,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["in(productquery['colors'].slice().split",{"_index":1006,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["in(productquery['dressstyle'].slice().split",{"_index":1001,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["in(productquery['sizes'].slice().split",{"_index":1008,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["in.dto",{"_index":375,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["in.dto.ts",{"_index":1860,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["in.dto.ts:19",{"_index":1861,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.dto.ts:30",{"_index":1862,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.provider",{"_index":430,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["in.provider.ts",{"_index":1865,"title":{},"body":{"injectables/SignInProvider.html":{},"coverage.html":{}}}],["in.provider.ts:17",{"_index":1867,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["in.provider.ts:42",{"_index":1868,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["indetifying",{"_index":85,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":2065,"title":{},"body":{"controllers/UsersController.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["inhjecting",{"_index":772,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["initialize",{"_index":1205,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initializepayment",{"_index":1139,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initializepayment(initiatepaymentdto",{"_index":1149,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initiate",{"_index":1553,"title":{},"body":{"injectables/PaystackService.html":{}}}],["initiatepayment",{"_index":1519,"title":{},"body":{"controllers/PaystackController.html":{},"injectables/PaystackService.html":{}}}],["initiatepayment(initiatepaymentdto",{"_index":1524,"title":{},"body":{"controllers/PaystackController.html":{},"injectables/PaystackService.html":{}}}],["initiatepaymentdto",{"_index":1123,"title":{"classes/InitiatePaymentDto.html":{}},"body":{"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"classes/ProductWithVariantDto.html":{},"coverage.html":{}}}],["initiatepaymentdto.deliveryaddress",{"_index":1172,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initiatepaymentdto.deliverypicker",{"_index":1176,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initiatepaymentdto.discountid",{"_index":1168,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initiatepaymentdto.products",{"_index":1180,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initiatepaymentprovider",{"_index":1135,"title":{"injectables/InitiatePaymentProvider.html":{}},"body":{"injectables/InitiatePaymentProvider.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"coverage.html":{},"overview.html":{}}}],["inject",{"_index":52,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"injectables/CreateUsersProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["inject(forwardref",{"_index":1790,"title":{},"body":{"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["inject(jwtconfig.key",{"_index":70,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["inject(paystackconfig.key",{"_index":1163,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["inject(request",{"_index":1415,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["injectable",{"_index":53,"title":{"injectables/AppService.html":{},"injectables/ApplyForDiscountProvider.html":{},"injectables/AuthService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/PaystackService.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}},"body":{"guards/AccessTokenGuard.html":{},"injectables/AppService.html":{},"injectables/ApplyForDiscountProvider.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/PaystackService.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["injectables",{"_index":255,"title":{},"body":{"injectables/AppService.html":{},"injectables/ApplyForDiscountProvider.html":{},"injectables/AuthService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/PaystackService.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"overview.html":{}}}],["injecting",{"_index":295,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["injectrepository",{"_index":290,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["injectrepository(deliverystate",{"_index":869,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["injectrepository(discount",{"_index":296,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{}}}],["injectrepository(discountusage",{"_index":961,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["injectrepository(product",{"_index":985,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["injectrepository(productvariant",{"_index":1639,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["injectrepository(review",{"_index":718,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/ReviewsService.html":{}}}],["injectrepository(subscriber",{"_index":1931,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["injectrepository(user",{"_index":517,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/UsersService.html":{}}}],["inlinecssenabled",{"_index":1257,"title":{},"body":{"modules/MailModule.html":{}}}],["inner",{"_index":1195,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["inorder",{"_index":1413,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["installcompile",{"_index":2299,"title":{},"body":{"index.html":{}}}],["instance",{"_index":501,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["int",{"_index":1806,"title":{},"body":{"entities/Review.html":{}}}],["int'})@check('\"stars",{"_index":1804,"title":{},"body":{"entities/Review.html":{}}}],["interact",{"_index":2332,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":784,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["intercept(context",{"_index":787,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["interceptor",{"_index":783,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"controllers/ProductsController.html":{}}}],["interface",{"_index":111,"title":{"interfaces/ActiveUserData.html":{},"interfaces/Paginated.html":{}},"body":{"interfaces/ActiveUserData.html":{},"interfaces/Paginated.html":{},"coverage.html":{}}}],["interfaces",{"_index":113,"title":{},"body":{"interfaces/ActiveUserData.html":{},"interfaces/Paginated.html":{},"overview.html":{}}}],["interfaces/active",{"_index":1074,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["interfaces/paginated.interface",{"_index":1414,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["intersectiontype",{"_index":1109,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["invalid",{"_index":402,"title":{},"body":{"controllers/AuthController.html":{}}}],["inversejoincolumn",{"_index":1333,"title":{},"body":{"entities/Order.html":{},"entities/Payment.html":{}}}],["isarray",{"_index":579,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/PatchProductDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["isarray()@isnotempty()@validatenested({each",{"_index":575,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["isarray()@isoptional",{"_index":1461,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["isboolean",{"_index":1470,"title":{},"body":{"classes/PatchProductVariantDto.html":{}}}],["isboolean()@isoptional",{"_index":1467,"title":{},"body":{"classes/PatchProductVariantDto.html":{}}}],["isdate",{"_index":539,"title":{},"body":{"classes/CreateDiscountDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["isdate()@isnotempty",{"_index":537,"title":{},"body":{"classes/CreateDiscountDto.html":{}}}],["isdate()@isoptional",{"_index":1119,"title":{},"body":{"classes/GetUsersBaseDto.html":{}}}],["isemail",{"_index":746,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["isenum",{"_index":756,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["isenum(role",{"_index":761,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["isglobal",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":532,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/OtpSigninDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchUserDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["isint()@isnotempty",{"_index":529,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["isint()@isnotempty()@min(1",{"_index":679,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{}}}],["isint()@isoptional",{"_index":1458,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["isnotempty",{"_index":267,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/OtpSigninDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{}}}],["isoptional",{"_index":682,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["isoptional()@isarray()@validatenested({each",{"_index":677,"title":{},"body":{"classes/CreateProductVariantDto.html":{}}}],["isoptional()@isint",{"_index":1487,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["isoptional()@ispositive",{"_index":1445,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["isoptional()@isstring",{"_index":1480,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["ispositive",{"_index":1447,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["isstring",{"_index":268,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/RefreshTokenDto.html":{}}}],["isstring()@isnotempty",{"_index":265,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["isstring()@isoptional",{"_index":1098,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{}}}],["issuer",{"_index":1078,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["item",{"_index":1688,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{}}}],["items",{"_index":1417,"title":{},"body":{"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{}}}],["itemsperpage",{"_index":1390,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["iterate",{"_index":1179,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["jbfwihfubfjkebiejhfbw",{"_index":414,"title":{},"body":{"controllers/AuthController.html":{}}}],["job",{"_index":2343,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":2345,"title":{},"body":{"index.html":{}}}],["joi",{"_index":2257,"title":{},"body":{"dependencies.html":{}}}],["join",{"_index":1004,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"modules/MailModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":1254,"title":{},"body":{"modules/MailModule.html":{}}}],["joincolumn",{"_index":906,"title":{},"body":{"entities/DiscountUsage.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{}}}],["jointable",{"_index":1339,"title":{},"body":{"entities/Order.html":{},"entities/Payment.html":{}}}],["jsbfiwhvfquobdfj",{"_index":396,"title":{},"body":{"controllers/AuthController.html":{}}}],["jwt",{"_index":68,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["jwtconfig",{"_index":59,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["jwtconfiguration",{"_index":21,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["jwtmodule",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtmodule.registerasync(jwtconfig.asprovider",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtservice",{"_index":20,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["kamil",{"_index":2359,"title":{},"body":{"index.html":{}}}],["key",{"_index":606,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/FindAllProductsProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UploadToAwsProvider.html":{}}}],["keyof",{"_index":2388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keyword",{"_index":476,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["kobo",{"_index":1213,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["last",{"_index":1395,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["lastname",{"_index":2038,"title":{},"body":{"entities/User.html":{}}}],["lasttname",{"_index":1476,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["later",{"_index":316,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["learn",{"_index":2317,"title":{},"body":{"index.html":{}}}],["legend",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":1730,"title":{},"body":{"controllers/ProductsController.html":{},"entities/Subscriber.html":{},"entities/User.html":{}}}],["lessthanorequal",{"_index":286,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["lessthanorequal(new",{"_index":306,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["let's",{"_index":1288,"title":{},"body":{"injectables/MailService.html":{}}}],["level",{"_index":1944,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["license",{"_index":2365,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":2348,"title":{},"body":{"index.html":{}}}],["like(`%${productquery['name'].slice().split",{"_index":1003,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["limit",{"_index":963,"title":{},"body":{"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"classes/PaginationQueryDto.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["line",{"_index":95,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["linkedin",{"_index":2341,"title":{},"body":{"index.html":{}}}],["links",{"_index":1385,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["list",{"_index":978,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["literal",{"_index":597,"title":{},"body":{"injectables/CreateProductProvider.html":{},"interfaces/Paginated.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["load",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["lock",{"_index":1648,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["logged",{"_index":116,"title":{},"body":{"interfaces/ActiveUserData.html":{},"guards/AuthenticationGuard.html":{}}}],["logging",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":343,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/MailService.html":{},"injectables/UsersService.html":{}}}],["longdescription",{"_index":559,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["longer",{"_index":1059,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["looking",{"_index":2342,"title":{},"body":{"index.html":{}}}],["loop",{"_index":498,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"index.html":{}}}],["mail",{"_index":1236,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/SignInProvider.html":{},"injectables/SubscribersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["mail/mail.module",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["mailer",{"_index":1240,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["mailermodule",{"_index":1229,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":1237,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":1265,"title":{},"body":{"injectables/MailService.html":{}}}],["mailmodule",{"_index":149,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules/SubscribersModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":771,"title":{"injectables/MailService.html":{}},"body":{"injectables/CreateUsersProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/SignInProvider.html":{},"injectables/SubscribersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"overview.html":{}}}],["makes",{"_index":484,"title":{},"body":{"guards/AuthenticationGuard.html":{},"modules/MailModule.html":{}}}],["manager",{"_index":1632,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["manager.save(variant",{"_index":1672,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["manually",{"_index":1969,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["many",{"_index":301,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsService.html":{}}}],["manytomany",{"_index":1340,"title":{},"body":{"entities/Order.html":{},"entities/Payment.html":{}}}],["manytomany(undefined)@jointable({name",{"_index":1331,"title":{},"body":{"entities/Order.html":{},"entities/Payment.html":{}}}],["manytoone",{"_index":907,"title":{},"body":{"entities/DiscountUsage.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{}}}],["manytoone(undefined",{"_index":894,"title":{},"body":{"entities/DiscountUsage.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{}}}],["map",{"_index":479,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["map((data",{"_index":798,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["map((imgurls",{"_index":643,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["map((prd",{"_index":1188,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["map((vr",{"_index":1197,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["matching",{"_index":110,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["material",{"_index":560,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["math.ceil(totalitems",{"_index":1433,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["max",{"_index":701,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["max(5",{"_index":703,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["maxcount",{"_index":1732,"title":{},"body":{"controllers/ProductsController.html":{}}}],["maxlength",{"_index":747,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["maxlength(96",{"_index":749,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["means",{"_index":472,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["meets",{"_index":1845,"title":{},"body":{"guards/RolesGuard.html":{}}}],["message",{"_index":409,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateReviewDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["meta",{"_index":1386,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["metadata",{"_index":486,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/InitiatePaymentProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"dependencies.html":{}}}],["method",{"_index":489,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{}}}],["methods",{"_index":13,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["mimetype",{"_index":2027,"title":{},"body":{"injectables/UploadsService.html":{}}}],["min",{"_index":683,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{}}}],["min(1",{"_index":684,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{}}}],["miscellaneous",{"_index":2266,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":403,"title":{},"body":{"controllers/AuthController.html":{}}}],["mit",{"_index":2347,"title":{},"body":{"index.html":{}}}],["mode",{"_index":2302,"title":{},"body":{"index.html":{}}}],["module",{"_index":133,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaymentModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaymentModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["modules",{"_index":135,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaymentModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":1231,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/ejs.adapter",{"_index":1234,"title":{},"body":{"modules/MailModule.html":{}}}],["moment",{"_index":314,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["more",{"_index":2318,"title":{},"body":{"index.html":{}}}],["morethan",{"_index":1054,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["morethan(new",{"_index":1056,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["morethanorequal",{"_index":287,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["morethanorequal(new",{"_index":309,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["myśliwiec",{"_index":2360,"title":{},"body":{"index.html":{}}}],["name",{"_index":27,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PatchProductDto.html":{},"entities/Payment.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["name.replace(/|s/g",{"_index":2005,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["need",{"_index":1238,"title":{},"body":{"modules/MailModule.html":{},"index.html":{}}}],["nest",{"_index":2285,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["nested",{"_index":1010,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["nestframework",{"_index":2364,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":794,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["nestjs",{"_index":1230,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/common",{"_index":55,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":56,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"modules/PaystackModule.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/VerifyPaymentProvider.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/PaginationProvider.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":57,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1469,"title":{},"body":{"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/UpdateDeliveryStateDto.html":{}}}],["nestjs/platform",{"_index":1723,"title":{},"body":{"controllers/ProductsController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":388,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/OtpSigninDto.html":{},"controllers/ProductsController.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplyForDiscountProvider.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"modules/OrdersModule.html":{},"modules/PaymentModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":79,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["newreview",{"_index":723,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newreview.datecreated",{"_index":734,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newreview.id",{"_index":729,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newreview.product.id",{"_index":735,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newreview.review",{"_index":732,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newreview.reviewer",{"_index":730,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newreview.stars",{"_index":731,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newsletter",{"_index":1277,"title":{},"body":{"injectables/MailService.html":{},"injectables/SubscribersService.html":{}}}],["newurl",{"_index":1429,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?limit=${paginationquery.limit}&page=${nextpage",{"_index":1440,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?limit=${paginationquery.limit}&page=${paginationquery.page",{"_index":1439,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?limit=${paginationquery.limit}&page=${prevpage",{"_index":1441,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?limit=${paginationquery.limit}&page=${totalpages",{"_index":1438,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?limit=${paginationquery.limit}&page=1",{"_index":1437,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newuser",{"_index":773,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["newuser.email",{"_index":777,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["newuser.id",{"_index":776,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["newuser.role",{"_index":778,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["newuserobj",{"_index":518,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{}}}],["next",{"_index":94,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["next.handle().pipe",{"_index":797,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["nextpage",{"_index":1434,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["nich",{"_index":1250,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["node.js",{"_index":2288,"title":{},"body":{"index.html":{}}}],["none",{"_index":2274,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notfoundexception",{"_index":979,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{}}}],["notfoundexception(`product",{"_index":1776,"title":{},"body":{"injectables/ProductsService.html":{}}}],["notfoundexception(error",{"_index":1026,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["npm",{"_index":2298,"title":{},"body":{"index.html":{}}}],["null",{"_index":328,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/UsersService.html":{}}}],["nullable",{"_index":888,"title":{},"body":{"entities/Discount.html":{},"entities/DiscountUsage.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Subscriber.html":{},"entities/User.html":{}}}],["number",{"_index":528,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"entities/DeliveryState.html":{},"entities/Discount.html":{},"injectables/GenerateTokensProvider.html":{},"classes/InitiatePaymentDto.html":{},"entities/Order.html":{},"classes/OtpSigninDto.html":{},"interfaces/Paginated.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["obj",{"_index":546,"title":{},"body":{"injectables/CreateDiscountProvider.html":{}}}],["object",{"_index":941,"title":{},"body":{"injectables/DiscountsService.html":{},"injectables/GenerateTokensProvider.html":{}}}],["object.entries(conditions).filter(([_",{"_index":1016,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["object.entries(images).foreach",{"_index":623,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["object.fromentries",{"_index":1015,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["object.keys(productquery).foreach((key",{"_index":991,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["object.keys(whereoptions).length",{"_index":1020,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["objectliteral",{"_index":1412,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["observable",{"_index":467,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{}}}],["offer",{"_index":2344,"title":{},"body":{"index.html":{}}}],["official",{"_index":2326,"title":{},"body":{"index.html":{}}}],["ondelete",{"_index":1594,"title":{},"body":{"entities/ProductImage.html":{},"entities/ProductVariant.html":{}}}],["one",{"_index":1029,"title":{},"body":{"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/PaginationProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["onetomany",{"_index":1579,"title":{},"body":{"entities/Product.html":{},"entities/ProductVariant.html":{}}}],["onetomany(undefined",{"_index":1569,"title":{},"body":{"entities/Product.html":{},"entities/ProductVariant.html":{}}}],["onetoone",{"_index":908,"title":{},"body":{"entities/DiscountUsage.html":{},"entities/Order.html":{}}}],["onetoone(undefined",{"_index":897,"title":{},"body":{"entities/DiscountUsage.html":{},"entities/Order.html":{}}}],["open",{"_index":2349,"title":{},"body":{"index.html":{}}}],["optional",{"_index":29,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["options",{"_index":1021,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"modules/MailModule.html":{},"injectables/PaginationProvider.html":{}}}],["options.relations",{"_index":1422,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["options.select",{"_index":1423,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["options.where",{"_index":1424,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["order",{"_index":892,"title":{"entities/Order.html":{}},"body":{"entities/DiscountUsage.html":{},"entities/Order.html":{},"modules/OrdersModule.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["order.discountapplied",{"_index":2175,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["order.discountusage",{"_index":898,"title":{},"body":{"entities/DiscountUsage.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["order.entity",{"_index":1356,"title":{},"body":{"modules/OrdersModule.html":{}}}],["orderid",{"_index":1344,"title":{},"body":{"entities/Order.html":{}}}],["orders",{"_index":1348,"title":{},"body":{"controllers/OrdersController.html":{}}}],["orders.controller",{"_index":1354,"title":{},"body":{"modules/OrdersModule.html":{}}}],["orders/orders.module",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["orders_products",{"_index":1332,"title":{},"body":{"entities/Order.html":{}}}],["orderscontroller",{"_index":1346,"title":{"controllers/OrdersController.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"coverage.html":{}}}],["ordersmodule",{"_index":150,"title":{"modules/OrdersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"modules.html":{},"overview.html":{}}}],["ordersservice",{"_index":1352,"title":{"injectables/OrdersService.html":{}},"body":{"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"overview.html":{}}}],["orderstatus",{"_index":1315,"title":{},"body":{"entities/Order.html":{},"miscellaneous/enumerations.html":{}}}],["orderstatus.placed",{"_index":1343,"title":{},"body":{"entities/Order.html":{}}}],["otp",{"_index":347,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["otp'})@apiresponse({status",{"_index":341,"title":{},"body":{"controllers/AuthController.html":{}}}],["otp.tostring",{"_index":1883,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["otpexpire",{"_index":519,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/User.html":{}}}],["otpsignin",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["otpsignin(@body",{"_index":412,"title":{},"body":{"controllers/AuthController.html":{}}}],["otpsignin(otpsignindto",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["otpsignindto",{"_index":338,"title":{"classes/OtpSigninDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"coverage.html":{}}}],["otpsigninprovider",{"_index":422,"title":{"injectables/OtpSigninProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/OtpSigninProvider.html":{},"coverage.html":{},"overview.html":{}}}],["out",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":2369,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":2240,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":989,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"classes/PaginationQueryDto.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["pages",{"_index":1389,"title":{},"body":{"interfaces/Paginated.html":{}}}],["paginated",{"_index":977,"title":{"interfaces/Paginated.html":{}},"body":{"injectables/FindAllProductsProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["paginated'})@apiquery({name",{"_index":1693,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["paginating",{"_index":1410,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["pagination",{"_index":986,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"injectables/UsersService.html":{}}}],["paginationmodule",{"_index":1398,"title":{"modules/PaginationModule.html":{}},"body":{"modules/PaginationModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["paginationprovider",{"_index":970,"title":{"injectables/PaginationProvider.html":{}},"body":{"injectables/FindAllProductsProvider.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["paginationquery",{"_index":1405,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["paginationquery(paginationquery",{"_index":1408,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["paginationquery.limit",{"_index":1420,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["paginationquery.page",{"_index":1419,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["paginationquerydto",{"_index":1110,"title":{"classes/PaginationQueryDto.html":{}},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"coverage.html":{}}}],["param",{"_index":66,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/MailService.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"miscellaneous/variables.html":{}}}],["param('productid",{"_index":1744,"title":{},"body":{"controllers/ProductsController.html":{}}}],["param('reviewid",{"_index":1823,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["param('stateid",{"_index":851,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["parsefloat(productquery['price'].slice().split",{"_index":997,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["part",{"_index":2336,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":1463,"title":{},"body":{"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/UpdateDeliveryStateDto.html":{}}}],["partialtype(createuserdto",{"_index":1473,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["particular",{"_index":1710,"title":{},"body":{"controllers/ProductsController.html":{}}}],["pass",{"_index":1248,"title":{},"body":{"modules/MailModule.html":{}}}],["passing",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["password",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{}}}],["password'})@apiresponse({status",{"_index":364,"title":{},"body":{"controllers/AuthController.html":{}}}],["password1",{"_index":400,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch",{"_index":372,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["patch('/:productid",{"_index":1743,"title":{},"body":{"controllers/ProductsController.html":{}}}],["patch('/:productid')@roles(role.admin",{"_index":1713,"title":{},"body":{"controllers/ProductsController.html":{}}}],["patch('/:stateid",{"_index":850,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["patch('/otp",{"_index":411,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch()@roles(role.user",{"_index":2075,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchproduct",{"_index":1681,"title":{},"body":{"controllers/ProductsController.html":{}}}],["patchproduct(productid",{"_index":1712,"title":{},"body":{"controllers/ProductsController.html":{}}}],["patchproductdto",{"_index":1448,"title":{"classes/PatchProductDto.html":{}},"body":{"classes/PatchProductDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{},"coverage.html":{}}}],["patchproductdto.brand",{"_index":1961,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.category",{"_index":1953,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.clothtype",{"_index":1957,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.discount",{"_index":1951,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.dressstyle",{"_index":1955,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.material",{"_index":1959,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.name",{"_index":1947,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.price",{"_index":1949,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.variants",{"_index":1964,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.variants.length",{"_index":1965,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductvariantdto",{"_index":1133,"title":{"classes/PatchProductVariantDto.html":{}},"body":{"classes/InitiatePaymentDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/ProductWithVariantDto.html":{},"coverage.html":{}}}],["patchuserdto",{"_index":1471,"title":{"classes/PatchUserDto.html":{}},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["patchusers",{"_index":2058,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchusers(patchuserdto",{"_index":2074,"title":{},"body":{"controllers/UsersController.html":{}}}],["path",{"_index":1232,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/UploadToAwsProvider.html":{}}}],["path.extname(file.originalname",{"_index":2008,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["path.join(root_path",{"_index":1291,"title":{},"body":{"injectables/MailService.html":{}}}],["payload",{"_index":83,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"injectables/GenerateTokensProvider.html":{}}}],["payment",{"_index":1157,"title":{"entities/Payment.html":{}},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["payment')@roles(role.user",{"_index":1526,"title":{},"body":{"controllers/PaystackController.html":{}}}],["payment.controller",{"_index":1514,"title":{},"body":{"modules/PaymentModule.html":{}}}],["payment.dto",{"_index":1152,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{}}}],["payment.dto.ts",{"_index":1125,"title":{},"body":{"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{},"coverage.html":{}}}],["payment.dto.ts:17",{"_index":1674,"title":{},"body":{"classes/ProductWithVariantDto.html":{}}}],["payment.dto.ts:21",{"_index":1673,"title":{},"body":{"classes/ProductWithVariantDto.html":{}}}],["payment.dto.ts:27",{"_index":1675,"title":{},"body":{"classes/ProductWithVariantDto.html":{}}}],["payment.dto.ts:33",{"_index":1129,"title":{},"body":{"classes/InitiatePaymentDto.html":{}}}],["payment.dto.ts:37",{"_index":1128,"title":{},"body":{"classes/InitiatePaymentDto.html":{}}}],["payment.dto.ts:41",{"_index":1130,"title":{},"body":{"classes/InitiatePaymentDto.html":{}}}],["payment.dto.ts:47",{"_index":1132,"title":{},"body":{"classes/InitiatePaymentDto.html":{}}}],["payment.entity",{"_index":1513,"title":{},"body":{"modules/PaymentModule.html":{}}}],["payment.provider",{"_index":1542,"title":{},"body":{"modules/PaystackModule.html":{},"injectables/PaystackService.html":{}}}],["payment.provider.ts",{"_index":1137,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["payment.provider.ts:206",{"_index":2148,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["payment.provider.ts:21",{"_index":1143,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["payment.provider.ts:23",{"_index":2145,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["payment.provider.ts:54",{"_index":1145,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["payment.provider.ts:56",{"_index":2146,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["payment.provider.ts:58",{"_index":1150,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["payment.provider.ts:65",{"_index":2154,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["payment.status",{"_index":2168,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["payment/payment.module",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["payment_variants",{"_index":1504,"title":{},"body":{"entities/Payment.html":{}}}],["paymentcontroller",{"_index":1509,"title":{"controllers/PaymentController.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"coverage.html":{}}}],["paymentdata",{"_index":2190,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["paymentdata.data.status",{"_index":2193,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["paymentid",{"_index":1508,"title":{},"body":{"entities/Payment.html":{}}}],["paymentmodule",{"_index":151,"title":{"modules/PaymentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaymentModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentstatus",{"_index":1159,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{},"injectables/VerifyPaymentProvider.html":{},"miscellaneous/enumerations.html":{}}}],["paymentstatus.failed",{"_index":2178,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["paymentstatus.pending",{"_index":1219,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{}}}],["paymentstatus.success",{"_index":2169,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["paymentwebhook",{"_index":2144,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["paymentwebhook(body",{"_index":2147,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["paymet",{"_index":2180,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["pays",{"_index":2151,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["paystack",{"_index":1148,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["paystack.controller",{"_index":1540,"title":{},"body":{"modules/PaystackModule.html":{}}}],["paystack/paystack.module",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["paystackconfig",{"_index":1153,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"modules/PaystackModule.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["paystackconfiguration",{"_index":1144,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["paystackcontroller",{"_index":1516,"title":{"controllers/PaystackController.html":{}},"body":{"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"coverage.html":{}}}],["paystackmodule",{"_index":152,"title":{"modules/PaystackModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaystackModule.html":{},"modules.html":{},"overview.html":{}}}],["paystackservice",{"_index":1528,"title":{"injectables/PaystackService.html":{}},"body":{"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"coverage.html":{},"overview.html":{}}}],["pending",{"_index":2281,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["per",{"_index":1695,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["percentoff",{"_index":535,"title":{},"body":{"classes/CreateDiscountDto.html":{},"entities/Discount.html":{}}}],["permission",{"_index":1859,"title":{},"body":{"guards/RolesGuard.html":{}}}],["pessimistic",{"_index":1647,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["pg",{"_index":2259,"title":{},"body":{"dependencies.html":{}}}],["phonenumber",{"_index":1477,"title":{},"body":{"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["placed",{"_index":2276,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["please",{"_index":315,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["port",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["position",{"_index":1697,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["positive",{"_index":1671,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["post",{"_index":373,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["post('')@auth(authtype.none",{"_index":1811,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["post('/apply",{"_index":923,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["post('/apply')@roles(role.user)@httpcode(httpstatus.ok",{"_index":911,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["post('/initiate",{"_index":1525,"title":{},"body":{"controllers/PaystackController.html":{}}}],["post('/sign",{"_index":404,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/webhook",{"_index":1532,"title":{},"body":{"controllers/PaystackController.html":{}}}],["post('/webhook')@auth(authtype.none)@httpcode(httpstatus.ok",{"_index":1522,"title":{},"body":{"controllers/PaystackController.html":{}}}],["post('refresh",{"_index":415,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@roles(role.admin",{"_index":823,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{}}}],["postgres",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["prd",{"_index":1940,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["prd.price",{"_index":1202,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["prd.productid",{"_index":2161,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["prd.variants",{"_index":1189,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["prdid",{"_index":2162,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["prdsdb",{"_index":2160,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["prdvariants",{"_index":1187,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["precision",{"_index":1490,"title":{},"body":{"entities/Payment.html":{},"entities/Product.html":{}}}],["prefix",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["prevent",{"_index":1649,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["previous",{"_index":1397,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["prevpage",{"_index":1435,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["price",{"_index":561,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{},"classes/ProductWithVariantDto.html":{}}}],["primarygeneratedcolumn",{"_index":812,"title":{},"body":{"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":807,"title":{},"body":{"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/User.html":{}}}],["private",{"_index":16,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["process",{"_index":313,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["process.cwd",{"_index":2399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["processed",{"_index":2195,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["processing",{"_index":2277,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["product",{"_index":196,"title":{"entities/Product.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"injectables/CreateReviewProvider.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"entities/Product.html":{},"modules/ProductImagesModule.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["product(s",{"_index":1298,"title":{},"body":{"injectables/MailService.html":{}}}],["product.brand",{"_index":1962,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.category",{"_index":1954,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.clothtype",{"_index":1958,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.discount",{"_index":1952,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.dressstyle",{"_index":1956,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.dto",{"_index":981,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["product.dto.ts",{"_index":1093,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/PatchProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:11",{"_index":1457,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:14",{"_index":1106,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:15",{"_index":1459,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:19",{"_index":1453,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:21",{"_index":1099,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:23",{"_index":1451,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:27",{"_index":1454,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:28",{"_index":1100,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:31",{"_index":1452,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:35",{"_index":1107,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/PatchProductDto.html":{}}}],["product.dto.ts:39",{"_index":1450,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:42",{"_index":1102,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:43",{"_index":1460,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:47",{"_index":1456,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:49",{"_index":1108,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:51",{"_index":1462,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:56",{"_index":1103,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:7",{"_index":1455,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.entity",{"_index":600,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/FindAllProductsProvider.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["product.id",{"_index":1968,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.material",{"_index":1960,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.name",{"_index":1948,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.price",{"_index":1950,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.provider",{"_index":1757,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["product.provider.ts",{"_index":589,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/UpdateProductProvider.html":{},"coverage.html":{}}}],["product.provider.ts:13",{"_index":1938,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.provider.ts:14",{"_index":594,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["product.provider.ts:27",{"_index":1939,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.provider.ts:33",{"_index":598,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["product.reviews",{"_index":1799,"title":{},"body":{"entities/Review.html":{}}}],["product.variants",{"_index":1611,"title":{},"body":{"entities/ProductVariant.html":{}}}],["productclothtype",{"_index":1101,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["productid",{"_index":688,"title":{},"body":{"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/Order.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["productimage",{"_index":603,"title":{"entities/ProductImage.html":{}},"body":{"injectables/CreateProductProvider.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"entities/ProductVariant.html":{},"coverage.html":{}}}],["productimages",{"_index":642,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["productimages.map(async",{"_index":652,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["productimagesmodule",{"_index":153,"title":{"modules/ProductImagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductImagesModule.html":{},"modules.html":{},"overview.html":{}}}],["productimagesservice",{"_index":1599,"title":{"injectables/ProductImagesService.html":{}},"body":{"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"coverage.html":{},"overview.html":{}}}],["production",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["productquery",{"_index":976,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["productquery['category",{"_index":994,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['clothtype",{"_index":998,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['colors",{"_index":1005,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['dressstyle",{"_index":1000,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['name",{"_index":1002,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['price",{"_index":996,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['sizes",{"_index":1007,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery[key",{"_index":992,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productrepository",{"_index":972,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["products",{"_index":719,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["products.controller",{"_index":1756,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.provider",{"_index":1761,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["products.provider.ts",{"_index":967,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"coverage.html":{}}}],["products.provider.ts:10",{"_index":971,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["products.provider.ts:29",{"_index":975,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["products/products.module",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["productscontroller",{"_index":1676,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsmodule",{"_index":155,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaystackModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsservice",{"_index":709,"title":{"injectables/ProductsService.html":{}},"body":{"injectables/CreateReviewProvider.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"overview.html":{}}}],["productupdated",{"_index":1946,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["productvariant",{"_index":574,"title":{"entities/ProductVariant.html":{}},"body":{"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"coverage.html":{}}}],["productvariantrepository",{"_index":1628,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["productvariantsmodule",{"_index":154,"title":{"modules/ProductVariantsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaystackModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productvariantsservice",{"_index":1142,"title":{"injectables/ProductVariantsService.html":{}},"body":{"injectables/InitiatePaymentProvider.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"overview.html":{}}}],["productwithvariantdto",{"_index":1131,"title":{"classes/ProductWithVariantDto.html":{}},"body":{"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{},"coverage.html":{}}}],["progressive",{"_index":2287,"title":{},"body":{"index.html":{}}}],["project",{"_index":2296,"title":{},"body":{"index.html":{}}}],["promise",{"_index":38,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DiscountsService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/MailService.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["promise.all",{"_index":1082,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["promise.resolve(instance.canactivate(context",{"_index":502,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["properties",{"_index":117,"title":{"properties.html":{}},"body":{"interfaces/ActiveUserData.html":{},"classes/ApplyForDiscountDto.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/InitiatePaymentDto.html":{},"entities/Order.html":{},"classes/OtpSigninDto.html":{},"interfaces/Paginated.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"classes/ProductWithVariantDto.html":{},"classes/RefreshTokenDto.html":{},"entities/Review.html":{},"classes/SignInDto.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"properties.html":{}}}],["property",{"_index":474,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["provide",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":1945,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["provider",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/DiscountsService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"entities/Payment.html":{},"injectables/PaystackService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}}}],["providerreference",{"_index":1217,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["providers",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers/apply",{"_index":932,"title":{},"body":{"modules/DiscountsModule.html":{}}}],["providers/auth.service",{"_index":377,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["providers/clear",{"_index":2101,"title":{},"body":{"modules/UsersModule.html":{}}}],["providers/create",{"_index":934,"title":{},"body":{"modules/DiscountsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/UsersModule.html":{}}}],["providers/delivery",{"_index":835,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{}}}],["providers/discounts",{"_index":949,"title":{},"body":{"modules/DiscountsUsageModule.html":{}}}],["providers/discounts.service",{"_index":915,"title":{},"body":{"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{}}}],["providers/find",{"_index":1760,"title":{},"body":{"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["providers/generate",{"_index":431,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/initiate",{"_index":1541,"title":{},"body":{"modules/PaystackModule.html":{}}}],["providers/mail.service",{"_index":1228,"title":{},"body":{"modules/MailModule.html":{}}}],["providers/orders.service",{"_index":1355,"title":{},"body":{"modules/OrdersModule.html":{}}}],["providers/otp",{"_index":436,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/pagination.provider",{"_index":1403,"title":{},"body":{"modules/PaginationModule.html":{}}}],["providers/paystack.service",{"_index":1529,"title":{},"body":{"controllers/PaystackController.html":{},"modules/PaystackModule.html":{}}}],["providers/product",{"_index":1601,"title":{},"body":{"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{}}}],["providers/products.service",{"_index":1724,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{}}}],["providers/refresh",{"_index":434,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/reviews.service",{"_index":1818,"title":{},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{}}}],["providers/sign",{"_index":429,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/store",{"_index":2097,"title":{},"body":{"modules/UsersModule.html":{}}}],["providers/subscribers.service",{"_index":1911,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["providers/update",{"_index":1762,"title":{},"body":{"modules/ProductsModule.html":{}}}],["providers/upload",{"_index":2017,"title":{},"body":{"modules/UploadsModule.html":{}}}],["providers/uploads.service",{"_index":2016,"title":{},"body":{"modules/UploadsModule.html":{}}}],["providers/users.service",{"_index":2077,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["providers/verify",{"_index":1544,"title":{},"body":{"modules/PaystackModule.html":{}}}],["prvariant",{"_index":636,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["public",{"_index":273,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["purchase",{"_index":1299,"title":{},"body":{"injectables/MailService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["quantity",{"_index":674,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queries",{"_index":987,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["query",{"_index":609,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["query.dto",{"_index":1112,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"injectables/PaginationProvider.html":{}}}],["query.dto.ts",{"_index":1442,"title":{},"body":{"classes/PaginationQueryDto.html":{},"coverage.html":{}}}],["query.dto.ts:12",{"_index":1443,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["query.dto.ts:19",{"_index":1446,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["queryrunner",{"_index":612,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.committransaction",{"_index":659,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.connect",{"_index":615,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.manager",{"_index":1186,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.manager.create(product",{"_index":618,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.manager.create(productimage",{"_index":646,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.manager.create(productvariant",{"_index":637,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.manager.findone(discount",{"_index":1169,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["queryrunner.manager.findone(payment",{"_index":2164,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.manager.save(discountusage",{"_index":2173,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.manager.save(image",{"_index":653,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.manager.save(order",{"_index":2171,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.manager.save(payment",{"_index":1215,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.manager.save(product",{"_index":620,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.manager.save(prvariant",{"_index":639,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.release",{"_index":671,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.rollbacktransaction",{"_index":663,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.starttransaction",{"_index":616,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["questions",{"_index":2319,"title":{},"body":{"index.html":{}}}],["randomint",{"_index":1869,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["randomint(1000",{"_index":1877,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["rating",{"_index":695,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["read",{"_index":2356,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":67,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["real",{"_index":2333,"title":{},"body":{"index.html":{}}}],["record",{"_index":481,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["reduce((acc",{"_index":1199,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["reference",{"_index":2152,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["referencedcolumnname",{"_index":1345,"title":{},"body":{"entities/Order.html":{},"entities/Payment.html":{}}}],["reflect",{"_index":2261,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":463,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["refresh",{"_index":355,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["refreshing",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":397,"title":{},"body":{"controllers/AuthController.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"classes/RefreshTokenDto.html":{}}}],["refreshtokendto",{"_index":353,"title":{"classes/RefreshTokenDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"coverage.html":{}}}],["refreshtokendto.refreshtoken",{"_index":1792,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["refreshtokenprovider",{"_index":423,"title":{"injectables/RefreshTokenProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenProvider.html":{},"coverage.html":{},"overview.html":{}}}],["refreshtokens",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenProvider.html":{}}}],["refreshtokens(@body",{"_index":416,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokens(refreshtokendto",{"_index":352,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenProvider.html":{}}}],["regenerate",{"_index":2183,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["registering",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["rejectunauthorized",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["relations",{"_index":1022,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["release",{"_index":670,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["relsease",{"_index":668,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["remove",{"_index":1009,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/UploadToAwsProvider.html":{}}}],["repository",{"_index":276,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["repository.count",{"_index":1432,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["repository.find",{"_index":1416,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["req",{"_index":104,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["request",{"_index":45,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"miscellaneous/variables.html":{}}}],["request.headers.authorization?.split",{"_index":108,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["request.user",{"_index":90,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["request[request_user_key",{"_index":91,"title":{},"body":{"guards/AccessTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["request_user_key",{"_index":61,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":1662,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["requests",{"_index":1444,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["requesttimeoutexception",{"_index":285,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["requesttimeoutexception('could",{"_index":617,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["requesttimeoutexception(err",{"_index":875,"title":{},"body":{"injectables/DeliveryStatesService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["requesttimeoutexception(error",{"_index":521,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UsersService.html":{}}}],["required",{"_index":348,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["requiredroles",{"_index":1853,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.some((role",{"_index":1858,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requirements",{"_index":1846,"title":{},"body":{"guards/RolesGuard.html":{}}}],["reserve",{"_index":1667,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["reset",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/OrdersModule.html":{},"classes/OtpSigninDto.html":{},"modules/PaginationModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["resetexpires",{"_index":1892,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["resetpassworddto",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpasswordprovider",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetting",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["resfresh",{"_index":1786,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["resource",{"_index":870,"title":{},"body":{"injectables/DeliveryStatesService.html":{},"guards/RolesGuard.html":{}}}],["resources",{"_index":2312,"title":{},"body":{"index.html":{}}}],["response",{"_index":782,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"injectables/InitiatePaymentProvider.html":{},"interfaces/Paginated.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["response.data",{"_index":1222,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["response.data.data.authorization_url",{"_index":1221,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["response.data.data.metadata",{"_index":2159,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["response.data.data.reference",{"_index":1218,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["response.data.data.status",{"_index":2166,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["response.interceptor",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["response.interceptor.ts",{"_index":780,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"coverage.html":{}}}],["response.interceptor.ts:14",{"_index":786,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["response.interceptor.ts:32",{"_index":789,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["response/data",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataResponseInterceptor.html":{},"coverage.html":{}}}],["restore",{"_index":1669,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["results",{"_index":109,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["return",{"_index":107,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":1387,"title":{},"body":{"interfaces/Paginated.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["returns",{"_index":37,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["review",{"_index":689,"title":{"entities/Review.html":{}},"body":{"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"entities/Product.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"coverage.html":{}}}],["review.dto",{"_index":714,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["review.dto.ts",{"_index":687,"title":{},"body":{"classes/CreateReviewDto.html":{},"coverage.html":{}}}],["review.dto.ts:12",{"_index":700,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.dto.ts:16",{"_index":693,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.dto.ts:20",{"_index":692,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.dto.ts:6",{"_index":694,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.product",{"_index":1570,"title":{},"body":{"entities/Product.html":{}}}],["review.provider",{"_index":1830,"title":{},"body":{"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{}}}],["review.provider.ts",{"_index":706,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"coverage.html":{}}}],["review.provider.ts:29",{"_index":713,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["review.provider.ts:9",{"_index":710,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["reviewer",{"_index":690,"title":{},"body":{"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"entities/Review.html":{}}}],["reviewid",{"_index":1816,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["reviews",{"_index":717,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"entities/Product.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["reviews.controller",{"_index":1829,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["reviews.entity",{"_index":715,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{}}}],["reviews/reviews.module",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["reviewscontroller",{"_index":1809,"title":{"controllers/ReviewsController.html":{}},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"coverage.html":{}}}],["reviewsmodule",{"_index":156,"title":{"modules/ReviewsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ReviewsModule.html":{},"modules.html":{},"overview.html":{}}}],["reviewsrepository",{"_index":711,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/ReviewsService.html":{}}}],["reviewsservice",{"_index":1817,"title":{"injectables/ReviewsService.html":{}},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"coverage.html":{},"overview.html":{}}}],["role",{"_index":119,"title":{},"body":{"interfaces/ActiveUserData.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["role.admin",{"_index":1852,"title":{},"body":{"guards/RolesGuard.html":{},"controllers/UsersController.html":{}}}],["roles",{"_index":838,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(role.admin",{"_index":843,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["roles(role.admin)@patch('/:stateid",{"_index":830,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["roles(role.user",{"_index":924,"title":{},"body":{"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/UsersController.html":{}}}],["roles_key",{"_index":1849,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":189,"title":{"guards/RolesGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["rollback",{"_index":661,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["rollbackstock",{"_index":1624,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["rollbackstock(variantid",{"_index":1635,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["root",{"_index":2400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root_path",{"_index":1278,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["route",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["routes",{"_index":2401,"title":{"routes.html":{}},"body":{"routes.html":{}}}],["row",{"_index":1653,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["run",{"_index":2300,"title":{},"body":{"index.html":{}}}],["runner",{"_index":611,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["rxjs",{"_index":468,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{},"dependencies.html":{}}}],["s3",{"_index":1989,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["save",{"_index":550,"title":{},"body":{"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["savedproduct",{"_index":619,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["savedvariants",{"_index":631,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["savedvariants.push(vr",{"_index":640,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["savedvariants[urlsindex",{"_index":650,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["saveproductvariant",{"_index":1625,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["saveproductvariant(variant",{"_index":1637,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["saves",{"_index":1642,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["scalable",{"_index":2292,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1492,"title":{},"body":{"entities/Payment.html":{},"entities/Product.html":{}}}],["sdk",{"_index":1990,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"dependencies.html":{}}}],["secret",{"_index":1080,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["secure",{"_index":1246,"title":{},"body":{"modules/MailModule.html":{}}}],["select",{"_index":1044,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"injectables/PaginationProvider.html":{}}}],["send",{"_index":1382,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["sending",{"_index":1269,"title":{},"body":{"injectables/MailService.html":{}}}],["sendloginotp",{"_index":1260,"title":{},"body":{"injectables/MailService.html":{}}}],["sendloginotp(user",{"_index":1267,"title":{},"body":{"injectables/MailService.html":{}}}],["sendproductpurchasemail",{"_index":1261,"title":{},"body":{"injectables/MailService.html":{}}}],["sendproductpurchasemail(user",{"_index":1270,"title":{},"body":{"injectables/MailService.html":{}}}],["sendresetotp",{"_index":1262,"title":{},"body":{"injectables/MailService.html":{}}}],["sendresetotp(user",{"_index":1272,"title":{},"body":{"injectables/MailService.html":{}}}],["sendsubscribermail",{"_index":1263,"title":{},"body":{"injectables/MailService.html":{}}}],["sendsubscribermail(subscriber",{"_index":1274,"title":{},"body":{"injectables/MailService.html":{}}}],["server",{"_index":2150,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{},"index.html":{}}}],["service",{"_index":298,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/SignInProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["set",{"_index":1171,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["setlock('pessimistic_write",{"_index":1652,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["setmetadata(auth_type_key",{"_index":2393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(roles_key",{"_index":2396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setting",{"_index":89,"title":{},"body":{"guards/AccessTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["setup",{"_index":2297,"title":{},"body":{"index.html":{}}}],["shipped",{"_index":2278,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["shortdescription",{"_index":562,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["side",{"_index":2293,"title":{},"body":{"index.html":{}}}],["sigining",{"_index":1866,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["sign",{"_index":368,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GenerateTokensProvider.html":{},"classes/OtpSigninDto.html":{},"classes/SignInDto.html":{}}}],["signature",{"_index":1521,"title":{},"body":{"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["signed",{"_index":43,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{}}}],["signin",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/OtpSigninDto.html":{},"injectables/SignInProvider.html":{}}}],["signin(@body",{"_index":407,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(signindto",{"_index":362,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["signin.provider",{"_index":437,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["signin.provider.ts",{"_index":1364,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"coverage.html":{}}}],["signin.provider.ts:21",{"_index":1370,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["signin.provider.ts:8",{"_index":1368,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["signindto",{"_index":363,"title":{"classes/SignInDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"coverage.html":{}}}],["signindto.email",{"_index":1875,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["signindto.role",{"_index":1876,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["signing",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["signinprovider",{"_index":424,"title":{"injectables/SignInProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{},"coverage.html":{},"overview.html":{}}}],["signinwithotp",{"_index":1365,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["signinwithotp(otpsignindto",{"_index":1369,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["signs",{"_index":340,"title":{},"body":{"controllers/AuthController.html":{},"injectables/GenerateTokensProvider.html":{}}}],["signtoken",{"_index":1064,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["signtoken(userid",{"_index":1068,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["size",{"_index":675,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"injectables/FindAllProductsProvider.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{}}}],["sizes",{"_index":1097,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["skip",{"_index":1418,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["sold",{"_index":1658,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["soldout",{"_index":1464,"title":{},"body":{"classes/PatchProductVariantDto.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"index.html":{}}}],["spaces",{"_index":2004,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["specific",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{}}}],["specified",{"_index":1646,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["sponsors",{"_index":2352,"title":{},"body":{"index.html":{}}}],["src/.../active",{"_index":2379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":2382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":2268,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../auth.constant.ts",{"_index":2381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.decorator.ts",{"_index":2380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2283,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../order",{"_index":2270,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../paths.config.ts",{"_index":2385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../paymentstatus.enum.ts",{"_index":2272,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role",{"_index":2273,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role.constant.ts",{"_index":2384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.decorator.ts",{"_index":2383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":125,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":128,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":256,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":257,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:115",{"_index":351,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:155",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:76",{"_index":367,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":2094,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/auth/auth.module.ts",{"_index":425,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/config/jwt.config",{"_index":60,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["src/auth/constants/auth.constant",{"_index":62,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["src/auth/constants/auth.constant.ts",{"_index":2204,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/constants/role.constant",{"_index":1850,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/constants/role.constant.ts",{"_index":2205,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorator/active",{"_index":917,"title":{},"body":{"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorator/auth.decorator",{"_index":840,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["src/auth/decorator/auth.decorator.ts",{"_index":2207,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorator/role.decorator",{"_index":839,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{}}}],["src/auth/decorator/role.decorator.ts",{"_index":2208,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dtos/otpsignin.dto.ts",{"_index":1359,"title":{},"body":{"classes/OtpSigninDto.html":{},"coverage.html":{}}}],["src/auth/dtos/otpsignin.dto.ts:17",{"_index":1361,"title":{},"body":{"classes/OtpSigninDto.html":{}}}],["src/auth/dtos/refresh",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{},"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["src/auth/dtos/sign",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"classes/SignInDto.html":{},"coverage.html":{}}}],["src/auth/enums/auth",{"_index":469,"title":{},"body":{"guards/AuthenticationGuard.html":{},"controllers/DeliveryStatesController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"miscellaneous/enumerations.html":{}}}],["src/auth/enums/role",{"_index":759,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"guards/RolesGuard.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{}}}],["src/auth/guards/access",{"_index":6,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{}}}],["src/auth/guards/authentication/authentication.guard.ts",{"_index":457,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/auth/guards/authentication/authentication.guard.ts:33",{"_index":464,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/authentication/authentication.guard.ts:59",{"_index":465,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/roles/roles.guard.ts",{"_index":1841,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles/roles.guard.ts:16",{"_index":1842,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/guards/roles/roles.guard.ts:31",{"_index":1843,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/interfaces/active",{"_index":114,"title":{},"body":{"interfaces/ActiveUserData.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts:13",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:43",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:52",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:61",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/generate",{"_index":1060,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"coverage.html":{}}}],["src/auth/providers/otp",{"_index":1363,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"coverage.html":{}}}],["src/auth/providers/refresh",{"_index":1784,"title":{},"body":{"injectables/RefreshTokenProvider.html":{},"coverage.html":{}}}],["src/auth/providers/sign",{"_index":1864,"title":{},"body":{"injectables/SignInProvider.html":{},"coverage.html":{}}}],["src/common/interceptors/data",{"_index":779,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"coverage.html":{}}}],["src/common/pagination/dtos/pagination",{"_index":1111,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/PaginationQueryDto.html":{},"coverage.html":{}}}],["src/common/pagination/interfaces/paginated.interface",{"_index":982,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["src/common/pagination/interfaces/paginated.interface.ts",{"_index":1384,"title":{},"body":{"interfaces/Paginated.html":{},"coverage.html":{}}}],["src/common/pagination/pagination.module",{"_index":1759,"title":{},"body":{"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["src/common/pagination/pagination.module.ts",{"_index":1402,"title":{},"body":{"modules/PaginationModule.html":{}}}],["src/common/pagination/providers/pagination.provider",{"_index":984,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/UsersService.html":{}}}],["src/common/pagination/providers/pagination.provider.ts",{"_index":1404,"title":{},"body":{"injectables/PaginationProvider.html":{},"coverage.html":{}}}],["src/common/pagination/providers/pagination.provider.ts:14",{"_index":1407,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["src/common/pagination/providers/pagination.provider.ts:34",{"_index":1409,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["src/config/paths.config.ts",{"_index":2213,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/delivery",{"_index":523,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"classes/UpdateDeliveryStateDto.html":{},"coverage.html":{}}}],["src/discounts",{"_index":292,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"entities/DiscountUsage.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"entities/Order.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["src/discounts/discounts.controller.ts",{"_index":910,"title":{},"body":{"controllers/DiscountsController.html":{},"coverage.html":{}}}],["src/discounts/discounts.controller.ts:21",{"_index":913,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["src/discounts/discounts.controller.ts:28",{"_index":912,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["src/discounts/discounts.entity",{"_index":903,"title":{},"body":{"entities/DiscountUsage.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["src/discounts/discounts.entity.ts",{"_index":878,"title":{},"body":{"entities/Discount.html":{},"coverage.html":{}}}],["src/discounts/discounts.entity.ts:12",{"_index":882,"title":{},"body":{"entities/Discount.html":{}}}],["src/discounts/discounts.entity.ts:15",{"_index":884,"title":{},"body":{"entities/Discount.html":{}}}],["src/discounts/discounts.entity.ts:18",{"_index":887,"title":{},"body":{"entities/Discount.html":{}}}],["src/discounts/discounts.entity.ts:21",{"_index":889,"title":{},"body":{"entities/Discount.html":{}}}],["src/discounts/discounts.entity.ts:6",{"_index":881,"title":{},"body":{"entities/Discount.html":{}}}],["src/discounts/discounts.entity.ts:9",{"_index":880,"title":{},"body":{"entities/Discount.html":{}}}],["src/discounts/discounts.module.ts",{"_index":930,"title":{},"body":{"modules/DiscountsModule.html":{}}}],["src/discounts/dtos/apply",{"_index":262,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"coverage.html":{}}}],["src/discounts/dtos/create",{"_index":534,"title":{},"body":{"classes/CreateDiscountDto.html":{},"coverage.html":{}}}],["src/discounts/providers/apply",{"_index":271,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"coverage.html":{}}}],["src/discounts/providers/create",{"_index":541,"title":{},"body":{"injectables/CreateDiscountProvider.html":{},"coverage.html":{}}}],["src/discounts/providers/discounts.service.ts",{"_index":936,"title":{},"body":{"injectables/DiscountsService.html":{},"coverage.html":{}}}],["src/discounts/providers/discounts.service.ts:27",{"_index":940,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["src/discounts/providers/discounts.service.ts:39",{"_index":939,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["src/discounts/providers/discounts.service.ts:9",{"_index":938,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["src/mail/mail.module",{"_index":1913,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["src/mail/mail.module.ts",{"_index":1226,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/providers/mail.service",{"_index":1870,"title":{},"body":{"injectables/SignInProvider.html":{},"injectables/SubscribersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["src/mail/providers/mail.service.ts",{"_index":1259,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/mail/providers/mail.service.ts:13",{"_index":1266,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/providers/mail.service.ts:30",{"_index":1273,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/providers/mail.service.ts:49",{"_index":1268,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/providers/mail.service.ts:62",{"_index":1271,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/providers/mail.service.ts:83",{"_index":1275,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/templates/loginotp.ejs",{"_index":1297,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/templates/productbought.ejs",{"_index":1301,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/templates/resetotp.ejs",{"_index":1292,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/templates/subscription.ejs",{"_index":1307,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":2219,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/orders/enums/order",{"_index":2275,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/orders/order.entity",{"_index":904,"title":{},"body":{"entities/DiscountUsage.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["src/orders/order.entity.ts",{"_index":1309,"title":{},"body":{"entities/Order.html":{},"coverage.html":{}}}],["src/orders/order.entity.ts:18",{"_index":1328,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:21",{"_index":1320,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:24",{"_index":1337,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:32",{"_index":1330,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:35",{"_index":1318,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:38",{"_index":1319,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:41",{"_index":1321,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:44",{"_index":1322,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:47",{"_index":1327,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:50",{"_index":1338,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:53",{"_index":1324,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:56",{"_index":1326,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:59",{"_index":1335,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:67",{"_index":1334,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/orders.controller.ts",{"_index":1347,"title":{},"body":{"controllers/OrdersController.html":{},"coverage.html":{}}}],["src/orders/orders.module.ts",{"_index":1353,"title":{},"body":{"modules/OrdersModule.html":{}}}],["src/orders/providers/orders.service.ts",{"_index":1358,"title":{},"body":{"injectables/OrdersService.html":{},"coverage.html":{}}}],["src/payment/enums/paymentstatus.enum",{"_index":1160,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["src/payment/enums/paymentstatus.enum.ts",{"_index":2280,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/payment/payment.controller.ts",{"_index":1510,"title":{},"body":{"controllers/PaymentController.html":{},"coverage.html":{}}}],["src/payment/payment.entity",{"_index":1158,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["src/payment/payment.entity.ts",{"_index":1489,"title":{},"body":{"entities/Payment.html":{},"coverage.html":{}}}],["src/payment/payment.entity.ts:19",{"_index":1497,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.entity.ts:26",{"_index":1501,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.entity.ts:29",{"_index":1498,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.entity.ts:32",{"_index":1500,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.entity.ts:35",{"_index":1495,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.entity.ts:38",{"_index":1494,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.entity.ts:41",{"_index":1503,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.entity.ts:44",{"_index":1496,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.entity.ts:47",{"_index":1502,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.entity.ts:55",{"_index":1505,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.module.ts",{"_index":1512,"title":{},"body":{"modules/PaymentModule.html":{}}}],["src/paystack/dtos/initiate",{"_index":1124,"title":{},"body":{"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{},"coverage.html":{}}}],["src/paystack/paystack.controller.ts",{"_index":1517,"title":{},"body":{"controllers/PaystackController.html":{},"coverage.html":{}}}],["src/paystack/paystack.controller.ts:31",{"_index":1527,"title":{},"body":{"controllers/PaystackController.html":{}}}],["src/paystack/paystack.controller.ts:41",{"_index":1523,"title":{},"body":{"controllers/PaystackController.html":{}}}],["src/paystack/paystack.module.ts",{"_index":1539,"title":{},"body":{"modules/PaystackModule.html":{}}}],["src/paystack/providers/initiate",{"_index":1136,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"coverage.html":{}}}],["src/paystack/providers/paystack.service.ts",{"_index":1546,"title":{},"body":{"injectables/PaystackService.html":{},"coverage.html":{}}}],["src/paystack/providers/paystack.service.ts:21",{"_index":1550,"title":{},"body":{"injectables/PaystackService.html":{}}}],["src/paystack/providers/paystack.service.ts:31",{"_index":1552,"title":{},"body":{"injectables/PaystackService.html":{}}}],["src/paystack/providers/paystack.service.ts:8",{"_index":1549,"title":{},"body":{"injectables/PaystackService.html":{}}}],["src/paystack/providers/verify",{"_index":2143,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["src/product",{"_index":582,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"entities/Payment.html":{},"modules/PaystackModule.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"modules/ProductsModule.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["src/products/dtos/createproductdto.ts",{"_index":554,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/products/dtos/createproductdto.ts:15",{"_index":571,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:19",{"_index":572,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:23",{"_index":567,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:27",{"_index":565,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:31",{"_index":568,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:35",{"_index":566,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:39",{"_index":570,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:43",{"_index":564,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:47",{"_index":573,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:51",{"_index":569,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:57",{"_index":577,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/get",{"_index":1092,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"coverage.html":{}}}],["src/products/dtos/patch",{"_index":1449,"title":{},"body":{"classes/PatchProductDto.html":{},"coverage.html":{}}}],["src/products/product.entity",{"_index":1280,"title":{},"body":{"injectables/MailService.html":{},"entities/Order.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{}}}],["src/products/product.entity.ts",{"_index":1557,"title":{},"body":{"entities/Product.html":{},"coverage.html":{}}}],["src/products/product.entity.ts:17",{"_index":1564,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:20",{"_index":1567,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:23",{"_index":1568,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:26",{"_index":1562,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:29",{"_index":1559,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:32",{"_index":1563,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:35",{"_index":1560,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:38",{"_index":1566,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:41",{"_index":1558,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:44",{"_index":1574,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:47",{"_index":1565,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:53",{"_index":1577,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:59",{"_index":1573,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:62",{"_index":1561,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:65",{"_index":1575,"title":{},"body":{"entities/Product.html":{}}}],["src/products/products.controller.ts",{"_index":1677,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/products/products.controller.ts:100",{"_index":1709,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:133",{"_index":1701,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:145",{"_index":1714,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:160",{"_index":1687,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:60",{"_index":1684,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.module",{"_index":1543,"title":{},"body":{"modules/PaystackModule.html":{},"modules/ReviewsModule.html":{}}}],["src/products/products.module.ts",{"_index":1755,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/providers/create",{"_index":588,"title":{},"body":{"injectables/CreateProductProvider.html":{},"coverage.html":{}}}],["src/products/providers/find",{"_index":966,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"coverage.html":{}}}],["src/products/providers/products.service",{"_index":716,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["src/products/providers/products.service.ts",{"_index":1764,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/products/providers/products.service.ts:106",{"_index":1769,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:18",{"_index":1767,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:49",{"_index":1768,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:61",{"_index":1771,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:82",{"_index":1770,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:94",{"_index":1773,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/update",{"_index":1937,"title":{},"body":{"injectables/UpdateProductProvider.html":{},"coverage.html":{}}}],["src/reviews/dtos/create",{"_index":686,"title":{},"body":{"classes/CreateReviewDto.html":{},"coverage.html":{}}}],["src/reviews/providers/create",{"_index":705,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"coverage.html":{}}}],["src/reviews/providers/reviews.service.ts",{"_index":1832,"title":{},"body":{"injectables/ReviewsService.html":{},"coverage.html":{}}}],["src/reviews/providers/reviews.service.ts:29",{"_index":1836,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/providers/reviews.service.ts:45",{"_index":1838,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/providers/reviews.service.ts:9",{"_index":1835,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/reviews.controller.ts",{"_index":1810,"title":{},"body":{"controllers/ReviewsController.html":{},"coverage.html":{}}}],["src/reviews/reviews.controller.ts:33",{"_index":1812,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/reviews/reviews.controller.ts:52",{"_index":1815,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/reviews/reviews.entity",{"_index":1578,"title":{},"body":{"entities/Product.html":{}}}],["src/reviews/reviews.entity.ts",{"_index":1796,"title":{},"body":{"entities/Review.html":{},"coverage.html":{}}}],["src/reviews/reviews.entity.ts:14",{"_index":1798,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.entity.ts:17",{"_index":1803,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.entity.ts:20",{"_index":1802,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.entity.ts:24",{"_index":1805,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.entity.ts:27",{"_index":1797,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.entity.ts:30",{"_index":1800,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.module.ts",{"_index":1828,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["src/subscribers/dtos/create",{"_index":737,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/providers/subscribers.service.ts",{"_index":1916,"title":{},"body":{"injectables/SubscribersService.html":{},"coverage.html":{}}}],["src/subscribers/providers/subscribers.service.ts:12",{"_index":1920,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/providers/subscribers.service.ts:36",{"_index":1923,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/providers/subscribers.service.ts:55",{"_index":1927,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscriber.entity",{"_index":1281,"title":{},"body":{"injectables/MailService.html":{}}}],["src/subscribers/subscriber.entity.ts",{"_index":1896,"title":{},"body":{"entities/Subscriber.html":{},"coverage.html":{}}}],["src/subscribers/subscriber.entity.ts:17",{"_index":1900,"title":{},"body":{"entities/Subscriber.html":{}}}],["src/subscribers/subscriber.entity.ts:9",{"_index":1901,"title":{},"body":{"entities/Subscriber.html":{}}}],["src/subscribers/subscribers.controller.ts",{"_index":1903,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.module.ts",{"_index":1910,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["src/uploads/providers/upload",{"_index":1977,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"coverage.html":{}}}],["src/uploads/providers/uploads.service",{"_index":602,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["src/uploads/providers/uploads.service.ts",{"_index":2019,"title":{},"body":{"injectables/UploadsService.html":{},"coverage.html":{}}}],["src/uploads/providers/uploads.service.ts:10",{"_index":2022,"title":{},"body":{"injectables/UploadsService.html":{}}}],["src/uploads/providers/uploads.service.ts:33",{"_index":2024,"title":{},"body":{"injectables/UploadsService.html":{}}}],["src/uploads/uploads.module",{"_index":1758,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/uploads/uploads.module.ts",{"_index":2015,"title":{},"body":{"modules/UploadsModule.html":{}}}],["src/users/dtos/create",{"_index":751,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/get",{"_index":1116,"title":{},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"coverage.html":{}}}],["src/users/dtos/patch",{"_index":1472,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["src/users/providers/clear",{"_index":505,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"coverage.html":{}}}],["src/users/providers/create",{"_index":763,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"coverage.html":{}}}],["src/users/providers/find",{"_index":1028,"title":{},"body":{"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"coverage.html":{}}}],["src/users/providers/store",{"_index":1885,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{},"coverage.html":{}}}],["src/users/providers/users.service",{"_index":1156,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["src/users/providers/users.service.ts",{"_index":2103,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/providers/users.service.ts:106",{"_index":2126,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:115",{"_index":2124,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:126",{"_index":2113,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:135",{"_index":2122,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:144",{"_index":2118,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:168",{"_index":2115,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:179",{"_index":2128,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:27",{"_index":2111,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:87",{"_index":2114,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:96",{"_index":2120,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/user.entity",{"_index":905,"title":{},"body":{"entities/DiscountUsage.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{}}}],["src/users/user.entity.ts",{"_index":2037,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/user.entity.ts:10",{"_index":2043,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:17",{"_index":2042,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:24",{"_index":2044,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:31",{"_index":2048,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:38",{"_index":2040,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:45",{"_index":2050,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:52",{"_index":2039,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:59",{"_index":2051,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:64",{"_index":2052,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:72",{"_index":2041,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:79",{"_index":2049,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:86",{"_index":2045,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:92",{"_index":2046,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.controller.ts",{"_index":2054,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:111",{"_index":2069,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:117",{"_index":2076,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:156",{"_index":2063,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:67",{"_index":2073,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":428,"title":{},"body":{"modules/AuthModule.html":{},"modules/PaystackModule.html":{}}}],["src/users/users.module.ts",{"_index":2092,"title":{},"body":{"modules/UsersModule.html":{}}}],["ssl",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["stamp",{"_index":2009,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["star",{"_index":702,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["star'})@max(5",{"_index":697,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["stars",{"_index":691,"title":{},"body":{"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"entities/Review.html":{}}}],["start",{"_index":608,"title":{},"body":{"injectables/CreateProductProvider.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"index.html":{}}}],["start:dev",{"_index":2303,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":2304,"title":{},"body":{"index.html":{}}}],["startdate",{"_index":1118,"title":{},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["started",{"_index":2286,"title":{"index.html":{}},"body":{}}],["starter",{"_index":2295,"title":{},"body":{"index.html":{}}}],["state",{"_index":527,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["state.dto",{"_index":837,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"classes/UpdateDeliveryStateDto.html":{}}}],["state.dto.ts",{"_index":525,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"classes/UpdateDeliveryStateDto.html":{},"coverage.html":{}}}],["state.dto.ts:10",{"_index":530,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{}}}],["state.dto.ts:6",{"_index":531,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{}}}],["state.entity",{"_index":857,"title":{},"body":{"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{}}}],["state.entity.ts",{"_index":802,"title":{},"body":{"entities/DeliveryState.html":{},"coverage.html":{}}}],["state.entity.ts:13",{"_index":808,"title":{},"body":{"entities/DeliveryState.html":{}}}],["state.entity.ts:16",{"_index":809,"title":{},"body":{"entities/DeliveryState.html":{}}}],["state.entity.ts:19",{"_index":806,"title":{},"body":{"entities/DeliveryState.html":{}}}],["state.entity.ts:22",{"_index":804,"title":{},"body":{"entities/DeliveryState.html":{}}}],["stateid",{"_index":832,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{}}}],["statements",{"_index":2199,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":818,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{}}}],["states.controller",{"_index":856,"title":{},"body":{"modules/DeliveryStatesModule.html":{}}}],["states.controller.ts",{"_index":817,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"coverage.html":{}}}],["states.controller.ts:25",{"_index":824,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["states.controller.ts:40",{"_index":827,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["states.controller.ts:51",{"_index":831,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["states.module",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["states.module.ts",{"_index":855,"title":{},"body":{"modules/DeliveryStatesModule.html":{}}}],["states.service",{"_index":836,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{}}}],["states.service.ts",{"_index":860,"title":{},"body":{"injectables/DeliveryStatesService.html":{},"coverage.html":{}}}],["states.service.ts:13",{"_index":863,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["states.service.ts:27",{"_index":865,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["states.service.ts:54",{"_index":867,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["states.service.ts:84",{"_index":868,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["states/delivery",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"coverage.html":{}}}],["states/dtos/create",{"_index":524,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"coverage.html":{}}}],["states/dtos/update",{"_index":1936,"title":{},"body":{"classes/UpdateDeliveryStateDto.html":{},"coverage.html":{}}}],["states/providers/delivery",{"_index":859,"title":{},"body":{"injectables/DeliveryStatesService.html":{},"coverage.html":{}}}],["static",{"_index":460,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["status",{"_index":393,"title":{},"body":{"controllers/AuthController.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["status.enum",{"_index":1342,"title":{},"body":{"entities/Order.html":{}}}],["status.enum.ts",{"_index":2271,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stay",{"_index":2339,"title":{},"body":{"index.html":{}}}],["stock",{"_index":1665,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["store",{"_index":1880,"title":{},"body":{"injectables/SignInProvider.html":{},"injectables/UsersService.html":{}}}],["stored",{"_index":1048,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UsersService.html":{}}}],["storedimagesurls",{"_index":626,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["storedimagesurls.push(urls",{"_index":630,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["storeotpandexpire",{"_index":1888,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["storeotpandexpire(user",{"_index":1890,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["storeotpandexpireprovider",{"_index":1884,"title":{"injectables/StoreOtpAndExpireProvider.html":{}},"body":{"injectables/StoreOtpAndExpireProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["storeotpandexpiresprovider",{"_index":2109,"title":{},"body":{"injectables/UsersService.html":{}}}],["storetokenotpandotpexpire",{"_index":2106,"title":{},"body":{"injectables/UsersService.html":{}}}],["storetokenotpandotpexpire(user",{"_index":2125,"title":{},"body":{"injectables/UsersService.html":{}}}],["storing",{"_index":1887,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{},"injectables/UsersService.html":{}}}],["streetaddress",{"_index":1478,"title":{},"body":{"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["strict",{"_index":1258,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":49,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"interfaces/Paginated.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/SignInDto.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"miscellaneous/variables.html":{}}}],["string(error",{"_index":666,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["style",{"_index":1105,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["sub",{"_index":120,"title":{},"body":{"interfaces/ActiveUserData.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["subject",{"_index":1287,"title":{},"body":{"injectables/MailService.html":{}}}],["subscribe",{"_index":1276,"title":{},"body":{"injectables/MailService.html":{}}}],["subscribed",{"_index":1925,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["subscriber",{"_index":740,"title":{"entities/Subscriber.html":{}},"body":{"classes/CreateSubscriberDto.html":{},"injectables/MailService.html":{},"entities/Subscriber.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{}}}],["subscriber.dto",{"_index":1930,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["subscriber.dto.ts",{"_index":738,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"coverage.html":{}}}],["subscriber.dto.ts:18",{"_index":743,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.email",{"_index":1304,"title":{},"body":{"injectables/MailService.html":{}}}],["subscriber.entity",{"_index":1912,"title":{},"body":{"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{}}}],["subscriber.id",{"_index":1308,"title":{},"body":{"injectables/MailService.html":{}}}],["subscriberrepository",{"_index":1921,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["subscribers",{"_index":1904,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["subscribers.controller",{"_index":1914,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["subscribers/subscribers.module",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["subscriberscontroller",{"_index":1902,"title":{"controllers/SubscribersController.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"coverage.html":{}}}],["subscribersmodule",{"_index":157,"title":{"modules/SubscribersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SubscribersModule.html":{},"modules.html":{},"overview.html":{}}}],["subscribersservice",{"_index":1909,"title":{"injectables/SubscribersService.html":{}},"body":{"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"overview.html":{}}}],["success",{"_index":2167,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{},"miscellaneous/enumerations.html":{}}}],["successful",{"_index":654,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["successfully",{"_index":344,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["summary",{"_index":392,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["support",{"_index":1285,"title":{},"body":{"injectables/MailService.html":{},"index.html":{},"modules.html":{}}}],["supported",{"_index":2032,"title":{},"body":{"injectables/UploadsService.html":{}}}],["svg",{"_index":2367,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["t",{"_index":1070,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["table",{"_index":1897,"title":{},"body":{"entities/Subscriber.html":{},"entities/User.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2239,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1421,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["team",{"_index":1286,"title":{},"body":{"injectables/MailService.html":{}}}],["template",{"_index":1252,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["templates",{"_index":1255,"title":{},"body":{"modules/MailModule.html":{}}}],["test",{"_index":2307,"title":{},"body":{"index.html":{}}}],["test:covresources",{"_index":2310,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":2309,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2305,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":2351,"title":{},"body":{"index.html":{}}}],["this.accesstokenguard",{"_index":482,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.applyfordiscountprovider.applyfordiscount(user",{"_index":944,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["this.appservice.gethello",{"_index":132,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.otpsignin(otpsignindto",{"_index":413,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.refreshtokens(refreshtokendto",{"_index":418,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signin(signindto",{"_index":408,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authtypeguardmap[type]).flat",{"_index":497,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.category",{"_index":1582,"title":{},"body":{"entities/Product.html":{}}}],["this.category.tolowercase",{"_index":1583,"title":{},"body":{"entities/Product.html":{}}}],["this.clearotpandexpirytimeprovider.clearotpandexpirytime(user",{"_index":2135,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.clothtype",{"_index":1586,"title":{},"body":{"entities/Product.html":{}}}],["this.clothtype.tolowercase",{"_index":1587,"title":{},"body":{"entities/Product.html":{}}}],["this.configservice.get('appconfig.apiversion",{"_index":799,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["this.configservice.get('appconfig.awsbucketname",{"_index":1996,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["this.configservice.get('appconfig.awscloudfronturl')}/${name",{"_index":2035,"title":{},"body":{"injectables/UploadsService.html":{}}}],["this.configservice.get('appconfig.host')}/collections?success=yes",{"_index":1210,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["this.creatediscountprovider.creatediscount(creatediscountdto",{"_index":943,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["this.createproductprovider.createproduct(createproductdto",{"_index":1774,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.createreviewprovider.createreview(createreviewdto",{"_index":1839,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.createuserprovider.createuser(createuserdto",{"_index":2131,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.datasource.createqueryrunner",{"_index":613,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["this.deliverystaterepository.create(createdeliverystatedto",{"_index":871,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["this.deliverystaterepository.findoneby",{"_index":873,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["this.deliverystaterepository.save(deliverystate",{"_index":872,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["this.deliverystatesservice.createdeliverystate",{"_index":844,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["this.deliverystatesservice.finddeliverystatebyname(state",{"_index":848,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["this.deliverystatesservice.updatedeliverystate",{"_index":852,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["this.discountsrepository.create(creatediscountdto",{"_index":549,"title":{},"body":{"injectables/CreateDiscountProvider.html":{}}}],["this.discountsrepository.findone",{"_index":304,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["this.discountsrepository.save(discount",{"_index":552,"title":{},"body":{"injectables/CreateDiscountProvider.html":{}}}],["this.discountsservice.applyfordiscount",{"_index":925,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["this.discountsservice.creatediscount(creatediscountdto",{"_index":922,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["this.discountsusagerepository.count",{"_index":964,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["this.discountsusageservice.countdiscountusage",{"_index":324,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["this.dressstyle",{"_index":1584,"title":{},"body":{"entities/Product.html":{}}}],["this.dressstyle.tolowercase",{"_index":1585,"title":{},"body":{"entities/Product.html":{}}}],["this.extractrequestfromheader(request",{"_index":77,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.findallproductsprovider.findall(productquery",{"_index":1777,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.findonebyidprovider.findbyid(id",{"_index":2136,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.findoneuserbyemailprovider.findonebyemail(email",{"_index":2132,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.finduserbyotpandexpiresprovider.finduserbyotpandexpirytime",{"_index":2134,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.generatefilename(file",{"_index":1998,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["this.generatetokenprovider.generatetokens(user",{"_index":1383,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["this.getauthheader",{"_index":1214,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["this.initiatepaymentprovider.initializepayment",{"_index":1555,"title":{},"body":{"injectables/PaystackService.html":{}}}],["this.jwtconfiguration",{"_index":88,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.jwtconfiguration.accesstokenttl",{"_index":1086,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.jwtconfiguration.audience",{"_index":1077,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["this.jwtconfiguration.issuer",{"_index":1079,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["this.jwtconfiguration.refreshtokenttl",{"_index":1090,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.jwtconfiguration.secret",{"_index":1081,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["this.jwtservice.signasync",{"_index":1075,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.jwtservice.verify",{"_index":87,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.jwtservice.verifyasync",{"_index":1791,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["this.mailerservice.sendmail",{"_index":1282,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailservice.sendloginotp(user",{"_index":1882,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.mailservice.sendproductpurchasemail(user",{"_index":2181,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["this.mailservice.sendsubscribermail(subscriber",{"_index":1934,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.name",{"_index":1580,"title":{},"body":{"entities/Product.html":{}}}],["this.name.tolowercase",{"_index":1581,"title":{},"body":{"entities/Product.html":{}}}],["this.otpsigninprovider.signinwithotp(otpsignindto",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.paginationprovider.paginationquery",{"_index":1024,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/UsersService.html":{}}}],["this.paystackconfiguration.baseurl}/transaction/initialize",{"_index":1207,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["this.paystackconfiguration.baseurl}/transaction/verify/${reference",{"_index":2158,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["this.paystackconfiguration.secret",{"_index":1165,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["this.paystackservice.initiatepayment(initiatepaymentdto",{"_index":1531,"title":{},"body":{"controllers/PaystackController.html":{}}}],["this.paystackservice.verifypayment(body",{"_index":1534,"title":{},"body":{"controllers/PaystackController.html":{}}}],["this.productrepository",{"_index":1025,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["this.productrepository.delete(productid",{"_index":1779,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productrepository.findone",{"_index":1941,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["this.productrepository.findoneby",{"_index":1775,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productrepository.save(product",{"_index":1963,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["this.productsservice.createproduct(createproductdto",{"_index":1734,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.deleteproduct(productid",{"_index":1749,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findall(productquery",{"_index":1742,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findproductbyid",{"_index":721,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["this.productsservice.findproductbyid(prdid",{"_index":2163,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["this.productsservice.findproductbyid(productid",{"_index":1740,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.updateproduct(productid",{"_index":1745,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productvariantrepository.findone",{"_index":1640,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["this.productvariantrepository.save(variant",{"_index":1643,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["this.productvariantsservice.checkvariantavailability",{"_index":1185,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["this.productvariantsservice.findproductvariantbyid",{"_index":1966,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["this.productvariantsservice.findproductvariantbyid(vr.id",{"_index":1190,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["this.productvariantsservice.rollbackstock",{"_index":2179,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["this.productvariantsservice.saveproductvariant(variant",{"_index":1975,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["this.reflector.getallandoverride(auth_type_key",{"_index":491,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.reflector.getallandoverride(roles_key",{"_index":1854,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.refreshtokenprovider.refreshtokens(refreshtokendto",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.request.headers.host",{"_index":1428,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["this.request.protocol",{"_index":1427,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["this.reviewsrepository.create",{"_index":724,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["this.reviewsrepository.delete(reviewid",{"_index":1840,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.reviewsrepository.save(newreview",{"_index":728,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["this.reviewsservice.createreview(createreviewdto",{"_index":1821,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.reviewsservice.deletereview(reviewid",{"_index":1824,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.signinprovider.signin(signindto",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.signtoken",{"_index":1084,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.signtoken(user.id",{"_index":1089,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.state",{"_index":814,"title":{},"body":{"entities/DeliveryState.html":{}}}],["this.state.tolowercase",{"_index":815,"title":{},"body":{"entities/DeliveryState.html":{}}}],["this.storeotpandexpiresprovider.storeotpandexpire(user",{"_index":2133,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.subscriberrepository.create(createsubscriberdto",{"_index":1932,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscriberrepository.delete(id",{"_index":1935,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscriberrepository.save(subscriber",{"_index":1933,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.updateproductprovider.updateproduct(id",{"_index":1778,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.uploadsservice.uploadfile(file",{"_index":629,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["this.uploadtoawsprovider.fileupload(file",{"_index":2034,"title":{},"body":{"injectables/UploadsService.html":{}}}],["this.usersrepository",{"_index":2139,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.create",{"_index":774,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["this.usersrepository.delete(userid",{"_index":2140,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.find",{"_index":1055,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["this.usersrepository.findone",{"_index":1043,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{}}}],["this.usersrepository.findoneby",{"_index":1036,"title":{},"body":{"injectables/FindOneByIdProvider.html":{},"injectables/UsersService.html":{}}}],["this.usersrepository.save(newuser",{"_index":775,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["this.usersrepository.save(newuserobj",{"_index":520,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{}}}],["this.usersrepository.save(user",{"_index":2142,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.clearotpandexpirytime(user",{"_index":1381,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["this.usersservice.createuser",{"_index":1874,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.usersservice.deleteuser(userid",{"_index":2087,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(usersquery",{"_index":2083,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyemail(signindto.email",{"_index":1872,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.usersservice.findonebyid(sub",{"_index":1794,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["this.usersservice.findonebyid(user.sub",{"_index":1167,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["this.usersservice.findonebyid(userid",{"_index":2081,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.finduserbyresetotpandexpirytime(hashedotp",{"_index":1379,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["this.usersservice.storetokenotpandotpexpire(user",{"_index":1881,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.usersservice.updateuser(user.sub",{"_index":2084,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.verifypayment(data.reference",{"_index":2191,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["this.verifypaymentprovider.paymentwebhook",{"_index":1556,"title":{},"body":{"injectables/PaystackService.html":{}}}],["through",{"_index":499,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["throw",{"_index":78,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["ticket",{"_index":1283,"title":{},"body":{"injectables/MailService.html":{}}}],["time",{"_index":1049,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["time.provider",{"_index":2099,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["time.provider.ts",{"_index":507,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"coverage.html":{}}}],["time.provider.ts:14",{"_index":1051,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["time.provider.ts:25",{"_index":513,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{}}}],["time.provider.ts:32",{"_index":1053,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["time.provider.ts:7",{"_index":510,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{}}}],["times",{"_index":302,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsService.html":{}}}],["timestamp",{"_index":886,"title":{},"body":{"entities/Discount.html":{},"injectables/OtpSigninProvider.html":{},"injectables/UploadToAwsProvider.html":{},"entities/User.html":{}}}],["tls",{"_index":1249,"title":{},"body":{"modules/MailModule.html":{}}}],["token",{"_index":11,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"controllers/ProductsController.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["token.dto",{"_index":383,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenProvider.html":{}}}],["token.dto.ts",{"_index":1780,"title":{},"body":{"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["token.dto.ts:17",{"_index":1782,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["token.guard",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{}}}],["token.guard.ts",{"_index":8,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{}}}],["token.guard.ts:18",{"_index":24,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard.ts:42",{"_index":32,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard.ts:77",{"_index":46,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.provider",{"_index":435,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["token.provider.ts",{"_index":1785,"title":{},"body":{"injectables/RefreshTokenProvider.html":{},"coverage.html":{}}}],["token.provider.ts:19",{"_index":1787,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["token.provider.ts:56",{"_index":1788,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["token/access",{"_index":7,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["tokend",{"_index":1789,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["tokens",{"_index":357,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["tokens')@httpcode(httpstatus.ok)@auth(authtype.none",{"_index":360,"title":{},"body":{"controllers/AuthController.html":{}}}],["tokens'})@apiresponse({status",{"_index":356,"title":{},"body":{"controllers/AuthController.html":{}}}],["tokens.provider",{"_index":432,"title":{},"body":{"modules/AuthModule.html":{},"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["tokens.provider.ts",{"_index":1061,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"coverage.html":{}}}],["tokens.provider.ts:12",{"_index":1065,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["tokens.provider.ts:38",{"_index":1071,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["tokens.provider.ts:58",{"_index":1067,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["top",{"_index":1943,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["total",{"_index":1192,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["totalamount",{"_index":1194,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Order.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["totalitems",{"_index":1391,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["totalpages",{"_index":1393,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["totalqty",{"_index":1196,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["touch",{"_index":2357,"title":{},"body":{"index.html":{}}}],["track",{"_index":1290,"title":{},"body":{"injectables/MailService.html":{}}}],["transaction",{"_index":610,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["transformer",{"_index":578,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{},"dependencies.html":{}}}],["transformtolowercase",{"_index":813,"title":{},"body":{"entities/DeliveryState.html":{},"entities/Product.html":{}}}],["transport",{"_index":1245,"title":{},"body":{"modules/MailModule.html":{}}}],["trim",{"_index":2006,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["true",{"_index":39,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"classes/InitiatePaymentDto.html":{},"modules/MailModule.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductVariant.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"guards/RolesGuard.html":{},"entities/Subscriber.html":{},"injectables/UpdateProductProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["true})@joincolumn",{"_index":899,"title":{},"body":{"entities/DiscountUsage.html":{}}}],["true})@type(undefined",{"_index":576,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["try",{"_index":81,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["twitter",{"_index":2363,"title":{},"body":{"index.html":{}}}],["txn",{"_index":657,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["type",{"_index":28,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"modules/AppModule.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":381,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateUserDto.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["type.enum.ts",{"_index":2269,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typeorm",{"_index":288,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"entities/DeliveryState.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/Order.html":{},"injectables/PaginationProvider.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"entities/Review.html":{},"injectables/ReviewsService.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/OrdersModule.html":{},"modules/PaymentModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([deliverystate",{"_index":858,"title":{},"body":{"modules/DeliveryStatesModule.html":{}}}],["typeormmodule.forfeature([discount",{"_index":935,"title":{},"body":{"modules/DiscountsModule.html":{}}}],["typeormmodule.forfeature([discountusage",{"_index":951,"title":{},"body":{"modules/DiscountsUsageModule.html":{}}}],["typeormmodule.forfeature([order",{"_index":1357,"title":{},"body":{"modules/OrdersModule.html":{}}}],["typeormmodule.forfeature([payment",{"_index":1515,"title":{},"body":{"modules/PaymentModule.html":{}}}],["typeormmodule.forfeature([product",{"_index":1763,"title":{},"body":{"modules/ProductsModule.html":{}}}],["typeormmodule.forfeature([productimage",{"_index":1603,"title":{},"body":{"modules/ProductImagesModule.html":{}}}],["typeormmodule.forfeature([productvariant",{"_index":1620,"title":{},"body":{"modules/ProductVariantsModule.html":{}}}],["typeormmodule.forfeature([review",{"_index":1831,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["typeormmodule.forfeature([subscriber",{"_index":1915,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":2102,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":480,"title":{},"body":{"guards/AuthenticationGuard.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/UpdateDeliveryStateDto.html":{}}}],["types/multer",{"_index":2249,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":96,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["unable",{"_index":312,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["unauthorizedexception",{"_index":54,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["unauthorizedexception('otp",{"_index":1058,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["unauthorizedexception('user",{"_index":1046,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{}}}],["unauthorizedexception(error",{"_index":1795,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["undefined",{"_index":50,"title":{},"body":{"guards/AccessTokenGuard.html":{},"entities/Discount.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"entities/Order.html":{},"entities/Payment.html":{},"injectables/UpdateProductProvider.html":{},"miscellaneous/variables.html":{}}}],["undefined'])@auth(authtype.none)@get('/:productid",{"_index":1708,"title":{},"body":{"controllers/ProductsController.html":{}}}],["undefined'])@delete('/:userid",{"_index":2062,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined'])@get",{"_index":2068,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined'])@get('/:userid",{"_index":2072,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined})@apibody({description",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{}}}],["undefined})@httpcode(httpstatus.ok)@auth(authtype.none)@patch('/otp",{"_index":350,"title":{},"body":{"controllers/AuthController.html":{}}}],["undefined})@post('/sign",{"_index":365,"title":{},"body":{"controllers/AuthController.html":{}}}],["undefined})@post('refresh",{"_index":359,"title":{},"body":{"controllers/AuthController.html":{}}}],["unique",{"_index":1507,"title":{},"body":{"entities/Payment.html":{},"controllers/ProductsController.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["unit",{"_index":2306,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":282,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OtpSigninProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["unlicensed",{"_index":2377,"title":{},"body":{"properties.html":{}}}],["unsubscribed",{"_index":1929,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["unsubscribeemail",{"_index":1918,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["unsubscribeemail(id",{"_index":1926,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["unsubscribing",{"_index":1928,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["unsuccessful",{"_index":660,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["unsupported",{"_index":2026,"title":{},"body":{"injectables/UploadsService.html":{}}}],["unused",{"_index":98,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["update",{"_index":877,"title":{},"body":{"injectables/DeliveryStatesService.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["update(json.stringify(req.body",{"_index":2185,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["update(otp.tostring",{"_index":1879,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["update(otpsignindto.otp.tostring",{"_index":1376,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["updated",{"_index":833,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["updatedat",{"_index":1316,"title":{},"body":{"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{}}}],["updatedatecolumn",{"_index":1336,"title":{},"body":{"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{}}}],["updatedeliverystate",{"_index":821,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{}}}],["updatedeliverystate(stateid",{"_index":828,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{}}}],["updatedeliverystatedto",{"_index":829,"title":{"classes/UpdateDeliveryStateDto.html":{}},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"classes/UpdateDeliveryStateDto.html":{},"coverage.html":{}}}],["updateproduct",{"_index":1765,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["updateproduct(id",{"_index":1772,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["updateproductprovider",{"_index":1754,"title":{"injectables/UpdateProductProvider.html":{}},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{},"coverage.html":{},"overview.html":{}}}],["updates",{"_index":849,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"index.html":{}}}],["updateuser",{"_index":2107,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuser(id",{"_index":2127,"title":{},"body":{"injectables/UsersService.html":{}}}],["upload",{"_index":621,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["uploadedfiles",{"_index":1716,"title":{},"body":{"controllers/ProductsController.html":{}}}],["uploadfile",{"_index":2020,"title":{},"body":{"injectables/UploadsService.html":{}}}],["uploadfile(file",{"_index":2023,"title":{},"body":{"injectables/UploadsService.html":{}}}],["uploading",{"_index":1984,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["uploadresult",{"_index":1994,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["uploadresult.key",{"_index":2001,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["uploads",{"_index":605,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["uploads/uploads.module",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["uploadsmodule",{"_index":158,"title":{"modules/UploadsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/UploadsModule.html":{},"modules.html":{},"overview.html":{}}}],["uploadsservice",{"_index":593,"title":{"injectables/UploadsService.html":{}},"body":{"injectables/CreateProductProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"coverage.html":{},"overview.html":{}}}],["uploadtoawsprovider",{"_index":1976,"title":{"injectables/UploadToAwsProvider.html":{}},"body":{"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"coverage.html":{},"overview.html":{}}}],["url",{"_index":2025,"title":{},"body":{"injectables/UploadsService.html":{}}}],["url(this.request.url",{"_index":1430,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["urls",{"_index":1425,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["urlsindex",{"_index":644,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["usage",{"_index":297,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsUsageService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["usage.entity",{"_index":950,"title":{},"body":{"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"entities/Order.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["usage.entity.ts",{"_index":891,"title":{},"body":{"entities/DiscountUsage.html":{},"coverage.html":{}}}],["usage.entity.ts:16",{"_index":896,"title":{},"body":{"entities/DiscountUsage.html":{}}}],["usage.entity.ts:19",{"_index":902,"title":{},"body":{"entities/DiscountUsage.html":{}}}],["usage.entity.ts:22",{"_index":895,"title":{},"body":{"entities/DiscountUsage.html":{}}}],["usage.entity.ts:26",{"_index":900,"title":{},"body":{"entities/DiscountUsage.html":{}}}],["usage.entity.ts:29",{"_index":901,"title":{},"body":{"entities/DiscountUsage.html":{}}}],["usage.module",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"modules/DiscountsModule.html":{}}}],["usage.module.ts",{"_index":948,"title":{},"body":{"modules/DiscountsUsageModule.html":{}}}],["usage.service",{"_index":294,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"modules/DiscountsUsageModule.html":{}}}],["usage.service.ts",{"_index":952,"title":{},"body":{"injectables/DiscountsUsageService.html":{},"coverage.html":{}}}],["usage.service.ts:22",{"_index":959,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["usage.service.ts:7",{"_index":955,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["usage/discounts",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"entities/DiscountUsage.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"entities/Order.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["usage/providers/discounts",{"_index":293,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsUsageService.html":{},"coverage.html":{}}}],["usagecount",{"_index":323,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsUsageService.html":{}}}],["usagelimit",{"_index":879,"title":{},"body":{"entities/Discount.html":{}}}],["use",{"_index":473,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"guards/RolesGuard.html":{}}}],["useclass",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":303,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsService.html":{}}}],["usedat",{"_index":893,"title":{},"body":{"entities/DiscountUsage.html":{}}}],["usefactory",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["useinterceptors",{"_index":1717,"title":{},"body":{"controllers/ProductsController.html":{}}}],["user",{"_index":35,"title":{"entities/User.html":{}},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ProductsController.html":{},"injectables/RefreshTokenProvider.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user.decorator",{"_index":918,"title":{},"body":{"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/UsersController.html":{}}}],["user.decorator.ts",{"_index":2206,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":769,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":752,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/PatchUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":1484,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:14",{"_index":1121,"title":{},"body":{"classes/GetUsersBaseDto.html":{}}}],["user.dto.ts:16",{"_index":1482,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:20",{"_index":1485,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:21",{"_index":753,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUsersBaseDto.html":{}}}],["user.dto.ts:24",{"_index":1486,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:28",{"_index":1481,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:32",{"_index":755,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{}}}],["user.dto.ts:36",{"_index":1488,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:8",{"_index":1483,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.email",{"_index":1087,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{}}}],["user.entity",{"_index":515,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.firstname",{"_index":1303,"title":{},"body":{"injectables/MailService.html":{}}}],["user.fullname",{"_index":1294,"title":{},"body":{"injectables/MailService.html":{}}}],["user.id",{"_index":1085,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["user.role",{"_index":1088,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{}}}],["user.sub",{"_index":326,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["user?.[field",{"_index":2391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user[0",{"_index":1057,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["userid",{"_index":958,"title":{},"body":{"injectables/DiscountsUsageService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/Order.html":{},"entities/Payment.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["username",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["userquery",{"_index":2119,"title":{},"body":{"injectables/UsersService.html":{}}}],["userquery.limit",{"_index":2137,"title":{},"body":{"injectables/UsersService.html":{}}}],["userquery.page",{"_index":2138,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":516,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OtpSigninProvider.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":2093,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.provider",{"_index":2095,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["users.provider.ts",{"_index":764,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"coverage.html":{}}}],["users.provider.ts:18",{"_index":766,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["users.provider.ts:38",{"_index":768,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["users/users.module",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":2053,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":159,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PaystackModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersquery",{"_index":2070,"title":{},"body":{"controllers/UsersController.html":{}}}],["usersrepository",{"_index":511,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/UsersService.html":{}}}],["usersservice",{"_index":1141,"title":{"injectables/UsersService.html":{}},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":471,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"index.html":{}}}],["uuid",{"_index":1993,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"dependencies.html":{}}}],["uuid4",{"_index":1992,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["uuid4()}${extension",{"_index":2011,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["v",{"_index":1017,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["v4",{"_index":1991,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["valid",{"_index":82,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["validate",{"_index":80,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["validatenested",{"_index":580,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["validating",{"_index":1844,"title":{},"body":{"guards/RolesGuard.html":{}}}],["validation",{"_index":106,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["validationschema",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":269,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/OtpSigninDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{},"dependencies.html":{}}}],["validfrom",{"_index":305,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"entities/Discount.html":{}}}],["validity",{"_index":300,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsService.html":{}}}],["validuntil",{"_index":308,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"classes/CreateDiscountDto.html":{},"entities/Discount.html":{}}}],["value",{"_index":394,"title":{},"body":{"controllers/AuthController.html":{},"classes/PaginationQueryDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":1898,"title":{},"body":{"entities/Subscriber.html":{},"entities/User.html":{}}}],["variable",{"_index":2201,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2378,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variant",{"_index":632,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["variant.color",{"_index":1660,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["variant.dto",{"_index":584,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["variant.dto.ts",{"_index":672,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"classes/PatchProductVariantDto.html":{},"coverage.html":{}}}],["variant.dto.ts:10",{"_index":1465,"title":{},"body":{"classes/PatchProductVariantDto.html":{}}}],["variant.dto.ts:14",{"_index":1468,"title":{},"body":{"classes/PatchProductVariantDto.html":{}}}],["variant.dto.ts:15",{"_index":676,"title":{},"body":{"classes/CreateProductVariantDto.html":{}}}],["variant.dto.ts:19",{"_index":681,"title":{},"body":{"classes/CreateProductVariantDto.html":{}}}],["variant.dto.ts:24",{"_index":680,"title":{},"body":{"classes/CreateProductVariantDto.html":{}}}],["variant.dto.ts:30",{"_index":678,"title":{},"body":{"classes/CreateProductVariantDto.html":{}}}],["variant.images",{"_index":1593,"title":{},"body":{"entities/ProductImage.html":{}}}],["variant.product",{"_index":1576,"title":{},"body":{"entities/Product.html":{}}}],["variant.productid",{"_index":1655,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["variant.quantity",{"_index":1666,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["variant.size",{"_index":1661,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["variant.soldout",{"_index":1659,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["variantdto",{"_index":1182,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["variantdto.color",{"_index":1970,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantdto.id",{"_index":1967,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantdto.quantity",{"_index":1972,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantdto.size",{"_index":1971,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantdto.soldout",{"_index":1973,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantid",{"_index":1183,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{},"injectables/ProductVariantsService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["variants",{"_index":563,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"injectables/FindAllProductsProvider.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"classes/PatchProductDto.html":{},"entities/Payment.html":{},"entities/Product.html":{},"classes/ProductWithVariantDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["variants.entity",{"_index":585,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{}}}],["variants.entity.ts",{"_index":1606,"title":{},"body":{"entities/ProductVariant.html":{},"coverage.html":{}}}],["variants.entity.ts:15",{"_index":1608,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:18",{"_index":1607,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:21",{"_index":1614,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:24",{"_index":1613,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:27",{"_index":1615,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:33",{"_index":1612,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:39",{"_index":1610,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.images",{"_index":1023,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["variants.module",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"modules/PaystackModule.html":{},"modules/ProductsModule.html":{}}}],["variants.module.ts",{"_index":1619,"title":{},"body":{"modules/ProductVariantsModule.html":{}}}],["variants.service",{"_index":1162,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"modules/ProductVariantsModule.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["variants.service.ts",{"_index":1621,"title":{},"body":{"injectables/ProductVariantsService.html":{},"coverage.html":{}}}],["variants.service.ts:11",{"_index":1627,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["variants.service.ts:110",{"_index":1636,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["variants.service.ts:26",{"_index":1634,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["variants.service.ts:48",{"_index":1638,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["variants.service.ts:60",{"_index":1631,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["variants/dto/create",{"_index":583,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"coverage.html":{}}}],["variants/dto/patch",{"_index":1134,"title":{},"body":{"classes/InitiatePaymentDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/ProductWithVariantDto.html":{},"coverage.html":{}}}],["variants/product",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"entities/Payment.html":{},"modules/PaystackModule.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["variants/providers/product",{"_index":1161,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["variants[${i}][images",{"_index":1731,"title":{},"body":{"controllers/ProductsController.html":{}}}],["variantsimages",{"_index":622,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["variantsimages.push(filearray",{"_index":625,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["various",{"_index":1388,"title":{},"body":{"interfaces/Paginated.html":{}}}],["vars",{"_index":99,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["verification",{"_index":2196,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["verified",{"_index":2194,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["verify",{"_index":1554,"title":{},"body":{"injectables/PaystackService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["verifying",{"_index":2155,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["verifypayment",{"_index":1547,"title":{},"body":{"injectables/PaystackService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["verifypayment(body",{"_index":1551,"title":{},"body":{"injectables/PaystackService.html":{}}}],["verifypayment(reference",{"_index":2153,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["verifypaymentprovider",{"_index":1538,"title":{"injectables/VerifyPaymentProvider.html":{}},"body":{"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"overview.html":{}}}],["version",{"_index":2375,"title":{},"body":{"properties.html":{}}}],["video",{"_index":2327,"title":{},"body":{"index.html":{}}}],["visit",{"_index":2316,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":2329,"title":{},"body":{"index.html":{}}}],["vr",{"_index":638,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["vr.quantity",{"_index":1198,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["want",{"_index":1698,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["watch",{"_index":2301,"title":{},"body":{"index.html":{}}}],["wears",{"_index":1296,"title":{},"body":{"injectables/MailService.html":{}}}],["website",{"_index":2361,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":1305,"title":{},"body":{"injectables/MailService.html":{}}}],["where('variant.id",{"_index":1654,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["whereoptions",{"_index":990,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["whereoptions.push(filteredconditions",{"_index":1018,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["whether",{"_index":42,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"guards/RolesGuard.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["white",{"_index":2003,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["without",{"_index":475,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["working",{"_index":2315,"title":{},"body":{"index.html":{}}}],["world",{"_index":259,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":1736,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["yes",{"_index":1072,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{}}}],["you'd",{"_index":2355,"title":{},"body":{"index.html":{}}}],["zipcode",{"_index":1479,"title":{},"body":{"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["zoom",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AccessTokenGuard.html":{"url":"guards/AccessTokenGuard.html","title":"guard - AccessTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AccessTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/access-token/access-token.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    guard for access token\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractRequestFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConfiguration: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/access-token/access-token.guard.ts:18\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/access-token/access-token.guard.ts:42\n                        \n                    \n\n\n            \n                \n                        function for checking if user has access token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                true or false depending on whether user is signed in or not\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractRequestFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractRequestFromHeader(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/access-token/access-token.guard.ts:77\n                        \n                    \n\n\n            \n                \n                        function for extracting the access token from the request headers\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                access token\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ConfigType } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\nimport jwtConfig from 'src/auth/config/jwt.config';\nimport { REQUEST_USER_KEY } from 'src/auth/constants/auth.constant';\n\n/**\n * guard for access token\n */\n@Injectable()\nexport class AccessTokenGuard implements CanActivate {\n  /**\n   * constructor\n   * @param jwtService\n   * @param jwtConfiguration\n   */\n  constructor(\n    /**\n     * Inject jwtService\n     */\n    private readonly jwtService: JwtService,\n\n    /**\n     * inject jwt config\n     */\n    @Inject(jwtConfig.KEY)\n    private readonly jwtConfiguration: ConfigType,\n  ) {}\n\n  /**\n   * function for checking if user has access token\n   * @param context\n   * @returns true or false depending on whether user is signed in or not\n   */\n  async canActivate(context: ExecutionContext): Promise {\n    // we can grab the request from the excetion context\n    const request = context.switchToHttp().getRequest();\n\n    // extract the token from the header\n    const token = this.extractRequestFromHeader(request);\n\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n\n    // validate the token\n    try {\n      // if the token is valid, jwt returns the payload which contains info for indetifying the user\n      const payload = await this.jwtService.verify(\n        token,\n        this.jwtConfiguration,\n      );\n\n      // setting the request.user = payload\n      request[REQUEST_USER_KEY] = payload;\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (_) {\n      throw new UnauthorizedException();\n    }\n\n    // accept or deny req based on validation\n    return true;\n  }\n\n  /**\n   * function for extracting the access token from the request headers\n   * @param request\n   * @returns access token\n   */\n  private extractRequestFromHeader(request: Request): string | undefined {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [_, token] = request.headers.authorization?.split(' ') ?? [];\n    return token;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActiveUserData.html":{"url":"interfaces/ActiveUserData.html","title":"interface - ActiveUserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActiveUserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/active-user-data.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for a user that has logged in (payload)\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    user email\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    user role\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    id for user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ActiveUserData {\n  /**\n   * id for user\n   */\n  sub: string;\n\n  /**\n   * user email\n   */\n  email: string;\n\n  /**\n   * user role\n   */\n  role: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDeliveryStatesModule\n\nDeliveryStatesModule\n\nAppModule -->\n\nDeliveryStatesModule->AppModule\n\n\n\n\n\nDiscountsModule\n\nDiscountsModule\n\nAppModule -->\n\nDiscountsModule->AppModule\n\n\n\n\n\nDiscountsUsageModule\n\nDiscountsUsageModule\n\nAppModule -->\n\nDiscountsUsageModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nAppModule -->\n\nPaymentModule->AppModule\n\n\n\n\n\nPaystackModule\n\nPaystackModule\n\nAppModule -->\n\nPaystackModule->AppModule\n\n\n\n\n\nProductImagesModule\n\nProductImagesModule\n\nAppModule -->\n\nProductImagesModule->AppModule\n\n\n\n\n\nProductVariantsModule\n\nProductVariantsModule\n\nAppModule -->\n\nProductVariantsModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nReviewsModule\n\nReviewsModule\n\nAppModule -->\n\nReviewsModule->AppModule\n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUploadsModule\n\nUploadsModule\n\nAppModule -->\n\nUploadsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            DeliveryStatesModule\n                        \n                        \n                            DiscountsModule\n                        \n                        \n                            DiscountsUsageModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            OrdersModule\n                        \n                        \n                            PaymentModule\n                        \n                        \n                            PaystackModule\n                        \n                        \n                            ProductImagesModule\n                        \n                        \n                            ProductVariantsModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            ReviewsModule\n                        \n                        \n                            SubscribersModule\n                        \n                        \n                            UploadsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport appConfig from './config/app.config';\nimport databaseConfig from './config/database.config';\nimport enviromentValidation from './config/enviroment.validation';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { MailModule } from './mail/mail.module';\nimport { SubscribersModule } from './subscribers/subscribers.module';\nimport { APP_GUARD, APP_INTERCEPTOR } from '@nestjs/core';\nimport { DataResponseInterceptor } from './common/interceptors/data-response/data-response.interceptor';\nimport { AuthenticationGuard } from './auth/guards/authentication/authentication.guard';\nimport { RolesGuard } from './auth/guards/roles/roles.guard';\nimport { AccessTokenGuard } from './auth/guards/access-token/access-token.guard';\nimport jwtConfig from './auth/config/jwt.config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ProductsModule } from './products/products.module';\nimport { ProductVariantsModule } from './product-variants/product-variants.module';\nimport { ProductImagesModule } from './product-images/product-images.module';\n\nimport { ReviewsModule } from './reviews/reviews.module';\nimport { UploadsModule } from './uploads/uploads.module';\nimport { DiscountsModule } from './discounts/discounts.module';\nimport { DiscountsUsageModule } from './discounts-usage/discounts-usage.module';\nimport { DeliveryStatesModule } from './delivery-states/delivery-states.module';\nimport { PaystackModule } from './paystack/paystack.module';\nimport { PaymentModule } from './payment/payment.module';\nimport { OrdersModule } from './orders/orders.module';\n\n/**\n * app environment\n */\nconst ENV = process.env.NODE_ENV;\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: !ENV ? '.env' : `.env.${ENV}`,\n      load: [appConfig, databaseConfig],\n      validationSchema: enviromentValidation,\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => {\n        return {\n          type: 'postgres',\n          autoLoadEntities: configService.get('database.autoLoadEntities'),\n          synchronize: configService.get('database.synchronize'),\n          port: +configService.get('database.port'),\n          username: configService.get('database.user'),\n          password: configService.get('database.password'),\n          host: configService.get('database.host'),\n          database: configService.get('database.name'),\n          ssl:\n            process.env.NODE_ENV === 'development'\n              ? false\n              : {\n                  rejectUnauthorized: false,\n                },\n          logging: process.env.NODE_ENV !== 'production',\n        };\n      },\n    }),\n    UsersModule,\n    AuthModule,\n    MailModule,\n    SubscribersModule,\n    // Importing an enviroment config specific for this module\n    ConfigModule.forFeature(jwtConfig),\n    // for asynchrousnously registering the jwt module and passing the config to the module\n    JwtModule.registerAsync(jwtConfig.asProvider()),\n    ProductsModule,\n    ProductVariantsModule,\n    ProductImagesModule,\n    ReviewsModule,\n    UploadsModule,\n    DiscountsModule,\n    DiscountsUsageModule,\n    DeliveryStatesModule,\n    PaystackModule,\n    PaymentModule,\n    OrdersModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: DataResponseInterceptor,\n    },\n    {\n      provide: APP_GUARD,\n      useClass: AuthenticationGuard,\n    },\n    {\n      provide: APP_GUARD,\n      useClass: RolesGuard,\n    },\n    AccessTokenGuard,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplyForDiscountDto.html":{"url":"classes/ApplyForDiscountDto.html","title":"class - ApplyForDiscountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplyForDiscountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/dtos/apply-for-discount.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/dtos/apply-for-discount.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class ApplyForDiscountDto {\n  @IsString()\n  @IsNotEmpty()\n  code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplyForDiscountProvider.html":{"url":"injectables/ApplyForDiscountProvider.html","title":"injectable - ApplyForDiscountProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApplyForDiscountProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/providers/apply-for-discount.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                applyForDiscount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(discountsRepository: Repository, discountsUsageService: DiscountsUsageService)\n                    \n                \n                        \n                            \n                                Defined in src/discounts/providers/apply-for-discount.provider.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        discountsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discountsUsageService\n                                                  \n                                                        \n                                                                        DiscountsUsageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        applyForDiscount\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyForDiscount(user: ActiveUserData, code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/discounts/providers/apply-for-discount.provider.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                discount\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { LessThanOrEqual, MoreThanOrEqual, Repository } from 'typeorm';\nimport { Discount } from '../discounts.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\nimport { DiscountsUsageService } from 'src/discounts-usage/providers/discounts-usage.service';\n\n@Injectable()\nexport class ApplyForDiscountProvider {\n  constructor(\n    /**\n     * injecting the discounts repository\n     */\n    @InjectRepository(Discount)\n    private readonly discountsRepository: Repository,\n\n    /**\n     * injecting the discounts usage service\n     */\n    private readonly discountsUsageService: DiscountsUsageService,\n  ) {}\n\n  /**\n   * @function checks the validity of the code and how many times the user has used it\n   * @param user\n   * @param code\n   * @returns discount\n   */\n  public async applyForDiscount(user: ActiveUserData, code: string) {\n    let discount: Discount;\n\n    try {\n      discount = await this.discountsRepository.findOne({\n        where: {\n          code,\n          validFrom: LessThanOrEqual(new Date()),\n          validUntil: MoreThanOrEqual(new Date()),\n        },\n      });\n    } catch (error) {\n      console.log(error);\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    //Handle the discount does not exist\n    if (!discount) {\n      throw new BadRequestException(\n        'The discount code has expired or does not exist',\n      );\n    }\n\n    // check the usage count\n    const usageCount = await this.discountsUsageService.countDiscountUsage(\n      discount.id,\n      user.sub,\n    );\n\n    if (usageCount >= discount.usageLimit) {\n      return null;\n    }\n\n    return discount;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n            \n                Description\n            \n            \n                controller for the auth route\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                otpSignin\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                refreshTokens\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        otpSignin\n                        \n                    \n                \n            \n            \n                \n                        \n                    otpSignin(otpSigninDto: OtpSigninDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It signs in the user with a valid otp'})@ApiResponse({status: 200, description: 'Login Successfully', example: undefined})@ApiBody({description: 'Contains the  otp', required: true, type: OtpSigninDto, examples: undefined})@HttpCode(HttpStatus.OK)@Auth(AuthType.None)@Patch('/otp-signin')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:115\n                        \n                    \n\n\n            \n                \n                        route for otp signin\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otpSigninDto\n                                            \n                                                            OtpSigninDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshTokens(refreshTokenDto: RefreshTokenDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It creates  new access and refresh tokens'})@ApiResponse({status: 200, description: 'Access and refresh tokens are created successfully', example: undefined})@ApiBody({description: 'Contains the refresh token', required: true, type: RefreshTokenDto, examples: undefined})@Post('refresh-tokens')@HttpCode(HttpStatus.OK)@Auth(AuthType.None)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:155\n                        \n                    \n\n\n            \n                \n                        route for refresh tokens\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshTokenDto\n                                            \n                                                            RefreshTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: SignInDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It signs in a user with valid email and password'})@ApiResponse({status: 200, description: 'User is signed in successfully', example: undefined})@ApiBody({description: 'Signs in a user', required: true, type: SignInDto, examples: undefined})@Post('/sign-in')@Auth(AuthType.None)@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:76\n                        \n                    \n\n\n            \n                \n                        route for sign in\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                access token and refresh token\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  HttpCode,\n  HttpStatus,\n  Patch,\n  Post,\n} from '@nestjs/common';\nimport { SignInDto } from './dtos/sign-in.dto';\nimport { AuthService } from './providers/auth.service';\nimport { Auth } from './decorator/auth.decorator';\nimport { AuthType } from './enums/auth-type.enum';\nimport { RefreshTokenDto } from './dtos/refresh-token.dto';\nimport { ApiBody, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { OtpSigninDto } from './dtos/otpSignin.dto';\n\n/**\n * controller for the auth route\n */\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  /**\n   * constructor\n   * @param authService\n   */\n  constructor(\n    /**\n     * injecting the auth service\n     */\n    private readonly authService: AuthService,\n  ) {}\n\n  /**\n   * route for sign in\n   * @param signInDto\n   * @returns access token and refresh token\n   */\n  @ApiOperation({\n    summary: 'It signs in a user with valid email and password',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'User is signed in successfully',\n    example: {\n      summary: 'Access and refresh token',\n      value: {\n        accessToken: 'jsbfiwhvfquobdfj',\n        refreshToken: 'jsbfiwhvfquobdfj',\n      },\n    },\n  })\n  @ApiBody({\n    description: 'Signs in a user',\n    required: true,\n    type: SignInDto,\n    examples: {\n      example1: {\n        summary: 'Valid request example',\n        value: {\n          email: 'iloghaluagneskc@gmail.com',\n          password: '@Password1',\n        },\n      },\n      example2: {\n        summary: 'Invalid request example (missing password)',\n        value: {\n          email: 'iloghaluagneskc@gmail.com',\n        },\n      },\n    },\n  })\n  @Post('/sign-in')\n  @Auth(AuthType.None)\n  @HttpCode(HttpStatus.OK)\n  public signIn(@Body() signInDto: SignInDto) {\n    return this.authService.signIn(signInDto);\n  }\n\n  /**\n   * route for otp signin\n   */\n  @ApiOperation({\n    summary: 'It signs in the user with a valid otp',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Login Successfully',\n    example: {\n      value: {\n        message: 'Login successfully',\n      },\n    },\n  })\n  @ApiBody({\n    description: 'Contains the  otp',\n    required: true,\n    type: OtpSigninDto,\n    examples: {\n      example1: {\n        summary: 'Valid request example',\n        value: {\n          otp: 2354,\n        },\n      },\n      example2: {\n        summary: 'Invalid request example (missing otp)',\n        value: {},\n      },\n    },\n  })\n  @HttpCode(HttpStatus.OK)\n  @Auth(AuthType.None)\n  @Patch('/otp-signin')\n  public otpSignin(@Body() otpSigninDto: OtpSigninDto) {\n    return this.authService.otpSignin(otpSigninDto);\n  }\n\n  /**\n   * route for refresh tokens\n   */\n  @ApiOperation({\n    summary: 'It creates  new access and refresh tokens',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Access and refresh tokens are created successfully',\n    example: {\n      value: {\n        accessToken: 'jsbfiwhvfquobdfj',\n        refreshToken: 'jsbfiwhvfquobdfj',\n      },\n    },\n  })\n  @ApiBody({\n    description: 'Contains the refresh token',\n    required: true,\n    type: RefreshTokenDto,\n    examples: {\n      example1: {\n        summary: 'Valid request example',\n        value: {\n          refreshToken: 'jbfwihfubfjkebiejhfbw',\n        },\n      },\n      example2: {\n        summary: 'Invalid request example (missing refresh token)',\n        value: {},\n      },\n    },\n  })\n  @Post('refresh-tokens')\n  @HttpCode(HttpStatus.OK)\n  @Auth(AuthType.None)\n  public async refreshTokens(@Body() refreshTokenDto: RefreshTokenDto) {\n    // console.log('re', refreshTokenDto);\n    return await this.authService.refreshTokens(refreshTokenDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nGenerateTokensProvider\n\nGenerateTokensProvider\n\nAuthModule -->\n\nGenerateTokensProvider->AuthModule\n\n\n\n\n\nOtpSigninProvider\n\nOtpSigninProvider\n\nAuthModule -->\n\nOtpSigninProvider->AuthModule\n\n\n\n\n\nRefreshTokenProvider\n\nRefreshTokenProvider\n\nAuthModule -->\n\nRefreshTokenProvider->AuthModule\n\n\n\n\n\nSignInProvider\n\nSignInProvider\n\nAuthModule -->\n\nSignInProvider->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            GenerateTokensProvider\n                        \n                        \n                            OtpSigninProvider\n                        \n                        \n                            RefreshTokenProvider\n                        \n                        \n                            SignInProvider\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { AuthService } from './providers/auth.service';\nimport { AuthController } from './auth.controller';\nimport { UsersModule } from 'src/users/users.module';\nimport { SignInProvider } from './providers/sign-in.provider';\nimport { GenerateTokensProvider } from './providers/generate-tokens.provider';\nimport { ConfigModule } from '@nestjs/config';\nimport jwtConfig from './config/jwt.config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { RefreshTokenProvider } from './providers/refresh-token.provider';\nimport { OtpSigninProvider } from './providers/otp-signin.provider';\n\n@Module({\n  providers: [\n    AuthService,\n\n    SignInProvider,\n    GenerateTokensProvider,\n\n    RefreshTokenProvider,\n    OtpSigninProvider,\n  ],\n  controllers: [AuthController],\n  imports: [\n    forwardRef(() => UsersModule),\n    ConfigModule.forFeature(jwtConfig),\n    // for asynchrousnously registering the jwt module and passing the config to the module\n    JwtModule.registerAsync(jwtConfig.asProvider()),\n  ],\n  exports: [],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                auth service for the auth module\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                otpSignin\n                            \n                            \n                                    Public\n                                    Async\n                                refreshTokens\n                            \n                            \n                                    Public\n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(signInProvider: SignInProvider, otpSigninProvider: OtpSigninProvider, refreshTokenProvider: RefreshTokenProvider)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        signInProvider\n                                                  \n                                                        \n                                                                        SignInProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        otpSigninProvider\n                                                  \n                                                        \n                                                                        OtpSigninProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        refreshTokenProvider\n                                                  \n                                                        \n                                                                        RefreshTokenProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        otpSignin\n                        \n                    \n                \n            \n            \n                \n                        \n                    otpSignin(otpSigninDto: OtpSigninDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:52\n                        \n                    \n\n\n            \n                \n                        function for resetting password\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otpSigninDto\n                                            \n                                                            OtpSigninDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshTokens(refreshTokenDto: RefreshTokenDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:61\n                        \n                    \n\n\n            \n                \n                        function for refreshing access token after it expires\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshTokenDto\n                                            \n                                                            RefreshTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                access and refresh tokens\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: SignInDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:43\n                        \n                    \n\n\n            \n                \n                        function for signing in a user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                access and refresh tokens\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SignInDto } from 'src/auth/dtos/sign-in.dto';\nimport { SignInProvider } from './sign-in.provider';\nimport { RefreshTokenDto } from 'src/auth/dtos/refresh-token.dto';\nimport { RefreshTokenProvider } from './refresh-token.provider';\nimport { OtpSigninDto } from '../dtos/otpSignin.dto';\nimport { OtpSigninProvider } from './otp-signin.provider';\n\n/**\n * auth service for the auth module\n */\n@Injectable()\nexport class AuthService {\n  /**\n   * constructor\n   * @param signInProvider\n   * @param forgotPasswordProvider\n   * @param resetPasswordProvider\n   * @param refreshTokenProvider\n   */\n  constructor(\n    /**\n     * injecting the sign in provider\n     */\n    private readonly signInProvider: SignInProvider,\n\n    /**\n     * injecting the otp sign in provider\n     */\n    private readonly otpSigninProvider: OtpSigninProvider,\n\n    /**\n     * injecting the refresh token provider\n     */\n    private readonly refreshTokenProvider: RefreshTokenProvider,\n  ) {}\n\n  /**\n   * function for signing in a user\n   * @param signInDto\n   * @returns access and refresh tokens\n   */\n  public async signIn(signInDto: SignInDto) {\n    return await this.signInProvider.signIn(signInDto);\n  }\n\n  /**\n   * function for resetting password\n   * @param resetPasswordDto\n   * @returns user\n   */\n  public async otpSignin(otpSigninDto: OtpSigninDto) {\n    return await this.otpSigninProvider.signInWithOtp(otpSigninDto);\n  }\n\n  /**\n   * function for refreshing access token after it expires\n   * @param refreshTokenDto\n   * @returns access and refresh tokens\n   */\n  public async refreshTokens(refreshTokenDto: RefreshTokenDto) {\n    return await this.refreshTokenProvider.refreshTokens(refreshTokenDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/authentication/authentication.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    guard for authentication\n\n                \n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authTypeGuardMap\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                defaultAuthType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, accessTokenGuard: AccessTokenGuard)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/authentication/authentication.guard.ts:33\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessTokenGuard\n                                                  \n                                                        \n                                                                        AccessTokenGuard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/authentication/authentication.guard.ts:59\n                        \n                    \n\n\n            \n                \n                        function for authenticating a user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                true or false based on whether user is logged in or not\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\n// import { Observable } from 'rxjs';\nimport { AccessTokenGuard } from '../access-token/access-token.guard';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\nimport { AUTH_TYPE_KEY } from 'src/auth/constants/auth.constant';\n\n/**\n * guard for authentication\n */\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  // using static means you can use the name of the property of the class without the \"this\" keyword\n  /**\n   * default auth type\n   */\n  private static readonly defaultAuthType = AuthType.Bearer;\n\n  /**\n   * map for auth types and guards they use\n   */\n  private readonly authTypeGuardMap: Record = {\n    [AuthType.Bearer]: this.accessTokenGuard,\n    [AuthType.None]: { canActivate: () => true },\n  };\n\n  /**\n   * constructor\n   * @param reflector\n   * @param accessTokenGuard\n   */\n  constructor(\n    /**\n     * injecting the reflector class\n     * The reflector class makes you access diff metadata from the execution context\n     */\n    private readonly reflector: Reflector,\n\n    /**\n     * Injecting the access token guard\n     *\n     */\n    private readonly accessTokenGuard: AccessTokenGuard,\n  ) {}\n\n  /**\n   * function for authenticating a user\n   * @param context\n   * @returns true or false based on whether user is logged in or not\n   */\n  async canActivate(context: ExecutionContext): Promise {\n    // Get all the auth types from reflector\n    // This returns an array of the auth types for a specific class or method in a class\n    const authTypes = this.reflector.getAllAndOverride(AUTH_TYPE_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]) ?? [AuthenticationGuard.defaultAuthType];\n\n    // create an array of the guards\n    const guards = authTypes.map((type) => this.authTypeGuardMap[type]).flat();\n\n    // Default error\n    const error = new UnauthorizedException();\n\n    // loop through the guards and fire the canActivate\n    for (const instance of guards) {\n      let canActivate;\n\n      try {\n        canActivate = await Promise.resolve(instance.canActivate(context));\n      } catch (err) {\n        throw err;\n      }\n\n      if (canActivate) {\n        return true;\n      }\n    }\n\n    throw error;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClearOtpAndExpiryTimeProvider.html":{"url":"injectables/ClearOtpAndExpiryTimeProvider.html","title":"injectable - ClearOtpAndExpiryTimeProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClearOtpAndExpiryTimeProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/clear-otp-and-expiry-time.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                clearOtpAndExpiryTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/clear-otp-and-expiry-time.provider.ts:7\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        clearOtpAndExpiryTime\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearOtpAndExpiryTime(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/clear-otp-and-expiry-time.provider.ts:25\n                        \n                    \n\n\n            \n                \n                        function for clearing otp after login\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from '../user.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class ClearOtpAndExpiryTimeProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * injecting the users repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for clearing otp after login\n   * @param user\n   * @returns user\n   */\n  public async clearOtpAndExpiryTime(user: User) {\n    const newUserObj = {\n      ...user,\n      otp: null,\n      otpExpire: null,\n    };\n\n    try {\n      return await this.usersRepository.save(newUserObj);\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDeliveryStateDto.html":{"url":"classes/CreateDeliveryStateDto.html","title":"class - CreateDeliveryStateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDeliveryStateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery-states/dtos/create-delivery-state.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                fee\n                            \n                            \n                                    \n                                    \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        fee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery-states/dtos/create-delivery-state.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery-states/dtos/create-delivery-state.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateDeliveryStateDto {\n  @IsString()\n  @IsNotEmpty()\n  state: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  fee: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDiscountDto.html":{"url":"classes/CreateDiscountDto.html","title":"class - CreateDiscountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDiscountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/dtos/create-discount.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                percentOff\n                            \n                            \n                                    \n                                    \n                                validUntil\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/dtos/create-discount.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        percentOff\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/dtos/create-discount.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        validUntil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/dtos/create-discount.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsDate, IsInt, IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateDiscountDto {\n  @IsString()\n  @IsNotEmpty()\n  code: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  percentOff: number;\n\n  @IsDate()\n  @IsNotEmpty()\n  validUntil: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateDiscountProvider.html":{"url":"injectables/CreateDiscountProvider.html","title":"injectable - CreateDiscountProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateDiscountProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/providers/create-discount.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createDiscount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(discountsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/discounts/providers/create-discount.provider.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        discountsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createDiscount\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDiscount(createDiscountDto: CreateDiscountDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/discounts/providers/create-discount.provider.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDiscountDto\n                                            \n                                                            CreateDiscountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                discount obj\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Discount } from '../discounts.entity';\nimport { Repository } from 'typeorm';\nimport { CreateDiscountDto } from '../dtos/create-discount.dto';\n\n@Injectable()\nexport class CreateDiscountProvider {\n  constructor(\n    /**\n     * injecting the discounts repository\n     */\n    @InjectRepository(Discount)\n    private readonly discountsRepository: Repository,\n  ) {}\n\n  /**\n   * @function creates a discount\n   * @param createDiscountDto\n   * @returns discount obj\n   */\n  public async createDiscount(\n    createDiscountDto: CreateDiscountDto,\n  ): Promise {\n    let discount = this.discountsRepository.create(createDiscountDto);\n\n    // save the discount to the db\n    try {\n      discount = await this.discountsRepository.save(discount);\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    return discount;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/createProductDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                brand\n                            \n                            \n                                    \n                                    \n                                category\n                            \n                            \n                                    \n                                    \n                                clothType\n                            \n                            \n                                    \n                                    \n                                discount\n                            \n                            \n                                    \n                                    \n                                dressStyle\n                            \n                            \n                                    \n                                    \n                                longDescription\n                            \n                            \n                                    \n                                    \n                                material\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                shortDescription\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                variants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        brand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        clothType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dressStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        longDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        material\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        shortDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProductVariant[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsNotEmpty()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:57\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsInt,\n  IsNotEmpty,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { CreateProductVariantDto } from 'src/product-variants/dto/create-product-variant.dto';\nimport { ProductVariant } from 'src/product-variants/product-variants.entity';\n\nexport class CreateProductDto {\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  price: number;\n\n  @IsInt()\n  @IsNotEmpty()\n  discount: number;\n\n  @IsString()\n  @IsNotEmpty()\n  category: string;\n\n  @IsString()\n  @IsNotEmpty()\n  dressStyle: string;\n\n  @IsString()\n  @IsNotEmpty()\n  clothType: string;\n\n  @IsString()\n  @IsNotEmpty()\n  material: string;\n\n  @IsString()\n  @IsNotEmpty()\n  brand: string;\n\n  @IsString()\n  @IsNotEmpty()\n  shortDescription: string;\n\n  @IsString()\n  @IsNotEmpty()\n  longDescription: string;\n\n  @IsArray()\n  @IsNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => CreateProductVariantDto)\n  variants: ProductVariant[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateProductProvider.html":{"url":"injectables/CreateProductProvider.html","title":"injectable - CreateProductProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateProductProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/providers/create-product.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataSource: DataSource, uploadsService: UploadsService)\n                    \n                \n                        \n                            \n                                Defined in src/products/providers/create-product.provider.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uploadsService\n                                                  \n                                                        \n                                                                        UploadsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProduct(createProductDto: CreateProductDto, images: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/create-product.provider.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                images\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                a product\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { DataSource } from 'typeorm';\nimport { Product } from '../product.entity';\nimport { CreateProductDto } from '../dtos/createProductDto';\nimport { UploadsService } from 'src/uploads/providers/uploads.service';\nimport { ProductVariant } from 'src/product-variants/product-variants.entity';\nimport { ProductImage } from 'src/product-images/product-image.entity';\n\n@Injectable()\nexport class CreateProductProvider {\n  constructor(\n    /**\n     * Injecting datasource\n     */\n    private readonly dataSource: DataSource,\n\n    /**\n     * injecting uploads service\n     */\n    private readonly uploadsService: UploadsService,\n  ) {}\n\n  /**\n   * @function creates a product\n   * @param createProductDto\n   * @param images\n   * @returns a product\n   */\n  public async createProduct(\n    createProductDto: CreateProductDto,\n    images: { [key: string]: Express.Multer.File[] },\n  ): Promise {\n    // start query transaction\n    // create Query Runner instance\n    const queryRunner = this.dataSource.createQueryRunner();\n    try {\n      // connect query runner to datasource\n      await queryRunner.connect();\n      // start transaction\n      await queryRunner.startTransaction();\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error) {\n      throw new RequestTimeoutException('Could not connect to datasource');\n    }\n\n    try {\n      // create the product\n      const product = queryRunner.manager.create(Product, {\n        ...createProductDto,\n        variants: [],\n      });\n\n      // save the product\n      const savedProduct = await queryRunner.manager.save(product);\n\n      // upload the images in the variants\n      const variantsImages = [];\n\n      Object.entries(images).forEach(\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        ([key, fileArray]) => {\n          variantsImages.push(fileArray);\n        },\n      );\n\n      const storedImagesUrls = [];\n\n      // loop through the array of files and upload them\n      for (let i = 0; i  await this.uploadsService.uploadFile(file),\n          ),\n        );\n        storedImagesUrls.push(urls);\n      }\n\n      // loop through the product variants and create product variants\n      const savedVariants = [];\n\n      for (const variant of createProductDto.variants) {\n        /**\n         * param\n         * entity\n         * dto\n         */\n        const prVariant = queryRunner.manager.create(ProductVariant, {\n          ...variant,\n          product: savedProduct,\n        });\n\n        const vr = await queryRunner.manager.save(prVariant);\n        savedVariants.push(vr);\n      }\n\n      // loop through the images and create a product image\n      const productImages = storedImagesUrls\n        .map((imgUrls: string[], urlsIndex) =>\n          imgUrls.map((imgUrl, index) =>\n            queryRunner.manager.create(ProductImage, {\n              imagePath: imgUrl,\n              displayOrder: index,\n              productVariant: savedVariants[urlsIndex],\n            }),\n          ),\n        )\n        .flat();\n\n      productImages.map(async (image) => await queryRunner.manager.save(image));\n\n      // if successful commit\n      // ensures the txn is committed to the db\n      await queryRunner.commitTransaction();\n\n      // return product\n      return savedProduct;\n    } catch (error) {\n      // if unsuccessful rollback\n      // we rollback the txn here if it is not successful\n      await queryRunner.rollbackTransaction();\n      throw new ConflictException('Could not complete the transaction', {\n        description: String(error),\n      });\n    } finally {\n      // relsease the connection\n      // release connection whether it was successful or not\n      try {\n        await queryRunner.release();\n      } catch (error) {\n        throw new RequestTimeoutException('Could not release the connection', {\n          description: String(error),\n        });\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductVariantDto.html":{"url":"classes/CreateProductVariantDto.html","title":"class - CreateProductVariantDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductVariantDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-variants/dto/create-product-variant.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                color\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                images\n                            \n                            \n                                    \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/create-product-variant.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/create-product-variant.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/create-product-variant.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/create-product-variant.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsInt,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Min,\n  ValidateNested,\n} from 'class-validator';\n\nexport class CreateProductVariantDto {\n  @IsString()\n  @IsNotEmpty()\n  color: string;\n\n  @IsString()\n  @IsNotEmpty()\n  size: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  @Min(1)\n  quantity: number;\n\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => String)\n  images?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReviewDto.html":{"url":"classes/CreateReviewDto.html","title":"class - CreateReviewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReviewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/dtos/create-review.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                productId\n                            \n                            \n                                    \n                                    \n                                review\n                            \n                            \n                                    \n                                    \n                                reviewer\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                stars\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/create-review.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        review\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/create-review.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        reviewer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/create-review.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        stars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()@Min(1, {message: 'Rating must be at least 1 star'})@Max(5, {message: 'Rating cannot exceed 5 stars'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/create-review.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsNotEmpty, IsString, Max, Min } from 'class-validator';\n\nexport class CreateReviewDto {\n  @IsString()\n  @IsNotEmpty()\n  reviewer: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  @Min(1, { message: 'Rating must be at least 1 star' })\n  @Max(5, { message: 'Rating cannot exceed 5 stars' })\n  stars: number;\n\n  @IsString()\n  @IsNotEmpty()\n  review: string;\n\n  @IsString()\n  @IsNotEmpty()\n  productId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateReviewProvider.html":{"url":"injectables/CreateReviewProvider.html","title":"injectable - CreateReviewProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateReviewProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/providers/create-review.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createReview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reviewsRepository: Repository, productsService: ProductsService)\n                    \n                \n                        \n                            \n                                Defined in src/reviews/providers/create-review.provider.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reviewsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productsService\n                                                  \n                                                        \n                                                                        ProductsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createReview\n                        \n                    \n                \n            \n            \n                \n                        \n                    createReview(createReviewDto: CreateReviewDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/reviews/providers/create-review.provider.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createReviewDto\n                                            \n                                                            CreateReviewDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a review\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { CreateReviewDto } from '../dtos/create-review.dto';\nimport { Review } from '../reviews.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProductsService } from 'src/products/providers/products.service';\n\n@Injectable()\nexport class CreateReviewProvider {\n  constructor(\n    /**\n     * injecting the reviews repository\n     */\n    @InjectRepository(Review)\n    private readonly reviewsRepository: Repository,\n\n    /**\n     * injecting the products service\n     */\n    private readonly productsService: ProductsService,\n  ) {}\n\n  /**\n   * @function creates a review\n   * @param createReviewDto\n   * @param productId\n   * @returns  a review\n   */\n  public async createReview(createReviewDto: CreateReviewDto): Promise {\n    // find product\n    const product = await this.productsService.findProductById(\n      createReviewDto.productId,\n    );\n\n    // create a new review\n    let newReview = this.reviewsRepository.create({\n      reviewer: createReviewDto.reviewer,\n      review: createReviewDto.review,\n      stars: createReviewDto.stars,\n      product: product,\n    });\n\n    // save the review to the db\n    try {\n      newReview = await this.reviewsRepository.save(newReview);\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    return {\n      id: newReview.id,\n      reviewer: newReview.reviewer,\n      stars: newReview.stars,\n      review: newReview.review,\n      dateCreated: newReview.dateCreated,\n      product: newReview.product.id,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSubscriberDto.html":{"url":"classes/CreateSubscriberDto.html","title":"class - CreateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dtos/create-subscriber.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto for creating a subscriber\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the email of the subscriber', example: 'Favour@gmail.com'})@IsEmail()@MaxLength(96)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dtos/create-subscriber.dto.ts:18\n                        \n                    \n\n            \n                \n                    email address\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, MaxLength } from 'class-validator';\n\n/**\n * dto for creating a subscriber\n */\nexport class CreateSubscriberDto {\n  /**\n   * email address\n   */\n  @ApiProperty({\n    description: 'This is the email of the subscriber',\n    example: 'Favour@gmail.com',\n  })\n  @IsEmail()\n  @MaxLength(96)\n  @IsNotEmpty()\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto class for creating user dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the email of the user', example: 'Favour@gmail.com'})@IsEmail()@MaxLength(96)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:21\n                        \n                    \n\n            \n                \n                    user email address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the role of the user', example: 'Admin'})@IsEnum(Role)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:32\n                        \n                    \n\n            \n                \n                    user role\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsEnum, IsNotEmpty, MaxLength } from 'class-validator';\n// import { accountType } from '../enums/account-type.enum';\n// import { Role } from 'src/auth/enums/role-type.enum';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Role } from 'src/auth/enums/role-type.enum';\n\n/**\n * dto class for creating user dto\n */\nexport class CreateUserDto {\n  /**\n   * user email address\n   */\n  @ApiProperty({\n    description: 'This is the email of the user',\n    example: 'Favour@gmail.com',\n  })\n  @IsEmail()\n  @MaxLength(96)\n  @IsNotEmpty()\n  email: string;\n\n  /**\n   * user role\n   */\n  @ApiProperty({\n    description: 'This is the role of the user',\n    example: 'Admin',\n  })\n  @IsEnum(Role)\n  @IsNotEmpty()\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUsersProvider.html":{"url":"injectables/CreateUsersProvider.html","title":"injectable - CreateUsersProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateUsersProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/create-users.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider class for creating user\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/create-users.provider.ts:18\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/create-users.provider.ts:38\n                        \n                    \n\n\n            \n                \n                        function for creating user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                created user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  forwardRef,\n  Inject,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { CreateUserDto } from '../dtos/create-user.dto';\nimport { Repository } from 'typeorm';\nimport { User } from '../user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n/**\n * provider class for creating user\n */\n@Injectable()\nexport class CreateUsersProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   * @param hashingProvider\n   * @param mailService\n   */\n  constructor(\n    /**\n     * inhjecting the user repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for creating user\n   * @param createUserDto\n   * @returns created user\n   */\n  public async createUser(createUserDto: CreateUserDto) {\n    // create a new user\n    let newUser = this.usersRepository.create({\n      ...createUserDto,\n    });\n\n    // save the user to the db\n    try {\n      newUser = await this.usersRepository.save(newUser);\n    } catch (error) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    return {\n      id: newUser.id,\n      email: newUser.email,\n      role: newUser.role,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataResponseInterceptor.html":{"url":"injectables/DataResponseInterceptor.html","title":"injectable - DataResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/data-response/data-response.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for the data response interceptor\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/data-response/data-response.interceptor.ts:14\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/interceptors/data-response/data-response.interceptor.ts:32\n                        \n                    \n\n\n            \n                \n                        function for formatting the response data\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                the response in {apiVersion: \"1.0.0\", data: ...} format\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { map, Observable } from 'rxjs';\n\n/**\n * provider for the data response interceptor\n */\n@Injectable()\nexport class DataResponseInterceptor implements NestInterceptor {\n  /**\n   * constructor\n   * @param configService\n   */\n  constructor(\n    /**\n     * injecting config service\n     */\n    private readonly configService: ConfigService,\n  ) {}\n\n  /**\n   * function for formatting the response data\n   * @param context\n   * @param next\n   * @returns the response in {apiVersion: \"1.0.0\", data: ...} format\n   */\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    // console.log('Before ...');\n    // before method execution\n    return next.handle().pipe(\n      map((data) => ({\n        apiVersion: this.configService.get('appConfig.apiVersion'),\n        data: data,\n      })),\n    );\n    // After method execution\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DeliveryState.html":{"url":"entities/DeliveryState.html","title":"entity - DeliveryState","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DeliveryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery-states/delivery-state.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dateCreated\n                            \n                            \n                                    \n                                fee\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery-states/delivery-state.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery-states/delivery-state.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery-states/delivery-state.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery-states/delivery-state.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BeforeInsert,\n  BeforeUpdate,\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class DeliveryState {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  state: string;\n\n  @Column()\n  fee: number;\n\n  @CreateDateColumn()\n  dateCreated: Date;\n\n  @BeforeInsert()\n  @BeforeUpdate()\n  transformToLowercase() {\n    if (this.state) {\n      this.state = this.state.toLowerCase();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DeliveryStatesController.html":{"url":"controllers/DeliveryStatesController.html","title":"controller - DeliveryStatesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DeliveryStatesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery-states/delivery-states.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                delivery-states\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                createDeliveryState\n                            \n                            \n                                    \n                                    \n                                    Public\n                                findDeliveryStateByState\n                            \n                            \n                                    \n                                    \n                                    Public\n                                updateDeliveryState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        createDeliveryState\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDeliveryState(createDeliveryStateDto: CreateDeliveryStateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Roles(Role.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/delivery-states/delivery-states.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDeliveryStateDto\n                                            \n                                                            CreateDeliveryStateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        findDeliveryStateByState\n                        \n                    \n                \n            \n            \n                \n                        \n                    findDeliveryStateByState(state: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Auth(AuthType.None)@Get('/:state')\n                \n            \n\n                    \n                        \n                            Defined in src/delivery-states/delivery-states.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                delivery state\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        updateDeliveryState\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDeliveryState(stateId: string, updateDeliveryStateDto: UpdateDeliveryStateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.ADMIN)@Patch('/:stateId')\n                \n            \n\n                    \n                        \n                            Defined in src/delivery-states/delivery-states.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stateId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDeliveryStateDto\n                                            \n                                                            UpdateDeliveryStateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                updated delivery state\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post } from '@nestjs/common';\nimport { DeliveryStatesService } from './providers/delivery-states.service';\nimport { CreateDeliveryStateDto } from './dtos/create-delivery-state.dto';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { Role } from 'src/auth/enums/role-type.enum';\nimport { Auth } from 'src/auth/decorator/auth.decorator';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\nimport { UpdateDeliveryStateDto } from './dtos/update-delivery-state.dto';\n\n@Controller('delivery-states')\nexport class DeliveryStatesController {\n  constructor(\n    /**\n     * injecting the delivery states service\n     */\n    private readonly deliveryStatesService: DeliveryStatesService,\n  ) {}\n\n  /**\n   * @function creates a delivery state\n   * @param createDeliveryStateDto\n   */\n  @Post()\n  @Roles(Role.ADMIN)\n  public createDeliveryState(\n    @Body() createDeliveryStateDto: CreateDeliveryStateDto,\n  ) {\n    return this.deliveryStatesService.createDeliveryState(\n      createDeliveryStateDto,\n    );\n  }\n\n  /**\n   * @function finds a delivery state by name\n   * @param state\n   * @returns delivery state\n   */\n  @Auth(AuthType.None)\n  @Get('/:state')\n  public findDeliveryStateByState(@Param('state') state: string) {\n    return this.deliveryStatesService.findDeliveryStateByName(state);\n  }\n\n  /**\n   * @function updates a delivery state\n   * @param updateDeliveryStateDto\n   * @returns updated delivery state\n   */\n  @Roles(Role.ADMIN)\n  @Patch('/:stateId')\n  public updateDeliveryState(\n    @Param('stateId') stateId: string,\n    @Body() updateDeliveryStateDto: UpdateDeliveryStateDto,\n  ) {\n    return this.deliveryStatesService.updateDeliveryState(\n      stateId,\n      updateDeliveryStateDto,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DeliveryStatesModule.html":{"url":"modules/DeliveryStatesModule.html","title":"module - DeliveryStatesModule","body":"\n                   \n\n\n\n\n    Modules\n    DeliveryStatesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DeliveryStatesModule\n\n\n\ncluster_DeliveryStatesModule_providers\n\n\n\n\nDeliveryStatesService\n\nDeliveryStatesService\n\n\n\nDeliveryStatesModule\n\nDeliveryStatesModule\n\nDeliveryStatesModule -->\n\nDeliveryStatesService->DeliveryStatesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/delivery-states/delivery-states.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DeliveryStatesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DeliveryStatesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DeliveryStatesController } from './delivery-states.controller';\nimport { DeliveryStatesService } from './providers/delivery-states.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { DeliveryState } from './delivery-state.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([DeliveryState])],\n  controllers: [DeliveryStatesController],\n  providers: [DeliveryStatesService],\n})\nexport class DeliveryStatesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeliveryStatesService.html":{"url":"injectables/DeliveryStatesService.html","title":"injectable - DeliveryStatesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeliveryStatesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery-states/providers/delivery-states.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createDeliveryState\n                            \n                            \n                                    Public\n                                    Async\n                                findDeliveryStateByName\n                            \n                            \n                                    Public\n                                    Async\n                                updateDeliveryState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deliveryStateRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/delivery-states/providers/delivery-states.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deliveryStateRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createDeliveryState\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDeliveryState(createDeliveryStateDto: CreateDeliveryStateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/delivery-states/providers/delivery-states.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDeliveryStateDto\n                                            \n                                                            CreateDeliveryStateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                delivery state\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findDeliveryStateByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findDeliveryStateByName(state: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/delivery-states/providers/delivery-states.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                delivery state\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateDeliveryState\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDeliveryState(stateId: string, updateDeliveryStateDto: UpdateDeliveryStateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/delivery-states/providers/delivery-states.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stateId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDeliveryStateDto\n                                            \n                                                            UpdateDeliveryStateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                updated delivery state\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { DeliveryState } from '../delivery-state.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CreateDeliveryStateDto } from '../dtos/create-delivery-state.dto';\nimport { UpdateDeliveryStateDto } from '../dtos/update-delivery-state.dto';\n\n@Injectable()\nexport class DeliveryStatesService {\n  constructor(\n    /**\n     * injecting the delivery states repository\n     */\n    @InjectRepository(DeliveryState)\n    private readonly deliveryStateRepository: Repository,\n  ) {}\n\n  /**\n   * @function creates a delivery state resource\n   * @param createDeliveryStateDto\n   * @returns delivery state\n   */\n  public async createDeliveryState(\n    createDeliveryStateDto: CreateDeliveryStateDto,\n  ) {\n    let deliveryState: DeliveryState;\n\n    deliveryState = this.deliveryStateRepository.create(createDeliveryStateDto);\n\n    try {\n      deliveryState = await this.deliveryStateRepository.save(deliveryState);\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    return deliveryState;\n  }\n\n  /**\n   * @function finds a delivery state based on the state\n   * @param state\n   * @returns delivery state\n   */\n  public async findDeliveryStateByName(state: string) {\n    let deliveryState;\n    try {\n      deliveryState = await this.deliveryStateRepository.findOneBy({\n        state: state,\n      });\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (err: any) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    /**\n     * Handle the delivery state does not exist\n     */\n    if (!deliveryState) {\n      throw new BadRequestException('The delivery state does not exist');\n    }\n    return deliveryState;\n  }\n\n  /**\n   * @function updates a delivery state\n   * @param updateDeliveryStateDto\n   * @returns updated delivery state\n   */\n  public async updateDeliveryState(\n    stateId: string,\n    updateDeliveryStateDto: UpdateDeliveryStateDto,\n  ) {\n    let deliveryState;\n    // find the user\n    try {\n      deliveryState = await this.deliveryStateRepository.findOneBy({\n        id: stateId,\n      });\n    } catch (err) {\n      throw new RequestTimeoutException(err);\n    }\n    if (!deliveryState) {\n      throw new BadRequestException('Delivery state does not exist');\n    }\n    // update user\n    deliveryState = { ...deliveryState, ...updateDeliveryStateDto };\n\n    try {\n      await this.deliveryStateRepository.save(deliveryState);\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error: any) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n    return deliveryState;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Discount.html":{"url":"entities/Discount.html","title":"entity - Discount","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Discount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/discounts.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                percentOff\n                            \n                            \n                                    \n                                usageLimit\n                            \n                            \n                                    \n                                validFrom\n                            \n                            \n                                    \n                                validUntil\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/discounts.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/discounts.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        percentOff\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/discounts.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usageLimit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/discounts.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        validFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/discounts.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        validUntil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/discounts.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Discount {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  code: string;\n\n  @Column()\n  percentOff: number;\n\n  @Column({ default: 1 })\n  usageLimit: number;\n\n  @Column({ type: 'timestamp', default: new Date() })\n  validFrom: Date;\n\n  @Column({ type: 'timestamp', nullable: true })\n  validUntil: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DiscountUsage.html":{"url":"entities/DiscountUsage.html","title":"entity - DiscountUsage","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DiscountUsage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts-usage/discounts-usage.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                discount\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                order\n                            \n                            \n                                    \n                                usedAt\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Discount\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts-usage/discounts-usage.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts-usage/discounts-usage.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, order => order.discountUsage, {nullable: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts-usage/discounts-usage.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts-usage/discounts-usage.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts-usage/discounts-usage.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Discount } from 'src/discounts/discounts.entity';\nimport { Order } from 'src/orders/order.entity';\nimport { User } from 'src/users/user.entity';\nimport {\n  CreateDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  OneToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class DiscountUsage {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @ManyToOne(() => User)\n  user: User;\n\n  @ManyToOne(() => Discount)\n  discount: Discount;\n\n  @OneToOne(() => Order, (order) => order.discountUsage, { nullable: true })\n  @JoinColumn()\n  order: Order;\n\n  @CreateDateColumn()\n  usedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DiscountsController.html":{"url":"controllers/DiscountsController.html","title":"controller - DiscountsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DiscountsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/discounts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                discounts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                applyForDiscount\n                            \n                            \n                                    \n                                    \n                                    Public\n                                createDiscount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        applyForDiscount\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyForDiscount(user: ActiveUserData, applyForDiscountDto: ApplyForDiscountDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/apply')@Roles(Role.USER)@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in src/discounts/discounts.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                applyForDiscountDto\n                                            \n                                                            ApplyForDiscountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        createDiscount\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDiscount(createDiscountDto: CreateDiscountDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Roles(Role.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/discounts/discounts.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDiscountDto\n                                            \n                                                            CreateDiscountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post } from '@nestjs/common';\nimport { DiscountsService } from './providers/discounts.service';\nimport { CreateDiscountDto } from './dtos/create-discount.dto';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { Role } from 'src/auth/enums/role-type.enum';\nimport { ActiveUser } from 'src/auth/decorator/active-user.decorator';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\nimport { ApplyForDiscountDto } from './dtos/apply-for-discount.dto';\n\n@Controller('discounts')\nexport class DiscountsController {\n  constructor(\n    /**\n     * injecting the discounts service\n     */\n    private readonly discountsService: DiscountsService,\n  ) {}\n\n  @Post()\n  @Roles(Role.ADMIN)\n  public createDiscount(@Body() createDiscountDto: CreateDiscountDto) {\n    return this.discountsService.createDiscount(createDiscountDto);\n  }\n\n  @Post('/apply')\n  @Roles(Role.USER)\n  @HttpCode(HttpStatus.OK)\n  public applyForDiscount(\n    @ActiveUser() user: ActiveUserData,\n    @Body() applyForDiscountDto: ApplyForDiscountDto,\n  ) {\n    return this.discountsService.applyForDiscount(\n      user,\n      applyForDiscountDto.code,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DiscountsModule.html":{"url":"modules/DiscountsModule.html","title":"module - DiscountsModule","body":"\n                   \n\n\n\n\n    Modules\n    DiscountsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DiscountsModule\n\n\n\ncluster_DiscountsModule_providers\n\n\n\ncluster_DiscountsModule_imports\n\n\n\n\nDiscountsUsageModule\n\nDiscountsUsageModule\n\n\n\nDiscountsModule\n\nDiscountsModule\n\nDiscountsModule -->\n\nDiscountsUsageModule->DiscountsModule\n\n\n\n\n\nApplyForDiscountProvider\n\nApplyForDiscountProvider\n\nDiscountsModule -->\n\nApplyForDiscountProvider->DiscountsModule\n\n\n\n\n\nCreateDiscountProvider\n\nCreateDiscountProvider\n\nDiscountsModule -->\n\nCreateDiscountProvider->DiscountsModule\n\n\n\n\n\nDiscountsService\n\nDiscountsService\n\nDiscountsModule -->\n\nDiscountsService->DiscountsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/discounts/discounts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApplyForDiscountProvider\n                        \n                        \n                            CreateDiscountProvider\n                        \n                        \n                            DiscountsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DiscountsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DiscountsUsageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DiscountsController } from './discounts.controller';\nimport { DiscountsService } from './providers/discounts.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Discount } from './discounts.entity';\nimport { ApplyForDiscountProvider } from './providers/apply-for-discount.provider';\nimport { CreateDiscountProvider } from './providers/create-discount.provider';\nimport { DiscountsUsageModule } from 'src/discounts-usage/discounts-usage.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Discount]), DiscountsUsageModule],\n  controllers: [DiscountsController],\n  providers: [\n    DiscountsService,\n    ApplyForDiscountProvider,\n    CreateDiscountProvider,\n  ],\n})\nexport class DiscountsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiscountsService.html":{"url":"injectables/DiscountsService.html","title":"injectable - DiscountsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiscountsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/providers/discounts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                applyForDiscount\n                            \n                            \n                                    Public\n                                    Async\n                                createDiscount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createDiscountProvider: CreateDiscountProvider, applyForDiscountProvider: ApplyForDiscountProvider)\n                    \n                \n                        \n                            \n                                Defined in src/discounts/providers/discounts.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createDiscountProvider\n                                                  \n                                                        \n                                                                        CreateDiscountProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applyForDiscountProvider\n                                                  \n                                                        \n                                                                        ApplyForDiscountProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        applyForDiscount\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyForDiscount(user: ActiveUserData, code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/discounts/providers/discounts.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                discount\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createDiscount\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDiscount(createDiscountDto: CreateDiscountDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/discounts/providers/discounts.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDiscountDto\n                                            \n                                                            CreateDiscountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                created discount object\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateDiscountDto } from '../dtos/create-discount.dto';\nimport { CreateDiscountProvider } from './create-discount.provider';\nimport { Discount } from '../discounts.entity';\nimport { ApplyForDiscountProvider } from './apply-for-discount.provider';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\n\n@Injectable()\nexport class DiscountsService {\n  constructor(\n    /**\n     * injecting the create discount provider\n     */\n    private readonly createDiscountProvider: CreateDiscountProvider,\n\n    /**\n     * injecting the apply for discount provider\n     */\n    private readonly applyForDiscountProvider: ApplyForDiscountProvider,\n  ) {}\n\n  /**\n   * @function creates a discount\n   * @param createDiscountDto\n   * @returns created discount object\n   */\n  public async createDiscount(\n    createDiscountDto: CreateDiscountDto,\n  ): Promise {\n    return await this.createDiscountProvider.createDiscount(createDiscountDto);\n  }\n\n  /**\n   * @function checks the validity of the code and how many times the user has used it\n   * @param user\n   * @param code\n   * @returns discount\n   */\n  public async applyForDiscount(user: ActiveUserData, code: string) {\n    return await this.applyForDiscountProvider.applyForDiscount(user, code);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DiscountsUsageModule.html":{"url":"modules/DiscountsUsageModule.html","title":"module - DiscountsUsageModule","body":"\n                   \n\n\n\n\n    Modules\n    DiscountsUsageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DiscountsUsageModule\n\n\n\ncluster_DiscountsUsageModule_providers\n\n\n\ncluster_DiscountsUsageModule_exports\n\n\n\n\nDiscountsUsageService \n\nDiscountsUsageService \n\n\n\nDiscountsUsageModule\n\nDiscountsUsageModule\n\nDiscountsUsageService  -->\n\nDiscountsUsageModule->DiscountsUsageService \n\n\n\n\n\nDiscountsUsageService\n\nDiscountsUsageService\n\nDiscountsUsageModule -->\n\nDiscountsUsageService->DiscountsUsageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/discounts-usage/discounts-usage.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DiscountsUsageService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DiscountsUsageService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DiscountsUsageService } from './providers/discounts-usage.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { DiscountUsage } from './discounts-usage.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([DiscountUsage])],\n  providers: [DiscountsUsageService],\n  exports: [DiscountsUsageService],\n})\nexport class DiscountsUsageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiscountsUsageService.html":{"url":"injectables/DiscountsUsageService.html","title":"injectable - DiscountsUsageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiscountsUsageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts-usage/providers/discounts-usage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                countDiscountUsage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(discountsUsageRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/discounts-usage/providers/discounts-usage.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        discountsUsageRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        countDiscountUsage\n                        \n                    \n                \n            \n            \n                \n                        \n                    countDiscountUsage(discountId: string, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/discounts-usage/providers/discounts-usage.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                discountId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                discount usage count by a user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { DiscountUsage } from '../discounts-usage.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class DiscountsUsageService {\n  constructor(\n    /**\n     * injecting the discounts usage repository\n     */\n    @InjectRepository(DiscountUsage)\n    private readonly discountsUsageRepository: Repository,\n  ) {}\n\n  /**\n   * @function gets the discount usage count of a user\n   * @param discountId\n   * @param userId\n   * @returns discount usage count by a user\n   */\n  public async countDiscountUsage(discountId: string, userId: string) {\n    let usageCount;\n    try {\n      // Check usage limit\n      usageCount = await this.discountsUsageRepository.count({\n        where: {\n          discount: { id: discountId },\n          user: { id: userId },\n        },\n      });\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    return usageCount;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindAllProductsProvider.html":{"url":"injectables/FindAllProductsProvider.html","title":"injectable - FindAllProductsProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindAllProductsProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/providers/find-all-products.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productRepository: Repository, paginationProvider: PaginationProvider)\n                    \n                \n                        \n                            \n                                Defined in src/products/providers/find-all-products.provider.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paginationProvider\n                                                  \n                                                        \n                                                                        PaginationProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(productQuery: GetProductsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/find-all-products.provider.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productQuery\n                                            \n                                                            GetProductsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                a paginated list of products\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { GetProductsDto } from '../dtos/get-product.dto';\nimport { Paginated } from 'src/common/pagination/interfaces/paginated.interface';\nimport { Product } from '../product.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Between, In, Like, Repository } from 'typeorm';\nimport { PaginationProvider } from 'src/common/pagination/providers/pagination.provider';\n\n@Injectable()\nexport class FindAllProductsProvider {\n  constructor(\n    /**\n     * injecting the product repository\n     */\n    @InjectRepository(Product)\n    private readonly productRepository: Repository,\n\n    /**\n     * injecting the pagination provider\n     */\n    private readonly paginationProvider: PaginationProvider,\n  ) {}\n\n  /**\n   * @function finds all products And handle queries for filtering products\n   * @param productQuery\n   * @returns  a paginated list of products\n   */\n  public async findAll(\n    productQuery: GetProductsDto,\n  ): Promise> {\n    const { limit, page } = productQuery;\n\n    const whereOptions = [];\n\n    Object.keys(productQuery).forEach((key) => {\n      if (key === 'limit' || key === 'page' || !productQuery[key]) {\n        return;\n      }\n\n      const conditions = {\n        category: productQuery['category']\n          ? In(productQuery['category'].slice().split(','))\n          : undefined,\n        price: productQuery['price']\n          ? Between(\n              parseFloat(productQuery['price'].slice().split('-')[0]),\n              parseFloat(productQuery['price'].slice().split('-')[1]),\n            )\n          : undefined,\n        clothType: productQuery['clothType']\n          ? In(productQuery['clothType'].slice().split(','))\n          : undefined,\n        dressStyle: productQuery['dressStyle']\n          ? In(productQuery['dressStyle'].slice().split(','))\n          : undefined,\n        name: productQuery['name']\n          ? Like(`%${productQuery['name'].slice().split('-').join(' ')}%`)\n          : undefined,\n        variants: {\n          color: productQuery['colors']\n            ? In(productQuery['colors'].slice().split(','))\n            : undefined,\n          size: productQuery['sizes']\n            ? In(productQuery['sizes'].slice().split(','))\n            : undefined,\n        },\n      };\n\n      // Remove undefined nested conditions for variants\n      if (\n        conditions.variants.color === undefined &&\n        conditions.variants.size === undefined\n      ) {\n        conditions.variants = undefined;\n      }\n\n      // Remove undefined conditions\n      const filteredConditions = Object.fromEntries(\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        Object.entries(conditions).filter(([_, v]) => v !== undefined),\n      );\n\n      whereOptions.push(filteredConditions);\n    });\n\n    const checkWhereOptions = Object.keys(whereOptions).length;\n\n    const options = {\n      where: checkWhereOptions ? whereOptions : null,\n      relations: ['variants', 'variants.images'],\n    };\n\n    try {\n      const products = await this.paginationProvider.paginationQuery(\n        {\n          limit: limit,\n          page: page,\n        },\n        this.productRepository,\n        options,\n      );\n\n      return products;\n    } catch (error) {\n      throw new NotFoundException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindOneByIdProvider.html":{"url":"injectables/FindOneByIdProvider.html","title":"injectable - FindOneByIdProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindOneByIdProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/find-one-by-id.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider class for finding one user by id\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/find-one-by-id.provider.ts:14\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/find-one-by-id.provider.ts:32\n                        \n                    \n\n\n            \n                \n                        function for finding user based on id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { User } from '../user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n/**\n * provider class for finding one user by id\n */\n@Injectable()\nexport class FindOneByIdProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * injecting user repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for finding user based on id\n   * @param id\n   * @returns user\n   */\n  public async findById(id: string) {\n    let user;\n    try {\n      user = await this.usersRepository.findOneBy({\n        id,\n      });\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (err: any) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    /**\n     * Handle the user does not exist\n     */\n    if (!user) {\n      throw new BadRequestException('The user does not exist');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindOneUserByEmailProvider.html":{"url":"injectables/FindOneUserByEmailProvider.html","title":"injectable - FindOneUserByEmailProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindOneUserByEmailProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/find-one-user-by-email.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for finding user based on email\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findOneByEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/find-one-user-by-email.provider.ts:14\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/find-one-user-by-email.provider.ts:32\n                        \n                    \n\n\n            \n                \n                        function for finding user based on email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  RequestTimeoutException,\n  // UnauthorizedException,\n} from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { User } from '../user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n/**\n * provider for finding user based on email\n */\n@Injectable()\nexport class FindOneUserByEmailProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * Injecting usersRepository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for finding user based on email\n   * @param email\n   * @returns user\n   */\n  public async findOneByEmail(email: string) {\n    let user: User | undefined = undefined;\n\n    try {\n      user = await this.usersRepository.findOne({\n        where: { email: email },\n        select: ['id', 'email', 'role'],\n      });\n    } catch (error) {\n      throw new RequestTimeoutException(error, {\n        description: 'Could not fetch the user',\n      });\n    }\n\n    // if (!user) {\n    //   throw new UnauthorizedException('User does not exist');\n    // }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{"url":"injectables/FindUserByOtpAndExpiryTimeProvider.html","title":"injectable - FindUserByOtpAndExpiryTimeProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindUserByOtpAndExpiryTimeProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/find-user-by-reset-otp-and-expiry-time.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider class for finding user based on stored reset token and expiry time\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findUserByOtpAndExpiryTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/find-user-by-reset-otp-and-expiry-time.provider.ts:14\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findUserByOtpAndExpiryTime\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserByOtpAndExpiryTime(otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/find-user-by-reset-otp-and-expiry-time.provider.ts:32\n                        \n                    \n\n\n            \n                \n                        function for finding a user based on the stored reset token and expiry time\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  RequestTimeoutException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { MoreThan, Repository } from 'typeorm';\nimport { User } from '../user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n/**\n * provider class for finding user based on stored reset token and expiry time\n */\n@Injectable()\nexport class FindUserByOtpAndExpiryTimeProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * injecting the users repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for finding a user based on the stored reset token and expiry time\n   * @param otp\n   * @returns user\n   */\n  public async findUserByOtpAndExpiryTime(otp: string) {\n    let user;\n\n    try {\n      user = await this.usersRepository.find({\n        where: {\n          otp: otp,\n          otpExpire: MoreThan(new Date()),\n        },\n      });\n    } catch (error) {\n      throw new RequestTimeoutException(error, {\n        description: 'Could not fetch the user',\n      });\n    }\n\n    if (!user[0]) {\n      throw new UnauthorizedException('Otp is no longer valid');\n    }\n\n    return user[0];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GenerateTokensProvider.html":{"url":"injectables/GenerateTokensProvider.html","title":"injectable - GenerateTokensProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GenerateTokensProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/generate-tokens.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for generating tokens\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                generateTokens\n                            \n                            \n                                    Public\n                                    Async\n                                signToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConfiguration: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/generate-tokens.provider.ts:12\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        generateTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateTokens(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/generate-tokens.provider.ts:58\n                        \n                    \n\n\n            \n                \n                        function for generating tokens\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                access and refresh tokens\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        signToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    signToken(userId: string, expiresIn: number, payload?: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/generate-tokens.provider.ts:38\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        function for using jwt to sign the user info\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                expiresIn\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                the object containing payload when a user signs in\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport jwtConfig from '../config/jwt.config';\nimport { ConfigType } from '@nestjs/config';\nimport { ActiveUserData } from '../interfaces/active-user-data.interface';\nimport { User } from 'src/users/user.entity';\n\n/**\n * provider for generating tokens\n */\n@Injectable()\nexport class GenerateTokensProvider {\n  /**\n   * constructor\n   * @param jwtService\n   * @param jwtConfiguration\n   */\n  constructor(\n    /**\n     * Injecting the jwt service\n     */\n    private readonly jwtService: JwtService,\n\n    /**\n     * Injecting the jwt config\n     */\n    @Inject(jwtConfig.KEY)\n    private readonly jwtConfiguration: ConfigType,\n  ) {}\n\n  /**\n   * function for using jwt to sign the user info\n   * @param userId\n   * @param expiresIn\n   * @param payload\n   * @returns the object containing payload when a user signs in\n   */\n  public async signToken(userId: string, expiresIn: number, payload?: T) {\n    return await this.jwtService.signAsync(\n      {\n        sub: userId,\n        ...payload,\n      },\n      {\n        audience: this.jwtConfiguration.audience,\n        issuer: this.jwtConfiguration.issuer,\n        secret: this.jwtConfiguration.secret,\n        expiresIn,\n      },\n    );\n  }\n\n  /**\n   * function for generating tokens\n   * @param user\n   * @returns access and refresh tokens\n   */\n  public async generateTokens(user: User) {\n    const [accessToken, refreshToken] = await Promise.all([\n      // Generate the access token\n      this.signToken>(\n        user.id,\n        this.jwtConfiguration.accessTokenTtl,\n        {\n          email: user.email,\n          role: user.role,\n        },\n      ),\n      // Generate the refresh token\n      this.signToken(user.id, this.jwtConfiguration.refreshTokenTtl),\n    ]);\n\n    return {\n      accessToken,\n      refreshToken,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProductsBaseDto.html":{"url":"classes/GetProductsBaseDto.html","title":"class - GetProductsBaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProductsBaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/get-product.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                base dto fot products\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                category\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                clothType\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                colors\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                dressStyle\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                price\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                sizes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:21\n                        \n                    \n\n            \n                \n                    product category\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        clothType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:28\n                        \n                    \n\n            \n                \n                    productClothType\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        colors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:42\n                        \n                    \n\n            \n                \n                    product colors\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        dressStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:56\n                        \n                    \n\n            \n                \n                    product dressing style\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:14\n                        \n                    \n\n            \n                \n                    product name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:35\n                        \n                    \n\n            \n                \n                    product price\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        sizes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:49\n                        \n                    \n\n            \n                \n                    product sizes\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from 'class-validator';\nimport { IntersectionType } from '@nestjs/swagger';\nimport { PaginationQueryDto } from 'src/common/pagination/dtos/pagination-query.dto';\n\n/**\n * base dto fot products\n */\nclass GetProductsBaseDto {\n  /**\n   * product name\n   */\n  @IsString()\n  @IsOptional()\n  name?: string;\n\n  /**\n   * product category\n   */\n  @IsString()\n  @IsOptional()\n  category?: string;\n\n  /**\n   * productClothType\n   */\n  @IsString()\n  @IsOptional()\n  clothType?: string;\n\n  /**\n   * product price\n   */\n  @IsString()\n  @IsOptional()\n  price?: string;\n\n  /**\n   * product colors\n   */\n  @IsString()\n  @IsOptional()\n  colors?: string;\n\n  /**\n   * product sizes\n   */\n  @IsString()\n  @IsOptional()\n  sizes?: string;\n\n  /**\n   * product dressing style\n   */\n  @IsString()\n  @IsOptional()\n  dressStyle?: string;\n}\n\n/**\n * dto for get events\n */\nexport class GetProductsDto extends IntersectionType(\n  GetProductsBaseDto,\n  PaginationQueryDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProductsDto.html":{"url":"classes/GetProductsDto.html","title":"class - GetProductsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProductsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/get-product.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto for get events\n\n            \n\n            \n                Extends\n            \n            \n                            IntersectionType(\n  GetProductsBaseDto,\n  PaginationQueryDto,\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from 'class-validator';\nimport { IntersectionType } from '@nestjs/swagger';\nimport { PaginationQueryDto } from 'src/common/pagination/dtos/pagination-query.dto';\n\n/**\n * base dto fot products\n */\nclass GetProductsBaseDto {\n  /**\n   * product name\n   */\n  @IsString()\n  @IsOptional()\n  name?: string;\n\n  /**\n   * product category\n   */\n  @IsString()\n  @IsOptional()\n  category?: string;\n\n  /**\n   * productClothType\n   */\n  @IsString()\n  @IsOptional()\n  clothType?: string;\n\n  /**\n   * product price\n   */\n  @IsString()\n  @IsOptional()\n  price?: string;\n\n  /**\n   * product colors\n   */\n  @IsString()\n  @IsOptional()\n  colors?: string;\n\n  /**\n   * product sizes\n   */\n  @IsString()\n  @IsOptional()\n  sizes?: string;\n\n  /**\n   * product dressing style\n   */\n  @IsString()\n  @IsOptional()\n  dressStyle?: string;\n}\n\n/**\n * dto for get events\n */\nexport class GetProductsDto extends IntersectionType(\n  GetProductsBaseDto,\n  PaginationQueryDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersBaseDto.html":{"url":"classes/GetUsersBaseDto.html","title":"class - GetUsersBaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersBaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/get-user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto class for get user base\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                endDate\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/get-user.dto.ts:21\n                        \n                    \n\n            \n                \n                    end date\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/get-user.dto.ts:14\n                        \n                    \n\n            \n                \n                    start date\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IntersectionType } from '@nestjs/swagger';\nimport { IsDate, IsOptional } from 'class-validator';\nimport { PaginationQueryDto } from 'src/common/pagination/dtos/pagination-query.dto';\n\n/**\n * dto class for get user base\n */\nexport class GetUsersBaseDto {\n  /**\n   * start date\n   */\n  @IsDate()\n  @IsOptional()\n  startDate?: Date;\n\n  /**\n   * end date\n   */\n  @IsDate()\n  @IsOptional()\n  endDate?: Date;\n}\n\n/**\n * dto class for get user\n */\nexport class GetUsersDto extends IntersectionType(\n  GetUsersBaseDto,\n  PaginationQueryDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersDto.html":{"url":"classes/GetUsersDto.html","title":"class - GetUsersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/get-user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto class for get user\n\n            \n\n            \n                Extends\n            \n            \n                            IntersectionType(\n  GetUsersBaseDto,\n  PaginationQueryDto,\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IntersectionType } from '@nestjs/swagger';\nimport { IsDate, IsOptional } from 'class-validator';\nimport { PaginationQueryDto } from 'src/common/pagination/dtos/pagination-query.dto';\n\n/**\n * dto class for get user base\n */\nexport class GetUsersBaseDto {\n  /**\n   * start date\n   */\n  @IsDate()\n  @IsOptional()\n  startDate?: Date;\n\n  /**\n   * end date\n   */\n  @IsDate()\n  @IsOptional()\n  endDate?: Date;\n}\n\n/**\n * dto class for get user\n */\nexport class GetUsersDto extends IntersectionType(\n  GetUsersBaseDto,\n  PaginationQueryDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitiatePaymentDto.html":{"url":"classes/InitiatePaymentDto.html","title":"class - InitiatePaymentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitiatePaymentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/dtos/initiate-payment.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                deliveryAddress\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                deliveryPicker\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                discountId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                products\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        deliveryAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dtos/initiate-payment.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        deliveryPicker\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dtos/initiate-payment.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        discountId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dtos/initiate-payment.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductWithVariantDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsNotEmpty()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dtos/initiate-payment.dto.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsInt,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { PatchProductVariantDto } from 'src/product-variants/dto/patch-product-variant.dto';\n\nclass ProductWithVariantDto {\n  @IsString()\n  @IsNotEmpty()\n  productId: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  price: number;\n\n  @IsArray()\n  @IsNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => PatchProductVariantDto)\n  variants: PatchProductVariantDto[];\n}\n\nexport class InitiatePaymentDto {\n  @IsString()\n  @IsOptional()\n  deliveryPicker?: string;\n\n  @IsString()\n  @IsOptional()\n  deliveryAddress?: string;\n\n  @IsString()\n  @IsOptional()\n  discountId?: string;\n\n  @IsArray()\n  @IsNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => ProductWithVariantDto)\n  products: ProductWithVariantDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InitiatePaymentProvider.html":{"url":"injectables/InitiatePaymentProvider.html","title":"injectable - InitiatePaymentProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InitiatePaymentProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/providers/initiate-payment.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAuthHeader\n                            \n                            \n                                    Public\n                                    Async\n                                initializePayment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paystackConfiguration: ConfigType<>, dataSource: DataSource, usersService: UsersService, configService: ConfigService, productVariantsService: ProductVariantsService)\n                    \n                \n                        \n                            \n                                Defined in src/paystack/providers/initiate-payment.provider.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paystackConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productVariantsService\n                                                  \n                                                        \n                                                                        ProductVariantsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAuthHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAuthHeader()\n                \n            \n\n\n                    \n                        \n                            Defined in src/paystack/providers/initiate-payment.provider.ts:54\n                        \n                    \n\n\n            \n                \n                        function for getting the auth header\n\n\n                        \n                            Returns :         { Authorization: string; }\n\n                        \n                            \n                                authorization header for paystack\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        initializePayment\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializePayment(initiatePaymentDto: InitiatePaymentDto, user: ActiveUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paystack/providers/initiate-payment.provider.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                initiatePaymentDto\n                                            \n                                                            InitiatePaymentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  Inject,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { InitiatePaymentDto } from '../dtos/initiate-payment.dto';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\nimport paystackConfig from '../config/paystack.config';\nimport { ConfigService, ConfigType } from '@nestjs/config';\nimport { DataSource } from 'typeorm';\nimport axios from 'axios';\nimport { UsersService } from 'src/users/providers/users.service';\nimport { Payment } from 'src/payment/payment.entity';\nimport { paymentStatus } from 'src/payment/enums/paymentStatus.enum';\nimport { User } from 'src/users/user.entity';\nimport { ProductVariantsService } from 'src/product-variants/providers/product-variants.service';\nimport { Discount } from 'src/discounts/discounts.entity';\n\n@Injectable()\nexport class InitiatePaymentProvider {\n  constructor(\n    /**\n     * injecting the paystack config\n     */\n    @Inject(paystackConfig.KEY)\n    private readonly paystackConfiguration: ConfigType,\n\n    /**\n     * Injecting datasource\n     */\n    private readonly dataSource: DataSource,\n\n    /**\n     * injecting the users service\n     */\n    private readonly usersService: UsersService,\n\n    /**\n     * injecting config service\n     */\n    private readonly configService: ConfigService,\n\n    /**\n     * injecting the product variants service\n     */\n    private readonly productVariantsService: ProductVariantsService,\n  ) {}\n\n  /**\n   * function for getting the auth header\n   * @returns authorization header for paystack\n   */\n  private getAuthHeader() {\n    return { Authorization: `Bearer ${this.paystackConfiguration.secret}` };\n  }\n\n  public async initializePayment(\n    initiatePaymentDto: InitiatePaymentDto,\n    user: ActiveUserData,\n  ) {\n    // start transaction\n    // create Query Runner instance\n    const queryRunner = this.dataSource.createQueryRunner();\n    try {\n      // connect query runner to datasource\n      await queryRunner.connect();\n\n      // start transaction\n      await queryRunner.startTransaction();\n    } catch (error) {\n      console.log(error);\n      throw new RequestTimeoutException('Could not connect to datasource');\n    }\n\n    // find the user\n    const buyer: User = await this.usersService.findOneById(user.sub);\n\n    let discount: Discount;\n    // find the discount if there is one\n    if (initiatePaymentDto.discountId) {\n      discount = await queryRunner.manager.findOne(Discount, {\n        where: { id: initiatePaymentDto.discountId },\n      });\n    }\n\n    // user info should have details about address but if there is a set delivery address then use that\n    const deliveryAddress =\n      initiatePaymentDto.deliveryAddress ??\n      `${buyer.streetAddress}, ${buyer.city}, ${buyer.state}`;\n\n    const deliveryPicker =\n      initiatePaymentDto.deliveryPicker ??\n      `${buyer.firstName} ${buyer.lastName}`;\n\n    // Iterate through each product in the request\n    for (const product of initiatePaymentDto.products) {\n      const { productId, variants } = product;\n\n      // Iterate through each variant the user wants to buy\n      for (const variantDto of variants) {\n        const { id: variantId, quantity } = variantDto;\n\n        // check availability\n        await this.productVariantsService.checkVariantAvailability(\n          queryRunner.manager,\n          variantId,\n          productId,\n          quantity,\n        );\n      }\n    }\n\n    // get all product variants\n    const prdVariants = await Promise.all(\n      initiatePaymentDto.products\n        .map((prd) => prd.variants)\n        .flat()\n        .map(\n          async (vr) =>\n            await this.productVariantsService.findProductVariantById(vr.id),\n        ),\n    );\n\n    // calculate the total amount\n    let totalAmount = initiatePaymentDto.products\n      .map((prd) => {\n        // loop through inner variants\n        const totalQty = prd.variants\n          .map((vr) => vr.quantity)\n          .reduce((acc, cur) => cur + acc, 0);\n\n        return prd.price * totalQty;\n      })\n      .reduce((acc, cur) => acc + cur, 0);\n\n    totalAmount = initiatePaymentDto.discountId\n      ? totalAmount - (discount.percentOff / 100) * totalAmount\n      : totalAmount;\n\n    // initialize payment\n    let response;\n    try {\n      response = await axios.post(\n        `${this.paystackConfiguration.baseUrl}/transaction/initialize`,\n        {\n          email: buyer.email,\n          metadata: {\n            products: initiatePaymentDto.products,\n            user: buyer,\n            deliveryAddress,\n            deliveryPicker,\n            totalAmount,\n            discount: discount ?? {},\n          },\n          amount: totalAmount * 100,\n          callback_url: `${this.configService.get('appConfig.host')}/collections?success=yes`,\n        }, // Paystack accepts amounts in kobo\n        { headers: this.getAuthHeader() },\n      );\n\n      // Create payment record\n      await queryRunner.manager.save(Payment, {\n        userId: buyer.id,\n        amount: totalAmount,\n        provider: 'paystack',\n        providerReference: response.data.data.reference,\n        status: paymentStatus.PENDING,\n        authorizationUrl: response.data.data.authorization_url,\n        variants: prdVariants,\n      });\n\n      // if successful commit\n      // ensures the txn is committed to the db\n      await queryRunner.commitTransaction();\n\n      return response.data;\n    } catch (error) {\n      // we rollback the txn here if it is not successful\n      await queryRunner.rollbackTransaction();\n      throw new ConflictException('Could not complete the transaction', {\n        description: String(error),\n      });\n    } finally {\n      // relsease the connection\n      // release connection whether it was successful or not\n      try {\n        await queryRunner.release();\n      } catch (error) {\n        throw new RequestTimeoutException('Could not release the connection', {\n          description: String(error),\n        });\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_MailModule_exports\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { MailService } from './providers/mail.service';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { ConfigService } from '@nestjs/config';\nimport { join } from 'path';\nimport { EjsAdapter } from '@nestjs-modules/mailer/dist/adapters/ejs.adapter';\n\n// makes importation of mail module to any module\n@Global()\n@Module({\n  imports: [\n    MailerModule.forRootAsync({\n      // we need the config service to configure the mailer module\n      inject: [ConfigService],\n      // we use the useFactory to inject the mailer module\n      useFactory: async (config: ConfigService) => {\n        // console.log(\n        //   config.get('appConfig.mailHost'),\n        //   config.get('appConfig.smtpUsername'),\n        //   config.get('appConfig.smtpPassword'),\n        // );\n        return {\n          transport: {\n            host: config.get('appConfig.mailHost'),\n            secure: true,\n            port: 465,\n            auth: {\n              user: config.get('appConfig.smtpUsername'),\n              pass: config.get('appConfig.smtpPassword'),\n            },\n            // tls: { rejectUnauthorized: false },\n          },\n          default: {\n            from: `Nich Fashion `,\n          },\n          template: {\n            dir: join(__dirname, 'templates'),\n            adapter: new EjsAdapter({\n              inlineCssEnabled: true,\n            }),\n            options: {\n              strict: false,\n            },\n          },\n        };\n      },\n    }),\n  ],\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/providers/mail.service.ts\n        \n\n\n            \n                Description\n            \n            \n                service for the mail module\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                sendLoginOtp\n                            \n                            \n                                    Public\n                                    Async\n                                sendProductPurchaseMail\n                            \n                            \n                                    Public\n                                    Async\n                                sendResetOtp\n                            \n                            \n                                    Public\n                                    Async\n                                sendSubscriberMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService)\n                    \n                \n                        \n                            \n                                Defined in src/mail/providers/mail.service.ts:13\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendLoginOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendLoginOtp(user: User, otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/providers/mail.service.ts:49\n                        \n                    \n\n\n            \n                \n                        function for sending reset otp mail to user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendProductPurchaseMail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendProductPurchaseMail(user: User, products: Product[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/providers/mail.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                products\n                                            \n                                                            Product[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendResetOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendResetOtp(user: User, otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/providers/mail.service.ts:30\n                        \n                    \n\n\n            \n                \n                        function for sending reset otp mail to user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendSubscriberMail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendSubscriberMail(subscriber: Subscriber)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/providers/mail.service.ts:83\n                        \n                    \n\n\n            \n                \n                        function for sending mail to user when they subscribe to the newsletter\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                subscriber\n                                            \n                                                            Subscriber\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ROOT_PATH } from '../../config/paths.config';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { Injectable } from '@nestjs/common';\nimport * as path from 'path';\nimport { Product } from 'src/products/product.entity';\nimport { Subscriber } from 'src/subscribers/subscriber.entity';\nimport { User } from 'src/users/user.entity';\n\n/**\n * service for the mail module\n */\n@Injectable()\nexport class MailService {\n  /**\n   * constructor\n   * @param mailerService\n   */\n  constructor(\n    /**\n     * injecting mailer service\n     */\n    private mailerService: MailerService,\n  ) {}\n\n  /**\n   * function for sending reset otp mail to user\n   * @param user\n   * @param otp\n   */\n  public async sendResetOtp(user: User, otp: string): Promise {\n    await this.mailerService.sendMail({\n      to: user.email,\n      from: `Ticket Hive - Support Team  `,\n      subject: `🔐 Reset Your Password – Let's Get You Back on Track!`,\n      template: path.join(ROOT_PATH, '/src/mail/templates/resetOtp.ejs'),\n      context: {\n        // fullname: user.fullname,\n        email: user.email,\n        otp: otp,\n      },\n    });\n  }\n\n  /**\n   * function for sending reset otp mail to user\n   * @param user\n   * @param otp\n   */\n  public async sendLoginOtp(user: User, otp: string): Promise {\n    await this.mailerService.sendMail({\n      to: user.email,\n      from: `Nich Fashion - Team  `,\n      subject: `🔐 Login to Nich Fashion- Get your best wears`,\n      template: path.join(ROOT_PATH, '/src/mail/templates/loginOtp.ejs'),\n      context: {\n        email: user.email,\n        otp: otp,\n      },\n    });\n  }\n\n  public async sendProductPurchaseMail(\n    user: User,\n    products: Product[],\n  ): Promise {\n    await this.mailerService.sendMail({\n      to: user.email,\n      from: `Nich Fashion - Team  `,\n      subject: `🎟️ Your Product(s) Purchase Confirmation – Nich Fashion`,\n      template: path.join(ROOT_PATH, '/src/mail/templates/productBought.ejs'),\n      context: {\n        firstName: user.firstName,\n        email: user.email,\n        products: products,\n      },\n    });\n  }\n\n  /**\n   * function for sending mail to user when they subscribe to the newsletter\n   * @param subscriber\n   */\n  public async sendSubscriberMail(subscriber: Subscriber): Promise {\n    await this.mailerService.sendMail({\n      to: subscriber.email,\n      from: `Ticket Hive -Team  `,\n      subject: `Welcome to Ticket Hive's Newsletter! 🎉`,\n      template: path.join(ROOT_PATH, '/src/mail/templates/subscription.ejs'),\n      context: {\n        email: subscriber.email,\n        id: subscriber.id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Order.html":{"url":"entities/Order.html","title":"entity - Order","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/order.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                carrier\n                            \n                            \n                                    \n                                    Optional\n                                carrierPhoneNumber\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deliveryAddress\n                            \n                            \n                                    \n                                deliveryPicker\n                            \n                            \n                                    \n                                    Optional\n                                discountApplied\n                            \n                            \n                                    \n                                discountUsage\n                            \n                            \n                                    \n                                    Optional\n                                estimatedDeliveryDate\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                orderStatus\n                            \n                            \n                                    \n                                    \n                                products\n                            \n                            \n                                    \n                                totalAmount\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        carrier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        carrierPhoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deliveryAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deliveryPicker\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        discountApplied\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        discountUsage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DiscountUsage\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, discountUsage => discountUsage.order)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        estimatedDeliveryDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        orderStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: OrderStatus, default: undefined, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable({name: 'orders_products', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:50\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { OrderStatus } from './enums/order-status.enum';\nimport { Product } from 'src/products/product.entity';\nimport { DiscountUsage } from 'src/discounts-usage/discounts-usage.entity';\n\n@Entity()\nexport class Order {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @Column({\n    type: 'enum',\n    enum: OrderStatus,\n    default: OrderStatus.PLACED,\n    nullable: false,\n  })\n  orderStatus: OrderStatus;\n\n  @Column({ nullable: true })\n  carrier?: string;\n\n  @Column({ nullable: true })\n  carrierPhoneNumber?: string;\n\n  @Column()\n  deliveryAddress: string;\n\n  @Column()\n  deliveryPicker: string;\n\n  @Column({ nullable: true })\n  estimatedDeliveryDate?: Date;\n\n  @Column()\n  userId: string;\n\n  @Column('decimal', { nullable: true })\n  discountApplied?: number;\n\n  @OneToOne(() => DiscountUsage, (discountUsage) => discountUsage.order)\n  discountUsage: DiscountUsage;\n\n  @Column()\n  totalAmount: number;\n\n  @ManyToMany(() => Product)\n  @JoinTable({\n    name: 'orders_products',\n    joinColumn: { name: 'orderId', referencedColumnName: 'id' },\n    inverseJoinColumn: { name: 'productId', referencedColumnName: 'id' },\n  })\n  products: Product[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrdersController.html":{"url":"controllers/OrdersController.html","title":"controller - OrdersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrdersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/orders.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                orders\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('orders')\nexport class OrdersController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrdersModule.html":{"url":"modules/OrdersModule.html","title":"module - OrdersModule","body":"\n                   \n\n\n\n\n    Modules\n    OrdersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\n\nOrdersService\n\nOrdersService\n\n\n\nOrdersModule\n\nOrdersModule\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/orders/orders.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrdersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrdersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrdersController } from './orders.controller';\nimport { OrdersService } from './providers/orders.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Order } from './order.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Order])],\n  controllers: [OrdersController],\n  providers: [OrdersService],\n})\nexport class OrdersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrdersService.html":{"url":"injectables/OrdersService.html","title":"injectable - OrdersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrdersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/providers/orders.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class OrdersService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OtpSigninDto.html":{"url":"classes/OtpSigninDto.html","title":"class - OtpSigninDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OtpSigninDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/otpSignin.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                otp sign in dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                otp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        otp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the reset otp', example: 2343})@IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/otpSignin.dto.ts:17\n                        \n                    \n\n            \n                \n                    otp for signin\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsInt, IsNotEmpty } from 'class-validator';\n\n/**\n * otp sign in dto\n */\nexport class OtpSigninDto {\n  /**\n   * otp for signin\n   */\n  @ApiProperty({\n    description: 'This is the reset otp',\n    example: 2343,\n  })\n  @IsInt()\n  @IsNotEmpty()\n  otp: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtpSigninProvider.html":{"url":"injectables/OtpSigninProvider.html","title":"injectable - OtpSigninProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OtpSigninProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/otp-signin.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                signInWithOtp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, generateTokenProvider: GenerateTokensProvider)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/otp-signin.provider.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        generateTokenProvider\n                                                  \n                                                        \n                                                                        GenerateTokensProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        signInWithOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signInWithOtp(otpSigninDto: OtpSigninDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/otp-signin.provider.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otpSigninDto\n                                            \n                                                            OtpSigninDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/providers/users.service';\nimport { OtpSigninDto } from '../dtos/otpSignin.dto';\nimport * as crypto from 'crypto';\nimport { GenerateTokensProvider } from './generate-tokens.provider';\n\n@Injectable()\nexport class OtpSigninProvider {\n  constructor(\n    /**\n     * injecting users service\n     */\n    private readonly usersService: UsersService,\n\n    /**\n     * injecting the generateToken Provider\n     */\n    private readonly generateTokenProvider: GenerateTokensProvider,\n  ) {}\n\n  public async signInWithOtp(otpSigninDto: OtpSigninDto) {\n    // get the otp and hash it\n    const hashedOtp = crypto\n      .createHash('sha256')\n      .update(otpSigninDto.otp.toString())\n      .digest('hex');\n\n    // find the user based on the hased otp and timestamp\n    const user =\n      await this.usersService.findUserByResetOtpAndExpiryTime(hashedOtp);\n\n    // clear the otp and expiry time\n    await this.usersService.clearOtpAndExpiryTime(user);\n\n    // send access token and refresh token\n    // // generate an access token\n    const { accessToken, refreshToken } =\n      await this.generateTokenProvider.generateTokens(user);\n\n    return {\n      accessToken,\n      refreshToken,\n      user: {\n        id: user.id,\n        email: user.email,\n        role: user.role,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paginated.html":{"url":"interfaces/Paginated.html","title":"interface - Paginated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Paginated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pagination/interfaces/paginated.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for the response on paginated queries\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            links\n                                        \n                                \n                                \n                                        \n                                            meta\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the data to be returned\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        links:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    various links for the pages of the data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the metadata for the data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Paginated {\n  /**\n   * the data to be returned\n   */\n  data: T[];\n\n  /**\n   * the metadata for the data\n   */\n  meta: {\n    itemsPerPage: number;\n    totalItems: number;\n    currentPage: number;\n    totalPages: number;\n  };\n\n  /**\n   * various links for the pages of the data\n   */\n  links: {\n    first: string;\n    last: string;\n    current: string;\n    next: string;\n    previous: string;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaginationModule.html":{"url":"modules/PaginationModule.html","title":"module - PaginationModule","body":"\n                   \n\n\n\n\n    Modules\n    PaginationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaginationModule\n\n\n\ncluster_PaginationModule_providers\n\n\n\ncluster_PaginationModule_exports\n\n\n\n\nPaginationProvider \n\nPaginationProvider \n\n\n\nPaginationModule\n\nPaginationModule\n\nPaginationProvider  -->\n\nPaginationModule->PaginationProvider \n\n\n\n\n\nPaginationProvider\n\nPaginationProvider\n\nPaginationModule -->\n\nPaginationProvider->PaginationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/pagination/pagination.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaginationProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PaginationProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PaginationProvider } from './providers/pagination.provider';\n\n@Module({\n  providers: [PaginationProvider],\n  exports: [PaginationProvider],\n})\nexport class PaginationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaginationProvider.html":{"url":"injectables/PaginationProvider.html","title":"injectable - PaginationProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaginationProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pagination/providers/pagination.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for pagination\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                paginationQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in src/common/pagination/providers/pagination.provider.ts:14\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        paginationQuery\n                        \n                    \n                \n            \n            \n                \n                        \n                    paginationQuery(paginationQuery: PaginationQueryDto, repository: Repository, options?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/pagination/providers/pagination.provider.ts:34\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        function for paginating find all queries\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paginationQuery\n                                            \n                                                            PaginationQueryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                repository\n                                            \n                                                        Repository\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                data, metadata and links for the findAll queries\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { PaginationQueryDto } from '../dtos/pagination-query.dto';\nimport { ObjectLiteral, Repository } from 'typeorm';\n\n// inorder to inject a request to a provider\nimport { Request } from 'express';\nimport { REQUEST } from '@nestjs/core';\nimport { Paginated } from '../interfaces/paginated.interface';\n\n/**\n * provider for pagination\n */\n@Injectable()\nexport class PaginationProvider {\n  /**\n   * constructor\n   * @param request\n   */\n  constructor(\n    /**\n     * Injecting request\n     */\n    @Inject(REQUEST)\n    private readonly request: Request,\n  ) {}\n\n  /**\n   * function for paginating find all queries\n   * @param paginationQuery\n   * @param repository\n   * @param options\n   * @returns data, metadata and links for the findAll queries\n   */\n  public async paginationQuery(\n    paginationQuery: PaginationQueryDto,\n    repository: Repository,\n    options?: any,\n  ): Promise> {\n    const results = await repository.find({\n      // no of items to skip in one query\n      skip: (paginationQuery.page - 1) * paginationQuery.limit,\n      // the no items to take in one query\n      take: paginationQuery.limit,\n      relations: options.relations,\n      select: options.select,\n      where: options.where,\n    });\n\n    /**\n     * Create the request URLS\n     */\n    const baseURL =\n      this.request.protocol + '://' + this.request.headers.host + '/';\n\n    const newUrl = new URL(this.request.url, baseURL);\n\n    // console.log(newUrl);\n\n    const totalItems = await repository.count();\n    const totalPages = Math.ceil(totalItems / paginationQuery.limit);\n    const nextPage =\n      paginationQuery.page === totalPages\n        ? paginationQuery.page\n        : paginationQuery.page + 1;\n    const prevPage =\n      paginationQuery.page === 1\n        ? paginationQuery.page\n        : paginationQuery.page - 1;\n\n    const finalResponse: Paginated = {\n      data: results,\n      meta: {\n        itemsPerPage: paginationQuery.limit,\n        totalItems: totalItems,\n        currentPage: paginationQuery.page,\n        totalPages: totalPages,\n      },\n      links: {\n        first: `${newUrl.origin}${newUrl.pathname}?limit=${paginationQuery.limit}&page=1`,\n        last: `${newUrl.origin}${newUrl.pathname}?limit=${paginationQuery.limit}&page=${totalPages}`,\n        current: `${newUrl.origin}${newUrl.pathname}?limit=${paginationQuery.limit}&page=${paginationQuery.page}`,\n        next: `${newUrl.origin}${newUrl.pathname}?limit=${paginationQuery.limit}&page=${nextPage}`,\n        previous: `${newUrl.origin}${newUrl.pathname}?limit=${paginationQuery.limit}&page=${prevPage}`,\n      },\n    };\n\n    return finalResponse;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQueryDto.html":{"url":"classes/PaginationQueryDto.html","title":"class - PaginationQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pagination/dtos/pagination-query.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto for the pagination query\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/pagination/dtos/pagination-query.dto.ts:12\n                        \n                    \n\n            \n                \n                    limit for the number of items in the get all requests\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/pagination/dtos/pagination-query.dto.ts:19\n                        \n                    \n\n            \n                \n                    page number for the get all requests\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsPositive } from 'class-validator';\n\n/**\n * dto for the pagination query\n */\nexport class PaginationQueryDto {\n  /**\n   * limit for the number of items in the get all requests\n   */\n  @IsOptional()\n  limit?: number = 0;\n\n  /**\n   * page number for the get all requests\n   */\n  @IsOptional()\n  @IsPositive()\n  page?: number = 1;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchProductDto.html":{"url":"classes/PatchProductDto.html","title":"class - PatchProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/patch-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                brand\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                category\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                clothType\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                discount\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                dressStyle\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    \n                                longDescription\n                            \n                            \n                                    \n                                    \n                                material\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                price\n                            \n                            \n                                    \n                                    \n                                shortDescription\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                variants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        brand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        clothType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        dressStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        longDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        material\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        shortDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PatchProductVariantDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsInt, IsOptional, IsString } from 'class-validator';\nimport { PatchProductVariantDto } from 'src/product-variants/dto/patch-product-variant.dto';\n\nexport class PatchProductDto {\n  @IsString()\n  @IsOptional()\n  id?: string;\n\n  @IsString()\n  @IsOptional()\n  name?: string;\n\n  @IsInt()\n  @IsOptional()\n  price?: number;\n\n  @IsString()\n  @IsOptional()\n  discount?: string;\n\n  @IsString()\n  @IsOptional()\n  category?: string;\n\n  @IsString()\n  @IsOptional()\n  dressStyle?: string;\n\n  @IsString()\n  @IsOptional()\n  clothType?: string;\n\n  @IsString()\n  @IsOptional()\n  material: string;\n\n  @IsString()\n  @IsOptional()\n  brand: string;\n\n  @IsString()\n  @IsOptional()\n  shortDescription: string;\n\n  @IsString()\n  @IsOptional()\n  longDescription: string;\n\n  @IsArray()\n  @IsOptional()\n  variants?: PatchProductVariantDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchProductVariantDto.html":{"url":"classes/PatchProductVariantDto.html","title":"class - PatchProductVariantDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchProductVariantDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-variants/dto/patch-product-variant.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(\n  CreateProductVariantDto,\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                soldOut\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/patch-product-variant.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        soldOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/patch-product-variant.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateProductVariantDto } from './create-product-variant.dto';\nimport { IsBoolean, IsOptional, IsString } from 'class-validator';\n\nexport class PatchProductVariantDto extends PartialType(\n  CreateProductVariantDto,\n) {\n  @IsString()\n  @IsOptional()\n  id?: string;\n\n  @IsBoolean()\n  @IsOptional()\n  soldOut?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUserDto.html":{"url":"classes/PatchUserDto.html","title":"class - PatchUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/patch-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                country\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lasttName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                state\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                streetAddress\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lasttName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        streetAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\nimport { IsInt, IsOptional, IsString } from 'class-validator';\n\nexport class PatchUserDto extends PartialType(CreateUserDto) {\n  @IsOptional()\n  @IsString()\n  firstName?: string;\n\n  @IsOptional()\n  @IsString()\n  lasttName?: string;\n\n  @IsOptional()\n  @IsString()\n  country?: string;\n\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @IsOptional()\n  @IsString()\n  state?: string;\n\n  @IsOptional()\n  @IsString()\n  city?: string;\n\n  @IsOptional()\n  @IsString()\n  streetAddress?: string;\n\n  @IsOptional()\n  @IsInt()\n  zipCode?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Payment.html":{"url":"entities/Payment.html","title":"entity - Payment","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Payment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/payment.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                payment entity\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                    Optional\n                                authorizationUrl\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                provider\n                            \n                            \n                                    \n                                providerReference\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                userId\n                            \n                            \n                                    \n                                    \n                                variants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {precision: 10, scale: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        authorizationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        providerReference\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         paymentStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: paymentStatus, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProductVariant[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable({name: 'payment_variants', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:55\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { paymentStatus } from './enums/paymentStatus.enum';\nimport { ProductVariant } from 'src/product-variants/product-variants.entity';\n\n/**\n * payment entity\n */\n@Entity()\nexport class Payment {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({\n    type: 'enum',\n    enum: paymentStatus,\n    default: paymentStatus.PENDING,\n  })\n  status: paymentStatus;\n\n  @Column()\n  provider: string;\n\n  @Column({ unique: true })\n  providerReference: string;\n\n  @Column({ nullable: true })\n  authorizationUrl?: string;\n\n  @Column('decimal', { precision: 10, scale: 2 })\n  amount: number;\n\n  @Column({ nullable: false })\n  userId: string;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @ManyToMany(() => ProductVariant)\n  @JoinTable({\n    name: 'payment_variants',\n    joinColumn: { name: 'paymentId', referencedColumnName: 'id' },\n    inverseJoinColumn: { name: 'variantId', referencedColumnName: 'id' },\n  })\n  variants: ProductVariant[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaymentController.html":{"url":"controllers/PaymentController.html","title":"controller - PaymentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaymentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/payment.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                payment\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('payment')\nexport class PaymentController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentModule.html":{"url":"modules/PaymentModule.html","title":"module - PaymentModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/payment/payment.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            PaymentController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Payment } from './payment.entity';\nimport { PaymentController } from './payment.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Payment])],\n  controllers: [PaymentController],\n})\nexport class PaymentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaystackController.html":{"url":"controllers/PaystackController.html","title":"controller - PaystackController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaystackController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/paystack.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                paystack\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                handlePaymentWebhook\n                            \n                            \n                                    \n                                    \n                                    Public\n                                initiatePayment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        handlePaymentWebhook\n                        \n                    \n                \n            \n            \n                \n                        \n                    handlePaymentWebhook(body: any, signature: string, req: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/webhook')@Auth(AuthType.None)@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in src/paystack/paystack.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                signature\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        initiatePayment\n                        \n                    \n                \n            \n            \n                \n                        \n                    initiatePayment(initiatePaymentDto: InitiatePaymentDto, user: ActiveUserData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/initiate-payment')@Roles(Role.USER)\n                \n            \n\n                    \n                        \n                            Defined in src/paystack/paystack.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                initiatePaymentDto\n                                            \n                                                            InitiatePaymentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Headers,\n  HttpCode,\n  HttpStatus,\n  Post,\n  Req,\n} from '@nestjs/common';\nimport { PaystackService } from './providers/paystack.service';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { Role } from 'src/auth/enums/role-type.enum';\nimport { InitiatePaymentDto } from './dtos/initiate-payment.dto';\nimport { ActiveUser } from 'src/auth/decorator/active-user.decorator';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\nimport { Auth } from 'src/auth/decorator/auth.decorator';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\n\n@Controller('paystack')\nexport class PaystackController {\n  constructor(\n    /**\n     * injecting the paystack service\n     */\n    private readonly paystackService: PaystackService,\n  ) {}\n\n  @Post('/initiate-payment')\n  @Roles(Role.USER)\n  //   @Auth(AuthType.None)\n  public initiatePayment(\n    @Body() initiatePaymentDto: InitiatePaymentDto,\n    @ActiveUser() user: ActiveUserData,\n  ) {\n    return this.paystackService.initiatePayment(initiatePaymentDto, user);\n  }\n\n  @Post('/webhook')\n  @Auth(AuthType.None)\n  @HttpCode(HttpStatus.OK)\n  async handlePaymentWebhook(\n    @Body() body: any,\n    @Headers('x-paystack-signature') signature: string,\n    @Req() req: any,\n  ) {\n    return this.paystackService.verifyPayment(body, signature, req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaystackModule.html":{"url":"modules/PaystackModule.html","title":"module - PaystackModule","body":"\n                   \n\n\n\n\n    Modules\n    PaystackModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaystackModule\n\n\n\ncluster_PaystackModule_providers\n\n\n\ncluster_PaystackModule_imports\n\n\n\n\nProductVariantsModule\n\nProductVariantsModule\n\n\n\nPaystackModule\n\nPaystackModule\n\nPaystackModule -->\n\nProductVariantsModule->PaystackModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nPaystackModule -->\n\nProductsModule->PaystackModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nPaystackModule -->\n\nUsersModule->PaystackModule\n\n\n\n\n\nInitiatePaymentProvider\n\nInitiatePaymentProvider\n\nPaystackModule -->\n\nInitiatePaymentProvider->PaystackModule\n\n\n\n\n\nPaystackService\n\nPaystackService\n\nPaystackModule -->\n\nPaystackService->PaystackModule\n\n\n\n\n\nVerifyPaymentProvider\n\nVerifyPaymentProvider\n\nPaystackModule -->\n\nVerifyPaymentProvider->PaystackModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/paystack/paystack.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            InitiatePaymentProvider\n                        \n                        \n                            PaystackService\n                        \n                        \n                            VerifyPaymentProvider\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaystackController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProductVariantsModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { PaystackController } from './paystack.controller';\nimport { PaystackService } from './providers/paystack.service';\nimport { InitiatePaymentProvider } from './providers/initiate-payment.provider';\nimport paystackConfig from './config/paystack.config';\nimport { UsersModule } from 'src/users/users.module';\nimport { ProductsModule } from 'src/products/products.module';\nimport { ProductVariantsModule } from 'src/product-variants/product-variants.module';\nimport { VerifyPaymentProvider } from './providers/verify-payment.provider';\n\n@Module({\n  imports: [\n    UsersModule,\n    ProductsModule,\n    ProductVariantsModule,\n    ConfigModule.forFeature(paystackConfig),\n  ],\n  controllers: [PaystackController],\n  providers: [PaystackService, InitiatePaymentProvider, VerifyPaymentProvider],\n})\nexport class PaystackModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaystackService.html":{"url":"injectables/PaystackService.html","title":"injectable - PaystackService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaystackService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/providers/paystack.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                initiatePayment\n                            \n                            \n                                    Public\n                                    Async\n                                verifyPayment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(initiatePaymentProvider: InitiatePaymentProvider, verifyPaymentProvider: VerifyPaymentProvider)\n                    \n                \n                        \n                            \n                                Defined in src/paystack/providers/paystack.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initiatePaymentProvider\n                                                  \n                                                        \n                                                                        InitiatePaymentProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        verifyPaymentProvider\n                                                  \n                                                        \n                                                                        VerifyPaymentProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        initiatePayment\n                        \n                    \n                \n            \n            \n                \n                        \n                    initiatePayment(initiatePaymentDto: InitiatePaymentDto, user: ActiveUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paystack/providers/paystack.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                initiatePaymentDto\n                                            \n                                                            InitiatePaymentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        verifyPayment\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyPayment(body: any, signature: string, req: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paystack/providers/paystack.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                signature\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InitiatePaymentProvider } from './initiate-payment.provider';\nimport { InitiatePaymentDto } from '../dtos/initiate-payment.dto';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\nimport { VerifyPaymentProvider } from './verify-payment.provider';\n\n@Injectable()\nexport class PaystackService {\n  constructor(\n    /**\n     * injecting the initiate payment provider\n     */\n    private readonly initiatePaymentProvider: InitiatePaymentProvider,\n\n    /**\n     * injecting the verify payment provider\n     */\n    private readonly verifyPaymentProvider: VerifyPaymentProvider,\n  ) {}\n\n  public async initiatePayment(\n    initiatePaymentDto: InitiatePaymentDto,\n    user: ActiveUserData,\n  ) {\n    return await this.initiatePaymentProvider.initializePayment(\n      initiatePaymentDto,\n      user,\n    );\n  }\n\n  public async verifyPayment(body: any, signature: string, req: any) {\n    return await this.verifyPaymentProvider.paymentWebhook(\n      body,\n      signature,\n      req,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Product.html":{"url":"entities/Product.html","title":"entity - Product","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/product.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                brand\n                            \n                            \n                                    \n                                category\n                            \n                            \n                                    \n                                clothType\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                discount\n                            \n                            \n                                    \n                                dressStyle\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                longDescription\n                            \n                            \n                                    \n                                material\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                    Optional\n                                reviews\n                            \n                            \n                                    \n                                shortDescription\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    Optional\n                                variants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        brand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        clothType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {precision: 5, scale: 2, default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dressStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        longDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        material\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {precision: 10, scale: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        reviews\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Review[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, review => review.product, {cascade: true, eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        shortDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProductVariant[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, variant => variant.product, {cascade: true, eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:53\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ProductVariant } from 'src/product-variants/product-variants.entity';\nimport { Review } from 'src/reviews/reviews.entity';\nimport {\n  BeforeInsert,\n  BeforeUpdate,\n  Column,\n  CreateDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Product {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column('decimal', { precision: 10, scale: 2 })\n  price: number;\n\n  @Column('decimal', { precision: 5, scale: 2, default: 0 })\n  discount: number;\n\n  @Column()\n  category: string;\n\n  @Column()\n  dressStyle: string;\n\n  @Column()\n  clothType: string;\n\n  @Column()\n  material: string;\n\n  @Column()\n  brand: string;\n\n  @Column()\n  shortDescription: string;\n\n  @Column()\n  longDescription: string;\n\n  @OneToMany(() => ProductVariant, (variant) => variant.product, {\n    cascade: true,\n    eager: true,\n  })\n  variants?: ProductVariant[];\n\n  @OneToMany(() => Review, (review) => review.product, {\n    cascade: true,\n    eager: true,\n  })\n  reviews?: Review[];\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @BeforeInsert()\n  @BeforeUpdate()\n  transformToLowercase() {\n    if (this.name) {\n      this.name = this.name.toLowerCase();\n    }\n    if (this.category) {\n      this.category = this.category.toLowerCase();\n    }\n    if (this.dressStyle) {\n      this.dressStyle = this.dressStyle.toLowerCase();\n    }\n    if (this.clothType) {\n      this.clothType = this.clothType.toLowerCase();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProductImage.html":{"url":"entities/ProductImage.html","title":"entity - ProductImage","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProductImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-images/product-image.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                displayOrder\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                imagePath\n                            \n                            \n                                    \n                                    \n                                productVariant\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        displayOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int', {default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-images/product-image.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-images/product-image.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        imagePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-images/product-image.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        productVariant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductVariant\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, variant => variant.images, {onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-images/product-image.entity.ts:25\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ProductVariant } from 'src/product-variants/product-variants.entity';\nimport {\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class ProductImage {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  imagePath: string;\n\n  @Column('int', { default: 0 })\n  displayOrder: number;\n\n  @ManyToOne(() => ProductVariant, (variant) => variant.images, {\n    onDelete: 'CASCADE',\n  })\n  @JoinColumn()\n  productVariant: ProductVariant;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductImagesModule.html":{"url":"modules/ProductImagesModule.html","title":"module - ProductImagesModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductImagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductImagesModule\n\n\n\ncluster_ProductImagesModule_providers\n\n\n\n\nProductImagesService\n\nProductImagesService\n\n\n\nProductImagesModule\n\nProductImagesModule\n\nProductImagesModule -->\n\nProductImagesService->ProductImagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product-images/product-images.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductImagesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductImagesService } from './providers/product-images.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProductImage } from './product-image.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ProductImage])],\n  providers: [ProductImagesService],\n})\nexport class ProductImagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductImagesService.html":{"url":"injectables/ProductImagesService.html","title":"injectable - ProductImagesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductImagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-images/providers/product-images.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ProductImagesService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProductVariant.html":{"url":"entities/ProductVariant.html","title":"entity - ProductVariant","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProductVariant\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-variants/product-variants.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                color\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                images\n                            \n                            \n                                    \n                                    \n                                product\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                soldOut\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProductImage[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, image => image.productVariant, {cascade: true, eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, product => product.variants, {onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        soldOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:27\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ProductImage } from 'src/product-images/product-image.entity';\nimport { Product } from 'src/products/product.entity';\nimport {\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  OneToMany,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class ProductVariant {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  color: string;\n\n  @Column()\n  size: string;\n\n  @Column('int')\n  quantity: number;\n\n  @Column({ default: false })\n  soldOut: boolean;\n\n  @ManyToOne(() => Product, (product) => product.variants, {\n    onDelete: 'CASCADE',\n  })\n  @JoinColumn()\n  product: Product;\n\n  @OneToMany(() => ProductImage, (image) => image.productVariant, {\n    cascade: true,\n    eager: true,\n  })\n  images?: ProductImage[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductVariantsModule.html":{"url":"modules/ProductVariantsModule.html","title":"module - ProductVariantsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductVariantsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductVariantsModule\n\n\n\ncluster_ProductVariantsModule_exports\n\n\n\ncluster_ProductVariantsModule_providers\n\n\n\n\nProductVariantsService \n\nProductVariantsService \n\n\n\nProductVariantsModule\n\nProductVariantsModule\n\nProductVariantsService  -->\n\nProductVariantsModule->ProductVariantsService \n\n\n\n\n\nProductVariantsService\n\nProductVariantsService\n\nProductVariantsModule -->\n\nProductVariantsService->ProductVariantsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product-variants/product-variants.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductVariantsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProductVariantsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductVariantsService } from './providers/product-variants.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProductVariant } from './product-variants.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ProductVariant])],\n  providers: [ProductVariantsService],\n  exports: [ProductVariantsService],\n})\nexport class ProductVariantsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductVariantsService.html":{"url":"injectables/ProductVariantsService.html","title":"injectable - ProductVariantsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductVariantsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-variants/providers/product-variants.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                checkVariantAvailability\n                            \n                            \n                                    Public\n                                    Async\n                                findProductVariantById\n                            \n                            \n                                    Async\n                                rollbackStock\n                            \n                            \n                                    Public\n                                    Async\n                                saveProductVariant\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productVariantRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/product-variants/providers/product-variants.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productVariantRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        checkVariantAvailability\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkVariantAvailability(manager: EntityManager, variantId: string, productId: string, quantity: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product-variants/providers/product-variants.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                manager\n                                            \n                                                        EntityManager\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                variantId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                quantity\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findProductVariantById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductVariantById(variantId: string, productId?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product-variants/providers/product-variants.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                variantId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a product variant\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        rollbackStock\n                        \n                    \n                \n            \n            \n                \n                        \n                    rollbackStock(variantId: string, productId: string, quantity: number, manager: EntityManager)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product-variants/providers/product-variants.service.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                variantId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                quantity\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                manager\n                                            \n                                                        EntityManager\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        saveProductVariant\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveProductVariant(variant: ProductVariant)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product-variants/providers/product-variants.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                variant\n                                            \n                                                            ProductVariant\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a product variant\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { EntityManager, Repository } from 'typeorm';\nimport { ProductVariant } from '../product-variants.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class ProductVariantsService {\n  constructor(\n    /**\n     * injecting the product variant repository\n     */\n    @InjectRepository(ProductVariant)\n    private readonly productVariantRepository: Repository,\n  ) {}\n\n  /**\n   * @function finds a product variant by id\n   * @param variantId\n   * @param productId\n   * @returns a product variant\n   */\n  public async findProductVariantById(\n    variantId: string,\n    productId?: string,\n  ): Promise {\n    const variant = await this.productVariantRepository.findOne({\n      where: { id: variantId, product: productId ? { id: productId } : null },\n    });\n\n    if (!variant) {\n      throw new NotFoundException(\n        `Variant with ID ${variantId} not found for product ${productId}`,\n      );\n    }\n\n    return variant;\n  }\n\n  /**\n   * @function saves a variant\n   * @param variant\n   * @returns  a product variant\n   */\n  public async saveProductVariant(\n    variant: ProductVariant,\n  ): Promise {\n    return await this.productVariantRepository.save(variant);\n  }\n  /**\n   * @function checks variant availability\n   * @param manager\n   * @param variantId\n   * @param productId\n   * @param quantity\n   */\n  public async checkVariantAvailability(\n    manager: EntityManager,\n    variantId: string,\n    productId: string,\n    quantity: number,\n  ) {\n    // Fetch the variant from the database, ensuring it belongs to the specified product\n    // Fetch the variant with a pessimistic lock to prevent concurrent access\n    const variant = await manager\n      .createQueryBuilder(ProductVariant, 'variant')\n      .setLock('pessimistic_write') // Lock the row\n      .where('variant.id = :id AND variant.productId = :productId', {\n        id: variantId,\n        productId,\n      })\n      .getOne();\n\n    // Check if the variant exists\n    if (!variant) {\n      throw new BadRequestException(\n        `Variant with ID ${variantId} not found for product ${productId}`,\n      );\n    }\n\n    // Check if the variant is sold out\n    if (variant.soldOut) {\n      throw new BadRequestException(\n        `Variant ${variantId} (color: ${variant.color}, size: ${variant.size}) is sold out`,\n      );\n    }\n\n    // Optional: Check if the requested quantity exceeds available stock\n    if (quantity > variant.quantity) {\n      throw new BadRequestException(\n        `Requested quantity (${quantity}) for variant ${variantId} exceeds available stock (${variant.quantity})`,\n      );\n    }\n\n    // Reserve the stock by decrementing the quantity\n    variant.quantity -= quantity;\n\n    if (variant.quantity  {\n    // Fetch the variant with a lock\n    const variant = await manager\n      .createQueryBuilder(ProductVariant, 'variant')\n      .setLock('pessimistic_write')\n      .where('variant.id = :id AND variant.productId = :productId', {\n        id: variantId,\n        productId,\n      })\n      .getOne();\n\n    if (variant) {\n      // Restore the quantity\n      variant.quantity += quantity;\n      variant.soldOut = false; // Reset soldOut if quantity becomes positive\n      await manager.save(variant);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductWithVariantDto.html":{"url":"classes/ProductWithVariantDto.html","title":"class - ProductWithVariantDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductWithVariantDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/dtos/initiate-payment.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                productId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                variants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dtos/initiate-payment.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dtos/initiate-payment.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PatchProductVariantDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsNotEmpty()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dtos/initiate-payment.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsInt,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { PatchProductVariantDto } from 'src/product-variants/dto/patch-product-variant.dto';\n\nclass ProductWithVariantDto {\n  @IsString()\n  @IsNotEmpty()\n  productId: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  price: number;\n\n  @IsArray()\n  @IsNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => PatchProductVariantDto)\n  variants: PatchProductVariantDto[];\n}\n\nexport class InitiatePaymentDto {\n  @IsString()\n  @IsOptional()\n  deliveryPicker?: string;\n\n  @IsString()\n  @IsOptional()\n  deliveryAddress?: string;\n\n  @IsString()\n  @IsOptional()\n  discountId?: string;\n\n  @IsArray()\n  @IsNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => ProductWithVariantDto)\n  products: ProductWithVariantDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                createProduct\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                deleteProduct\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                findAllProducts\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                findProductById\n                            \n                            \n                                    \n                                    \n                                    Public\n                                patchProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProduct(createProductDto: CreateProductDto, files: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiConsumes('multipart/form-data')@UseInterceptors(undefined)@Roles(Role.ADMIN)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                files\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProduct(productId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:productId')@Roles(Role.ADMIN)@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a message that the item was successfully deleted\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        findAllProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllProducts(productQuery: GetProductsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It finds all products '})@ApiResponse({status: 200, description: 'All products are fetched and paginated'})@ApiQuery({name: 'limit', type: 'number', required: false, description: 'The number of entries returned per query', example: 10})@ApiQuery({name: 'page', type: 'number', required: false, description: 'The position of the page number that you want the api to return', example: 1})@Auth(AuthType.None)@Get('')\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:133\n                        \n                    \n\n\n            \n                \n                        route for getting all products\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productQuery\n                                            \n                                                            GetProductsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                all products\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        findProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductById(productId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It finds a product based on its id'})@ApiResponse({status: 200, description: 'Product is fetched successfully based on its id'})@ApiParam({name: 'eventId', required: true, type: String, description: 'The unique identifier of the product', example: '12345'})@ApiHeaders(['undefined', 'undefined'])@Auth(AuthType.None)@Get('/:productId')\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:100\n                        \n                    \n\n\n            \n                \n                        route for getting a product by the product id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                a particular event\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        patchProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchProduct(productId: string, patchProductDto: PatchProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:productId')@Roles(Role.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patchProductDto\n                                            \n                                                            PatchProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                updated product\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  Query,\n  UploadedFiles,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { CreateProductDto } from './dtos/createProductDto';\nimport {\n  ApiConsumes,\n  ApiHeaders,\n  ApiOperation,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n} from '@nestjs/swagger';\nimport { FileFieldsInterceptor } from '@nestjs/platform-express';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { Role } from 'src/auth/enums/role-type.enum';\nimport { ProductsService } from './providers/products.service';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\nimport { Auth } from 'src/auth/decorator/auth.decorator';\nimport { GetProductsDto } from './dtos/get-product.dto';\nimport { PatchProductDto } from './dtos/patch-product.dto';\n\n@Controller('products')\nexport class ProductsController {\n  constructor(\n    /**\n     * injecting the products service\n     */\n    private readonly productsService: ProductsService,\n  ) {}\n\n  /**\n   * @function createProduct\n   * @param createProductDto\n   * @param user\n   * @param files\n   */\n  @ApiConsumes('multipart/form-data')\n  @UseInterceptors(\n    FileFieldsInterceptor(\n      // Dynamically generate interceptor fields\n      Array.from({ length: 10 }, (_, i) => ({\n        name: `variants[${i}][images]`,\n        maxCount: 6,\n      })),\n    ),\n  )\n  @Roles(Role.ADMIN)\n  @Post()\n  public createProduct(\n    @Body() createProductDto: CreateProductDto,\n    @UploadedFiles() files: { [key: string]: Express.Multer.File[] },\n  ) {\n    return this.productsService.createProduct(createProductDto, files);\n  }\n\n  /**\n   * route for getting a product by the product id\n   * @param eventId\n   * @returns a particular event\n   */\n  @ApiOperation({\n    summary: 'It finds a product based on its id',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Product is fetched successfully based on its id',\n  })\n  @ApiParam({\n    name: 'eventId',\n    required: true,\n    type: String,\n    description: 'The unique identifier of the product',\n    example: '12345',\n  })\n  @ApiHeaders([\n    {\n      name: 'Authorization',\n      required: true,\n      description: 'Bearer token for authorization',\n    },\n    {\n      name: 'X-Custom-Header',\n      required: false,\n      description: 'A custom optional header',\n    },\n  ])\n  @Auth(AuthType.None)\n  @Get('/:productId')\n  public findProductById(@Param('productId') productId: string) {\n    return this.productsService.findProductById(productId);\n  }\n\n  /**\n   * route for getting all products\n   * @param productQuery\n   * @returns all products\n   */\n  @ApiOperation({\n    summary: 'It finds all products ',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'All products are fetched and paginated',\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: 'number',\n    required: false,\n    description: 'The number of entries returned per query',\n    example: 10,\n  })\n  @ApiQuery({\n    name: 'page',\n    type: 'number',\n    required: false,\n    description:\n      'The position of the page number that you want the api to return',\n    example: 1,\n  })\n  @Auth(AuthType.None)\n  @Get('')\n  public findAllProducts(@Query() productQuery: GetProductsDto) {\n    return this.productsService.findAll(productQuery);\n  }\n\n  /**\n   * @function updates a product\n   * @param productId\n   * @param patchProductDto\n   * @returns updated product\n   */\n  @Patch('/:productId')\n  @Roles(Role.ADMIN)\n  public patchProduct(\n    @Param('productId') productId: string,\n    @Body() patchProductDto: PatchProductDto,\n  ) {\n    return this.productsService.updateProduct(productId, patchProductDto);\n  }\n\n  /**\n   * @function deletes a product\n   * @param productId\n   * @returns a message that the item was successfully deleted\n   */\n  @Delete('/:productId')\n  @Roles(Role.ADMIN)\n  @HttpCode(HttpStatus.NO_CONTENT) // This set\n  public deleteProduct(\n    @Param('productId') productId: string,\n  ): Promise {\n    return this.productsService.deleteProduct(productId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_exports\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_ProductsModule_imports\n\n\n\n\nPaginationModule\n\nPaginationModule\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nPaginationModule->ProductsModule\n\n\n\n\n\nProductVariantsModule\n\nProductVariantsModule\n\nProductsModule -->\n\nProductVariantsModule->ProductsModule\n\n\n\n\n\nUploadsModule\n\nUploadsModule\n\nProductsModule -->\n\nUploadsModule->ProductsModule\n\n\n\n\n\nProductsService \n\nProductsService \n\nProductsService  -->\n\nProductsModule->ProductsService \n\n\n\n\n\nCreateProductProvider\n\nCreateProductProvider\n\nProductsModule -->\n\nCreateProductProvider->ProductsModule\n\n\n\n\n\nFindAllProductsProvider\n\nFindAllProductsProvider\n\nProductsModule -->\n\nFindAllProductsProvider->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nUpdateProductProvider\n\nUpdateProductProvider\n\nProductsModule -->\n\nUpdateProductProvider->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateProductProvider\n                        \n                        \n                            FindAllProductsProvider\n                        \n                        \n                            ProductsService\n                        \n                        \n                            UpdateProductProvider\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PaginationModule\n                        \n                        \n                            ProductVariantsModule\n                        \n                        \n                            UploadsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductsController } from './products.controller';\nimport { ProductsService } from './providers/products.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Product } from './product.entity';\nimport { CreateProductProvider } from './providers/create-product.provider';\nimport { UploadsModule } from 'src/uploads/uploads.module';\nimport { PaginationModule } from 'src/common/pagination/pagination.module';\nimport { ProductVariantsModule } from 'src/product-variants/product-variants.module';\nimport { FindAllProductsProvider } from './providers/find-all-products.provider';\nimport { UpdateProductProvider } from './providers/update-product.provider';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Product]),\n    UploadsModule,\n    PaginationModule,\n    ProductVariantsModule,\n  ],\n  controllers: [ProductsController],\n  providers: [\n    ProductsService,\n    CreateProductProvider,\n    FindAllProductsProvider,\n    UpdateProductProvider,\n  ],\n  exports: [ProductsService],\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/providers/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createProduct\n                            \n                            \n                                    Public\n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findProductById\n                            \n                            \n                                    Public\n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createProductProvider: CreateProductProvider, productRepository: Repository, findAllProductsProvider: FindAllProductsProvider, updateProductProvider: UpdateProductProvider)\n                    \n                \n                        \n                            \n                                Defined in src/products/providers/products.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createProductProvider\n                                                  \n                                                        \n                                                                        CreateProductProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        findAllProductsProvider\n                                                  \n                                                        \n                                                                        FindAllProductsProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateProductProvider\n                                                  \n                                                        \n                                                                        UpdateProductProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProduct(createProductDto: CreateProductDto, files: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                files\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                the created product\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProduct(productId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a message that the item was successfully deleted\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(productQuery: GetProductsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productQuery\n                                            \n                                                            GetProductsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                all products\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductById(productId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                product by id\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProduct(id: string, patchProductDto: PatchProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patchProductDto\n                                            \n                                                            PatchProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                updated product\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { CreateProductProvider } from './create-product.provider';\nimport { CreateProductDto } from '../dtos/createProductDto';\nimport { Repository } from 'typeorm';\nimport { Product } from '../product.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { GetProductsDto } from '../dtos/get-product.dto';\nimport { Paginated } from 'src/common/pagination/interfaces/paginated.interface';\nimport { PatchProductDto } from '../dtos/patch-product.dto';\nimport { FindAllProductsProvider } from './find-all-products.provider';\nimport { UpdateProductProvider } from './update-product.provider';\n\n@Injectable()\nexport class ProductsService {\n  constructor(\n    /**\n     * injecting the create product provider\n     */\n\n    private readonly createProductProvider: CreateProductProvider,\n\n    /**\n     * injecting the product repository\n     */\n    @InjectRepository(Product)\n    private readonly productRepository: Repository,\n\n    /**\n     * injecting the find all products provider\n     */\n    private readonly findAllProductsProvider: FindAllProductsProvider,\n\n    /**\n     * injecting the update product provider\n     */\n    private readonly updateProductProvider: UpdateProductProvider,\n  ) {}\n\n  /**\n   * @function creates a product\n   * @param createProductDto\n   * @param files\n   * @returns the created product\n   */\n  public async createProduct(\n    createProductDto: CreateProductDto,\n    files: { [key: string]: Express.Multer.File[] },\n  ): Promise {\n    return this.createProductProvider.createProduct(createProductDto, files);\n  }\n\n  /**\n   * @function to get product by id\n   * @param productId\n   * @returns product by id\n   */\n  public async findProductById(productId: string): Promise {\n    try {\n      const product = await this.productRepository.findOneBy({\n        id: productId,\n      });\n\n      if (!product) {\n        throw new NotFoundException(`product with ${productId}  not found`);\n      }\n\n      return product;\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n\n  /**\n   * @function for getting all products\n   * @param productQuery\n   * @returns all products\n   */\n  public async findAll(\n    productQuery: GetProductsDto,\n  ): Promise> {\n    return await this.findAllProductsProvider.findAll(productQuery);\n  }\n\n  /**\n   * @function updates a product\n   * @param id\n   * @param patchProductDto\n   * @returns updated product\n   */\n  public async updateProduct(\n    id: string,\n    patchProductDto: PatchProductDto,\n  ): Promise {\n    return await this.updateProductProvider.updateProduct(id, patchProductDto);\n  }\n\n  /**\n   * @function deletes a product\n   * @param productId\n   * @returns a message that the item was successfully deleted\n   */\n  public async deleteProduct(productId: string): Promise {\n    try {\n      await this.productRepository.delete(productId);\n      return {\n        message: `Product ${productId}, was successfully deleted`,\n      };\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenDto.html":{"url":"classes/RefreshTokenDto.html","title":"class - RefreshTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/refresh-token.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                refresh token dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the refresh token', example: 'hdfbwojefbnqpkfbjoqfehfewfeqwf234jr'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/refresh-token.dto.ts:17\n                        \n                    \n\n            \n                \n                    refresh token\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\n/**\n * refresh token dto\n */\nexport class RefreshTokenDto {\n  /**\n   * refresh token\n   */\n  @ApiProperty({\n    description: 'This is the refresh token',\n    example: 'hdfbwojefbnqpkfbjoqfehfewfeqwf234jr',\n  })\n  @IsNotEmpty()\n  @IsString()\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RefreshTokenProvider.html":{"url":"injectables/RefreshTokenProvider.html","title":"injectable - RefreshTokenProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RefreshTokenProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/refresh-token.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for resfresh token\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                refreshTokens\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConfiguration: ConfigType<>, generateTokenProvider: GenerateTokensProvider, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/refresh-token.provider.ts:19\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        generateTokenProvider\n                                                  \n                                                        \n                                                                        GenerateTokensProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshTokens(refreshTokenDto: RefreshTokenDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/refresh-token.provider.ts:56\n                        \n                    \n\n\n            \n                \n                        function for using the refresh token to generate a new access and refresh token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshTokenDto\n                                            \n                                                            RefreshTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                access and refresh tokend\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  forwardRef,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { RefreshTokenDto } from '../dtos/refresh-token.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport jwtConfig from '../config/jwt.config';\nimport { ConfigType } from '@nestjs/config';\nimport { GenerateTokensProvider } from './generate-tokens.provider';\nimport { UsersService } from 'src/users/providers/users.service';\nimport { ActiveUserData } from '../interfaces/active-user-data.interface';\n\n/**\n * provider for resfresh token\n */\n@Injectable()\nexport class RefreshTokenProvider {\n  /**\n   * constructor\n   * @param jwtService\n   * @param jwtConfiguration\n   * @param generateTokenProvider\n   * @param usersService\n   */\n  constructor(\n    /**\n     * Injecting the jwt service\n     */\n    private readonly jwtService: JwtService,\n\n    /**\n     * Injecting the jwt config\n     */\n    @Inject(jwtConfig.KEY)\n    private readonly jwtConfiguration: ConfigType,\n\n    /**\n     * injecting the generate token provider\n     */\n    private readonly generateTokenProvider: GenerateTokensProvider,\n\n    /**\n     * Injecting the usersService\n     */\n    @Inject(forwardRef(() => UsersService))\n    private readonly usersService: UsersService,\n  ) {}\n\n  /**\n   * function for using the refresh token to generate a new access and refresh token\n   * @param refreshTokenDto\n   * @returns access and refresh tokend\n   */\n  public async refreshTokens(refreshTokenDto: RefreshTokenDto) {\n    try {\n      // verify the refresh token using the jwtService\n      const { sub } = await this.jwtService.verifyAsync\n      >(refreshTokenDto.refreshToken, {\n        secret: this.jwtConfiguration.secret,\n        audience: this.jwtConfiguration.audience,\n        issuer: this.jwtConfiguration.issuer,\n      });\n\n      // based on the id gotten, fetch the user from the db\n      const user = await this.usersService.findOneById(sub);\n\n      // generate the tokens\n      return await this.generateTokenProvider.generateTokens(user);\n    } catch (error) {\n      throw new UnauthorizedException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Review.html":{"url":"entities/Review.html","title":"entity - Review","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Review\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/reviews.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dateCreated\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                product\n                            \n                            \n                                    \n                                review\n                            \n                            \n                                    \n                                reviewer\n                            \n                            \n                                    \n                                    \n                                stars\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, product => product.reviews)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        review\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reviewer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        stars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})@Check('\"stars\" BETWEEN 1 AND 5')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Product } from 'src/products/product.entity';\nimport {\n  Check,\n  Column,\n  CreateDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Review {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  reviewer: string;\n\n  @Column('text')\n  review: string;\n\n  @Column({ type: 'int' })\n  @Check('\"stars\" BETWEEN 1 AND 5') // This ad\n  stars: number;\n\n  @CreateDateColumn()\n  dateCreated: Date;\n\n  @ManyToOne(() => Product, (product) => product.reviews)\n  product: Product;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ReviewsController.html":{"url":"controllers/ReviewsController.html","title":"controller - ReviewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ReviewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/reviews.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                reviews\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                createReview\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                deleteProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        createReview\n                        \n                    \n                \n            \n            \n                \n                        \n                    createReview(createReviewDto: CreateReviewDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('')@Auth(AuthType.None)\n                \n            \n\n                    \n                        \n                            Defined in src/reviews/reviews.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createReviewDto\n                                            \n                                                            CreateReviewDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                review\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProduct(reviewId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:reviewId')@Roles(Role.ADMIN)@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in src/reviews/reviews.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reviewId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a message that the item was successfully deleted\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Post,\n} from '@nestjs/common';\nimport { ReviewsService } from './providers/reviews.service';\nimport { CreateReviewDto } from './dtos/create-review.dto';\nimport { Auth } from 'src/auth/decorator/auth.decorator';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { Role } from 'src/auth/enums/role-type.enum';\n\n@Controller('reviews')\nexport class ReviewsController {\n  constructor(\n    /**\n     * injecting the reviews service\n     */\n    private readonly reviewsService: ReviewsService,\n  ) {}\n\n  /**\n   * @function creates a review\n   * @param createReviewDto\n   * @returns review\n   */\n  @Post('')\n  @Auth(AuthType.None)\n  public createReview(@Body() createReviewDto: CreateReviewDto): Promise {\n    return this.reviewsService.createReview(createReviewDto);\n  }\n\n  /**\n   * @function deletes a product\n   * @param productId\n   * @returns a message that the item was successfully deleted\n   */\n  @Delete('/:reviewId')\n  @Roles(Role.ADMIN)\n  @HttpCode(HttpStatus.NO_CONTENT) // This set\n  public deleteProduct(\n    @Param('reviewId') reviewId: string,\n  ): Promise {\n    return this.reviewsService.deleteReview(reviewId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReviewsModule.html":{"url":"modules/ReviewsModule.html","title":"module - ReviewsModule","body":"\n                   \n\n\n\n\n    Modules\n    ReviewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReviewsModule\n\n\n\ncluster_ReviewsModule_imports\n\n\n\ncluster_ReviewsModule_providers\n\n\n\n\nProductsModule\n\nProductsModule\n\n\n\nReviewsModule\n\nReviewsModule\n\nReviewsModule -->\n\nProductsModule->ReviewsModule\n\n\n\n\n\nCreateReviewProvider\n\nCreateReviewProvider\n\nReviewsModule -->\n\nCreateReviewProvider->ReviewsModule\n\n\n\n\n\nReviewsService\n\nReviewsService\n\nReviewsModule -->\n\nReviewsService->ReviewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/reviews/reviews.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateReviewProvider\n                        \n                        \n                            ReviewsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ReviewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProductsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ReviewsController } from './reviews.controller';\nimport { ReviewsService } from './providers/reviews.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Review } from './reviews.entity';\nimport { CreateReviewProvider } from './providers/create-review.provider';\nimport { ProductsModule } from 'src/products/products.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Review]), ProductsModule],\n  controllers: [ReviewsController],\n  providers: [ReviewsService, CreateReviewProvider],\n})\nexport class ReviewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReviewsService.html":{"url":"injectables/ReviewsService.html","title":"injectable - ReviewsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReviewsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/providers/reviews.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createReview\n                            \n                            \n                                    Public\n                                    Async\n                                deleteReview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createReviewProvider: CreateReviewProvider, reviewsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/reviews/providers/reviews.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createReviewProvider\n                                                  \n                                                        \n                                                                        CreateReviewProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reviewsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createReview\n                        \n                    \n                \n            \n            \n                \n                        \n                    createReview(createReviewDto: CreateReviewDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/reviews/providers/reviews.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createReviewDto\n                                            \n                                                            CreateReviewDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a review\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteReview\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteReview(reviewId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/reviews/providers/reviews.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reviewId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a message that the review was successfully deleted\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { CreateReviewProvider } from './create-review.provider';\nimport { CreateReviewDto } from '../dtos/create-review.dto';\nimport { Repository } from 'typeorm';\nimport { Review } from '../reviews.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class ReviewsService {\n  constructor(\n    /**\n     * injecting the create review provider\n     */\n    private readonly createReviewProvider: CreateReviewProvider,\n\n    /**\n     * injecting the reviews repository\n     */\n    @InjectRepository(Review)\n    private readonly reviewsRepository: Repository,\n  ) {}\n\n  /**\n   * @function creates a review\n   * @param createReviewDto\n   * @param productId\n   * @returns a review\n   */\n  public async createReview(createReviewDto: CreateReviewDto): Promise {\n    return this.createReviewProvider.createReview(createReviewDto);\n  }\n\n  /**\n   * @function deletes a review\n   * @param reviewId\n   * @returns a message that the review was successfully deleted\n   */\n  public async deleteReview(reviewId: string): Promise {\n    try {\n      await this.reviewsRepository.delete(reviewId);\n      return {\n        message: `Product ${reviewId}, was successfully deleted`,\n      };\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/roles/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    role guard\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/roles/roles.guard.ts:16\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/roles/roles.guard.ts:31\n                        \n                    \n\n\n            \n                \n                        function for validating role of user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true or false depending whether the users role meets the role requirements in the role decorator\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  ForbiddenException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { ROLES_KEY } from 'src/auth/constants/role.constant';\nimport { Role } from 'src/auth/enums/role-type.enum';\n\n/**\n * role guard\n */\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  // using static means you can use the name of the property of the class without the \"this\" keyword\n  //   private static readonly defaultRoleType: Role = Role.ADMIN;\n\n  /**\n   * constructor\n   * @param reflector\n   */\n  constructor(private reflector: Reflector) {}\n\n  /**\n   * function for validating role of user\n   * @param context\n   * @returns true or false depending whether the users role meets the role requirements in the role decorator\n   */\n  canActivate(context: ExecutionContext): boolean {\n    const requiredRoles = this.reflector.getAllAndOverride(ROLES_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    if (!requiredRoles) {\n      return true; //  allow access.\n    }\n\n    const { user } = context.switchToHttp().getRequest();\n\n    if (!user) {\n      throw new ForbiddenException('User not found.');\n    }\n\n    const hasRole = requiredRoles.some((role) => user.role === role);\n\n    if (!hasRole) {\n      throw new ForbiddenException(\n        'You do not have permission to access this resource.',\n      );\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/sign-in.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                sign in dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the email of the user', example: 'Favour@gmail.com'})@IsEmail()@MaxLength(96)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/sign-in.dto.ts:19\n                        \n                    \n\n            \n                \n                    user email address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the role of the user', example: 'Admin'})@IsEnum(Role)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/sign-in.dto.ts:30\n                        \n                    \n\n            \n                \n                    user role\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsEnum, IsNotEmpty, MaxLength } from 'class-validator';\nimport { Role } from '../enums/role-type.enum';\n\n/**\n * sign in dto\n */\nexport class SignInDto {\n  /**\n   * user email address\n   */\n  @ApiProperty({\n    description: 'This is the email of the user',\n    example: 'Favour@gmail.com',\n  })\n  @IsEmail()\n  @MaxLength(96)\n  @IsNotEmpty()\n  email: string;\n\n  /**\n   * user role\n   */\n  @ApiProperty({\n    description: 'This is the role of the user',\n    example: 'Admin',\n  })\n  @IsEnum(Role)\n  @IsNotEmpty()\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SignInProvider.html":{"url":"injectables/SignInProvider.html","title":"injectable - SignInProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SignInProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/sign-in.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for sigining in users\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, mailService: MailService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/sign-in.provider.ts:17\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: SignInDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/sign-in.provider.ts:42\n                        \n                    \n\n\n            \n                \n                        function for signing in users\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                access and refresh tokens\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  forwardRef,\n  Inject,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { SignInDto } from '../dtos/sign-in.dto';\nimport { UsersService } from 'src/users/providers/users.service';\nimport { randomInt } from 'crypto';\nimport * as crypto from 'crypto';\nimport { MailService } from 'src/mail/providers/mail.service';\n\n/**\n * provider for sigining in users\n */\n@Injectable()\nexport class SignInProvider {\n  /**\n   * constructor\n   * @param usersService\n   * @param hashingProvider\n   * @param generateTokenProvider\n   */\n  constructor(\n    /**\n     * injecting the user service\n     */\n    @Inject(forwardRef(() => UsersService))\n    private readonly usersService: UsersService,\n\n    /**\n     * injecting the mail service\n     */\n    private readonly mailService: MailService,\n  ) {}\n\n  /**\n   * function for signing in users\n   * @param signInDto\n   * @returns access and refresh tokens\n   */\n  public async signIn(signInDto: SignInDto) {\n    // find  the user using the email ID\n    // throw an exception if the user does not exist\n\n    let user: any;\n    user = await this.usersService.findOneByEmail(signInDto.email);\n\n    // if user does not exist already, create user\n    if (!user) {\n      user = await this.usersService.createUser({\n        email: signInDto.email,\n        role: signInDto.role,\n      });\n    }\n\n    // generate otp\n    const otp = randomInt(1000, 1000000);\n\n    const hashedOtp = crypto\n      .createHash('sha256')\n      .update(otp.toString())\n      .digest('hex');\n\n    // store the otp in the db\n    await this.usersService.storeTokenOtpAndOtpExpire(user, hashedOtp);\n\n    try {\n      await this.mailService.sendLoginOtp(user, otp.toString());\n    } catch (error) {\n      console.log(error);\n      throw new RequestTimeoutException(error);\n    }\n\n    return {\n      user: {\n        id: user.id,\n        role: user.role,\n        email: user.email,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StoreOtpAndExpireProvider.html":{"url":"injectables/StoreOtpAndExpireProvider.html","title":"injectable - StoreOtpAndExpireProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StoreOtpAndExpireProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/store-otp-and-expire.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider class for storing otp and expiry date\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                storeOtpAndExpire\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/store-otp-and-expire.provider.ts:10\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        storeOtpAndExpire\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeOtpAndExpire(user: User, otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/store-otp-and-expire.provider.ts:29\n                        \n                    \n\n\n            \n                \n                        function for storing otp and expiry date\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '../user.entity';\n\n/**\n * provider class for storing otp and expiry date\n */\n@Injectable()\nexport class StoreOtpAndExpireProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * Injecting the users repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for storing otp and expiry date\n   * @param user\n   * @param otp\n   * @returns user\n   */\n  public async storeOtpAndExpire(user: User, otp: string) {\n    const resetExpires = new Date(Date.now() + 5 * 60 * 1000);\n    const newUserObj = { ...user, otp: otp, otpExpire: resetExpires };\n    try {\n      return await this.usersRepository.save(newUserObj);\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Subscriber.html":{"url":"entities/Subscriber.html","title":"entity - Subscriber","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Subscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscriber.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                subscriber entity for the table in the database\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/subscriber.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/subscriber.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * subscriber entity for the table in the database\n */\n@Entity()\nexport class Subscriber {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: false,\n    unique: true,\n  })\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SubscribersController.html":{"url":"controllers/SubscribersController.html","title":"controller - SubscribersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SubscribersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                subscribers\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('subscribers')\nexport class SubscribersController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubscribersModule.html":{"url":"modules/SubscribersModule.html","title":"module - SubscribersModule","body":"\n                   \n\n\n\n\n    Modules\n    SubscribersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\ncluster_SubscribersModule_imports\n\n\n\n\nMailModule\n\nMailModule\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nSubscribersModule -->\n\nMailModule->SubscribersModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/subscribers/subscribers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubscribersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SubscribersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MailModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SubscribersService } from './providers/subscribers.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Subscriber } from './subscriber.entity';\nimport { MailModule } from 'src/mail/mail.module';\nimport { SubscribersController } from './subscribers.controller';\n\n@Module({\n  controllers: [SubscribersController],\n  providers: [SubscribersService],\n  imports: [TypeOrmModule.forFeature([Subscriber]), MailModule],\n})\nexport class SubscribersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubscribersService.html":{"url":"injectables/SubscribersService.html","title":"injectable - SubscribersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubscribersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/providers/subscribers.service.ts\n        \n\n\n            \n                Description\n            \n            \n                service for the subscriber module\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createSubscriber\n                            \n                            \n                                    Public\n                                    Async\n                                unsubscribeEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subscriberRepository: Repository, mailService: MailService)\n                    \n                \n                        \n                            \n                                Defined in src/subscribers/providers/subscribers.service.ts:12\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subscriberRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createSubscriber\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSubscriber(createSubscriberDto: CreateSubscriberDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/providers/subscribers.service.ts:36\n                        \n                    \n\n\n            \n                \n                        function for creatng a subscriber\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                message that subscriber has successfully subscribed to the newsletter\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        unsubscribeEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    unsubscribeEmail(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/providers/subscribers.service.ts:55\n                        \n                    \n\n\n            \n                \n                        function for unsubscribing from newsletter\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                message that subscriber has unsubscribed from the newsletter\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { CreateSubscriberDto } from '../dtos/create-subscriber.dto';\nimport { Repository } from 'typeorm';\nimport { Subscriber } from '../subscriber.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { MailService } from 'src/mail/providers/mail.service';\n\n/**\n * service for the subscriber module\n */\n@Injectable()\nexport class SubscribersService {\n  /**\n   * constructor\n   * @param subscriberRepository\n   * @param mailService\n   */\n  constructor(\n    /**\n     * injecting the subscriber repository\n     */\n    @InjectRepository(Subscriber)\n    private readonly subscriberRepository: Repository,\n\n    /**\n     * injecting the mail service\n     */\n    private readonly mailService: MailService,\n  ) {}\n\n  /**\n   * function for creatng a subscriber\n   * @param createSubscriberDto\n   * @returns message that subscriber has successfully subscribed to the newsletter\n   */\n  public async createSubscriber(createSubscriberDto: CreateSubscriberDto) {\n    const subscriber = this.subscriberRepository.create(createSubscriberDto);\n\n    try {\n      await this.subscriberRepository.save(subscriber);\n      await this.mailService.sendSubscriberMail(subscriber);\n      return {\n        message: 'Subscribed to newsletter successfully',\n      };\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n\n  /**\n   * function for unsubscribing from newsletter\n   * @param id\n   * @returns message that subscriber has unsubscribed from the newsletter\n   */\n  public async unsubscribeEmail(id: number) {\n    try {\n      await this.subscriberRepository.delete(id);\n      return {\n        message: 'Unsubscribed from newsletter successfully',\n      };\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDeliveryStateDto.html":{"url":"classes/UpdateDeliveryStateDto.html","title":"class - UpdateDeliveryStateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDeliveryStateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery-states/dtos/update-delivery-state.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(\n  CreateDeliveryStateDto,\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateDeliveryStateDto } from './create-delivery-state.dto';\nimport { PartialType } from '@nestjs/mapped-types';\n\nexport class UpdateDeliveryStateDto extends PartialType(\n  CreateDeliveryStateDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateProductProvider.html":{"url":"injectables/UpdateProductProvider.html","title":"injectable - UpdateProductProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateProductProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/providers/update-product.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productRepository: Repository, productVariantsService: ProductVariantsService)\n                    \n                \n                        \n                            \n                                Defined in src/products/providers/update-product.provider.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productVariantsService\n                                                  \n                                                        \n                                                                        ProductVariantsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProduct(id: string, patchProductDto: PatchProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/update-product.provider.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patchProductDto\n                                            \n                                                            PatchProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { PatchProductDto } from '../dtos/patch-product.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Product } from '../product.entity';\nimport { ProductVariantsService } from 'src/product-variants/providers/product-variants.service';\n\n@Injectable()\nexport class UpdateProductProvider {\n  constructor(\n    /**\n     * injecting the product repository\n     */\n    @InjectRepository(Product)\n    private readonly productRepository: Repository,\n\n    /**\n     * injecting the product variant service\n     */\n    private readonly productVariantsService: ProductVariantsService,\n  ) {}\n\n  public async updateProduct(id: string, patchProductDto: PatchProductDto) {\n    let product;\n    // find the prd\n    try {\n      product = await this.productRepository.findOne({\n        where: { id },\n      });\n    } catch (err) {\n      throw new RequestTimeoutException(err);\n    }\n    if (!product) {\n      throw new BadRequestException('Product does not exist');\n    }\n    // update product\n    // Update top-level product fields (if provided)\n    let productUpdated = false;\n    if (patchProductDto.name !== undefined) {\n      product.name = patchProductDto.name;\n      productUpdated = true;\n    }\n    if (patchProductDto.price !== undefined) {\n      product.price = patchProductDto.price;\n      productUpdated = true;\n    }\n    if (patchProductDto.discount !== undefined) {\n      product.discount = patchProductDto.discount;\n      productUpdated = true;\n    }\n\n    if (patchProductDto.category !== undefined) {\n      product.category = patchProductDto.category;\n      productUpdated = true;\n    }\n\n    if (patchProductDto.dressStyle !== undefined) {\n      product.dressStyle = patchProductDto.dressStyle;\n      productUpdated = true;\n    }\n\n    if (patchProductDto.clothType !== undefined) {\n      product.clothType = patchProductDto.clothType;\n      productUpdated = true;\n    }\n\n    if (patchProductDto.material !== undefined) {\n      product.material = patchProductDto.material;\n      productUpdated = true;\n    }\n\n    if (patchProductDto.brand !== undefined) {\n      product.brand = patchProductDto.brand;\n      productUpdated = true;\n    }\n\n    try {\n      // Save product only if top-level fields were updated\n      if (productUpdated) {\n        await this.productRepository.save(product);\n      }\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error: any) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    // Update only the specified variants\n    if (patchProductDto.variants && patchProductDto.variants.length > 0) {\n      for (const variantDto of patchProductDto.variants) {\n        const variant =\n          await this.productVariantsService.findProductVariantById(\n            variantDto.id,\n            product.id,\n          );\n        // Manually update only the provided fields\n        if (variantDto.color !== undefined) variant.color = variantDto.color;\n        if (variantDto.size !== undefined) variant.size = variantDto.size;\n        if (variantDto.quantity !== undefined)\n          variant.quantity = variantDto.quantity;\n        if (variantDto.soldOut !== undefined)\n          variant.soldOut = variantDto.soldOut;\n\n        // Save the variant directly\n        await this.productVariantsService.saveProductVariant(variant);\n      }\n    }\n\n    // Return the updated product with its variants (for response)\n    return this.productRepository.findOne({\n      where: { id },\n      relations: ['variants'],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadToAwsProvider.html":{"url":"injectables/UploadToAwsProvider.html","title":"injectable - UploadToAwsProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadToAwsProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/uploads/providers/upload-to-aws.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                fileUpload\n                            \n                            \n                                    Private\n                                generateFileName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/uploads/providers/upload-to-aws.provider.ts:8\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        fileUpload\n                        \n                    \n                \n            \n            \n                \n                        \n                    fileUpload(file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/uploads/providers/upload-to-aws.provider.ts:25\n                        \n                    \n\n\n            \n                \n                        function for uploading image file to aws\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                stored file\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateFileName\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateFileName(file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/uploads/providers/upload-to-aws.provider.ts:49\n                        \n                    \n\n\n            \n                \n                        function for generating the image filename\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    function for generating the image file name\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                the image file name\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { S3 } from 'aws-sdk';\nimport * as path from 'path';\nimport { v4 as uuid4 } from 'uuid';\n\n@Injectable()\nexport class UploadToAwsProvider {\n  /**\n   * constructor\n   * @param configService\n   */\n  constructor(\n    /**\n     * injecting the config service\n     */\n    private readonly configService: ConfigService,\n  ) {}\n\n  /**\n   * function for uploading image file to aws\n   * @param file\n   * @returns stored file\n   */\n  public async fileUpload(file: Express.Multer.File) {\n    const s3 = new S3();\n\n    try {\n      const uploadResult = await s3\n        .upload({\n          Bucket: this.configService.get('appConfig.awsBucketName'),\n          Body: file.buffer,\n          Key: this.generateFileName(file),\n          ContentType: file.mimetype,\n        })\n        .promise();\n\n      return uploadResult.Key;\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n\n  /**\n   *function for generating the image filename\n   * @param file function for generating the image file name\n   * @returns the image file name\n   */\n  private generateFileName(file: Express.Multer.File) {\n    // extract file name\n    const name = file.originalname.split('.')[0];\n\n    // Remove white spaces\n    name.replace(/|s/g, '').trim();\n\n    // extract the extension\n    const extension = path.extname(file.originalname);\n\n    // generate time stamp\n    const timestamp = new Date().getTime().toString().trim();\n\n    // return file uuid\n    return `${name}-${timestamp}-${uuid4()}${extension}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UploadsModule.html":{"url":"modules/UploadsModule.html","title":"module - UploadsModule","body":"\n                   \n\n\n\n\n    Modules\n    UploadsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UploadsModule\n\n\n\ncluster_UploadsModule_exports\n\n\n\ncluster_UploadsModule_providers\n\n\n\n\nUploadsService \n\nUploadsService \n\n\n\nUploadsModule\n\nUploadsModule\n\nUploadsService  -->\n\nUploadsModule->UploadsService \n\n\n\n\n\nUploadToAwsProvider\n\nUploadToAwsProvider\n\nUploadsModule -->\n\nUploadToAwsProvider->UploadsModule\n\n\n\n\n\nUploadsService\n\nUploadsService\n\nUploadsModule -->\n\nUploadsService->UploadsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/uploads/uploads.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UploadToAwsProvider\n                        \n                        \n                            UploadsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UploadsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UploadsService } from './providers/uploads.service';\nimport { UploadToAwsProvider } from './providers/upload-to-aws.provider';\n\n@Module({\n  providers: [UploadsService, UploadToAwsProvider],\n  exports: [UploadsService],\n})\nexport class UploadsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadsService.html":{"url":"injectables/UploadsService.html","title":"injectable - UploadsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/uploads/providers/uploads.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uploadToAwsProvider: UploadToAwsProvider, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/uploads/providers/uploads.service.ts:10\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uploadToAwsProvider\n                                                  \n                                                        \n                                                                        UploadToAwsProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/uploads/providers/uploads.service.ts:33\n                        \n                    \n\n\n            \n                \n                        function for uploading image file\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                url for image file\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  Injectable,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { UploadToAwsProvider } from './upload-to-aws.provider';\n\n@Injectable()\nexport class UploadsService {\n  /**\n   * constructor\n   * @param uploadToAwsProvider\n   * @param configService\n   */\n  constructor(\n    /**\n     * injecting the upload to aws provider\n     */\n    private readonly uploadToAwsProvider: UploadToAwsProvider,\n\n    /**\n     * injecting config service\n     */\n    private readonly configService: ConfigService,\n  ) {}\n\n  /**\n   * function for uploading image file\n   * @param file\n   * @returns url for image file\n   */\n  public async uploadFile(file: Express.Multer.File) {\n    // throw error for unsupported mimetype\n    if (!['image/jpeg', 'image/png', 'image/jpg'].includes(file.mimetype)) {\n      throw new BadRequestException('mime type not supported');\n    }\n\n    try {\n      // upload the file to the aws s3 bucket and a url has been generated\n      const name = await this.uploadToAwsProvider.fileUpload(file);\n\n      return `${this.configService.get('appConfig.awsCloudFrontUrl')}/${name}`;\n    } catch (error) {\n      throw new ConflictException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                user entity for user table in the database\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    Optional\n                                country\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    Optional\n                                otp\n                            \n                            \n                                    \n                                    Optional\n                                otpExpire\n                            \n                            \n                                    \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                    Optional\n                                state\n                            \n                            \n                                    \n                                    Optional\n                                streetAddress\n                            \n                            \n                                    \n                                    Optional\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        otp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        otpExpire\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 20, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: Role, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        streetAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:64\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Role } from 'src/auth/enums/role-type.enum';\nimport { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * user entity for user table in the database\n */\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  firstName?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  lastName?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 20,\n    nullable: true,\n  })\n  phoneNumber?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  country?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  state?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  city?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  streetAddress?: string;\n\n  @Column({\n    nullable: true,\n  })\n  zipCode?: number;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: false,\n    unique: true,\n  })\n  email: string;\n\n  @Column({\n    type: 'enum',\n    enum: Role,\n    nullable: false,\n  })\n  role: Role;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  otp?: string;\n\n  @Column({\n    type: 'timestamp',\n    nullable: true,\n  })\n  otpExpire?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                findAllUsers\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                findUser\n                            \n                            \n                                    \n                                    \n                                    Public\n                                patchUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It deletes a user based on their id'})@ApiResponse({status: 204, description: 'User successfully deleted'})@ApiParam({name: 'userId', required: true, type: String, description: 'The unique identifier of the user', example: '12345'})@ApiHeaders(['undefined', 'undefined'])@Delete('/:userId')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:156\n                        \n                    \n\n\n            \n                \n                        route for deleting a user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                a message indicating user was deleted\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        findAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllUsers(usersQuery: GetUsersDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It finds all users '})@ApiResponse({status: 200, description: 'All users are fetched and paginated'})@ApiQuery({name: 'limit', type: 'number', required: false, description: 'The number of entries returned per query', example: 10})@ApiQuery({name: 'page', type: 'number', required: false, description: 'The position of the page number that you want the api to return', example: 1})@ApiHeaders(['undefined', 'undefined'])@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:111\n                        \n                    \n\n\n            \n                \n                        route for getting all users\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                usersQuery\n                                            \n                                                            GetUsersDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                all users\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        findUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUser(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It finds a user based on their id'})@ApiResponse({status: 200, description: 'User is fetched successfully based on user id'})@ApiParam({name: 'userId', required: true, type: String, description: 'The unique identifier of the user', example: '12345'})@ApiHeaders(['undefined', 'undefined'])@Get('/:userId')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:67\n                        \n                    \n\n\n            \n                \n                        route for getting a user by user id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                a user\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        patchUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchUsers(patchUserDto: PatchUserDto, user: ActiveUserData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@Roles(Role.USER, Role.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Query,\n} from '@nestjs/common';\n\nimport { UsersService } from './providers/users.service';\nimport { PatchUserDto } from './dtos/patch-user.dto';\nimport { Role } from 'src/auth/enums/role-type.enum';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { ActiveUser } from 'src/auth/decorator/active-user.decorator';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\nimport {\n  ApiHeaders,\n  ApiOperation,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n} from '@nestjs/swagger';\nimport { GetUsersDto } from './dtos/get-user.dto';\n\n@Controller('users')\nexport class UsersController {\n  constructor(\n    /**\n     * injecting the usersService\n     */\n    private readonly usersService: UsersService,\n  ) {}\n\n  /**\n   * route for getting a user by user id\n   * @param userId\n   * @returns a user\n   */\n  @ApiOperation({\n    summary: 'It finds a user based on their id',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'User is fetched successfully based on user id',\n  })\n  @ApiParam({\n    name: 'userId',\n    required: true,\n    type: String,\n    description: 'The unique identifier of the user',\n    example: '12345',\n  })\n  @ApiHeaders([\n    {\n      name: 'Authorization',\n      required: true,\n      description: 'Bearer token for authorization',\n    },\n    {\n      name: 'X-Custom-Header',\n      required: false,\n      description: 'A custom optional header',\n    },\n  ])\n  @Get('/:userId')\n  public findUser(@Param('userId') userId: string) {\n    return this.usersService.findOneById(userId);\n  }\n\n  /**\n   * route for getting all users\n   * @param usersQuery\n   * @returns all users\n   */\n  @ApiOperation({\n    summary: 'It finds all users ',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'All users are fetched and paginated',\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: 'number',\n    required: false,\n    description: 'The number of entries returned per query',\n    example: 10,\n  })\n  @ApiQuery({\n    name: 'page',\n    type: 'number',\n    required: false,\n    description:\n      'The position of the page number that you want the api to return',\n    example: 1,\n  })\n  @ApiHeaders([\n    {\n      name: 'Authorization',\n      required: true,\n      description: 'Bearer token for authorization',\n    },\n    {\n      name: 'X-Custom-Header',\n      required: false,\n      description: 'A custom optional header',\n    },\n  ])\n  @Get()\n  public findAllUsers(@Query() usersQuery: GetUsersDto) {\n    return this.usersService.findAll(usersQuery);\n  }\n\n  @Patch()\n  @Roles(Role.USER, Role.ADMIN)\n  public patchUsers(\n    @Body() patchUserDto: PatchUserDto,\n    @ActiveUser() user: ActiveUserData,\n  ) {\n    return this.usersService.updateUser(user.sub, patchUserDto);\n  }\n\n  /**\n   * route for deleting a user\n   * @param userId\n   * @returns a message indicating user was deleted\n   */\n  @ApiOperation({\n    summary: 'It deletes a user based on their id',\n  })\n  @ApiResponse({\n    status: 204,\n    description: 'User successfully deleted',\n  })\n  @ApiParam({\n    name: 'userId',\n    required: true,\n    type: String,\n    description: 'The unique identifier of the user',\n    example: '12345',\n  })\n  @ApiHeaders([\n    {\n      name: 'Authorization',\n      required: true,\n      description: 'Bearer token for authorization',\n    },\n    {\n      name: 'X-Custom-Header',\n      required: false,\n      description: 'A custom optional header',\n    },\n  ])\n  @Delete('/:userId')\n  public deleteUser(@Param('userId') userId: string) {\n    return this.usersService.deleteUser(userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_imports\n\n\n\n\nPaginationModule\n\nPaginationModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPaginationModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nClearOtpAndExpiryTimeProvider\n\nClearOtpAndExpiryTimeProvider\n\nUsersModule -->\n\nClearOtpAndExpiryTimeProvider->UsersModule\n\n\n\n\n\nCreateUsersProvider\n\nCreateUsersProvider\n\nUsersModule -->\n\nCreateUsersProvider->UsersModule\n\n\n\n\n\nFindOneByIdProvider\n\nFindOneByIdProvider\n\nUsersModule -->\n\nFindOneByIdProvider->UsersModule\n\n\n\n\n\nFindOneUserByEmailProvider\n\nFindOneUserByEmailProvider\n\nUsersModule -->\n\nFindOneUserByEmailProvider->UsersModule\n\n\n\n\n\nFindUserByOtpAndExpiryTimeProvider\n\nFindUserByOtpAndExpiryTimeProvider\n\nUsersModule -->\n\nFindUserByOtpAndExpiryTimeProvider->UsersModule\n\n\n\n\n\nStoreOtpAndExpireProvider\n\nStoreOtpAndExpireProvider\n\nUsersModule -->\n\nStoreOtpAndExpireProvider->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClearOtpAndExpiryTimeProvider\n                        \n                        \n                            CreateUsersProvider\n                        \n                        \n                            FindOneByIdProvider\n                        \n                        \n                            FindOneUserByEmailProvider\n                        \n                        \n                            FindUserByOtpAndExpiryTimeProvider\n                        \n                        \n                            StoreOtpAndExpireProvider\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PaginationModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { UsersService } from './providers/users.service';\nimport { UsersController } from './users.controller';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { CreateUsersProvider } from './providers/create-users.provider';\nimport { User } from './user.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { FindOneUserByEmailProvider } from './providers/find-one-user-by-email.provider';\nimport { StoreOtpAndExpireProvider } from './providers/store-otp-and-expire.provider';\nimport { FindUserByOtpAndExpiryTimeProvider } from './providers/find-user-by-reset-otp-and-expiry-time.provider';\nimport { FindOneByIdProvider } from './providers/find-one-by-id.provider';\nimport { PaginationModule } from 'src/common/pagination/pagination.module';\nimport { ClearOtpAndExpiryTimeProvider } from './providers/clear-otp-and-expiry-time.provider';\n\n@Module({\n  providers: [\n    UsersService,\n    CreateUsersProvider,\n    FindOneUserByEmailProvider,\n    StoreOtpAndExpireProvider,\n    FindUserByOtpAndExpiryTimeProvider,\n    FindOneByIdProvider,\n    ClearOtpAndExpiryTimeProvider,\n  ],\n  controllers: [UsersController],\n  imports: [\n    forwardRef(() => AuthModule),\n    TypeOrmModule.forFeature([User]),\n    PaginationModule,\n  ],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/users.service.ts\n        \n\n\n            \n                Description\n            \n            \n                service provider for the user module\ninjectable\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                clearOtpAndExpiryTime\n                            \n                            \n                                    Public\n                                    Async\n                                createUser\n                            \n                            \n                                    Public\n                                    Async\n                                deleteUser\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOneByEmail\n                            \n                            \n                                    Public\n                                    Async\n                                findOneById\n                            \n                            \n                                    Public\n                                    Async\n                                findUserByResetOtpAndExpiryTime\n                            \n                            \n                                    Public\n                                    Async\n                                storeTokenOtpAndOtpExpire\n                            \n                            \n                                    Public\n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createUserProvider: CreateUsersProvider, findOneUserByEmailProvider: FindOneUserByEmailProvider, storeOtpAndExpiresProvider: StoreOtpAndExpireProvider, findUserByOtpAndExpiresProvider: FindUserByOtpAndExpiryTimeProvider, findOneByIdProvider: FindOneByIdProvider, paginationprovider: PaginationProvider, usersRepository: Repository, clearOtpAndExpiryTimeProvider: ClearOtpAndExpiryTimeProvider)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/users.service.ts:27\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createUserProvider\n                                                  \n                                                        \n                                                                        CreateUsersProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        findOneUserByEmailProvider\n                                                  \n                                                        \n                                                                        FindOneUserByEmailProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storeOtpAndExpiresProvider\n                                                  \n                                                        \n                                                                        StoreOtpAndExpireProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        findUserByOtpAndExpiresProvider\n                                                  \n                                                        \n                                                                        FindUserByOtpAndExpiryTimeProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        findOneByIdProvider\n                                                  \n                                                        \n                                                                        FindOneByIdProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paginationprovider\n                                                  \n                                                        \n                                                                        PaginationProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clearOtpAndExpiryTimeProvider\n                                                  \n                                                        \n                                                                        ClearOtpAndExpiryTimeProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        clearOtpAndExpiryTime\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearOtpAndExpiryTime(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:126\n                        \n                    \n\n\n            \n                \n                        function for clearing otp after login\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:87\n                        \n                    \n\n\n            \n                \n                        function for creating a new user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                the create user\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:168\n                        \n                    \n\n\n            \n                \n                        a function for deleting a user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                a message on successful deletion\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(userQuery: GetUsersDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:144\n                        \n                    \n\n\n            \n                \n                        function for getting all users\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userQuery\n                                            \n                                                            GetUsersDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                all users\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:96\n                        \n                    \n\n\n            \n                \n                        function for getting the user based on the email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                a user based on the email\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:135\n                        \n                    \n\n\n            \n                \n                        function for getting the user based on id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user based on the user id\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findUserByResetOtpAndExpiryTime\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserByResetOtpAndExpiryTime(otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:115\n                        \n                    \n\n\n            \n                \n                        function for getting the user based on the stored reset token and expiry date\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                the user based on the stored reset token and expiry date\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        storeTokenOtpAndOtpExpire\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeTokenOtpAndOtpExpire(user: User, token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:106\n                        \n                    \n\n\n            \n                \n                        function for storing the reset token and expiry date of the token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                a user with stored reset token and expiry date\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(id: string, patchUserDto: PatchUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:179\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patchUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { CreateUsersProvider } from './create-users.provider';\nimport { CreateUserDto } from '../dtos/create-user.dto';\nimport { FindOneUserByEmailProvider } from './find-one-user-by-email.provider';\nimport { StoreOtpAndExpireProvider } from './store-otp-and-expire.provider';\nimport { User } from '../user.entity';\nimport { FindUserByOtpAndExpiryTimeProvider } from './find-user-by-reset-otp-and-expiry-time.provider';\n\nimport { FindOneByIdProvider } from './find-one-by-id.provider';\nimport { GetUsersDto } from '../dtos/get-user.dto';\nimport { Paginated } from 'src/common/pagination/interfaces/paginated.interface';\nimport { PaginationProvider } from 'src/common/pagination/providers/pagination.provider';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ClearOtpAndExpiryTimeProvider } from './clear-otp-and-expiry-time.provider';\nimport { PatchUserDto } from '../dtos/patch-user.dto';\n\n/**\n * service provider for the user module\n * injectable\n */\n@Injectable()\nexport class UsersService {\n  /**\n   * constructor\n   * @param createUserProvider\n   * @param findOneUserByEmailProvider\n   * @param storeOtpAndExpiresProvider\n   * @param findUserByResetOtpAndExpiresProvider\n   * @param changeUserPasswordProvider\n   * @param findOneByIdProvider\n   * @param paginationprovider\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * injecting the create user provider\n     */\n    private readonly createUserProvider: CreateUsersProvider,\n\n    /**\n     * Injecting the findOneUserByEmailProvider\n     */\n    private readonly findOneUserByEmailProvider: FindOneUserByEmailProvider,\n\n    /**\n     * injecting the store otp and expires provider\n     */\n    private readonly storeOtpAndExpiresProvider: StoreOtpAndExpireProvider,\n\n    /**\n     * injecting the find user by reset otp and expires provider\n     */\n    private readonly findUserByOtpAndExpiresProvider: FindUserByOtpAndExpiryTimeProvider,\n\n    /**\n     * injecting the find one by id provider\n     */\n    private readonly findOneByIdProvider: FindOneByIdProvider,\n\n    /**\n     * injecting the pagination provider\n     */\n    private readonly paginationprovider: PaginationProvider,\n\n    /**\n     * injecting the user repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n\n    /**\n     * injecting the clear otp and expiry time provider\n     */\n    private readonly clearOtpAndExpiryTimeProvider: ClearOtpAndExpiryTimeProvider,\n  ) {}\n\n  /**\n   * function for creating a new user\n   * @param createUserDto\n   * @returns the create user\n   */\n  public async createUser(createUserDto: CreateUserDto) {\n    return await this.createUserProvider.createUser(createUserDto);\n  }\n\n  /**\n   * function for getting the user based on the email\n   * @param email\n   * @returns a user based on the email\n   */\n  public async findOneByEmail(email: string) {\n    return this.findOneUserByEmailProvider.findOneByEmail(email);\n  }\n\n  /**\n   * function for storing the reset token and expiry date of the token\n   * @param user\n   * @param token\n   * @returns a user with stored reset token and expiry date\n   */\n  public async storeTokenOtpAndOtpExpire(user: User, token: string) {\n    return await this.storeOtpAndExpiresProvider.storeOtpAndExpire(user, token);\n  }\n\n  /**\n   * function for getting the user based on the stored reset token and expiry date\n   * @param otp\n   * @returns the user based on the stored reset token and expiry date\n   */\n  public async findUserByResetOtpAndExpiryTime(otp: string) {\n    return await this.findUserByOtpAndExpiresProvider.findUserByOtpAndExpiryTime(\n      otp,\n    );\n  }\n\n  /**\n   * function for clearing otp after login\n   * @param user\n   * @returns user\n   */\n  public async clearOtpAndExpiryTime(user: User) {\n    return await this.clearOtpAndExpiryTimeProvider.clearOtpAndExpiryTime(user);\n  }\n\n  /**\n   * function for getting the user based on id\n   * @param id\n   * @returns user based on the user id\n   */\n  public async findOneById(id: string) {\n    return await this.findOneByIdProvider.findById(id);\n  }\n\n  /**\n   * function for getting all users\n   * @param userQuery\n   * @returns all users\n   */\n  public async findAll(userQuery: GetUsersDto): Promise> {\n    try {\n      const user = this.paginationprovider.paginationQuery(\n        {\n          limit: userQuery.limit,\n          page: userQuery.page,\n        },\n        this.usersRepository,\n        {\n          relations: null,\n        },\n      );\n\n      return user;\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n\n  /**\n   * a function for deleting a user\n   * @param userId\n   * @returns a message on successful deletion\n   */\n  public async deleteUser(userId: string) {\n    try {\n      await this.usersRepository.delete(userId);\n      return {\n        message: `User ${userId}, was successfully deleted`,\n      };\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n\n  public async updateUser(id: string, patchUserDto: PatchUserDto) {\n    let user;\n    // find the user\n    try {\n      user = await this.usersRepository.findOneBy({\n        id: id,\n      });\n    } catch (err) {\n      throw new RequestTimeoutException(err);\n    }\n    if (!user) {\n      throw new BadRequestException('User does not exist');\n    }\n    // update user\n    user = { ...user, ...patchUserDto };\n\n    try {\n      await this.usersRepository.save(user);\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error: any) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VerifyPaymentProvider.html":{"url":"injectables/VerifyPaymentProvider.html","title":"injectable - VerifyPaymentProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VerifyPaymentProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/providers/verify-payment.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAuthHeader\n                            \n                            \n                                    Public\n                                    Async\n                                paymentWebhook\n                            \n                            \n                                    Private\n                                    Async\n                                verifyPayment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paystackConfiguration: ConfigType<>, dataSource: DataSource, productVariantsService: ProductVariantsService, productsService: ProductsService, mailService: MailService)\n                    \n                \n                        \n                            \n                                Defined in src/paystack/providers/verify-payment.provider.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paystackConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productVariantsService\n                                                  \n                                                        \n                                                                        ProductVariantsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productsService\n                                                  \n                                                        \n                                                                        ProductsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAuthHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAuthHeader()\n                \n            \n\n\n                    \n                        \n                            Defined in src/paystack/providers/verify-payment.provider.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         { Authorization: string; }\n\n                        \n                            \n                                authorization header for paystack\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        paymentWebhook\n                        \n                    \n                \n            \n            \n                \n                        \n                    paymentWebhook(body: any, signature: string, req: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paystack/providers/verify-payment.provider.ts:206\n                        \n                    \n\n\n            \n                \n                        function called by paystack server after user pays\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                signature\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                reference for payment\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        verifyPayment\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyPayment(reference: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paystack/providers/verify-payment.provider.ts:65\n                        \n                    \n\n\n            \n                \n                        function for verifying the payment\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reference\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                data after payment\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  HttpException,\n  HttpStatus,\n  Inject,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport paystackConfig from '../config/paystack.config';\nimport { ConfigType } from '@nestjs/config';\nimport { DataSource } from 'typeorm';\nimport * as crypto from 'crypto';\nimport axios from 'axios';\nimport { Payment } from 'src/payment/payment.entity';\nimport { paymentStatus } from 'src/payment/enums/paymentStatus.enum';\nimport { ProductVariantsService } from 'src/product-variants/providers/product-variants.service';\nimport { Order } from 'src/orders/order.entity';\nimport { ProductsService } from 'src/products/providers/products.service';\nimport { DiscountUsage } from 'src/discounts-usage/discounts-usage.entity';\nimport { MailService } from 'src/mail/providers/mail.service';\n\n@Injectable()\nexport class VerifyPaymentProvider {\n  constructor(\n    /**\n     * injecting the paystack config\n     */\n    @Inject(paystackConfig.KEY)\n    private readonly paystackConfiguration: ConfigType,\n\n    /**\n     * Injecting datasource\n     */\n    private readonly dataSource: DataSource,\n\n    /**\n     * injecting the product variants service\n     */\n    private readonly productVariantsService: ProductVariantsService,\n\n    /**\n     * injecting the products service\n     */\n    private readonly productsService: ProductsService,\n\n    /**\n     * injecting the mail service\n     */\n    private readonly mailService: MailService,\n  ) {}\n\n  /**\n   * @function for getting the auth header\n   * @returns authorization header for paystack\n   */\n  private getAuthHeader() {\n    return { Authorization: `Bearer ${this.paystackConfiguration.secret}` };\n  }\n\n  /**\n   * function for verifying the payment\n   * @param reference\n   * @returns data after payment\n   */\n  private async verifyPayment(reference: string): Promise {\n    // create Query Runner instance\n    const queryRunner = this.dataSource.createQueryRunner();\n\n    try {\n      // connect query runner to datasource\n      await queryRunner.connect();\n\n      // start transaction\n      await queryRunner.startTransaction();\n    } catch (error) {\n      console.log(error);\n      throw new RequestTimeoutException('Could not connect to datasource');\n    }\n    try {\n      // send request to verify payment\n      const response = await axios.get(\n        `${this.paystackConfiguration.baseUrl}/transaction/verify/${reference}`,\n        { headers: this.getAuthHeader() },\n      );\n\n      const {\n        products,\n        user,\n        deliveryAddress,\n        deliveryPicker,\n        totalAmount,\n        discount,\n      } = response.data.data.metadata;\n\n      const prdsDb = await Promise.all(\n        products\n          .map((prd) => prd.productId)\n          .map(\n            async (prdId) => await this.productsService.findProductById(prdId),\n          ),\n      );\n\n      // Get purchase by payment reference\n      const payment = await queryRunner.manager.findOne(Payment, {\n        where: { providerReference: reference },\n      });\n\n      if (!payment) {\n        throw new Error('Purchase not found');\n      }\n\n      if (response.data.data.status === 'success') {\n        // Update payment status\n        payment.status = paymentStatus.SUCCESS;\n\n        console.log('createing order');\n        // create order\n        const order = await queryRunner.manager.save(Order, {\n          userId: user.id,\n          deliveryAddress: deliveryAddress,\n          totalAmount: totalAmount,\n          deliveryPicker: deliveryPicker,\n          products: prdsDb,\n        });\n\n        // if there is a discount the add it to the discount usage\n        if (discount.id) {\n          // create the discount usage\n          const discountUsage = await queryRunner.manager.save(DiscountUsage, {\n            user: user,\n            discount: discount,\n            order: order,\n          });\n\n          // add the discount applied to the order\n          order.discountApplied = discount.percentOff;\n\n          // add the discount usage to the order\n          order.discountUsage = discountUsage;\n\n          // save both the discount usage and order\n          await queryRunner.manager.save(Order, order);\n          await queryRunner.manager.save(DiscountUsage, discountUsage);\n        }\n      } else {\n        // Payment failed\n        payment.status = paymentStatus.FAILED;\n\n        // rollback\n        for (const product of products) {\n          const { productId, variants } = product;\n\n          // Iterate through each variant the user wants to buy\n          for (const variantDto of variants) {\n            const { id: variantId, quantity } = variantDto;\n\n            // check availability\n            await this.productVariantsService.rollbackStock(\n              variantId,\n              productId,\n              quantity,\n              queryRunner.manager,\n            );\n          }\n        }\n      }\n\n      // Save updated paymet\n      await queryRunner.manager.save(Payment, payment);\n\n      await queryRunner.commitTransaction();\n\n      // send a mail to the user\n      try {\n        await this.mailService.sendProductPurchaseMail(user, prdsDb);\n      } catch (err) {\n        throw new ConflictException(err);\n      }\n\n      return response.data;\n    } catch (error) {\n      await queryRunner.rollbackTransaction();\n      throw new ConflictException('Could not complete the transaction', {\n        description: String(error),\n      });\n    } finally {\n      // relsease the connection\n      // release connection whether it was successful or not\n      try {\n        await queryRunner.release();\n      } catch (error) {\n        throw new RequestTimeoutException('Could not release the connection', {\n          description: String(error),\n        });\n      }\n    }\n  }\n\n  /**\n   * function called by paystack server after user pays\n   * @param body\n   * @param signature\n   * @param req\n   * @returns reference for payment\n   */\n  public async paymentWebhook(body: any, signature: string, req: any) {\n    // regenerate the signature\n    const hash = crypto\n      .createHmac('sha512', this.paystackConfiguration.secret)\n      .update(JSON.stringify(req.body))\n      .digest('hex');\n\n    if (hash !== signature) {\n      throw new HttpException('Invalid signature', HttpStatus.FORBIDDEN);\n    }\n\n    const { data, event } = body;\n\n    if (event !== 'charge.success') {\n      throw new HttpException('Invalid event type', HttpStatus.BAD_REQUEST);\n    }\n\n    // verify payment\n    const paymentData = await this.verifyPayment(data.reference);\n\n    // console.log('Payment successful:', paymentData);\n\n    if (paymentData.data.status === 'success') {\n      return { message: 'Payment verified and processed successfully' };\n    } else {\n      throw new HttpException(\n        'Payment verification failed',\n        HttpStatus.BAD_REQUEST,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app.module.ts\n            \n            variable\n            ENV\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/auth/constants/auth.constant.ts\n            \n            variable\n            AUTH_TYPE_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/constants/auth.constant.ts\n            \n            variable\n            REQUEST_USER_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/constants/role.constant.ts\n            \n            variable\n            ROLES_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/decorator/active-user.decorator.ts\n            \n            variable\n            ActiveUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/decorator/auth.decorator.ts\n            \n            variable\n            Auth\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/decorator/role.decorator.ts\n            \n            variable\n            Roles\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/auth/dtos/otpSignin.dto.ts\n            \n            class\n            OtpSigninDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/auth/dtos/refresh-token.dto.ts\n            \n            class\n            RefreshTokenDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/auth/dtos/sign-in.dto.ts\n            \n            class\n            SignInDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/guards/access-token/access-token.guard.ts\n            \n            guard\n            AccessTokenGuard\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/guards/authentication/authentication.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/auth/guards/roles/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/interfaces/active-user-data.interface.ts\n            \n            interface\n            ActiveUserData\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/providers/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/auth/providers/generate-tokens.provider.ts\n            \n            injectable\n            GenerateTokensProvider\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/providers/otp-signin.provider.ts\n            \n            injectable\n            OtpSigninProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/providers/refresh-token.provider.ts\n            \n            injectable\n            RefreshTokenProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/providers/sign-in.provider.ts\n            \n            injectable\n            SignInProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/common/interceptors/data-response/data-response.interceptor.ts\n            \n            injectable\n            DataResponseInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/common/pagination/dtos/pagination-query.dto.ts\n            \n            class\n            PaginationQueryDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/common/pagination/interfaces/paginated.interface.ts\n            \n            interface\n            Paginated\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/common/pagination/providers/pagination.provider.ts\n            \n            injectable\n            PaginationProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/config/paths.config.ts\n            \n            variable\n            ROOT_PATH\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/delivery-states/delivery-state.entity.ts\n            \n            entity\n            DeliveryState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/delivery-states/delivery-states.controller.ts\n            \n            controller\n            DeliveryStatesController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/delivery-states/dtos/create-delivery-state.dto.ts\n            \n            class\n            CreateDeliveryStateDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/delivery-states/dtos/update-delivery-state.dto.ts\n            \n            class\n            UpdateDeliveryStateDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/delivery-states/providers/delivery-states.service.ts\n            \n            injectable\n            DeliveryStatesService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/discounts-usage/discounts-usage.entity.ts\n            \n            entity\n            DiscountUsage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/discounts-usage/providers/discounts-usage.service.ts\n            \n            injectable\n            DiscountsUsageService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/discounts/discounts.controller.ts\n            \n            controller\n            DiscountsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/discounts/discounts.entity.ts\n            \n            entity\n            Discount\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/discounts/dtos/apply-for-discount.dto.ts\n            \n            class\n            ApplyForDiscountDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/discounts/dtos/create-discount.dto.ts\n            \n            class\n            CreateDiscountDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/discounts/providers/apply-for-discount.provider.ts\n            \n            injectable\n            ApplyForDiscountProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/discounts/providers/create-discount.provider.ts\n            \n            injectable\n            CreateDiscountProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/discounts/providers/discounts.service.ts\n            \n            injectable\n            DiscountsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/mail/providers/mail.service.ts\n            \n            injectable\n            MailService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/orders/order.entity.ts\n            \n            entity\n            Order\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/orders/orders.controller.ts\n            \n            controller\n            OrdersController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/orders/providers/orders.service.ts\n            \n            injectable\n            OrdersService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/payment/payment.controller.ts\n            \n            controller\n            PaymentController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/payment/payment.entity.ts\n            \n            entity\n            Payment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/paystack/dtos/initiate-payment.dto.ts\n            \n            class\n            InitiatePaymentDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/paystack/dtos/initiate-payment.dto.ts\n            \n            class\n            ProductWithVariantDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/paystack/paystack.controller.ts\n            \n            controller\n            PaystackController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/paystack/providers/initiate-payment.provider.ts\n            \n            injectable\n            InitiatePaymentProvider\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/paystack/providers/paystack.service.ts\n            \n            injectable\n            PaystackService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/paystack/providers/verify-payment.provider.ts\n            \n            injectable\n            VerifyPaymentProvider\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/product-images/product-image.entity.ts\n            \n            entity\n            ProductImage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product-images/providers/product-images.service.ts\n            \n            injectable\n            ProductImagesService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product-variants/dto/create-product-variant.dto.ts\n            \n            class\n            CreateProductVariantDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/product-variants/dto/patch-product-variant.dto.ts\n            \n            class\n            PatchProductVariantDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/product-variants/product-variants.entity.ts\n            \n            entity\n            ProductVariant\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product-variants/providers/product-variants.service.ts\n            \n            injectable\n            ProductVariantsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/products/dtos/createProductDto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/products/dtos/get-product.dto.ts\n            \n            class\n            GetProductsBaseDto\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/products/dtos/get-product.dto.ts\n            \n            class\n            GetProductsDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/products/dtos/patch-product.dto.ts\n            \n            class\n            PatchProductDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/products/product.entity.ts\n            \n            entity\n            Product\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/products/providers/create-product.provider.ts\n            \n            injectable\n            CreateProductProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/providers/find-all-products.provider.ts\n            \n            injectable\n            FindAllProductsProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/providers/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/products/providers/update-product.provider.ts\n            \n            injectable\n            UpdateProductProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/reviews/dtos/create-review.dto.ts\n            \n            class\n            CreateReviewDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/reviews/providers/create-review.provider.ts\n            \n            injectable\n            CreateReviewProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/reviews/providers/reviews.service.ts\n            \n            injectable\n            ReviewsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/reviews/reviews.controller.ts\n            \n            controller\n            ReviewsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/reviews/reviews.entity.ts\n            \n            entity\n            Review\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/dtos/create-subscriber.dto.ts\n            \n            class\n            CreateSubscriberDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/subscribers/providers/subscribers.service.ts\n            \n            injectable\n            SubscribersService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/subscribers/subscriber.entity.ts\n            \n            entity\n            Subscriber\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.controller.ts\n            \n            controller\n            SubscribersController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/uploads/providers/upload-to-aws.provider.ts\n            \n            injectable\n            UploadToAwsProvider\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/uploads/providers/uploads.service.ts\n            \n            injectable\n            UploadsService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/dtos/get-user.dto.ts\n            \n            class\n            GetUsersBaseDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/dtos/get-user.dto.ts\n            \n            class\n            GetUsersDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/users/dtos/patch-user.dto.ts\n            \n            class\n            PatchUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/providers/clear-otp-and-expiry-time.provider.ts\n            \n            injectable\n            ClearOtpAndExpiryTimeProvider\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/users/providers/create-users.provider.ts\n            \n            injectable\n            CreateUsersProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/providers/find-one-by-id.provider.ts\n            \n            injectable\n            FindOneByIdProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/providers/find-one-user-by-email.provider.ts\n            \n            injectable\n            FindOneUserByEmailProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/providers/find-user-by-reset-otp-and-expiry-time.provider.ts\n            \n            injectable\n            FindUserByOtpAndExpiryTimeProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/providers/store-otp-and-expire.provider.ts\n            \n            injectable\n            StoreOtpAndExpireProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/providers/users.service.ts\n            \n            injectable\n            UsersService\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/users/user.entity.ts\n            \n            entity\n            User\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                60 %\n                (3/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.26\n        \n            @nestjs-modules/mailer : ^2.0.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^4.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/platform-express : ^10.4.15\n        \n            @nestjs/swagger : ^11.0.6\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            @types/multer : ^1.4.12\n        \n            aws-sdk : ^2.1692.0\n        \n            axios : ^1.8.4\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            joi : ^17.13.3\n        \n            pg : ^8.13.3\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n        \n            uuid : ^11.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthType   (src/.../auth-type.enum.ts)\n                        \n                        \n                            OrderStatus   (src/.../order-status.enum.ts)\n                        \n                        \n                            paymentStatus   (src/.../paymentStatus.enum.ts)\n                        \n                        \n                            Role   (src/.../role-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/enums/auth-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthType\n                    \n                \n                        \n                            \n                                 Bearer\n                            \n                        \n                        \n                            \n                                 None\n                            \n                        \n            \n        \n\n    src/orders/enums/order-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderStatus\n                    \n                \n                        \n                            \n                                 PLACED\n                            \n                        \n                        \n                            \n                                Value : placed\n                            \n                        \n                        \n                            \n                                 PROCESSING\n                            \n                        \n                        \n                            \n                                Value : processing\n                            \n                        \n                        \n                            \n                                 SHIPPED\n                            \n                        \n                        \n                            \n                                Value : shipped\n                            \n                        \n                        \n                            \n                                 DELIVERY\n                            \n                        \n                        \n                            \n                                Value : delivery\n                            \n                        \n                        \n                            \n                                 DELIVERED\n                            \n                        \n                        \n                            \n                                Value : delivered\n                            \n                        \n            \n        \n\n    src/payment/enums/paymentStatus.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        paymentStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n                        \n                            \n                                Value : failed\n                            \n                        \n            \n        \n\n    src/auth/enums/role-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                        the boostrap nest function\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DeliveryStatesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DiscountsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DiscountsUsageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrdersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaginationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaystackModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductImagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductVariantsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReviewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubscribersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UploadsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_DeliveryStatesModule\n\n\n\ncluster_DeliveryStatesModule_providers\n\n\n\ncluster_DiscountsModule\n\n\n\ncluster_DiscountsModule_providers\n\n\n\ncluster_DiscountsUsageModule\n\n\n\ncluster_DiscountsUsageModule_exports\n\n\n\ncluster_DiscountsUsageModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\ncluster_PaginationModule\n\n\n\ncluster_PaginationModule_exports\n\n\n\ncluster_PaginationModule_providers\n\n\n\ncluster_PaystackModule\n\n\n\ncluster_PaystackModule_providers\n\n\n\ncluster_ProductImagesModule\n\n\n\ncluster_ProductImagesModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_exports\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_ProductVariantsModule\n\n\n\ncluster_ProductVariantsModule_exports\n\n\n\ncluster_ProductVariantsModule_providers\n\n\n\ncluster_ReviewsModule\n\n\n\ncluster_ReviewsModule_providers\n\n\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\ncluster_UploadsModule\n\n\n\ncluster_UploadsModule_exports\n\n\n\ncluster_UploadsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDeliveryStatesModule\n\nDeliveryStatesModule\n\nAppModule -->\n\nDeliveryStatesModule->AppModule\n\n\n\n\n\nDiscountsModule\n\nDiscountsModule\n\nAppModule -->\n\nDiscountsModule->AppModule\n\n\n\n\n\nDiscountsUsageModule\n\nDiscountsUsageModule\n\nDiscountsModule -->\n\nDiscountsUsageModule->DiscountsModule\n\n\n\nAppModule -->\n\nDiscountsUsageModule->AppModule\n\n\n\n\n\nDiscountsUsageService \n\nDiscountsUsageService \n\nDiscountsUsageService  -->\n\nDiscountsUsageModule->DiscountsUsageService \n\n\n\n\n\nMailModule\n\nMailModule\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nSubscribersModule -->\n\nMailModule->SubscribersModule\n\n\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nAppModule -->\n\nPaymentModule->AppModule\n\n\n\n\n\nPaystackModule\n\nPaystackModule\n\nAppModule -->\n\nPaystackModule->AppModule\n\n\n\n\n\nProductImagesModule\n\nProductImagesModule\n\nAppModule -->\n\nProductImagesModule->AppModule\n\n\n\n\n\nProductVariantsModule\n\nProductVariantsModule\n\nPaystackModule -->\n\nProductVariantsModule->PaystackModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nProductVariantsModule->ProductsModule\n\n\n\nAppModule -->\n\nProductVariantsModule->AppModule\n\n\n\n\n\nProductVariantsService \n\nProductVariantsService \n\nProductVariantsService  -->\n\nProductVariantsModule->ProductVariantsService \n\n\n\nPaystackModule -->\n\nProductsModule->PaystackModule\n\n\n\n\n\nReviewsModule\n\nReviewsModule\n\nReviewsModule -->\n\nProductsModule->ReviewsModule\n\n\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nProductsService \n\nProductsService \n\nProductsService  -->\n\nProductsModule->ProductsService \n\n\n\nAppModule -->\n\nReviewsModule->AppModule\n\n\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUploadsModule\n\nUploadsModule\n\nProductsModule -->\n\nUploadsModule->ProductsModule\n\n\n\nAppModule -->\n\nUploadsModule->AppModule\n\n\n\n\n\nUploadsService \n\nUploadsService \n\nUploadsService  -->\n\nUploadsModule->UploadsService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nPaystackModule -->\n\nUsersModule->PaystackModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nGenerateTokensProvider\n\nGenerateTokensProvider\n\nAuthModule -->\n\nGenerateTokensProvider->AuthModule\n\n\n\n\n\nOtpSigninProvider\n\nOtpSigninProvider\n\nAuthModule -->\n\nOtpSigninProvider->AuthModule\n\n\n\n\n\nRefreshTokenProvider\n\nRefreshTokenProvider\n\nAuthModule -->\n\nRefreshTokenProvider->AuthModule\n\n\n\n\n\nSignInProvider\n\nSignInProvider\n\nAuthModule -->\n\nSignInProvider->AuthModule\n\n\n\n\n\nDeliveryStatesService\n\nDeliveryStatesService\n\nDeliveryStatesModule -->\n\nDeliveryStatesService->DeliveryStatesModule\n\n\n\n\n\nApplyForDiscountProvider\n\nApplyForDiscountProvider\n\nDiscountsModule -->\n\nApplyForDiscountProvider->DiscountsModule\n\n\n\n\n\nCreateDiscountProvider\n\nCreateDiscountProvider\n\nDiscountsModule -->\n\nCreateDiscountProvider->DiscountsModule\n\n\n\n\n\nDiscountsService\n\nDiscountsService\n\nDiscountsModule -->\n\nDiscountsService->DiscountsModule\n\n\n\n\n\nDiscountsUsageService\n\nDiscountsUsageService\n\nDiscountsUsageModule -->\n\nDiscountsUsageService->DiscountsUsageModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\nPaginationProvider \n\nPaginationProvider \n\n\n\nPaginationModule\n\nPaginationModule\n\nProductsModule -->\n\nPaginationModule->ProductsModule\n\n\n\nUsersModule -->\n\nPaginationModule->UsersModule\n\n\n\nPaginationProvider  -->\n\nPaginationModule->PaginationProvider \n\n\n\n\n\nPaginationProvider\n\nPaginationProvider\n\nPaginationModule -->\n\nPaginationProvider->PaginationModule\n\n\n\n\n\nInitiatePaymentProvider\n\nInitiatePaymentProvider\n\nPaystackModule -->\n\nInitiatePaymentProvider->PaystackModule\n\n\n\n\n\nPaystackService\n\nPaystackService\n\nPaystackModule -->\n\nPaystackService->PaystackModule\n\n\n\n\n\nVerifyPaymentProvider\n\nVerifyPaymentProvider\n\nPaystackModule -->\n\nVerifyPaymentProvider->PaystackModule\n\n\n\n\n\nProductImagesService\n\nProductImagesService\n\nProductImagesModule -->\n\nProductImagesService->ProductImagesModule\n\n\n\n\n\nCreateProductProvider\n\nCreateProductProvider\n\nProductsModule -->\n\nCreateProductProvider->ProductsModule\n\n\n\n\n\nFindAllProductsProvider\n\nFindAllProductsProvider\n\nProductsModule -->\n\nFindAllProductsProvider->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nUpdateProductProvider\n\nUpdateProductProvider\n\nProductsModule -->\n\nUpdateProductProvider->ProductsModule\n\n\n\n\n\nProductVariantsService\n\nProductVariantsService\n\nProductVariantsModule -->\n\nProductVariantsService->ProductVariantsModule\n\n\n\n\n\nCreateReviewProvider\n\nCreateReviewProvider\n\nReviewsModule -->\n\nCreateReviewProvider->ReviewsModule\n\n\n\n\n\nReviewsService\n\nReviewsService\n\nReviewsModule -->\n\nReviewsService->ReviewsModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\nUploadToAwsProvider\n\nUploadToAwsProvider\n\nUploadsModule -->\n\nUploadToAwsProvider->UploadsModule\n\n\n\n\n\nUploadsService\n\nUploadsService\n\nUploadsModule -->\n\nUploadsService->UploadsModule\n\n\n\n\n\nClearOtpAndExpiryTimeProvider\n\nClearOtpAndExpiryTimeProvider\n\nUsersModule -->\n\nClearOtpAndExpiryTimeProvider->UsersModule\n\n\n\n\n\nCreateUsersProvider\n\nCreateUsersProvider\n\nUsersModule -->\n\nCreateUsersProvider->UsersModule\n\n\n\n\n\nFindOneByIdProvider\n\nFindOneByIdProvider\n\nUsersModule -->\n\nFindOneByIdProvider->UsersModule\n\n\n\n\n\nFindOneUserByEmailProvider\n\nFindOneUserByEmailProvider\n\nUsersModule -->\n\nFindOneUserByEmailProvider->UsersModule\n\n\n\n\n\nFindUserByOtpAndExpiryTimeProvider\n\nFindUserByOtpAndExpiryTimeProvider\n\nUsersModule -->\n\nFindUserByOtpAndExpiryTimeProvider->UsersModule\n\n\n\n\n\nStoreOtpAndExpireProvider\n\nStoreOtpAndExpireProvider\n\nUsersModule -->\n\nStoreOtpAndExpireProvider->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    11 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    36 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    22 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActiveUser   (src/.../active-user.decorator.ts)\n                        \n                        \n                            Auth   (src/.../auth.decorator.ts)\n                        \n                        \n                            AUTH_TYPE_KEY   (src/.../auth.constant.ts)\n                        \n                        \n                            ENV   (src/.../app.module.ts)\n                        \n                        \n                            REQUEST_USER_KEY   (src/.../auth.constant.ts)\n                        \n                        \n                            Roles   (src/.../role.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../role.constant.ts)\n                        \n                        \n                            ROOT_PATH   (src/.../paths.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/decorator/active-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ActiveUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (field: keyof ActiveUserData | undefined, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user: ActiveUserData = request[REQUEST_USER_KEY];\n\n    return field ? user?.[field] : user;\n  },\n)\n                    \n                \n\n            \n                \n                    Custom param decorator for the active user\n\n                \n            \n\n        \n    \n\n    src/auth/decorator/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...authTypes: AuthType[]) =>\n  SetMetadata(AUTH_TYPE_KEY, authTypes)\n                    \n                \n\n            \n                \n                    decorator for guarding user authentication\n\n                \n            \n\n        \n    \n\n    src/auth/constants/auth.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_TYPE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'authType'\n                    \n                \n\n            \n                \n                    constant for auth type\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REQUEST_USER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n\n            \n                \n                    constant for request user\n\n                \n            \n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENV\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV\n                    \n                \n\n            \n                \n                    app environment\n\n                \n            \n\n        \n    \n\n    src/auth/decorator/role.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Role[]) => SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n            \n                \n                    decoraror for gaurding the user roles\n\n                \n            \n\n        \n    \n\n    src/auth/constants/role.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roles'\n                    \n                \n\n            \n                \n                    constant for the roles\n\n                \n            \n\n        \n    \n\n    src/config/paths.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROOT_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.cwd()\n                    \n                \n\n            \n                \n                    setting the default root\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
