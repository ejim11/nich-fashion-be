var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AccessTokenGuard.html",[0,2.427,1,2.742]],["body/guards/AccessTokenGuard.html",[0,2.772,1,3.132,2,2.284,3,0.159,4,0.097,5,0.097,6,5.3,7,4.407,8,2.746,9,0.555,10,3.873,11,3.721,12,0.252,13,1.038,14,1.454,15,4.789,16,1.549,17,4.638,18,1.453,19,2.482,20,5.667,21,4.789,22,4.789,23,0.588,24,3.148,25,1.317,26,0.013,27,1.114,28,0.513,29,0.937,30,3.656,31,4.102,32,3.148,33,1.552,34,4.638,35,1.549,36,3.718,37,1.449,38,2.091,39,2.293,40,2.277,41,4.046,42,3.365,43,4.046,44,4.638,45,4.02,46,3.148,47,4.638,48,4.638,49,0.818,50,3.132,51,0.28,52,3.119,53,0.391,54,3.718,55,0.413,56,1.617,57,1.995,58,2.284,59,2.126,60,3.148,61,2.482,62,2.746,63,0.108,64,0.048,65,2.284,66,1.502,67,1.109,68,3.132,69,1.696,70,2.482,71,3.148,72,3.148,73,1.963,74,2.746,75,2.746,76,2.482,77,3.148,78,1.552,79,1.354,80,3.148,81,1.13,82,2.482,83,4.789,84,2.746,85,3.148,86,0.889,87,3.148,88,3.148,89,2.746,90,3.148,91,2.746,92,2.772,93,2.772,94,2.382,95,2.772,96,2.627,97,2.772,98,2.772,99,2.772,100,1.13,101,4.046,102,3.148,103,3.148,104,3.148,105,1.617,106,3.148,107,0.97,108,3.148,109,0.007,110,0.007]],["title/interfaces/ActiveUserData.html",[111,2.742,112,2.427]],["body/interfaces/ActiveUserData.html",[3,0.183,4,0.165,5,0.165,9,0.944,12,0.429,26,0.013,28,0.675,35,1.948,49,1.448,63,0.183,83,4.223,109,0.01,110,0.01,111,4.498,112,3.982,113,4.223,114,4.223,115,4.673,116,4.673,117,1.944,118,3.443,119,3.443,120,5.978,121,2.08]],["title/controllers/AppController.html",[122,1.831,123,2.946]],["body/controllers/AppController.html",[3,0.196,4,0.176,5,0.176,12,0.459,13,1.552,23,0.611,26,0.013,37,1.281,49,1.223,51,0.287,55,0.751,63,0.196,64,0.087,67,1.369,107,1.198,109,0.011,110,0.011,122,3.128,123,5.032,124,2.581,125,4.993,126,6.769,127,1.728,128,5.724,129,4.729,130,4.993,131,4.993,132,5.724]],["title/modules/AppModule.html",[133,1.109,134,2.946]],["body/modules/AppModule.html",[1,3.037,3,0.103,4,0.093,5,0.093,7,2.191,26,0.013,28,0.281,39,1.257,40,2.208,51,0.337,52,1.711,55,0.396,56,1.551,57,1.913,59,2.039,63,0.103,64,0.046,68,2.039,69,2.422,73,0.976,107,0.632,109,0.007,110,0.007,123,3.898,124,2.028,129,4.228,130,2.634,133,1.822,134,5.914,135,1.308,136,1.308,137,1.42,138,1.42,139,1.308,140,2.526,141,1.42,142,2.634,143,2.634,144,2.634,145,4.228,146,4.228,147,4.506,148,4.228,149,4.228,150,4.506,151,4.506,152,4.228,153,4.228,154,2.114,155,1.166,156,1.362,157,2.38,158,2.894,159,3.02,160,3.923,161,4.02,162,4.497,163,3.02,164,4.497,165,3.02,166,4.497,167,3.02,168,1.805,169,1.01,170,3.02,171,3.02,172,3.02,173,3.02,174,5.373,175,4.497,176,2.039,177,3.262,178,3.02,179,2.38,180,3.02,181,3.262,182,3.02,183,3.262,184,3.02,185,3.02,186,2.634,187,3.02,188,2.634,189,3.02,190,1.453,191,1.627,192,2.634,193,1.913,194,3.02,195,3.02,196,3.02,197,2.634,198,2.634,199,4.235,200,4.687,201,3.02,202,3.02,203,3.02,204,3.02,205,3.02,206,3.02,207,3.02,208,2.634,209,3.02,210,3.02,211,3.02,212,3.02,213,3.02,214,2.634,215,3.02,216,3.02,217,3.02,218,2.191,219,3.02,220,2.634,221,3.02,222,1.711,223,3.02,224,3.02,225,2.634,226,2.634,227,3.02,228,2.634,229,3.02,230,3.02,231,2.634,232,2.634,233,2.634,234,2.634,235,2.634,236,2.634,237,5.373,238,5.373]],["title/injectables/AppService.html",[53,0.343,129,2.573]],["body/injectables/AppService.html",[3,0.203,4,0.182,5,0.182,12,0.474,13,1.583,23,0.632,26,0.013,37,1.324,49,1.248,51,0.245,53,0.597,55,0.777,63,0.203,64,0.09,107,1.238,109,0.011,110,0.011,126,6.845,129,4.484,239,1.563,240,5.162,241,5.918,242,5.918,243,5.918]],["title/controllers/AuthController.html",[122,1.831,244,2.946]],["body/controllers/AuthController.html",[3,0.084,4,0.075,5,0.075,9,1.232,10,3.457,11,3.123,12,0.196,13,0.856,14,1.245,16,0.584,18,0.915,23,0.503,25,1.127,26,0.013,27,0.954,28,0.636,29,0.802,35,1.588,37,1.193,39,2.557,43,3.338,45,3.308,51,0.275,55,0.321,63,0.084,64,0.037,66,0.946,67,0.584,79,1.117,82,5.059,84,4.653,86,0.69,107,0.986,109,0.006,110,0.006,118,2.31,122,2.126,124,1.102,127,1.423,218,3.42,244,2.776,245,2.132,246,1.651,247,3.461,248,5.236,249,1.865,250,3.338,251,3.016,252,4.455,253,2.132,254,4.208,255,3.716,256,5.357,257,2.444,258,4.84,259,3.42,260,4.066,261,3.897,262,4.715,263,2.894,264,4.84,265,6.141,266,2.444,267,2.444,268,1.927,269,4.326,270,2.584,271,4.325,272,2.444,273,4.147,274,3.016,275,2.444,276,2.444,277,2.444,278,0.944,279,1.927,280,4.326,281,2.444,282,2.444,283,2.444,284,2.444,285,2.584,286,1.773,287,2.132,288,2.132,289,1.927,290,2.132,291,2.132,292,1.927,293,3.379,294,2.132,295,2.444,296,1.651,297,2.444,298,1.385,299,2.132,300,1.927,301,5.334,302,4.205,303,4.205,304,2.444,305,1.102,306,1.927,307,2.444,308,2.444,309,0.646,310,0.944,311,5.506,312,3.716,313,4.954,314,3.016,315,5.334,316,3.42,317,4.715,318,3.826,319,2.444,320,4.715,321,4.715,322,4.715,323,2.444,324,4.113,325,4.715,326,2.444,327,2.444,328,1.461,329,2.444,330,2.444,331,2.444,332,2.444,333,2.444,334,2.444,335,2.444,336,2.444,337,2.444]],["title/modules/AuthModule.html",[133,1.109,145,2.573]],["body/modules/AuthModule.html",[3,0.149,4,0.134,5,0.134,26,0.013,51,0.333,55,0.572,56,2.24,57,2.763,59,2.945,63,0.149,64,0.066,68,2.945,69,2.35,109,0.009,110,0.009,124,2.63,133,1.997,135,1.889,136,1.889,137,2.05,138,2.05,139,1.889,140,3.09,141,2.742,145,5.199,153,3.695,154,2.742,155,1.684,156,1.966,158,2.35,160,3.805,188,3.805,232,3.805,233,3.805,234,3.805,235,3.805,236,3.805,244,4.768,293,4.768,294,3.805,338,3.805,339,3.805,340,4.499,341,4.768,342,4.768,343,4.768,344,4.362,345,3.939,346,4.362,347,4.362,348,4.362,349,3.805,350,4.362,351,3.438,352,3.438,353,4.362,354,3.805,355,4.362,356,3.805]],["title/injectables/AuthService.html",[53,0.343,293,2.573]],["body/injectables/AuthService.html",[3,0.114,4,0.103,5,0.103,9,0.589,10,3.726,11,2.678,12,0.268,13,1.083,14,1.967,16,1.362,18,1.494,23,0.667,25,1.494,26,0.013,27,1.264,28,0.582,29,1.063,33,1.767,35,1.494,37,1.547,51,0.295,53,0.409,55,0.438,63,0.114,64,0.051,66,1.764,67,1.362,86,1.608,107,1.192,109,0.007,110,0.007,133,1.322,218,3.513,239,0.882,247,3.735,249,2.034,250,4.224,251,3.817,252,3.513,253,4.224,254,4.202,263,2.183,268,3.817,269,4.382,271,4.135,273,4.219,278,2.199,279,3.817,280,4.382,285,3.847,292,2.632,293,3.068,300,2.632,306,2.632,309,1.505,310,1.869,341,4.52,342,4.63,343,4.52,349,2.913,354,2.913,356,2.913,357,2.913,358,3.34,359,3.34,360,3.34,361,4.842,362,3.34,363,4.842,364,4.224,365,3.34,366,4.224,367,2.632,368,2.632,369,3.34,370,3.34,371,2.199,372,3.34,373,3.34,374,3.34,375,3.34]],["title/guards/AuthenticationGuard.html",[0,2.427,181,2.946]],["body/guards/AuthenticationGuard.html",[0,3.359,1,4.903,2,4.976,3,0.112,4,0.1,5,0.1,7,2.365,9,0.575,10,3.027,11,1.533,12,0.261,13,1.065,14,1.484,15,5.836,16,1.64,18,1.477,23,0.508,25,1.138,26,0.013,27,1.137,28,0.523,29,0.81,30,3.751,31,4.172,33,1.216,35,1.477,36,3.794,37,1.257,38,2.145,39,2.572,40,2.336,42,3.452,51,0.284,53,0.402,54,3.213,55,0.428,62,2.844,63,0.112,64,0.105,65,2.365,66,1.389,67,1.64,73,1.997,78,1.592,79,0.952,81,1.17,86,0.92,100,1.17,105,2.444,107,0.682,109,0.007,110,0.007,116,4.151,117,0.952,176,2.202,181,3.452,186,2.844,231,2.844,247,3.693,296,2.202,298,1.847,309,1.257,376,2.844,377,4.151,378,4.758,379,4.902,380,4.758,381,2.844,382,6.563,383,3.26,384,3.26,385,4.758,386,2.844,387,2.57,388,2.57,389,2.57,390,2.066,391,2.844,392,3.751,393,2.844,394,2.844,395,2.844,396,2.844,397,4.758,398,2.844,399,4.429,400,3.26,401,3.26,402,3.26,403,2.844,404,3.26,405,2.365,406,2.844,407,4.151,408,2.844,409,2.844,410,3.26,411,2.844,412,2.844,413,3.26,414,1.601,415,3.26,416,3.26,417,2.091,418,2.57,419,2.844,420,3.26,421,2.844,422,3.26,423,3.452]],["title/injectables/ClearOtpAndExpiryTimeProvider.html",[53,0.343,424,2.573]],["body/injectables/ClearOtpAndExpiryTimeProvider.html",[3,0.151,4,0.136,5,0.136,12,0.354,13,1.315,14,1.746,16,1.055,18,1.685,23,0.627,25,1.405,26,0.013,27,1.189,28,0.547,29,1,33,1.502,35,1.895,37,1.315,51,0.291,53,0.496,55,0.579,63,0.151,64,0.067,66,1.453,67,1.055,73,1.426,78,1.476,79,1.288,81,1.584,86,1.245,100,1.584,107,0.923,109,0.009,110,0.009,169,1.476,239,1.165,249,1.805,259,4.264,263,3.404,278,1.703,309,1.165,417,1.642,424,3.724,425,5.766,426,3.951,427,3.477,428,5.127,429,2.795,430,3.056,431,4.412,432,3.951,433,5.127,434,4.412,435,5.127,436,1.91,437,1.989,438,2.499,439,1.426,440,2.499,441,2.637,442,3.848,443,4.633,444,3.2,445,3.848,446,2.376]],["title/classes/CreateProductDto.html",[64,0.062,447,2.573]],["body/classes/CreateProductDto.html",[3,0.133,4,0.119,5,0.119,12,0.31,23,0.842,26,0.013,27,1.25,28,0.746,39,1.611,49,1.437,51,0.276,63,0.133,64,0.094,109,0.008,110,0.008,117,1.57,127,2.382,190,1.251,191,2.085,447,3.406,448,1.494,449,3.376,450,4.87,451,3.914,452,3.914,453,4.87,454,3.914,455,4.87,456,4.87,457,3.914,458,4.87,459,3.914,460,5.985,461,3.87,462,3.87,463,3.87,464,2.484,465,5.377,466,3.87,467,3.87,468,3.87,469,3.87,470,3.87,471,3.87,472,3.87,473,3.328,474,3.87,475,3.376,476,3.87,477,3.051,478,4.238,479,3.914,480,4.508,481,4.154,482,4.69,483,1.494,484,3.631,485,2.239,486,3.051,487,3.051,488,2.452,489,3.376]],["title/injectables/CreateProductProvider.html",[53,0.343,490,2.573]],["body/injectables/CreateProductProvider.html",[3,0.094,4,0.085,5,0.085,9,0.74,12,0.408,13,0.939,14,1.343,16,1.004,18,1.004,23,0.448,25,1.004,26,0.013,27,0.849,28,0.529,29,0.714,33,0.704,37,0.939,38,1.893,42,1.999,49,0.74,51,0.277,53,0.354,55,0.362,63,0.094,64,0.042,66,1.257,67,1.004,73,2.333,78,1.701,79,1.484,81,1.825,86,1.998,92,2.509,93,2.509,94,2.156,95,2.509,96,2.378,97,2.509,98,2.509,99,2.509,100,1.825,107,0.878,109,0.006,110,0.006,190,2.405,191,1.485,193,1.746,239,0.728,249,1.388,270,1.861,309,1.109,310,1.064,407,2.404,414,2.791,417,1.892,418,4.008,419,4.435,421,2.404,436,1.193,439,0.891,447,4.377,459,3.601,473,2.261,485,1.748,488,1.746,490,2.659,491,4.435,492,2.172,493,4.008,494,2.756,495,7.077,496,4.246,497,2.756,498,2.172,499,5.081,500,3.045,501,2.756,502,2.404,503,1.861,504,2.172,505,2.756,506,1.746,507,2.172,508,2.756,509,2.835,510,1.861,511,3.045,512,3.433,513,5.084,514,4.198,515,2.756,516,2.756,517,4.198,518,2.756,519,2.756,520,4.198,521,2.756,522,1.999,523,5.084,524,2.756,525,3.309,526,2.756,527,2.756,528,2.756,529,2.756,530,4.198,531,2.172,532,1.647,533,2.756,534,2.756,535,2.756,536,2.835,537,2.756,538,1.193,539,1.353,540,2.756,541,2.756,542,2.756,543,2.756,544,2.756,545,3.045,546,2.756,547,2.756,548,2.756,549,2.756,550,2.756,551,2.404,552,2.756,553,2.404,554,2.756,555,2.756,556,2.756,557,2.756,558,4.435,559,2.756,560,2.756,561,4.198,562,2.756,563,1.861,564,2.756,565,2.756,566,4.198,567,2.404,568,2.756,569,2.756,570,2.756,571,4.198,572,2.756,573,2.756,574,5.084,575,4.198,576,2.756]],["title/classes/CreateProductVariantDto.html",[64,0.062,484,2.742]],["body/classes/CreateProductVariantDto.html",[3,0.163,4,0.147,5,0.147,12,0.382,23,0.775,26,0.013,28,0.718,29,1.052,39,1.982,49,1.384,51,0.255,63,0.163,64,0.105,109,0.009,110,0.009,117,1.804,127,2.192,190,2.432,448,1.838,460,4.871,464,2.3,475,4.153,477,3.753,478,4.871,479,3.915,480,4.114,481,3.696,482,5.391,483,1.838,484,4.173,485,3.133,486,5.932,489,4.153,499,5.408,577,3.753,578,5.408,579,5.985,580,5.408,581,4.761,582,4.761,583,4.761,584,4.153,585,4.761,586,4.761,587,3.329,588,4.153,589,4.153]],["title/classes/CreateReviewDto.html",[64,0.062,590,2.742]],["body/classes/CreateReviewDto.html",[3,0.172,4,0.154,5,0.154,12,0.402,23,0.75,26,0.013,28,0.654,49,1.305,51,0.207,63,0.172,64,0.097,109,0.01,110,0.01,117,1.864,127,2.122,328,4.424,448,1.933,460,5.033,464,2.376,479,4.045,480,4.193,481,3.786,483,1.933,584,4.369,588,4.369,589,4.369,590,4.311,591,6.456,592,4.369,593,3.981,594,6.131,595,6.669,596,5.009,597,5.009,598,7.401,599,3.817,600,5.009,601,6.385,602,4.632,603,5.009,604,5.009,605,5.009,606,5.009]],["title/injectables/CreateReviewProvider.html",[53,0.343,607,2.573]],["body/injectables/CreateReviewProvider.html",[3,0.134,4,0.12,5,0.12,9,0.688,12,0.313,13,1.21,14,1.639,16,1.293,18,1.293,23,0.577,25,1.293,26,0.013,27,1.094,28,0.503,29,0.92,33,0.997,37,1.21,38,2.438,45,2.102,49,1.094,51,0.301,53,0.456,55,0.512,63,0.134,64,0.059,66,1.336,67,1.293,73,1.261,78,1.305,79,1.578,81,1.941,86,1.526,92,2.332,93,2.332,94,2.004,95,2.332,96,2.21,97,2.332,98,2.332,99,2.332,100,1.401,107,0.816,109,0.008,110,0.008,169,1.305,190,2.165,222,2.21,239,1.031,249,1.694,270,2.635,309,1.428,310,1.506,414,1.915,417,2.012,430,2.929,436,2.341,437,1.759,439,1.261,522,2.83,563,2.635,590,5.138,593,4.123,607,3.425,608,5.413,609,3.404,610,5.413,611,3.902,612,4.461,613,3.902,614,5.407,615,3.404,616,4.524,617,3.902,618,2.635,619,3.404,620,3.075,621,3.902,622,3.075,623,3.902,624,2.472,625,2.332,626,3.404,627,6.205,628,3.902,629,3.902,630,2.635,631,2.635,632,2.635,633,2.472,634,2.635,635,2.635]],["title/classes/CreateSubscriberDto.html",[64,0.062,636,2.946]],["body/classes/CreateSubscriberDto.html",[3,0.182,4,0.163,5,0.163,9,1.168,12,0.426,23,0.567,26,0.013,28,0.495,49,1.168,51,0.274,63,0.182,64,0.101,109,0.01,110,0.01,117,1.934,118,3.485,127,1.604,261,3.57,305,2.395,448,2.051,480,3.754,483,2.051,539,3.253,636,4.807,637,5.781,638,4.635,639,4.807,640,4.52,641,3.588,642,4.188,643,5.313,644,5.223,645,4.475,646,5.223,647,4.188,648,4.188,649,4.188]],["title/classes/CreateUserDto.html",[64,0.062,650,2.573]],["body/classes/CreateUserDto.html",[3,0.156,4,0.14,5,0.14,9,1.184,12,0.365,23,0.641,26,0.013,28,0.559,35,1.925,49,1.059,51,0.307,63,0.156,64,0.109,109,0.009,110,0.009,117,1.753,118,3.364,119,3.514,127,1.813,261,3.846,298,3.805,305,2.055,448,1.759,480,3.805,483,1.759,539,3.505,639,4.357,641,4.056,642,3.593,644,4.734,645,4.536,646,4.734,647,3.593,648,3.593,649,3.593,650,3.805,651,5.86,652,3.078,653,3.976,654,3.976,655,3.976,656,3.976,657,3.976,658,3.976,659,3.805,660,3.593,661,3.976]],["title/injectables/CreateUsersProvider.html",[53,0.343,662,2.573]],["body/injectables/CreateUsersProvider.html",[3,0.136,4,0.122,5,0.122,9,0.965,12,0.319,13,1.225,14,1.655,16,0.95,18,1.614,23,0.584,25,1.309,26,0.013,27,1.108,28,0.51,29,0.932,33,1.399,35,1.877,37,1.225,45,2.141,51,0.293,52,2.251,53,0.462,55,0.522,63,0.136,64,0.095,66,1.669,67,0.95,78,1.33,79,1.599,81,1.966,86,1.122,100,1.427,107,0.832,109,0.008,110,0.008,118,1.721,119,1.721,121,1.241,169,1.33,222,2.251,239,1.05,249,1.711,274,4.317,278,1.534,345,2.684,371,2.114,414,1.951,417,2.038,429,2.518,430,2.948,432,3.745,436,2.371,437,1.792,438,2.251,439,1.284,441,2.376,522,2.883,563,2.684,618,2.684,630,2.684,631,2.684,632,2.684,633,2.518,634,2.684,635,2.684,639,4.898,650,4.752,662,3.469,663,5.465,664,3.467,665,4.777,666,3.974,667,4.777,668,3.974,669,2.684,670,2.883,671,3.467,672,2.251,673,3.974,674,5.476,675,3.974,676,3.974,677,3.974,678,3.974,679,3.974]],["title/injectables/DataResponseInterceptor.html",[53,0.343,177,2.946]],["body/injectables/DataResponseInterceptor.html",[3,0.144,4,0.13,5,0.13,9,0.744,12,0.338,13,1.276,16,1.009,18,1.655,23,0.609,25,1.364,26,0.013,27,1.154,28,0.531,29,0.971,31,4.674,33,1.457,36,3.851,37,1.276,51,0.267,53,0.481,55,0.554,56,2.167,63,0.144,64,0.064,65,3.06,66,1.597,67,1.009,69,2.272,94,3.556,107,0.883,109,0.009,110,0.009,161,5.145,177,4.137,179,5.093,239,1.114,309,1.114,310,1.628,371,2.202,386,5.637,387,3.325,398,3.68,406,4.975,408,4.975,680,5.637,681,3.68,682,5.622,683,5.875,684,4.975,685,5.703,686,3.68,687,4.218,688,5.703,689,6.922,690,4.218,691,5.703,692,6.462,693,5.703,694,5.703,695,5.703,696,4.218,697,4.218,698,4.218,699,4.218,700,4.218]],["title/injectables/FindAllProductsProvider.html",[53,0.343,701,2.573]],["body/injectables/FindAllProductsProvider.html",[3,0.108,4,0.097,5,0.097,12,0.254,13,1.041,14,1.459,16,1.113,18,1.113,23,0.497,25,1.113,26,0.013,27,1.117,28,0.433,29,0.792,33,0.808,37,1.041,38,2.099,50,5.228,51,0.29,53,0.393,55,0.415,63,0.108,64,0.048,66,0.782,67,1.113,73,2.268,78,1.059,79,0.924,81,1.136,86,0.893,92,1.891,93,1.891,94,1.625,95,1.891,96,1.792,97,1.891,98,1.891,99,1.891,100,1.136,107,0.974,109,0.007,110,0.007,169,1.059,190,1.504,239,0.836,249,1.508,309,1.229,371,1.221,417,1.177,430,2.702,437,1.426,439,1.023,443,2.494,451,2.004,452,2.004,454,2.004,457,2.004,459,3.498,503,2.137,509,3.143,532,1.891,578,2.494,580,2.494,599,1.891,624,4.3,701,2.949,702,4.817,703,2.76,704,4.006,705,2.76,706,4.194,707,3.164,708,3.669,709,2.76,710,3.64,711,3.164,712,4.8,713,2.975,714,4.655,715,2.494,716,2.137,717,2.295,718,2.494,719,4.061,720,2.76,721,2.494,722,2.295,723,2.295,724,2.76,725,2.494,726,3.164,727,4.112,728,4.112,729,4.655,730,3.164,731,3.164,732,5.522,733,3.164,734,3.164,735,3.164,736,4.655,737,3.164,738,3.164,739,3.164,740,3.164,741,3.164,742,3.164,743,2.494,744,3.164,745,3.164,746,3.164,747,3.164,748,4.061,749,3.164,750,3.164,751,3.164,752,3.164,753,3.164,754,3.164,755,3.164,756,4.655,757,3.164,758,4.655,759,3.164,760,3.669,761,2.295,762,3.164,763,2.76,764,3.164,765,3.164]],["title/injectables/FindOneByIdProvider.html",[53,0.343,766,2.573]],["body/injectables/FindOneByIdProvider.html",[3,0.136,4,0.122,5,0.122,9,0.964,12,0.318,13,1.223,14,1.653,16,0.948,18,1.613,23,0.584,25,1.308,26,0.013,27,1.106,28,0.509,29,0.931,33,1.397,35,1.936,37,1.223,45,2.136,49,1.103,51,0.279,53,0.462,55,0.521,63,0.136,64,0.095,66,1.352,67,0.948,78,1.829,79,1.596,81,1.963,86,1.12,92,2.371,93,2.371,94,2.037,95,2.371,96,2.247,97,2.371,98,2.371,99,2.371,100,1.424,105,2.809,107,0.83,109,0.008,110,0.008,121,2.341,169,1.327,222,2.247,239,1.048,249,1.709,278,1.531,309,1.048,371,2.111,417,1.476,423,2.877,429,2.513,430,2.946,432,3.741,436,2.368,437,1.788,438,2.247,439,1.282,441,2.371,630,2.678,631,2.678,632,2.678,633,2.513,634,2.678,635,2.678,669,2.678,724,3.46,766,3.464,767,4.54,768,4.483,769,3.46,770,5.317,771,5.468,772,3.966,773,5.468,774,3.966,775,3.46,776,3.693,777,3.966]],["title/injectables/FindOneUserByEmailProvider.html",[53,0.343,778,2.573]],["body/injectables/FindOneUserByEmailProvider.html",[3,0.138,4,0.124,5,0.124,9,0.977,12,0.324,13,1.239,14,1.669,16,0.966,18,1.626,23,0.591,25,1.324,26,0.013,27,1.121,28,0.516,29,0.943,33,1.415,35,1.96,37,1.239,49,1.114,50,3.74,51,0.281,53,0.467,54,2.729,55,0.53,63,0.138,64,0.062,66,1.369,67,0.966,78,1.853,79,1.617,81,1.451,86,1.141,100,1.451,105,3.493,107,0.845,109,0.008,110,0.008,118,3.37,119,1.75,121,1.262,169,1.352,239,1.067,249,1.726,278,1.56,309,1.067,371,2.138,417,1.504,429,2.56,430,2.831,432,4.065,436,1.75,437,1.822,438,2.289,439,1.306,441,2.416,446,2.177,767,4.585,768,4.004,770,5.36,776,2.729,778,3.509,779,3.525,780,4.832,781,4.041,782,4.832,783,4.041,784,4.041,785,3.525,786,3.185,787,4.041]],["title/injectables/FindUserByOtpAndExpiryTimeProvider.html",[53,0.343,788,2.573]],["body/injectables/FindUserByOtpAndExpiryTimeProvider.html",[3,0.134,4,0.12,5,0.12,9,0.953,11,3.149,12,0.313,13,1.21,14,1.639,16,0.933,18,1.602,23,0.577,25,1.293,26,0.013,27,1.094,28,0.503,29,0.92,33,1.381,35,1.919,37,1.21,49,1.094,51,0.277,53,0.456,54,2.635,55,0.512,63,0.134,64,0.095,66,1.336,67,0.933,78,1.809,79,1.578,81,1.401,82,3.075,86,1.101,100,1.401,105,3.441,107,0.816,109,0.008,110,0.008,155,2.881,169,1.305,239,1.031,249,1.694,263,3.365,278,1.506,309,1.031,371,2.087,417,1.452,426,4.461,427,3.075,429,2.472,430,2.929,432,3.709,436,1.689,437,1.759,438,2.21,439,1.261,440,2.21,441,2.332,444,2.83,446,2.102,767,4.501,770,5.28,786,3.075,788,3.425,789,5.28,790,4.524,791,5.407,792,3.902,793,5.407,794,3.902,795,3.902,796,3.902,797,3.902,798,2.21,799,5.407,800,3.902,801,3.902]],["title/injectables/GenerateTokensProvider.html",[53,0.343,340,2.427]],["body/injectables/GenerateTokensProvider.html",[3,0.195,4,0.103,5,0.103,9,0.589,10,3.069,11,2.276,12,0.268,13,1.083,14,1.827,16,1.158,18,1.494,19,2.632,20,5.624,21,4.925,22,4.925,23,0.608,25,1.494,26,0.013,27,1.152,28,0.582,29,0.97,33,1.596,35,1.832,37,1.398,49,1.004,51,0.286,52,1.892,53,0.409,55,0.438,56,1.715,57,2.116,59,2.255,63,0.114,64,0.051,66,1.71,67,1.158,68,4.219,69,1.799,70,2.632,73,1.079,83,5.624,86,1.367,107,1.013,109,0.007,110,0.007,112,1.996,118,1.446,119,1.446,120,2.632,239,0.882,249,1.889,256,4.224,271,3.405,273,4.671,278,1.869,285,3.27,309,1.279,310,1.289,314,3.817,316,3.513,340,2.895,352,2.632,371,1.869,390,3.068,464,2.12,802,5.45,803,2.913,804,5.45,805,4.842,806,4.842,807,3.34,808,4.842,809,3.34,810,4.842,811,6.633,812,4.925,813,3.34,814,4.49,815,2.913,816,4.842,817,4.842,818,2.913,819,2.632,820,2.913,821,3.34,822,2.913,823,2.913,824,2.913,825,2.913,826,2.913,827,2.913,828,3.34,829,3.068,830,3.34,831,2.632,832,3.34,833,2.423,834,2.423,835,3.34,836,3.34]],["title/classes/GetProductsBaseDto.html",[64,0.062,837,2.946]],["body/classes/GetProductsBaseDto.html",[3,0.128,4,0.115,5,0.115,9,0.657,12,0.299,23,0.787,26,0.013,27,1.4,28,0.686,29,1.365,49,1.414,51,0.25,63,0.128,64,0.092,109,0.008,110,0.008,117,1.529,127,2.225,190,2.555,305,1.681,448,1.439,451,4.383,452,3.836,454,3.836,457,4.383,481,4.052,483,1.439,539,2.973,587,4.052,624,3.318,710,2.228,837,4.393,838,5.93,839,2.704,840,3.8,841,4.569,842,6.036,843,6.036,844,5.809,845,3.728,846,3.728,847,4.569,848,3.728,849,3.728,850,4.569,851,4.569,852,3.728,853,3.252,854,3.728,855,3.8,856,2.967,857,2.362,858,2.517,859,2.938,860,2.362]],["title/classes/GetProductsDto.html",[64,0.062,710,2.427]],["body/classes/GetProductsDto.html",[3,0.16,4,0.144,5,0.144,9,0.825,26,0.013,27,1.236,49,1.378,51,0.281,63,0.16,64,0.104,109,0.009,110,0.009,190,2.481,305,2.11,448,1.806,451,3.871,452,2.965,454,2.965,457,3.871,481,4.272,483,1.806,539,3.341,587,4.272,624,2.965,710,3.653,837,4.936,838,3.689,839,3.395,840,3.395,841,4.082,842,5.331,843,5.331,847,4.082,850,4.082,851,4.082,855,4.936,856,3.855,857,2.965,858,3.16,859,4.817,860,3.871]],["title/classes/GetUsersBaseDto.html",[64,0.062,861,2.946]],["body/classes/GetUsersBaseDto.html",[3,0.165,4,0.149,5,0.149,9,0.852,12,0.387,23,0.666,26,0.013,28,0.581,29,1.243,35,1.652,51,0.286,63,0.214,64,0.118,109,0.01,110,0.01,117,1.821,127,1.884,305,2.179,448,1.865,483,1.865,511,4.526,539,3.393,587,3.723,652,3.263,653,4.216,798,4.522,840,4.526,855,4.526,856,3.535,857,3.062,858,3.263,860,3.062,861,5.013,862,5.447,863,6.028,864,6.028,865,6.24,866,5.443,867,4.833,868,6.028,869,3.062]],["title/classes/GetUsersDto.html",[64,0.062,869,2.573]],["body/classes/GetUsersDto.html",[3,0.178,4,0.16,5,0.16,9,0.919,26,0.013,35,1.712,51,0.296,63,0.224,64,0.12,109,0.01,110,0.01,305,2.35,448,2.012,483,2.012,511,3.781,539,3.515,587,3.856,652,3.52,798,4.254,840,3.781,855,5.193,856,4.055,857,3.302,858,3.52,860,4.148,861,5.193,862,4.109,863,4.547,864,4.547,866,4.547,868,6.245,869,4.148]],["title/modules/MailModule.html",[133,1.109,146,2.573]],["body/modules/MailModule.html",[3,0.142,4,0.128,5,0.128,14,1.097,26,0.013,35,0.993,39,2.35,40,2.771,51,0.307,52,3.198,55,0.545,56,2.134,63,0.142,64,0.063,69,3.041,79,1.213,107,0.869,109,0.009,110,0.009,133,2.072,135,1.799,136,1.799,137,1.953,138,1.953,139,1.799,140,3.014,141,3.014,146,4.808,154,2.654,155,1.604,156,1.873,158,2.238,161,4.33,208,4.924,214,3.624,220,3.624,226,3.624,247,2.483,310,1.604,392,3.275,396,2.483,403,3.624,672,4.561,743,3.275,760,3.275,870,3.624,871,3.624,872,3.624,873,4.154,874,5.645,875,4.154,876,4.154,877,4.095,878,3.275,879,3.275,880,5.645,881,4.154,882,4.154,883,3.014,884,4.154,885,3.624,886,4.154,887,4.924,888,4.154,889,5.645,890,5.645,891,5.645,892,4.154,893,4.154,894,4.154,895,4.154,896,4.154,897,3.624,898,3.624,899,3.624,900,4.154,901,4.154,902,4.154,903,4.154,904,4.154,905,4.154]],["title/injectables/MailService.html",[53,0.343,672,2.3]],["body/injectables/MailService.html",[3,0.108,4,0.097,5,0.097,9,0.557,12,0.253,13,1.04,14,1.94,16,0.755,18,1.455,23,0.649,25,1.455,26,0.013,27,1.231,28,0.566,29,1.036,33,1.733,35,1.905,36,3.725,37,1.234,38,3.058,49,1.196,51,0.28,53,0.392,55,0.415,63,0.108,64,0.048,66,1.677,86,1.557,109,0.007,110,0.007,118,2.389,121,0.987,133,1.269,155,2.503,218,2.291,239,0.834,249,2.005,259,2.291,263,3.57,309,0.834,310,2.13,640,4.055,672,2.634,820,2.755,833,4.414,877,2.291,878,2.49,879,3.665,883,5.22,887,2.755,897,4.056,898,4.056,899,4.813,906,2.755,907,4.649,908,4.649,909,4.649,910,3.159,911,7.013,912,3.159,913,4.649,914,3.159,915,6.783,916,4.649,917,3.159,918,4.649,919,3.159,920,4.649,921,4.813,922,2.49,923,3.159,924,3.159,925,5.517,926,5.517,927,4.649,928,2.49,929,5.517,930,5.517,931,3.159,932,3.159,933,3.159,934,5.517,935,3.159,936,3.159,937,3.159,938,3.159,939,3.159,940,3.159,941,4.649,942,3.159,943,3.159,944,3.159,945,3.159]],["title/classes/OtpSigninDto.html",[64,0.062,254,2.573]],["body/classes/OtpSigninDto.html",[3,0.184,4,0.165,5,0.165,9,1.176,12,0.431,23,0.573,26,0.013,28,0.5,51,0.276,63,0.184,64,0.102,109,0.01,110,0.01,117,1.948,127,1.622,155,2.576,252,4.84,254,4.227,261,3.594,263,3.706,285,4.506,305,2.422,448,2.074,464,2.483,479,4.227,480,3.78,483,2.074,539,3.276,641,3.628,645,4.506,946,4.686,947,5.372,948,5.372,949,5.372]],["title/injectables/OtpSigninProvider.html",[53,0.343,341,2.573]],["body/injectables/OtpSigninProvider.html",[3,0.143,4,0.129,5,0.129,10,3.054,11,3.024,12,0.335,13,1.268,14,1.699,16,1.356,18,1.356,23,0.605,25,1.356,26,0.013,27,1.147,28,0.528,29,0.965,35,1.538,37,0.935,51,0.298,53,0.479,55,0.549,63,0.143,64,0.064,67,1.356,73,2.079,86,1.816,105,2.148,107,0.875,109,0.009,110,0.009,118,1.811,119,1.811,121,1.306,239,1.104,249,1.756,254,4.567,263,2.9,271,2.5,278,1.614,306,3.296,309,1.497,310,1.614,314,4.469,316,4.113,340,4.123,341,3.592,351,3.296,371,1.614,426,2.5,440,2.369,625,2.5,790,2.824,829,3.592,831,3.296,833,3.033,834,3.033,950,5.612,951,3.648,952,5.67,953,3.648,954,4.004,955,5.071,956,4.181,957,5.67,958,4.181,959,3.296,960,5.612,961,4.181,962,4.181,963,3.648,964,3.648,965,4.181,966,3.648,967,4.181,968,3.296,969,4.181,970,3.648,971,4.181,972,4.181,973,3.648]],["title/interfaces/Paginated.html",[111,2.742,713,2.187]],["body/interfaces/Paginated.html",[3,0.171,4,0.154,5,0.154,9,0.881,12,0.4,26,0.013,28,0.739,49,1.347,63,0.171,94,2.566,109,0.01,110,0.01,111,4.304,113,3.938,117,1.861,405,4.624,464,2.751,500,5.364,682,5.934,683,3.938,713,3.781,725,3.938,812,5.533,974,4.358,975,6.814,976,6.45,977,5.024,978,6.374,979,6.374,980,4.358,981,4.358,982,4.358,983,4.358,984,4.358,985,4.358,986,4.358,987,4.358]],["title/modules/PaginationModule.html",[133,1.109,988,2.573]],["body/modules/PaginationModule.html",[3,0.189,4,0.17,5,0.17,26,0.013,51,0.281,55,0.725,63,0.189,64,0.084,109,0.01,110,0.01,133,2.007,135,2.393,136,2.393,137,2.598,138,2.598,139,2.393,140,3.455,141,3.455,154,3.192,155,2.133,156,2.492,706,5.014,988,5.141,989,4.821,990,4.821,991,4.821,992,5.527,993,5.527]],["title/injectables/PaginationProvider.html",[53,0.343,706,2.427]],["body/injectables/PaginationProvider.html",[3,0.114,4,0.102,5,0.102,9,0.586,12,0.266,13,1.079,14,1.5,16,0.794,18,1.49,23,0.515,25,1.358,26,0.013,27,0.976,28,0.529,29,0.821,33,1.233,37,1.079,38,2.175,45,4.124,51,0.285,52,2.733,53,0.407,55,0.436,58,2.41,63,0.114,64,0.051,66,1.54,67,0.794,73,2.359,79,0.97,86,1.362,94,1.707,107,0.695,109,0.01,110,0.007,176,2.244,239,0.877,249,1.551,309,0.877,371,2.192,405,3.499,414,1.631,430,3.038,439,1.074,512,3.258,599,3.726,625,2.884,682,4.12,704,3.499,706,2.884,713,2.599,722,3.499,725,4.913,760,4.913,761,2.41,768,3.056,785,2.898,812,2.619,815,2.898,856,3.531,858,2.244,975,4.955,976,2.898,980,2.898,981,4.955,982,2.898,983,5.437,984,2.898,985,2.898,986,2.898,987,2.898,994,2.898,995,6.905,996,3.322,997,3.322,998,3.322,999,3.322,1000,4.824,1001,3.322,1002,3.322,1003,3.322,1004,3.322,1005,3.322,1006,3.322,1007,4.208,1008,4.824,1009,7.298,1010,6.233,1011,4.824,1012,3.322,1013,3.322,1014,3.322,1015,3.322,1016,4.824,1017,3.322,1018,3.322,1019,3.322,1020,3.322,1021,3.322,1022,3.322,1023,3.322,1024,3.322,1025,3.322,1026,4.824,1027,3.322,1028,3.322,1029,3.322,1030,3.322,1031,3.322]],["title/classes/PaginationQueryDto.html",[64,0.062,856,2.3]],["body/classes/PaginationQueryDto.html",[3,0.17,4,0.153,5,0.153,9,0.876,12,0.398,23,0.678,26,0.013,28,0.591,29,1.256,51,0.205,63,0.17,64,0.097,109,0.01,110,0.01,117,1.855,127,1.918,313,4.609,396,3.798,448,1.918,464,2.988,483,1.918,512,4.29,532,3.798,539,3.119,587,3.975,599,3.798,722,4.609,727,5.15,728,5.15,856,3.599,857,4.436,1007,5.542,1032,4.335,1033,4.97,1034,7.38,1035,4.97,1036,4.97,1037,6.353]],["title/classes/PatchProductDto.html",[64,0.062,1038,2.573]],["body/classes/PatchProductDto.html",[3,0.127,4,0.114,5,0.114,12,0.298,23,0.843,26,0.013,27,1.222,28,0.735,29,1.38,49,1.452,51,0.216,63,0.127,64,0.08,109,0.008,110,0.008,117,1.525,121,1.887,127,2.385,190,1.2,448,1.433,450,4.763,451,3.828,452,3.828,453,4.763,454,3.828,455,4.763,456,4.763,457,3.828,458,4.763,459,3.828,464,1.944,478,4.117,479,3.309,481,4.217,483,1.433,485,1.546,487,2.927,587,4.29,839,2.694,844,6.102,853,3.239,1038,3.309,1039,6.947,1040,3.713,1041,3.713,1042,3.713,1043,3.713,1044,3.713,1045,3.713,1046,3.713,1047,3.713,1048,3.713,1049,3.713,1050,3.713,1051,4.383,1052,3.713,1053,3.713,1054,2.927]],["title/classes/PatchProductVariantDto.html",[64,0.062,1051,2.946]],["body/classes/PatchProductVariantDto.html",[3,0.176,4,0.158,5,0.158,12,0.412,23,0.693,26,0.013,28,0.604,29,1.272,49,1.145,51,0.294,63,0.176,64,0.099,109,0.01,110,0.01,117,1.895,121,2.222,127,1.96,190,2.415,399,4.054,414,2.525,448,1.985,481,3.497,483,1.985,484,4.804,485,2.962,487,4.054,577,4.054,587,3.833,844,4.054,860,4.113,1051,4.71,1054,5.608,1055,6.206,1056,6.206,1057,5.143,1058,5.118,1059,5.143,1060,5.143,1061,4.486,1062,6.492]],["title/classes/PatchUserDto.html",[64,0.062,1063,2.742]],["body/classes/PatchUserDto.html",[3,0.142,4,0.127,5,0.127,12,0.332,23,0.823,26,0.013,28,0.718,29,1.4,49,1.436,51,0.264,63,0.142,64,0.086,109,0.009,110,0.009,117,1.643,127,2.329,399,3.261,414,2.031,448,1.597,464,2.094,479,3.566,481,4.156,483,1.597,587,4.214,650,2.621,652,2.793,655,3.608,670,3.001,860,3.566,1055,3.608,1061,3.608,1063,3.801,1064,6.824,1065,5.628,1066,5.581,1067,5.581,1068,5.581,1069,6.397,1070,5.581,1071,5.581,1072,5.581,1073,5.581,1074,7.581,1075,4.137,1076,4.137,1077,4.137,1078,4.137,1079,4.137,1080,4.137,1081,4.137,1082,4.137]],["title/entities/Product.html",[190,1.312,538,1.758]],["body/entities/Product.html",[3,0.109,4,0.098,5,0.098,12,0.254,23,0.84,26,0.013,27,1.118,28,0.733,29,1.037,39,2.537,49,1.412,51,0.228,63,0.109,64,0.048,109,0.007,110,0.007,117,1.36,121,1.726,127,2.376,190,1.506,191,1.707,396,2.786,439,1.024,450,4.357,451,3.502,452,3.502,453,4.357,454,3.502,455,4.357,456,4.357,457,3.502,458,4.357,459,3.502,464,2.268,473,3.283,485,1.319,488,2.008,532,2.786,536,3.147,538,2.018,593,3.847,602,3.381,622,4.357,798,3.452,1083,1.894,1084,2.765,1085,5.527,1086,5.527,1087,5.049,1088,3.169,1089,3.169,1090,3.169,1091,4.822,1092,3.169,1093,6.094,1094,6.094,1095,6.094,1096,5.316,1097,3.169,1098,3.169,1099,3.147,1100,3.169,1101,3.169,1102,3.169,1103,3.169,1104,3.674,1105,3.169,1106,4.065,1107,4.66,1108,3.169,1109,3.169,1110,5.527,1111,3.169,1112,4.66,1113,3.674,1114,4.065,1115,3.169,1116,3.169,1117,4.66,1118,4.66,1119,4.357,1120,2.008,1121,3.169,1122,4.66,1123,3.169,1124,4.66,1125,3.169,1126,4.66,1127,3.169,1128,4.66,1129,3.169]],["title/entities/ProductImage.html",[506,2.573,538,1.758]],["body/entities/ProductImage.html",[3,0.163,4,0.147,5,0.147,12,0.382,23,0.775,26,0.013,28,0.676,49,1.28,51,0.255,63,0.163,64,0.073,109,0.009,110,0.009,117,1.804,121,2.143,127,2.192,191,2.565,193,4.767,396,3.694,439,1.539,464,2.3,473,4.229,485,3.211,488,3.016,506,3.915,532,3.694,536,4.173,538,2.676,551,5.985,553,5.985,1083,2.846,1087,4.347,1099,4.173,1113,3.753,1120,3.016,1130,4.153,1131,5.391,1132,4.761,1133,4.761,1134,4.761,1135,3.753,1136,6.18,1137,5.391,1138,4.153,1139,4.761,1140,5.391,1141,4.871]],["title/modules/ProductImagesModule.html",[133,1.109,147,2.742]],["body/modules/ProductImagesModule.html",[3,0.187,4,0.168,5,0.168,26,0.013,51,0.315,55,0.715,63,0.187,64,0.083,109,0.01,110,0.01,133,1.994,135,2.359,136,2.359,137,2.561,138,2.561,139,2.359,140,3.434,141,2.561,147,5.391,154,3.164,155,2.103,156,2.456,158,2.935,168,3.257,169,1.823,190,1.761,193,3.452,485,2.268,506,3.452,507,4.295,1142,4.753,1143,4.753,1144,5.391,1145,5.448,1146,4.753,1147,5.448,1148,5.448]],["title/injectables/ProductImagesService.html",[53,0.343,1144,2.742]],["body/injectables/ProductImagesService.html",[3,0.214,4,0.192,5,0.192,26,0.012,51,0.258,53,0.617,55,0.82,63,0.214,64,0.095,109,0.011,110,0.011,239,1.649,485,2.6,1144,4.933,1149,5.447,1150,5.447]],["title/entities/ProductVariant.html",[473,2.187,538,1.758]],["body/entities/ProductVariant.html",[3,0.139,4,0.125,5,0.125,12,0.326,23,0.805,26,0.013,28,0.703,29,0.947,39,2.838,40,2.731,49,1.3,51,0.262,63,0.139,64,0.062,109,0.009,110,0.009,117,1.624,121,1.981,127,2.279,190,2.519,191,4.139,193,2.576,396,2.431,439,1.314,464,2.07,473,2.997,485,3.245,499,4.998,506,4.319,507,3.205,538,2.409,545,4.036,578,4.998,579,5.532,580,4.998,1056,5.532,1058,4.385,1083,2.431,1087,4.67,1099,3.757,1106,3.547,1113,4.998,1114,4.853,1119,4.385,1120,2.576,1131,4.853,1135,3.205,1137,4.853,1138,3.547,1140,4.853,1141,4.385,1151,3.547,1152,4.067,1153,4.067,1154,5.563,1155,4.067,1156,5.563,1157,4.067,1158,4.067,1159,4.067,1160,4.067,1161,4.067,1162,3.547]],["title/modules/ProductVariantsModule.html",[133,1.109,148,2.573]],["body/modules/ProductVariantsModule.html",[3,0.181,4,0.163,5,0.163,26,0.013,51,0.312,55,0.693,63,0.181,64,0.081,109,0.01,110,0.01,133,1.967,135,2.288,136,2.288,137,2.484,138,2.484,139,2.288,140,3.386,141,3.386,148,5.092,154,3.104,155,2.04,156,2.382,158,2.846,168,3.158,169,1.768,190,1.708,191,2.846,473,2.846,485,2.2,488,3.347,1146,4.609,1163,4.609,1164,4.609,1165,4.609,1166,5.284,1167,5.284,1168,4.609,1169,5.284]],["title/injectables/ProductVariantsService.html",[53,0.343,1166,2.573]],["body/injectables/ProductVariantsService.html",[3,0.133,4,0.12,5,0.12,12,0.312,13,1.208,14,1.921,16,0.931,18,1.291,23,0.661,25,1.482,26,0.013,27,1.254,28,0.577,29,1.055,33,1.38,37,1.497,38,3.018,49,1.282,51,0.277,53,0.456,55,0.511,63,0.133,64,0.059,66,1.532,67,0.931,73,1.258,78,1.303,79,1.137,86,1.524,107,1.13,109,0.008,110,0.008,121,2.091,169,1.303,190,2.495,239,1.028,249,1.986,309,1.028,430,2.927,437,1.756,439,1.258,473,3.606,485,2.787,488,2.467,536,5.453,616,4.912,715,4.256,723,2.825,1166,3.421,1170,5.276,1171,3.397,1172,6.198,1173,6.198,1174,3.894,1175,3.894,1176,5.399,1177,3.894,1178,3.894,1179,7.03,1180,3.894,1181,3.894,1182,3.894,1183,3.894,1184,3.069,1185,3.894,1186,3.894]],["title/controllers/ProductsController.html",[122,1.831,1187,2.946]],["body/controllers/ProductsController.html",[3,0.078,4,0.07,5,0.07,9,1.251,11,1.064,12,0.181,13,0.806,16,0.541,18,0.541,23,0.595,25,1.334,26,0.013,27,1.41,28,0.67,29,1.011,33,1.146,35,0.541,37,1.491,38,1.623,39,1.867,40,2.739,49,1.251,51,0.288,55,0.297,58,1.642,63,0.078,64,0.034,66,1.647,67,0.541,76,2.838,101,1.974,105,2.625,107,1.304,109,0.006,110,0.006,119,0.98,121,1.596,122,1.02,124,1.02,127,1.684,190,2.358,246,1.528,247,1.353,248,4.029,249,2.015,255,2.838,258,4.029,260,3.238,261,3.201,264,5.098,286,3.253,287,1.974,288,1.974,289,1.784,290,3.141,296,1.528,298,2.04,302,3.535,303,3.535,305,1.02,309,0.598,310,0.874,311,2.838,312,2.838,324,3.141,328,2.152,388,1.784,447,3.947,464,2.407,493,4.029,498,1.784,500,2.612,504,1.784,509,1.528,510,1.528,512,3.028,531,4.398,599,1.353,612,2.68,616,4.367,624,4.327,626,1.974,659,1.434,682,1.642,684,1.974,710,3.055,712,3.535,713,1.219,716,1.528,717,2.612,723,3.708,727,2.432,728,3.451,829,1.434,977,2.838,1038,4.222,1104,2.838,1187,2.612,1188,1.974,1189,3.912,1190,3.601,1191,3.141,1192,4.484,1193,3.601,1194,2.263,1195,2.263,1196,1.974,1197,2.263,1198,2.263,1199,3.141,1200,2.612,1201,2.263,1202,1.974,1203,4.458,1204,1.974,1205,3.141,1206,3.141,1207,1.974,1208,3.141,1209,3.141,1210,3.141,1211,2.263,1212,2.263,1213,3.451,1214,1.974,1215,1.974,1216,1.974,1217,4.484,1218,2.612,1219,2.838,1220,1.974,1221,2.263,1222,2.263,1223,3.601,1224,3.141,1225,2.263,1226,2.263,1227,2.263,1228,2.838,1229,1.974,1230,3.601,1231,3.601,1232,2.263,1233,3.141,1234,3.141,1235,3.912,1236,3.601,1237,1.974,1238,1.642,1239,1.974,1240,1.974,1241,2.263,1242,1.528,1243,2.263,1244,2.263,1245,1.974,1246,2.263,1247,1.784,1248,2.263,1249,2.263,1250,1.974,1251,4.484,1252,2.263,1253,1.974,1254,3.141,1255,1.784,1256,1.784,1257,2.838,1258,2.263,1259,2.263,1260,2.263,1261,2.263,1262,1.784,1263,2.263,1264,3.601,1265,2.263,1266,1.784,1267,2.263,1268,2.263,1269,2.263,1270,2.263]],["title/modules/ProductsModule.html",[133,1.109,149,2.573]],["body/modules/ProductsModule.html",[3,0.144,4,0.129,5,0.129,26,0.013,51,0.331,55,0.551,63,0.144,64,0.064,109,0.009,110,0.009,124,2.564,133,1.76,135,1.819,136,1.819,137,1.974,138,1.974,139,1.819,140,3.031,141,3.031,148,4.715,149,5.273,152,4.715,154,2.673,155,1.621,156,1.894,158,3.063,168,2.51,169,1.405,190,1.357,191,2.262,192,3.664,485,1.749,490,4.715,503,2.836,612,4.822,701,4.715,988,4.715,1187,4.677,1240,3.664,1271,3.664,1272,3.664,1273,4.2,1274,3.664,1275,4.715,1276,4.2,1277,4.2,1278,3.31,1279,4.961,1280,4.2,1281,3.664,1282,3.664,1283,3.664,1284,4.2,1285,4.2]],["title/injectables/ProductsService.html",[53,0.343,612,2.427]],["body/injectables/ProductsService.html",[3,0.089,4,0.08,5,0.08,12,0.209,13,0.9,14,2.007,16,1.32,18,0.962,23,0.673,25,1.508,26,0.013,27,1.275,28,0.632,29,1.073,33,1.524,37,1.591,38,3.207,49,1.254,51,0.299,53,0.339,55,0.342,63,0.089,64,0.04,66,1.624,67,1.32,73,0.842,78,1.643,79,1.434,81,1.444,86,1.559,100,1.444,107,1.248,109,0.006,110,0.006,121,2.052,169,0.872,190,2.513,239,0.688,249,2.075,260,3.111,270,1.76,274,3.171,309,1.458,328,2.936,371,1.896,414,1.975,417,1.497,430,2.484,436,1.129,437,1.175,439,0.842,446,2.167,447,4.163,490,3.994,493,3.871,498,2.055,500,2.918,503,1.76,504,2.055,509,1.76,510,1.76,531,4.703,612,2.404,616,4.438,624,3.498,625,2.404,701,4.163,704,3.563,708,3.871,709,2.274,710,3.301,712,3.871,713,1.404,715,2.055,716,1.76,717,2.918,718,2.055,721,2.055,1038,4.412,1184,2.055,1189,3.509,1191,3.509,1196,3.509,1199,3.509,1200,3.563,1213,1.76,1214,3.509,1228,3.171,1242,1.76,1262,2.055,1266,2.055,1275,4.163,1279,3.509,1283,2.274,1286,2.274,1287,4.284,1288,2.607,1289,2.607,1290,2.607,1291,2.607,1292,2.607,1293,2.607,1294,2.274,1295,2.607,1296,3.171,1297,2.607,1298,2.607,1299,2.607,1300,2.607,1301,2.607,1302,2.607]],["title/classes/RefreshTokenDto.html",[64,0.062,269,2.573]],["body/classes/RefreshTokenDto.html",[3,0.183,4,0.164,5,0.164,9,1.172,11,3.735,12,0.428,23,0.57,26,0.013,28,0.497,49,1.172,51,0.275,63,0.183,64,0.101,109,0.01,110,0.01,117,1.941,127,1.613,261,3.582,269,4.213,271,4.749,305,2.409,316,5.252,368,5.241,448,2.062,480,3.767,481,3.582,483,2.062,539,3.264,641,3.608,645,4.49,1303,4.66,1304,5.342,1305,5.342,1306,5.342]],["title/injectables/RefreshTokenProvider.html",[53,0.343,342,2.573]],["body/injectables/RefreshTokenProvider.html",[3,0.118,4,0.106,5,0.106,9,0.607,10,3.413,11,3.464,12,0.276,13,1.107,14,1.53,16,1.515,18,1.515,19,2.712,20,5.808,21,4.994,22,4.994,23,0.528,25,1.183,26,0.013,27,1.001,28,0.461,29,0.842,33,1.264,35,1.385,37,1.107,51,0.305,52,1.949,53,0.418,54,2.324,55,0.452,56,1.768,57,2.18,59,2.324,63,0.118,64,0.052,66,1.659,67,1.515,68,3.341,69,1.854,70,2.712,73,1.599,78,1.151,79,1.691,81,1.235,86,1.636,100,1.235,105,1.768,107,0.72,109,0.008,110,0.008,112,2.057,120,2.712,121,1.075,239,0.909,249,1.582,251,3.9,268,3.9,269,4.427,271,4.304,273,2.324,278,1.328,299,3.002,300,2.712,309,1.673,310,1.328,340,3.787,342,3.135,345,2.324,351,2.712,352,2.712,371,2.236,390,3.671,417,1.281,563,2.324,786,2.712,818,3.002,819,2.712,822,3.002,823,3.002,824,3.002,825,3.002,826,3.002,827,3.002,829,4.252,954,4.103,955,4.994,959,2.712,973,3.002,1307,5.054,1308,3.002,1309,4.948,1310,3.441,1311,3.441,1312,4.948,1313,3.002,1314,3.441,1315,3.441,1316,3.441,1317,3.441,1318,3.441,1319,3.441]],["title/entities/Review.html",[538,1.758,593,2.3]],["body/entities/Review.html",[3,0.157,4,0.141,5,0.141,12,0.368,23,0.815,26,0.013,28,0.724,49,1.346,51,0.249,63,0.157,64,0.07,109,0.009,110,0.009,117,1.762,121,2.105,127,2.305,190,2.582,439,1.484,464,2.245,538,2.613,593,3.418,594,5.88,595,5.88,599,3.607,602,4.377,719,5.264,798,3.418,1083,2.744,1087,4.536,1091,5.88,1099,4.075,1120,2.908,1135,3.618,1141,4.756,1162,4.004,1320,4.004,1321,6.741,1322,6.741,1323,6.034,1324,4.591,1325,4.591,1326,4.591,1327,6.034,1328,4.591,1329,4.591,1330,3.618,1331,4.591,1332,4.591,1333,4.004,1334,4.591,1335,4.591,1336,4.591]],["title/controllers/ReviewsController.html",[122,1.831,1337,2.946]],["body/controllers/ReviewsController.html",[3,0.214,4,0.192,5,0.192,26,0.012,51,0.258,55,0.82,63,0.214,64,0.095,109,0.011,110,0.011,122,2.815,124,2.815,246,4.216,622,4.922,1337,5.3,1338,5.447,1339,6.244]],["title/modules/ReviewsModule.html",[133,1.109,150,2.742]],["body/modules/ReviewsModule.html",[3,0.17,4,0.153,5,0.153,26,0.013,51,0.328,55,0.652,63,0.17,64,0.076,109,0.01,110,0.01,124,2.864,133,1.912,135,2.152,136,2.152,137,2.336,138,2.336,139,2.152,140,3.292,141,2.336,149,4.942,150,5.519,154,2.987,155,1.918,156,2.241,158,3.422,168,2.971,169,1.663,593,2.815,607,4.942,620,3.917,1278,3.917,1337,5.08,1340,4.335,1341,4.335,1342,4.97,1343,5.267,1344,4.97,1345,4.97,1346,4.97,1347,4.335,1348,4.97,1349,4.97]],["title/injectables/ReviewsService.html",[53,0.343,1343,2.742]],["body/injectables/ReviewsService.html",[3,0.162,4,0.145,5,0.145,12,0.379,13,1.376,14,1.806,16,1.13,18,1.471,23,0.656,25,1.471,26,0.013,27,1.244,28,0.573,29,1.047,33,1.207,37,1.376,38,2.773,49,1.205,51,0.299,53,0.519,55,0.62,63,0.162,64,0.072,66,1.52,67,1.13,107,0.989,109,0.009,110,0.009,239,1.248,249,1.867,270,3.191,309,1.248,371,1.824,414,3.019,590,5.292,593,4.253,607,4.876,610,5.964,615,4.122,616,5.07,618,3.191,619,4.122,620,3.725,1343,4.153,1347,4.122,1350,4.122,1351,4.726,1352,4.726,1353,4.726,1354,4.726]],["title/guards/RolesGuard.html",[0,2.427,183,2.946]],["body/guards/RolesGuard.html",[0,3.25,2,2.854,3,0.135,4,0.121,5,0.121,9,0.693,10,2.929,12,0.315,13,1.216,15,5.299,16,0.941,18,1.49,23,0.58,25,1.3,26,0.013,27,1.261,28,0.506,29,0.925,30,4.286,31,4.54,33,1.389,35,1.607,36,3.672,37,1.216,39,2.799,40,2.669,41,4.743,42,3.944,51,0.278,53,0.459,55,0.516,63,0.135,64,0.083,65,2.854,66,1.344,67,0.941,73,2.014,74,3.431,78,1.819,79,1.587,107,1.138,109,0.008,110,0.008,119,3.48,131,3.431,176,2.656,183,3.944,298,2.228,379,4.743,381,3.431,382,6.525,390,2.492,391,3.431,392,3.101,393,3.431,394,3.431,395,3.431,411,3.431,412,3.431,440,3.08,659,2.492,834,2.854,1058,4.286,1184,3.101,1355,3.431,1356,3.934,1357,3.934,1358,5.437,1359,5.437,1360,5.437,1361,4.743,1362,5.437,1363,3.101,1364,3.934,1365,3.934,1366,3.431,1367,5.437,1368,3.934,1369,3.934,1370,3.934,1371,5.437,1372,3.934,1373,3.934,1374,3.934]],["title/classes/SignInDto.html",[64,0.062,280,2.573]],["body/classes/SignInDto.html",[3,0.164,4,0.147,5,0.147,9,1.212,12,0.384,23,0.662,26,0.013,28,0.577,35,1.905,49,1.093,51,0.284,63,0.164,64,0.094,109,0.009,110,0.009,117,1.81,118,3.403,119,3.516,127,1.872,261,3.919,280,3.928,285,4.186,298,2.71,305,2.157,367,5.421,448,1.847,480,3.896,483,1.847,539,3.044,641,4.186,642,3.771,644,4.887,645,4.644,646,4.887,647,3.771,648,3.771,649,3.771,654,4.174,656,4.174,660,3.771,661,4.174,1375,4.174,1376,4.785,1377,4.785,1378,4.785]],["title/injectables/SignInProvider.html",[53,0.343,343,2.573]],["body/injectables/SignInProvider.html",[3,0.123,4,0.111,5,0.111,9,0.634,10,2.75,12,0.288,13,1.142,14,1.568,16,1.221,18,1.545,23,0.545,25,1.221,26,0.013,27,1.033,28,0.475,29,0.869,33,1.304,35,1.839,37,1.142,51,0.293,52,2.037,53,0.431,55,0.472,63,0.123,64,0.055,66,1.597,67,1.221,73,1.65,78,1.708,79,1.05,81,1.291,86,1.824,100,1.291,107,0.752,109,0.008,110,0.008,118,2.571,119,2.211,121,1.595,239,0.95,249,1.621,252,3.704,263,2.677,271,3.052,273,3.448,278,1.388,279,4.024,280,4.492,291,3.136,292,2.834,309,1.348,310,1.971,343,3.235,345,2.428,366,4.454,371,1.971,390,2.278,414,1.765,417,1.338,436,1.557,440,3.661,446,1.937,563,2.428,625,2.149,671,3.136,672,4.132,776,3.448,829,2.278,831,2.834,833,2.608,834,2.608,883,2.608,953,3.136,954,4.015,955,2.834,959,2.834,960,5.638,963,4.454,964,3.136,966,3.136,1313,3.136,1379,5.179,1380,3.136,1381,5.106,1382,3.595,1383,3.595,1384,3.595,1385,3.136,1386,3.595,1387,3.595,1388,3.595,1389,3.595,1390,3.595,1391,3.595,1392,3.595,1393,3.595,1394,3.595,1395,3.136,1396,3.595,1397,3.595,1398,3.595,1399,3.595]],["title/injectables/StoreOtpAndExpireProvider.html",[53,0.343,1400,2.573]],["body/injectables/StoreOtpAndExpireProvider.html",[3,0.14,4,0.126,5,0.126,9,0.72,12,0.327,13,1.248,14,1.678,16,0.976,18,1.633,23,0.595,25,1.334,26,0.013,27,1.129,28,0.519,29,0.95,33,1.426,35,1.865,37,1.248,49,1.12,51,0.282,53,0.471,55,0.536,63,0.14,64,0.097,66,1.571,67,0.976,73,1.803,78,1.366,79,1.629,81,1.466,86,1.153,100,1.466,107,0.854,109,0.009,110,0.009,169,1.366,239,1.079,249,1.735,263,3.645,278,1.576,309,1.079,371,2.154,417,1.52,426,4.083,429,2.587,430,2.977,432,3.799,436,1.768,437,1.841,438,2.313,439,1.32,440,2.313,441,2.441,442,3.562,444,2.963,445,3.562,446,2.2,602,2.963,798,3.869,1400,3.535,1401,5.544,1402,3.562,1403,5.958,1404,5.579,1405,4.084,1406,5.579,1407,4.084,1408,5.579,1409,4.084,1410,3.562,1411,4.084]],["title/entities/Subscriber.html",[538,1.758,640,2.427]],["body/entities/Subscriber.html",[3,0.18,4,0.162,5,0.162,9,0.926,12,0.421,23,0.702,26,0.013,28,0.669,39,2.74,40,3.231,49,1.16,51,0.217,63,0.18,64,0.08,109,0.01,110,0.01,117,1.921,118,3.111,121,2.244,127,1.987,222,3.728,439,1.698,464,2.449,538,3.261,640,4.502,1083,3.141,1087,4.169,1120,4.552,1218,4.774,1247,5.188,1330,4.142,1412,4.584,1413,5.188,1414,5.741,1415,5.741,1416,5.741,1417,5.255,1418,5.255]],["title/controllers/SubscribersController.html",[122,1.831,1419,2.946]],["body/controllers/SubscribersController.html",[3,0.214,4,0.192,5,0.192,26,0.012,51,0.258,55,0.82,63,0.214,64,0.095,109,0.011,110,0.011,122,2.815,124,2.815,246,4.216,1419,5.3,1420,5.447,1421,6.244,1422,6.244]],["title/modules/SubscribersModule.html",[133,1.109,151,2.742]],["body/modules/SubscribersModule.html",[3,0.177,4,0.159,5,0.159,26,0.013,51,0.326,55,0.677,63,0.177,64,0.079,109,0.01,110,0.01,124,2.932,133,1.945,135,2.233,136,2.233,137,2.424,138,2.424,139,2.233,140,3.349,141,2.424,146,4.989,151,5.462,154,3.057,155,1.99,156,2.325,158,3.503,168,3.082,169,1.725,640,3.082,1419,5.168,1423,4.498,1424,5.156,1425,4.498,1426,5.318,1427,5.156,1428,5.156,1429,4.498,1430,5.156,1431,5.156,1432,5.156]],["title/injectables/SubscribersService.html",[53,0.343,1426,2.742]],["body/injectables/SubscribersService.html",[3,0.122,4,0.11,5,0.11,9,0.628,12,0.286,13,1.135,14,1.867,16,1.213,18,1.539,23,0.63,25,1.412,26,0.013,27,1.195,28,0.55,29,1.005,33,1.644,37,1.44,51,0.292,53,0.428,55,0.468,63,0.122,64,0.054,66,1.591,67,1.213,73,1.151,78,1.697,79,1.481,81,1.821,86,1.667,100,1.821,107,1.061,109,0.008,110,0.008,121,1.584,133,1.385,169,1.192,239,0.941,249,1.93,260,4.077,278,1.958,309,1.34,310,2.28,328,4.226,417,1.887,430,2.832,436,1.542,437,1.606,439,1.151,446,2.732,464,2.198,618,2.405,636,5.128,640,4.641,672,4.212,883,2.584,921,6.486,1385,3.107,1426,3.425,1429,3.107,1433,3.107,1434,5.072,1435,5.072,1436,3.562,1437,3.562,1438,5.906,1439,5.072,1440,3.562,1441,5.072,1442,5.906,1443,5.072,1444,3.562,1445,5.072,1446,5.906,1447,3.562,1448,3.562,1449,3.562,1450,3.562,1451,3.562,1452,3.562]],["title/injectables/UpdateProductProvider.html",[53,0.343,1275,2.573]],["body/injectables/UpdateProductProvider.html",[3,0.099,4,0.089,5,0.089,9,0.511,12,0.232,13,0.975,14,1.384,16,1.042,18,1.042,23,0.465,25,1.042,26,0.013,27,0.882,28,0.406,29,0.742,37,0.648,39,2.921,40,1.422,45,1.561,49,0.924,50,5.081,51,0.272,53,0.368,55,0.38,63,0.099,64,0.044,67,1.042,73,1.409,78,1.754,79,1.53,81,1.881,86,1.646,92,1.732,93,1.732,94,1.488,95,1.732,96,1.641,97,1.732,98,1.732,99,1.732,100,1.565,107,0.912,109,0.007,110,0.007,121,1.637,169,0.969,190,2.363,222,1.641,239,0.765,249,1.431,278,1.118,309,1.151,310,1.118,417,1.622,423,2.102,430,2.604,436,1.888,437,1.306,439,0.936,459,3.321,485,1.206,492,2.284,503,1.956,522,3.163,532,1.732,536,3.539,625,1.732,630,1.956,631,1.956,632,1.956,633,1.835,634,1.956,635,1.956,669,1.956,683,2.284,705,2.527,708,3.436,717,2.102,721,2.284,761,2.102,776,1.956,1038,4.319,1166,4.319,1168,2.527,1170,2.284,1228,3.436,1242,1.956,1245,4.572,1275,2.762,1287,3.803,1294,3.803,1296,4.596,1453,4.572,1454,2.897,1455,2.897,1456,2.897,1457,4.359,1458,2.527,1459,2.897,1460,4.359,1461,4.359,1462,4.359,1463,7.312,1464,4.359,1465,2.897,1466,4.359,1467,2.897,1468,4.359,1469,2.897,1470,4.359,1471,2.897,1472,4.359,1473,2.897,1474,4.359,1475,2.897,1476,4.359,1477,2.897,1478,4.359,1479,2.897,1480,2.897,1481,2.897,1482,4.359,1483,2.897,1484,2.897,1485,2.897,1486,2.897,1487,2.897,1488,2.897,1489,4.359,1490,2.897,1491,4.359,1492,2.897,1493,4.359,1494,2.897,1495,4.359,1496,2.897,1497,2.897,1498,2.897]],["title/injectables/UploadToAwsProvider.html",[53,0.343,1499,2.573]],["body/injectables/UploadToAwsProvider.html",[3,0.121,4,0.109,5,0.246,9,0.625,12,0.284,13,1.13,14,1.555,16,1.535,18,1.535,23,0.628,25,1.408,26,0.013,27,1.55,28,0.548,29,1.002,33,1.803,37,1.436,38,1.597,49,0.625,51,0.281,53,0.426,55,0.465,56,1.82,63,0.121,64,0.054,66,1.455,67,0.847,69,1.908,73,2.194,75,4.407,78,1.185,79,1.719,81,1.272,86,1,100,1.272,107,1.232,109,0.008,110,0.008,161,4.904,239,0.936,249,1.608,278,1.367,286,2.57,309,0.936,310,1.367,417,1.318,436,1.534,446,1.908,509,2.392,510,4.765,525,2.792,545,5.386,686,3.09,748,3.09,789,3.982,790,2.392,804,5.6,829,2.244,879,3.982,968,3.982,1499,3.201,1500,5.6,1501,3.09,1502,5.052,1503,5.052,1504,3.543,1505,5.052,1506,3.543,1507,4.407,1508,4.641,1509,5.052,1510,3.543,1511,5.052,1512,5.6,1513,3.09,1514,3.543,1515,3.543,1516,4.407,1517,3.543,1518,3.09,1519,3.543,1520,3.543,1521,3.543,1522,3.543,1523,3.543,1524,3.543,1525,3.543,1526,3.543,1527,3.543,1528,3.543,1529,3.543,1530,5.052,1531,3.543,1532,3.543,1533,3.543,1534,3.543]],["title/modules/UploadsModule.html",[133,1.109,152,2.573]],["body/modules/UploadsModule.html",[3,0.182,4,0.163,5,0.163,26,0.013,51,0.299,55,0.697,63,0.182,64,0.081,109,0.01,110,0.01,133,1.972,135,2.301,136,2.301,137,2.498,138,2.498,139,2.301,140,3.395,141,3.395,152,5.197,154,3.115,155,2.051,156,2.395,496,5.287,1499,5.027,1535,4.635,1536,4.635,1537,4.635,1538,5.313,1539,5.313,1540,5.313,1541,4.635]],["title/injectables/UploadsService.html",[53,0.343,496,2.573]],["body/injectables/UploadsService.html",[3,0.143,4,0.128,5,0.238,12,0.334,13,1.265,14,1.695,16,1.352,18,1.646,23,0.603,25,1.352,26,0.013,27,1.298,28,0.598,29,0.962,33,1.444,37,1.265,51,0.265,53,0.477,55,0.546,56,2.139,63,0.143,64,0.063,66,1.586,67,1.352,69,2.243,73,1.346,78,2.147,79,1.65,81,1.495,86,1.175,100,1.495,107,0.871,109,0.009,110,0.009,161,5.218,239,1.1,249,1.753,278,1.607,309,1.493,310,1.607,371,1.607,417,2.104,496,3.581,502,3.632,510,4.334,525,5.059,545,4.994,669,2.811,1499,4.811,1507,4.931,1508,4.456,1512,3.632,1518,3.632,1541,3.632,1542,3.632,1543,5.653,1544,4.163,1545,4.163,1546,5.653,1547,4.163,1548,6.419,1549,4.163,1550,4.163,1551,4.163,1552,4.163,1553,4.163,1554,4.163,1555,4.163,1556,4.163,1557,4.163,1558,4.163,1559,4.163]],["title/entities/User.html",[35,0.971,538,1.758]],["body/entities/User.html",[3,0.096,4,0.086,5,0.086,9,0.494,12,0.224,23,0.806,26,0.013,28,0.752,29,1.353,35,1.551,39,3.34,40,2.814,49,1.402,51,0.255,63,0.096,64,0.043,109,0.006,110,0.006,117,1.24,118,2.223,119,3.078,121,1.604,127,2.281,222,2.407,263,2.315,298,2.908,439,0.905,444,3.724,464,1.581,538,2.482,657,2.443,658,2.443,659,2.692,798,2.407,859,2.207,968,3.349,1066,4.479,1067,4.479,1068,4.479,1070,4.479,1071,4.479,1072,4.479,1073,4.479,1083,1.674,1087,4.787,1099,2.869,1119,2.207,1120,1.774,1218,3.082,1224,5,1247,6.2,1330,5.807,1413,3.349,1414,6.862,1415,6.772,1416,7.024,1560,2.443,1561,5.134,1562,2.8,1563,2.8,1564,2.8,1565,2.8,1566,2.8,1567,2.8,1568,2.8,1569,2.8,1570,4.249,1571,2.8,1572,5.731,1573,2.8,1574,2.8,1575,2.8,1576,2.8,1577,2.8,1578,2.8,1579,2.8]],["title/controllers/UsersController.html",[122,1.831,1580,2.946]],["body/controllers/UsersController.html",[3,0.08,4,0.072,5,0.072,9,1.363,11,2.148,12,0.187,13,0.824,16,0.557,18,0.557,23,0.554,25,1.242,26,0.013,27,1.486,28,0.665,29,1.072,35,1.915,37,1.41,39,2.623,40,3.093,49,1.214,51,0.278,55,0.306,63,0.08,64,0.035,66,1.284,67,0.557,76,4.742,105,3.09,107,1.259,109,0.006,110,0.006,112,3.105,114,1.836,119,1.008,121,1.767,122,1.05,124,1.05,127,1.568,246,1.573,248,4.742,249,1.952,255,3.602,258,4.094,260,3.29,261,3.519,264,5.789,286,2.672,289,2.903,298,1.319,302,4.094,303,4.094,305,1.05,309,0.615,311,3.602,312,3.602,328,2.202,440,3.81,464,2.431,512,3.086,599,1.392,659,1.476,670,2.672,713,1.255,716,1.573,723,3.768,727,2.487,728,3.507,814,5.43,819,1.836,869,3.29,954,2.798,977,2.903,1063,4.255,1104,1.836,1200,3.315,1202,2.032,1203,4.531,1204,2.032,1205,3.213,1206,3.213,1207,2.032,1208,3.213,1209,3.213,1210,3.213,1213,3.507,1215,3.213,1216,2.032,1218,3.768,1219,4.094,1220,3.213,1229,2.032,1233,4.531,1234,3.986,1235,3.986,1238,1.69,1239,2.032,1242,1.573,1253,3.213,1254,5.248,1255,3.602,1256,3.602,1257,4.742,1266,2.903,1366,3.213,1580,2.672,1581,2.032,1582,3.213,1583,3.684,1584,3.684,1585,4.569,1586,2.032,1587,3.684,1588,2.329,1589,2.329,1590,2.329,1591,3.213,1592,3.684,1593,2.329,1594,2.329,1595,2.329,1596,2.329,1597,4.569,1598,2.329,1599,2.329,1600,2.329,1601,2.329,1602,2.329,1603,2.329,1604,2.032,1605,2.903,1606,1.836,1607,2.329,1608,2.329,1609,2.329,1610,2.329,1611,2.329,1612,2.329,1613,2.329,1614,2.329,1615,2.329,1616,2.329,1617,2.329,1618,2.329]],["title/modules/UsersModule.html",[133,1.109,153,2.573]],["body/modules/UsersModule.html",[3,0.134,4,0.121,5,0.121,26,0.013,35,1.487,51,0.332,55,0.514,63,0.134,64,0.06,109,0.008,110,0.008,124,2.445,133,1.698,135,1.696,136,1.696,137,1.842,138,1.842,139,1.696,140,2.923,141,2.923,145,3.435,153,5.264,154,2.549,155,2.093,156,1.766,158,2.921,168,2.342,169,1.311,263,2.804,345,3.661,424,4.617,426,3.241,438,2.219,662,4.617,766,4.617,768,3.435,778,4.617,788,4.617,954,4.296,988,4.617,1278,3.088,1281,3.417,1282,5.424,1400,4.617,1580,4.511,1604,3.417,1619,3.417,1620,3.417,1621,3.918,1622,3.417,1623,3.918,1624,3.918,1625,3.918,1626,3.417,1627,3.417,1628,3.918,1629,3.417,1630,4.73,1631,3.417,1632,3.918,1633,3.918]],["title/injectables/UsersService.html",[53,0.343,954,2.187]],["body/injectables/UsersService.html",[3,0.056,4,0.051,5,0.051,9,0.489,11,3.207,12,0.132,13,0.62,14,2.002,16,1.363,18,1.008,23,0.655,25,1.466,26,0.013,27,1.241,28,0.571,29,1.044,33,1.768,35,1.945,37,1.568,38,1.249,45,0.886,49,1.25,51,0.282,53,0.356,55,0.216,63,0.056,64,0.025,66,1.732,67,1.363,73,0.531,78,1.574,79,1.584,81,1.689,86,1.609,92,0.983,93,0.983,94,0.845,95,0.983,96,0.932,97,0.983,98,0.983,99,0.983,100,1.513,105,3.318,107,1.241,109,0.004,110,0.004,118,2.209,121,1.916,133,0.757,155,2.367,169,0.55,222,0.932,239,0.434,249,2.07,259,2.01,260,1.042,263,2.844,278,2.201,309,1.506,310,1.07,328,2.147,364,2.417,371,2.201,414,2.069,417,1.569,423,1.193,424,3.438,426,3.77,428,2.417,430,1.959,432,2.52,433,2.417,435,2.417,436,1.2,437,0.741,438,0.932,439,0.531,440,2.388,441,0.983,443,1.296,446,1.493,558,2.417,618,1.11,625,3.049,630,1.11,631,1.11,632,1.11,633,1.042,634,1.11,635,1.11,639,2.01,650,3.232,662,2.67,665,2.417,667,2.417,669,1.11,670,2.605,704,2.01,706,3.408,713,0.886,716,1.11,718,1.296,720,1.434,722,1.193,727,1.11,728,1.11,761,1.193,763,1.434,766,3.612,768,2.275,775,1.434,776,1.11,778,3.759,780,2.417,782,2.417,788,2.67,789,4.021,790,1.11,798,3.229,814,2.831,869,2.67,954,1.493,970,2.417,1063,3.85,1200,1.193,1213,3.85,1242,1.11,1296,1.296,1395,2.417,1400,2.67,1403,2.417,1458,1.434,1582,2.417,1586,2.417,1591,2.417,1626,1.434,1627,1.434,1629,1.434,1630,2.417,1631,1.434,1634,1.434,1635,2.771,1636,2.771,1637,2.771,1638,2.771,1639,1.644,1640,4.215,1641,3.591,1642,1.644,1643,3.591,1644,1.644,1645,1.644,1646,1.644,1647,2.771,1648,2.771,1649,1.644,1650,2.771,1651,1.644,1652,2.771,1653,1.644,1654,2.771,1655,1.644,1656,2.771,1657,1.644,1658,2.771,1659,1.644,1660,1.644,1661,1.644,1662,1.644,1663,1.644,1664,1.644,1665,1.644,1666,1.644,1667,1.644,1668,1.644,1669,1.644,1670,1.644,1671,1.644,1672,1.644,1673,1.644]],["title/coverage.html",[1674,4.381]],["body/coverage.html",[0,2.856,1,1.685,5,0.077,6,2.177,7,1.81,8,2.177,26,0.013,28,0.232,33,0.638,35,1.29,53,0.679,61,1.967,64,0.116,79,0.728,109,0.006,110,0.006,111,2.626,112,1.492,114,1.967,115,2.177,122,2.792,123,1.81,125,2.177,129,1.581,139,1.08,155,0.963,157,1.967,177,1.81,179,1.967,181,1.81,183,1.81,190,1.544,191,1.344,193,1.581,199,1.967,240,2.177,244,1.81,245,2.177,247,1.492,254,1.581,263,2.154,269,1.581,280,1.581,293,1.581,340,1.492,341,1.581,342,1.581,343,1.581,357,2.177,367,1.967,368,1.967,376,2.177,389,1.967,424,1.581,425,2.177,426,2.324,427,3.065,447,1.581,449,2.177,473,1.344,484,1.685,485,2.579,486,1.967,490,1.581,491,2.177,492,3.065,496,1.581,506,1.581,532,4.741,538,2.682,577,3.065,590,1.685,591,2.177,592,2.177,593,1.413,607,1.581,608,2.177,609,2.177,612,1.492,636,1.81,637,2.177,638,2.177,640,1.492,650,1.581,651,2.177,652,3.642,662,1.581,663,2.177,664,2.177,672,1.413,680,2.177,681,2.177,701,1.581,702,2.177,703,2.177,706,1.492,710,1.492,713,1.344,766,1.581,767,3.466,768,2.463,769,2.177,778,1.581,779,2.177,788,1.581,802,2.177,803,2.177,837,1.81,838,3.065,839,3.466,856,1.413,857,1.581,861,1.81,862,3.065,869,1.581,906,2.177,922,1.967,946,2.177,950,2.177,951,2.177,954,1.344,974,2.177,994,2.177,1032,2.177,1038,1.581,1039,2.177,1051,1.81,1054,1.967,1063,1.685,1064,2.177,1084,2.177,1130,2.177,1144,1.685,1149,2.177,1150,2.177,1151,2.177,1166,1.581,1170,1.967,1171,2.177,1187,1.81,1188,2.177,1219,1.967,1238,1.81,1275,1.581,1286,2.177,1303,2.177,1307,2.177,1308,2.177,1320,2.177,1337,1.81,1338,2.177,1343,1.685,1350,2.177,1355,2.177,1363,1.967,1375,2.177,1379,2.177,1380,2.177,1400,1.581,1401,2.177,1402,2.177,1410,2.177,1412,2.177,1413,1.967,1419,1.81,1420,2.177,1426,1.685,1433,2.177,1453,2.177,1499,1.581,1500,2.177,1501,2.177,1542,2.177,1560,2.177,1580,1.81,1581,2.177,1605,1.967,1606,1.967,1634,2.177,1674,1.967,1675,2.177,1676,2.495,1677,3.888,1678,6.689,1679,8.28,1680,7.37,1681,6.193,1682,3.392,1683,2.177,1684,2.177,1685,2.177,1686,2.177,1687,4.777,1688,7.456,1689,4.777,1690,6.467,1691,2.177,1692,2.177,1693,6.467,1694,2.495,1695,3.888,1696,2.495,1697,2.495,1698,2.495,1699,2.495,1700,2.495,1701,2.495,1702,2.495,1703,2.495,1704,3.888,1705,3.888,1706,2.495,1707,2.495,1708,2.495,1709,2.495,1710,2.495]],["title/dependencies.html",[136,2.117,1711,2.951]],["body/dependencies.html",[26,0.013,55,0.707,56,2.767,57,3.413,58,3.908,64,0.102,109,0.01,110,0.01,136,2.333,169,1.802,176,3.638,305,2.429,387,4.247,405,3.908,439,1.741,477,4.247,483,2.08,877,3.908,878,4.247,1237,4.7,1508,4.247,1513,4.7,1516,4.7,1712,5.387,1713,5.387,1714,5.387,1715,6.684,1716,5.387,1717,6.684,1718,5.387,1719,5.387,1720,5.387,1721,5.387,1722,5.387,1723,5.387,1724,5.387,1725,5.387,1726,5.387,1727,5.387,1728,5.387,1729,5.387,1730,5.387,1731,5.387,1732,5.387,1733,5.387,1734,5.387,1735,5.387]],["title/miscellaneous/enumerations.html",[1736,2.143,1737,4.264]],["body/miscellaneous/enumerations.html",[12,0.489,26,0.012,35,1.724,109,0.011,110,0.011,119,3.122,296,4.869,313,5.23,388,4.812,659,3.868,660,5.683,1255,4.812,1736,3.868,1737,5.326,1738,6.105,1739,7.927,1740,6.105,1741,6.105]],["title/miscellaneous/functions.html",[1736,2.143,1742,4.264]],["body/miscellaneous/functions.html",[12,0.512,26,0.011,33,1.632,109,0.011,110,0.011,139,3.385,1692,5.573,1736,4.048,1742,5.573,1743,6.389,1744,6.389,1745,5.573]],["title/index.html",[12,0.271,1213,2.285,1746,3.383]],["body/index.html",[4,0.13,9,0.742,26,0.013,96,2.384,109,0.009,110,0.009,156,3.118,225,3.672,228,3.672,261,3.477,390,2.666,418,3.318,430,1.752,511,3.053,567,3.672,633,3.608,743,3.318,790,4.359,877,5.017,885,3.672,928,5.451,1256,3.318,1262,3.318,1333,6.033,1674,3.318,1675,3.672,1745,5.63,1747,4.209,1748,4.209,1749,6.455,1750,4.209,1751,4.209,1752,4.209,1753,4.209,1754,4.209,1755,4.209,1756,4.209,1757,6.916,1758,4.209,1759,7.615,1760,4.209,1761,7.615,1762,4.209,1763,5.695,1764,4.209,1765,4.209,1766,6.455,1767,4.209,1768,5.695,1769,4.209,1770,4.209,1771,4.209,1772,4.209,1773,4.209,1774,4.209,1775,4.209,1776,4.209,1777,5.695,1778,4.209,1779,6.455,1780,4.209,1781,4.209,1782,4.209,1783,4.209,1784,4.209,1785,4.209,1786,4.209,1787,6.455,1788,4.209,1789,4.209,1790,4.209,1791,5.695,1792,4.209,1793,4.209,1794,4.209,1795,4.209,1796,4.209,1797,4.209,1798,4.209,1799,4.209,1800,5.695,1801,4.209,1802,4.209,1803,4.209,1804,5.695,1805,4.209,1806,4.209,1807,4.209,1808,5.695,1809,5.695,1810,4.209,1811,4.209,1812,4.209,1813,4.209,1814,4.209,1815,4.209,1816,4.209,1817,4.209,1818,4.209,1819,3.672,1820,4.209,1821,4.209,1822,4.209,1823,4.209,1824,4.209,1825,4.209,1826,3.672]],["title/modules.html",[135,2.406]],["body/modules.html",[26,0.01,109,0.01,110,0.01,134,4.032,135,2.407,145,3.522,146,3.522,147,3.754,148,3.522,149,3.522,150,3.754,151,3.754,152,3.522,153,3.522,928,6.589,988,3.522,1827,8.359,1828,8.359,1829,8.359]],["title/overview.html",[1830,4.848]],["body/overview.html",[2,2.254,26,0.013,109,0.007,110,0.007,113,2.45,124,1.401,129,3.462,133,0.849,134,5.895,135,1.346,136,1.346,137,1.461,138,1.461,139,1.346,140,1.461,141,1.461,142,2.711,143,2.711,144,2.711,145,4.888,146,4.42,147,4.35,148,4.42,149,5.086,150,4.939,151,4.711,152,4.633,153,5.109,154,2.159,155,1.2,156,1.401,239,0.821,293,3.462,338,2.711,339,2.711,340,3.267,341,3.462,342,3.462,343,3.462,424,3.462,448,1.2,490,3.462,496,4.42,607,3.462,612,4.17,662,3.462,672,3.952,701,3.462,706,4.17,766,3.462,778,3.462,788,3.462,870,2.711,871,2.711,872,2.711,954,3.758,988,4.42,989,2.711,990,2.711,991,2.711,1083,1.858,1096,2.711,1142,2.711,1143,2.711,1144,3.69,1163,2.711,1164,2.711,1165,2.711,1166,4.42,1250,4.007,1271,2.711,1272,2.711,1274,2.711,1275,3.462,1340,2.711,1341,2.711,1343,3.69,1400,3.462,1423,2.711,1425,2.711,1426,3.69,1499,3.462,1535,2.711,1536,2.711,1537,2.711,1619,2.711,1620,2.711,1622,2.711,1830,2.711,1831,3.108,1832,3.108,1833,3.108,1834,3.108]],["title/properties.html",[117,1.427,1711,2.951]],["body/properties.html",[9,1.126,26,0.013,109,0.011,110,0.011,117,1.865,1819,5.573,1826,5.573,1835,6.389,1836,6.389,1837,6.389]],["title/miscellaneous/variables.html",[1736,2.143,1838,4.264]],["body/miscellaneous/variables.html",[12,0.361,26,0.013,28,0.662,31,3.042,35,1.852,45,3.21,49,1.177,50,3.042,61,4.698,66,1.113,73,1.926,89,3.929,91,3.929,107,0.942,109,0.009,110,0.009,112,3.562,119,1.95,157,3.551,197,3.929,198,3.929,199,4.698,200,3.929,247,3.992,296,4.024,313,5.705,377,3.929,389,4.698,396,4.758,409,5.199,922,4.698,1238,5.62,1257,3.551,1361,5.199,1363,4.698,1605,4.698,1606,3.551,1682,3.929,1683,3.929,1684,5.199,1685,3.929,1686,3.929,1691,3.929,1736,2.854,1838,3.929,1839,4.505,1840,4.505,1841,5.959,1842,4.505,1843,4.505,1844,4.505,1845,4.505,1846,4.505,1847,5.959,1848,4.505,1849,4.505,1850,4.505,1851,4.505,1852,4.505,1853,4.505,1854,4.505,1855,6.679,1856,4.505,1857,4.505,1858,4.505,1859,4.505,1860,4.505]],["title/routes.html",[1861,4.848]],["body/routes.html",[26,0.012,109,0.012,110,0.012,1861,5.765]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["0",{"_index":532,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/FindAllProductsProvider.html":{},"classes/PaginationQueryDto.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"injectables/UpdateProductProvider.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1836,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":1726,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1732,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":1734,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1725,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1693,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1696,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1698,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1677,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1690,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1695,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1694,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1701,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1706,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":599,"title":{},"body":{"classes/CreateReviewDto.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"controllers/ProductsController.html":{},"entities/Review.html":{},"controllers/UsersController.html":{}}}],["1.0.0",{"_index":693,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["1.1.26",{"_index":1713,"title":{},"body":{"dependencies.html":{}}}],["1.4.12",{"_index":1721,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1680,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1104,"title":{},"body":{"entities/Product.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["10.0.0",{"_index":1715,"title":{},"body":{"dependencies.html":{}}}],["10.4.15",{"_index":1718,"title":{},"body":{"dependencies.html":{}}}],["10/11",{"_index":1708,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1679,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":1411,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["1000000",{"_index":1393,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["10})@apiquery({name",{"_index":1207,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["11",{"_index":1831,"title":{},"body":{"overview.html":{}}}],["11.0.0",{"_index":1717,"title":{},"body":{"dependencies.html":{}}}],["11.0.6",{"_index":1719,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":1735,"title":{},"body":{"dependencies.html":{}}}],["12345",{"_index":1253,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["12345'})@apiheaders(['undefined",{"_index":1220,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["16",{"_index":1833,"title":{},"body":{"overview.html":{}}}],["17.13.3",{"_index":1728,"title":{},"body":{"dependencies.html":{}}}],["1})@apiheaders(['undefined",{"_index":1594,"title":{},"body":{"controllers/UsersController.html":{}}}],["1})@auth(authtype.none)@get",{"_index":1211,"title":{},"body":{"controllers/ProductsController.html":{}}}],["2",{"_index":1096,"title":{},"body":{"entities/Product.html":{},"overview.html":{}}}],["2.0.2",{"_index":1714,"title":{},"body":{"dependencies.html":{}}}],["2.1692.0",{"_index":1722,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1687,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1705,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":1700,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1570,"title":{},"body":{"entities/User.html":{}}}],["200",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["204",{"_index":1587,"title":{},"body":{"controllers/UsersController.html":{}}}],["2343",{"_index":949,"title":{},"body":{"classes/OtpSigninDto.html":{}}}],["2343})@isint()@isnotempty",{"_index":947,"title":{},"body":{"classes/OtpSigninDto.html":{}}}],["2354",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{}}}],["27",{"_index":1832,"title":{},"body":{"overview.html":{}}}],["3",{"_index":1834,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":1688,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1703,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1709,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1699,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":1716,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1681,"title":{},"body":{"coverage.html":{}}}],["465",{"_index":894,"title":{},"body":{"modules/MailModule.html":{}}}],["5",{"_index":602,"title":{},"body":{"classes/CreateReviewDto.html":{},"entities/Product.html":{},"entities/Review.html":{},"injectables/StoreOtpAndExpireProvider.html":{}}}],["5.1.1",{"_index":1724,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1689,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1250,"title":{},"body":{"controllers/ProductsController.html":{},"overview.html":{}}}],["60",{"_index":1410,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{},"coverage.html":{}}}],["66",{"_index":1704,"title":{},"body":{"coverage.html":{}}}],["7.8.1",{"_index":1733,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":1702,"title":{},"body":{"coverage.html":{}}}],["8.13.3",{"_index":1730,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":1697,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1707,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":1415,"title":{},"body":{"entities/Subscriber.html":{},"entities/User.html":{}}}],["_",{"_index":101,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/ProductsController.html":{}}}],["accept",{"_index":102,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["access",{"_index":10,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{}}}],["accesstoken",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{}}}],["accesstokenguard",{"_index":1,"title":{"guards/AccessTokenGuard.html":{}},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["accounttype",{"_index":657,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["active",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activeuser",{"_index":1605,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["activeuserdata",{"_index":112,"title":{"interfaces/ActiveUserData.html":{}},"body":{"interfaces/ActiveUserData.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ad",{"_index":1336,"title":{},"body":{"entities/Review.html":{}}}],["adapter",{"_index":903,"title":{},"body":{"modules/MailModule.html":{}}}],["address",{"_index":644,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["admin",{"_index":660,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"miscellaneous/enumerations.html":{}}}],["admin'})@isenum(role)@isnotempty",{"_index":654,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["allow",{"_index":1369,"title":{},"body":{"guards/RolesGuard.html":{}}}],["already",{"_index":1388,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["amazing",{"_index":1814,"title":{},"body":{"index.html":{}}}],["api",{"_index":1210,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apibody",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes",{"_index":1232,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiconsumes('multipart/form",{"_index":1193,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiheaders",{"_index":1233,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apioperation",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apiparam",{"_index":1234,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":645,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/OtpSigninDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{}}}],["apiproperty({description",{"_index":641,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/OtpSigninDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{}}}],["apiquery",{"_index":1235,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apiresponse",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apiresponse({status",{"_index":1202,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('auth",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiversion",{"_index":692,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["app",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["app.controller",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":130,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["app_interceptor",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["appconfig",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":123,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":1791,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1755,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":134,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":129,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":407,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{}}}],["array.from",{"_index":1246,"title":{},"body":{"controllers/ProductsController.html":{}}}],["async",{"_index":14,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}}}],["asynchrousnously",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["audience",{"_index":822,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["auth",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"modules/MailModule.html":{},"controllers/ProductsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth(authtype.none",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{}}}],["auth.controller",{"_index":346,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/config/jwt.config",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/access",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/authentication/authentication.guard",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/roles/roles.guard",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["auth_type_key",{"_index":389,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":244,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticating",{"_index":385,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authentication",{"_index":377,"title":{},"body":{"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["authenticationguard",{"_index":181,"title":{"guards/AuthenticationGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["authenticationguard.defaultauthtype",{"_index":413,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authmodule",{"_index":145,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1819,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":1254,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["authservice",{"_index":293,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authtype",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"controllers/ProductsController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["authtype.bearer",{"_index":397,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtype.none",{"_index":402,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtypeguardmap",{"_index":378,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtypes",{"_index":409,"title":{},"body":{"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["authtypes.map((type",{"_index":415,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["autoloadentities",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":86,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}}}],["aws",{"_index":1508,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"dependencies.html":{}}}],["aws.provider",{"_index":1541,"title":{},"body":{"modules/UploadsModule.html":{},"injectables/UploadsService.html":{}}}],["aws.provider.ts",{"_index":1501,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"coverage.html":{}}}],["aws.provider.ts:25",{"_index":1506,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["aws.provider.ts:49",{"_index":1510,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["aws.provider.ts:8",{"_index":1504,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["back",{"_index":932,"title":{},"body":{"injectables/MailService.html":{}}}],["backers",{"_index":1815,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":669,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('mime",{"_index":1554,"title":{},"body":{"injectables/UploadsService.html":{}}}],["badrequestexception('product",{"_index":1459,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["badrequestexception('the",{"_index":777,"title":{},"body":{"injectables/FindOneByIdProvider.html":{}}}],["badrequestexception('user",{"_index":1672,"title":{},"body":{"injectables/UsersService.html":{}}}],["base",{"_index":840,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["based",{"_index":105,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/OtpSigninProvider.html":{},"controllers/ProductsController.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["baseurl",{"_index":1016,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["bcrypt",{"_index":1723,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":1255,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{}}}],["before",{"_index":697,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["beforeinsert",{"_index":1117,"title":{},"body":{"entities/Product.html":{}}}],["beforeupdate",{"_index":1118,"title":{},"body":{"entities/Product.html":{}}}],["best",{"_index":938,"title":{},"body":{"injectables/MailService.html":{}}}],["between",{"_index":719,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"entities/Review.html":{}}}],["board",{"_index":1807,"title":{},"body":{"index.html":{}}}],["body",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"injectables/UploadToAwsProvider.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":1058,"title":{},"body":{"classes/PatchProductVariantDto.html":{},"entities/ProductVariant.html":{},"guards/RolesGuard.html":{}}}],["boostrap",{"_index":1744,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PaginationModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["brand",{"_index":450,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["browse",{"_index":1829,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1827,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":1518,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["building",{"_index":1750,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":689,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["canactivate",{"_index":15,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":30,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["cascade",{"_index":1113,"title":{},"body":{"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{}}}],["cascade'})@joincolumn",{"_index":1138,"title":{},"body":{"entities/ProductImage.html":{},"entities/ProductVariant.html":{}}}],["catch",{"_index":100,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}}}],["category",{"_index":451,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["changeuserpasswordprovider",{"_index":1661,"title":{},"body":{"injectables/UsersService.html":{}}}],["channel",{"_index":1782,"title":{},"body":{"index.html":{}}}],["check",{"_index":1333,"title":{},"body":{"entities/Review.html":{},"index.html":{}}}],["check('\"stars",{"_index":1335,"title":{},"body":{"entities/Review.html":{}}}],["checking",{"_index":34,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["checkwhereoptions",{"_index":758,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["city",{"_index":1066,"title":{},"body":{"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["class",{"_index":64,"title":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/OtpSigninDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{}},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":448,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/OtpSigninDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{},"overview.html":{}}}],["clear",{"_index":970,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/UsersService.html":{}}}],["clearing",{"_index":435,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/UsersService.html":{}}}],["clearotpandexpirytime",{"_index":428,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/UsersService.html":{}}}],["clearotpandexpirytime(user",{"_index":433,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/UsersService.html":{}}}],["clearotpandexpirytimeprovider",{"_index":424,"title":{"injectables/ClearOtpAndExpiryTimeProvider.html":{}},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["clothtype",{"_index":452,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["cluster_appmodule",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":338,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":339,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":870,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":871,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":872,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_paginationmodule",{"_index":989,"title":{},"body":{"modules/PaginationModule.html":{},"overview.html":{}}}],["cluster_paginationmodule_exports",{"_index":991,"title":{},"body":{"modules/PaginationModule.html":{},"overview.html":{}}}],["cluster_paginationmodule_providers",{"_index":990,"title":{},"body":{"modules/PaginationModule.html":{},"overview.html":{}}}],["cluster_productimagesmodule",{"_index":1142,"title":{},"body":{"modules/ProductImagesModule.html":{},"overview.html":{}}}],["cluster_productimagesmodule_providers",{"_index":1143,"title":{},"body":{"modules/ProductImagesModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":1271,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_exports",{"_index":1272,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_imports",{"_index":1273,"title":{},"body":{"modules/ProductsModule.html":{}}}],["cluster_productsmodule_providers",{"_index":1274,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productvariantsmodule",{"_index":1163,"title":{},"body":{"modules/ProductVariantsModule.html":{},"overview.html":{}}}],["cluster_productvariantsmodule_exports",{"_index":1164,"title":{},"body":{"modules/ProductVariantsModule.html":{},"overview.html":{}}}],["cluster_productvariantsmodule_providers",{"_index":1165,"title":{},"body":{"modules/ProductVariantsModule.html":{},"overview.html":{}}}],["cluster_reviewsmodule",{"_index":1340,"title":{},"body":{"modules/ReviewsModule.html":{},"overview.html":{}}}],["cluster_reviewsmodule_imports",{"_index":1342,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["cluster_reviewsmodule_providers",{"_index":1341,"title":{},"body":{"modules/ReviewsModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule",{"_index":1423,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule_imports",{"_index":1424,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["cluster_subscribersmodule_providers",{"_index":1425,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_uploadsmodule",{"_index":1535,"title":{},"body":{"modules/UploadsModule.html":{},"overview.html":{}}}],["cluster_uploadsmodule_exports",{"_index":1537,"title":{},"body":{"modules/UploadsModule.html":{},"overview.html":{}}}],["cluster_uploadsmodule_providers",{"_index":1536,"title":{},"body":{"modules/UploadsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1619,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1620,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":1621,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":1622,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["color",{"_index":578,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"injectables/FindAllProductsProvider.html":{},"entities/ProductVariant.html":{}}}],["colors",{"_index":842,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["column",{"_index":1087,"title":{},"body":{"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{}}}],["column('decimal",{"_index":1093,"title":{},"body":{"entities/Product.html":{}}}],["column('int",{"_index":1131,"title":{},"body":{"entities/ProductImage.html":{},"entities/ProductVariant.html":{}}}],["column('text",{"_index":1323,"title":{},"body":{"entities/Review.html":{}}}],["column({default",{"_index":1160,"title":{},"body":{"entities/ProductVariant.html":{}}}],["column({nullable",{"_index":1576,"title":{},"body":{"entities/User.html":{}}}],["column({type",{"_index":1330,"title":{},"body":{"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{}}}],["come",{"_index":1774,"title":{},"body":{"index.html":{}}}],["comment",{"_index":1321,"title":{},"body":{"entities/Review.html":{}}}],["commit",{"_index":559,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["committed",{"_index":562,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["common/interceptors/data",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["complete",{"_index":570,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["compodoc/compodoc",{"_index":1712,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":732,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["conditions.variants",{"_index":752,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["conditions.variants.color",{"_index":750,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["conditions.variants.size",{"_index":751,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["config",{"_index":69,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/GenerateTokensProvider.html":{},"modules/MailModule.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["config.get('appconfig.mailhost",{"_index":889,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('appconfig.smtppassword",{"_index":891,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('appconfig.smtpusername",{"_index":890,"title":{},"body":{"modules/MailModule.html":{}}}],["config/app.config",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["config/database.config",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["config/enviroment.validation",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["config/jwt.config",{"_index":352,"title":{},"body":{"modules/AuthModule.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["config/paths.config",{"_index":923,"title":{},"body":{"injectables/MailService.html":{}}}],["configmodule",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forfeature(jwtconfig",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataResponseInterceptor.html":{},"modules/MailModule.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["configservice.get('database.autoloadentities",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.host",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.name",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.password",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.port",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.synchronize",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.user",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["configtype",{"_index":22,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["configure",{"_index":886,"title":{},"body":{"modules/MailModule.html":{}}}],["conflictexception",{"_index":502,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/UploadsService.html":{}}}],["conflictexception('could",{"_index":569,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["conflictexception(error",{"_index":1559,"title":{},"body":{"injectables/UploadsService.html":{}}}],["connect",{"_index":517,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["connecting",{"_index":635,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["connection",{"_index":574,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["console.log",{"_index":888,"title":{},"body":{"modules/MailModule.html":{}}}],["console.log('before",{"_index":696,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["console.log('re",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{}}}],["console.log(error",{"_index":1399,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["console.log(newurl",{"_index":1021,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["const",{"_index":73,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constant",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(configservice",{"_index":686,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"injectables/UploadToAwsProvider.html":{}}}],["constructor(createproductprovider",{"_index":1288,"title":{},"body":{"injectables/ProductsService.html":{}}}],["constructor(createreviewprovider",{"_index":1351,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["constructor(createuserprovider",{"_index":1639,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(datasource",{"_index":494,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["constructor(jwtservice",{"_index":19,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["constructor(mailerservice",{"_index":910,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(private",{"_index":131,"title":{},"body":{"controllers/AppController.html":{},"guards/RolesGuard.html":{}}}],["constructor(productrepository",{"_index":705,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/UpdateProductProvider.html":{}}}],["constructor(productvariantrepository",{"_index":1174,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["constructor(reflector",{"_index":381,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["constructor(request",{"_index":996,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["constructor(reviewsrepository",{"_index":611,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["constructor(signinprovider",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(subscriberrepository",{"_index":1436,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["constructor(uploadtoawsprovider",{"_index":1544,"title":{},"body":{"injectables/UploadsService.html":{}}}],["constructor(usersrepository",{"_index":429,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{}}}],["constructor(usersservice",{"_index":953,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{}}}],["containing",{"_index":817,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["contains",{"_index":84,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{}}}],["contenttype",{"_index":1522,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["context",{"_index":36,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{}}}],["context.getclass",{"_index":412,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":411,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":74,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/RolesGuard.html":{}}}],["controller",{"_index":122,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('products",{"_index":1243,"title":{},"body":{"controllers/ProductsController.html":{}}}],["controller('reviews",{"_index":1339,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["controller('subscribers",{"_index":1422,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["controller('users",{"_index":1608,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":124,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["country",{"_index":1067,"title":{},"body":{"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["courses",{"_index":1789,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1674,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":414,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/UsersService.html":{}}}],["created",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CreateUsersProvider.html":{},"injectables/ProductsService.html":{}}}],["createdat",{"_index":1085,"title":{},"body":{"entities/Product.html":{}}}],["createdatecolumn",{"_index":1091,"title":{},"body":{"entities/Product.html":{},"entities/Review.html":{}}}],["createhash('sha256",{"_index":964,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{}}}],["createparamdecorator",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproduct",{"_index":493,"title":{},"body":{"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createproduct(createproductdto",{"_index":498,"title":{},"body":{"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createproductdto",{"_index":447,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["createproductdto.variants",{"_index":537,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["createproductprovider",{"_index":490,"title":{"injectables/CreateProductProvider.html":{}},"body":{"injectables/CreateProductProvider.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["createproductvariantdto",{"_index":484,"title":{"classes/CreateProductVariantDto.html":{}},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/PatchProductVariantDto.html":{},"coverage.html":{}}}],["createreview",{"_index":610,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/ReviewsService.html":{}}}],["createreview(createreviewdto",{"_index":615,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/ReviewsService.html":{}}}],["createreviewdto",{"_index":590,"title":{"classes/CreateReviewDto.html":{}},"body":{"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"injectables/ReviewsService.html":{},"coverage.html":{}}}],["createreviewprovider",{"_index":607,"title":{"injectables/CreateReviewProvider.html":{}},"body":{"injectables/CreateReviewProvider.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"coverage.html":{},"overview.html":{}}}],["creates",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{}}}],["createsubscriber",{"_index":1434,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["createsubscriber(createsubscriberdto",{"_index":1439,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["createsubscriberdto",{"_index":636,"title":{"classes/CreateSubscriberDto.html":{}},"body":{"classes/CreateSubscriberDto.html":{},"injectables/SubscribersService.html":{},"coverage.html":{}}}],["createuser",{"_index":665,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"injectables/UsersService.html":{}}}],["createuser(createuserdto",{"_index":667,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"injectables/UsersService.html":{}}}],["createuserdto",{"_index":650,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"classes/PatchUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserprovider",{"_index":1643,"title":{},"body":{"injectables/UsersService.html":{}}}],["createusersprovider",{"_index":662,"title":{"injectables/CreateUsersProvider.html":{}},"body":{"injectables/CreateUsersProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["creating",{"_index":639,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/UsersService.html":{}}}],["creatng",{"_index":1441,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["crypto",{"_index":960,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{}}}],["ctx",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":986,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["currentpage",{"_index":982,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["custom",{"_index":1257,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":682,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"controllers/ProductsController.html":{}}}],["data')@useinterceptors(undefined)@roles(role.admin)@post",{"_index":1194,"title":{},"body":{"controllers/ProductsController.html":{}}}],["data.interface",{"_index":819,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/UsersController.html":{}}}],["data.interface.ts",{"_index":115,"title":{},"body":{"interfaces/ActiveUserData.html":{},"coverage.html":{}}}],["database",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"entities/Subscriber.html":{},"injectables/UpdateProductProvider.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["databaseconfig",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["dataresponseinterceptor",{"_index":177,"title":{"injectables/DataResponseInterceptor.html":{}},"body":{"modules/AppModule.html":{},"injectables/DataResponseInterceptor.html":{},"coverage.html":{}}}],["datasource",{"_index":495,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["date",{"_index":798,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"entities/Product.html":{},"entities/Review.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["date().gettime().tostring().trim",{"_index":1533,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["date(date.now",{"_index":1409,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["datecreated",{"_index":1322,"title":{},"body":{"entities/Review.html":{}}}],["db",{"_index":563,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["declarations",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PaginationModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decoraror",{"_index":1857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorator",{"_index":1361,"title":{},"body":{"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["decorator/auth.decorator",{"_index":295,"title":{},"body":{"controllers/AuthController.html":{}}}],["decorators",{"_index":127,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/OtpSigninDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"controllers/ProductsController.html":{},"classes/RefreshTokenDto.html":{},"entities/Review.html":{},"classes/SignInDto.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["deeper",{"_index":1784,"title":{},"body":{"index.html":{}}}],["default",{"_index":396,"title":{},"body":{"guards/AuthenticationGuard.html":{},"modules/MailModule.html":{},"classes/PaginationQueryDto.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"miscellaneous/variables.html":{}}}],["defaultauthtype",{"_index":380,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["defaultroletype",{"_index":1365,"title":{},"body":{"guards/RolesGuard.html":{}}}],["defined",{"_index":23,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":1229,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["delete('/:productid",{"_index":1267,"title":{},"body":{"controllers/ProductsController.html":{}}}],["delete('/:productid')@roles(role.admin)@httpcode(httpstatus.no_content",{"_index":1197,"title":{},"body":{"controllers/ProductsController.html":{}}}],["delete('/:userid",{"_index":1616,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleted",{"_index":1200,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleted'})@apiparam({name",{"_index":1588,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteproduct",{"_index":1189,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["deleteproduct(productid",{"_index":1196,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["deletes",{"_index":1266,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{}}}],["deleteuser",{"_index":1582,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteuser(@param('userid",{"_index":1617,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser(userid",{"_index":1586,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleting",{"_index":1591,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deletion",{"_index":1647,"title":{},"body":{"injectables/UsersService.html":{}}}],["deny",{"_index":103,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["dependencies",{"_index":136,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PaginationModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":41,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/RolesGuard.html":{}}}],["description",{"_index":9,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"controllers/ProductsController.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["devtools",{"_index":1795,"title":{},"body":{"index.html":{}}}],["diff",{"_index":404,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["digest('hex",{"_index":966,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{}}}],["dir",{"_index":900,"title":{},"body":{"modules/MailModule.html":{}}}],["directly",{"_index":1497,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["disable",{"_index":93,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["discord",{"_index":1781,"title":{},"body":{"index.html":{}}}],["discount",{"_index":453,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["displayorder",{"_index":553,"title":{},"body":{"injectables/CreateProductProvider.html":{},"entities/ProductImage.html":{}}}],["dive",{"_index":1783,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1675,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dressing",{"_index":850,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["dressstyle",{"_index":454,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["dto",{"_index":539,"title":{},"body":{"injectables/CreateProductProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/OtpSigninDto.html":{},"classes/PaginationQueryDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{}}}],["dtos/create",{"_index":618,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["dtos/createproductdto",{"_index":504,"title":{},"body":{"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["dtos/get",{"_index":716,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/otpsignin.dto",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/OtpSigninProvider.html":{}}}],["dtos/pagination",{"_index":1001,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["dtos/patch",{"_index":1242,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/refresh",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RefreshTokenProvider.html":{}}}],["dtos/sign",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SignInProvider.html":{}}}],["dynamically",{"_index":1244,"title":{},"body":{"controllers/ProductsController.html":{}}}],["e2e",{"_index":1769,"title":{},"body":{"index.html":{}}}],["each",{"_index":489,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{}}}],["eager",{"_index":1114,"title":{},"body":{"entities/Product.html":{},"entities/ProductVariant.html":{}}}],["efficient",{"_index":1751,"title":{},"body":{"index.html":{}}}],["ejsadapter",{"_index":880,"title":{},"body":{"modules/MailModule.html":{}}}],["email",{"_index":118,"title":{},"body":{"interfaces/ActiveUserData.html":{},"controllers/AuthController.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["email.provider",{"_index":1627,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["email.provider.ts",{"_index":779,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"coverage.html":{}}}],["email.provider.ts:14",{"_index":781,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{}}}],["email.provider.ts:32",{"_index":783,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{}}}],["end",{"_index":866,"title":{},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["enddate",{"_index":863,"title":{},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["ensures",{"_index":560,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["enterprise",{"_index":1799,"title":{},"body":{"index.html":{}}}],["entities",{"_index":1083,"title":{},"body":{"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"overview.html":{}}}],["entity",{"_index":538,"title":{"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{}},"body":{"injectables/CreateProductProvider.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"coverage.html":{}}}],["entries",{"_index":1205,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["enum",{"_index":1572,"title":{},"body":{"entities/User.html":{}}}],["enumerations",{"_index":1737,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/account",{"_index":658,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["enums/auth",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{}}}],["enums/role",{"_index":1378,"title":{},"body":{"classes/SignInDto.html":{}}}],["env",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["env.${env",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["enviroment",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["enviromentvalidation",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":423,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["error",{"_index":417,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}}}],["eslint",{"_index":92,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["eslint/no",{"_index":97,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["event",{"_index":1224,"title":{},"body":{"controllers/ProductsController.html":{},"entities/User.html":{}}}],["event.owner",{"_index":1579,"title":{},"body":{"entities/User.html":{}}}],["eventid",{"_index":1217,"title":{},"body":{"controllers/ProductsController.html":{}}}],["events",{"_index":859,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"entities/User.html":{}}}],["example",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/OtpSigninDto.html":{},"controllers/ProductsController.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["example1",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{}}}],["example2",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{}}}],["examples",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["exceed",{"_index":601,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["exception",{"_index":1386,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["excetion",{"_index":72,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["execution",{"_index":406,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{}}}],["executioncontext",{"_index":31,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":776,"title":{},"body":{"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/SignInProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["experience",{"_index":1786,"title":{},"body":{"index.html":{}}}],["expire.provider",{"_index":1629,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["expire.provider.ts",{"_index":1402,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{},"coverage.html":{}}}],["expire.provider.ts:10",{"_index":1405,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["expire.provider.ts:29",{"_index":1407,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["expires",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["expiresin",{"_index":811,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["expiry",{"_index":426,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["export",{"_index":63,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PaginationModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":58,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/PaginationProvider.html":{},"controllers/ProductsController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":510,"title":{},"body":{"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["extends",{"_index":860,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{}}}],["extension",{"_index":1530,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["extract",{"_index":75,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/UploadToAwsProvider.html":{}}}],["extracting",{"_index":47,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["extractrequestfromheader",{"_index":17,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["extractrequestfromheader(request",{"_index":44,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["false",{"_index":40,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"modules/MailModule.html":{},"entities/ProductVariant.html":{},"controllers/ProductsController.html":{},"guards/RolesGuard.html":{},"entities/Subscriber.html":{},"injectables/UpdateProductProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["fashion",{"_index":898,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["favour@gmail.com",{"_index":648,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["favour@gmail.com'})@isemail()@maxlength(96)@isnotempty",{"_index":642,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["fetch",{"_index":786,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["fetched",{"_index":1203,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["few",{"_index":1772,"title":{},"body":{"index.html":{}}}],["field",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fields",{"_index":1245,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/UpdateProductProvider.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["file.buffer",{"_index":1520,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["file.mimetype",{"_index":1523,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["file.originalname.split('.')[0",{"_index":1525,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["filearray",{"_index":528,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["filefieldsinterceptor",{"_index":1236,"title":{},"body":{"controllers/ProductsController.html":{}}}],["filename",{"_index":1511,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["files",{"_index":531,"title":{},"body":{"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["fileupload",{"_index":1502,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["fileupload(file",{"_index":1505,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["filteredconditions",{"_index":753,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["filtering",{"_index":726,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["finally",{"_index":572,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["finalresponse",{"_index":1026,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["find",{"_index":625,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductsService.html":{},"injectables/SignInProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["findall",{"_index":704,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["findall(productquery",{"_index":709,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/ProductsService.html":{}}}],["findall(userquery",{"_index":1648,"title":{},"body":{"injectables/UsersService.html":{}}}],["findallproducts",{"_index":1190,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findallproducts(@query",{"_index":1260,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findallproducts(productquery",{"_index":1201,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findallproductsprovider",{"_index":701,"title":{"injectables/FindAllProductsProvider.html":{}},"body":{"injectables/FindAllProductsProvider.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["findallusers",{"_index":1583,"title":{},"body":{"controllers/UsersController.html":{}}}],["findallusers(@query",{"_index":1612,"title":{},"body":{"controllers/UsersController.html":{}}}],["findallusers(usersquery",{"_index":1593,"title":{},"body":{"controllers/UsersController.html":{}}}],["findbyid",{"_index":771,"title":{},"body":{"injectables/FindOneByIdProvider.html":{}}}],["findbyid(id",{"_index":773,"title":{},"body":{"injectables/FindOneByIdProvider.html":{}}}],["finding",{"_index":770,"title":{},"body":{"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["findonebyemail",{"_index":780,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"injectables/UsersService.html":{}}}],["findonebyemail(email",{"_index":782,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"injectables/UsersService.html":{}}}],["findonebyid",{"_index":1635,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyid(id",{"_index":1652,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyidprovider",{"_index":766,"title":{"injectables/FindOneByIdProvider.html":{}},"body":{"injectables/FindOneByIdProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["findoneuserbyemailprovider",{"_index":778,"title":{"injectables/FindOneUserByEmailProvider.html":{}},"body":{"injectables/FindOneUserByEmailProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["findproductbyid",{"_index":1191,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findproductbyid(@param('productid",{"_index":1259,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findproductbyid(productid",{"_index":1214,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findproductvariantbyid",{"_index":1172,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["findproductvariantbyid(variantid",{"_index":1177,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["finds",{"_index":723,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["finduser",{"_index":1584,"title":{},"body":{"controllers/UsersController.html":{}}}],["finduser(@param('userid",{"_index":1610,"title":{},"body":{"controllers/UsersController.html":{}}}],["finduser(userid",{"_index":1598,"title":{},"body":{"controllers/UsersController.html":{}}}],["finduserbyotpandexpiresprovider",{"_index":1641,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyotpandexpirytime",{"_index":791,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["finduserbyotpandexpirytime(otp",{"_index":793,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["finduserbyotpandexpirytimeprovider",{"_index":788,"title":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["finduserbyresetotpandexpiresprovider",{"_index":1660,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyresetotpandexpirytime",{"_index":1636,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyresetotpandexpirytime(otp",{"_index":1654,"title":{},"body":{"injectables/UsersService.html":{}}}],["fire",{"_index":420,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["first",{"_index":984,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["firstname",{"_index":1068,"title":{},"body":{"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["flat",{"_index":555,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["follow",{"_index":1801,"title":{},"body":{"index.html":{}}}],["forbiddenexception",{"_index":1362,"title":{},"body":{"guards/RolesGuard.html":{}}}],["forbiddenexception('user",{"_index":1370,"title":{},"body":{"guards/RolesGuard.html":{}}}],["forgotpasswordprovider",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["format",{"_index":694,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["formatting",{"_index":691,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["forwardref",{"_index":345,"title":{},"body":{"modules/AuthModule.html":{},"injectables/CreateUsersProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{},"modules/UsersModule.html":{}}}],["fot",{"_index":841,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["found",{"_index":1184,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"guards/RolesGuard.html":{}}}],["framework",{"_index":1749,"title":{},"body":{"index.html":{}}}],["full",{"_index":1798,"title":{},"body":{"index.html":{}}}],["fullname",{"_index":936,"title":{},"body":{"injectables/MailService.html":{}}}],["function",{"_index":33,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/MailService.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":1742,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gaurding",{"_index":1858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generate",{"_index":829,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"controllers/ProductsController.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{},"injectables/UploadToAwsProvider.html":{}}}],["generated",{"_index":1556,"title":{},"body":{"injectables/UploadsService.html":{}}}],["generatefilename",{"_index":1503,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["generatefilename(file",{"_index":1509,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["generatetoken",{"_index":961,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["generatetokenprovider",{"_index":955,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["generatetokens",{"_index":805,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["generatetokens(user",{"_index":808,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["generatetokensprovider",{"_index":340,"title":{"injectables/GenerateTokensProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{},"coverage.html":{},"overview.html":{}}}],["generating",{"_index":804,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/UploadToAwsProvider.html":{}}}],["get('/:productid",{"_index":1258,"title":{},"body":{"controllers/ProductsController.html":{}}}],["get('/:userid",{"_index":1609,"title":{},"body":{"controllers/UsersController.html":{}}}],["gethello",{"_index":126,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getproductsbasedto",{"_index":837,"title":{"classes/GetProductsBaseDto.html":{}},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"coverage.html":{}}}],["getproductsdto",{"_index":710,"title":{"classes/GetProductsDto.html":{}},"body":{"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["getting",{"_index":1213,"title":{"index.html":{}},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getusersbasedto",{"_index":861,"title":{"classes/GetUsersBaseDto.html":{}},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"coverage.html":{}}}],["getusersdto",{"_index":869,"title":{"classes/GetUsersDto.html":{}},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["global",{"_index":874,"title":{},"body":{"modules/MailModule.html":{}}}],["gotten",{"_index":1317,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["grab",{"_index":71,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["graph",{"_index":1792,"title":{},"body":{"index.html":{}}}],["grow",{"_index":1811,"title":{},"body":{"index.html":{}}}],["guard",{"_index":0,"title":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["guarding",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["handle",{"_index":724,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{}}}],["hands",{"_index":1785,"title":{},"body":{"index.html":{}}}],["handy",{"_index":1775,"title":{},"body":{"index.html":{}}}],["hased",{"_index":967,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["hash",{"_index":962,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["hashedotp",{"_index":963,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{}}}],["hashingprovider",{"_index":671,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"injectables/SignInProvider.html":{}}}],["hasrole",{"_index":1371,"title":{},"body":{"guards/RolesGuard.html":{}}}],["hdfbwojefbnqpkfbjoqfehfewfeqwf234jr",{"_index":1306,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["hdfbwojefbnqpkfbjoqfehfewfeqwf234jr'})@isnotempty()@isstring",{"_index":1304,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["header",{"_index":76,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["headers",{"_index":48,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["hello",{"_index":242,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":1796,"title":{},"body":{"index.html":{}}}],["here",{"_index":567,"title":{},"body":{"injectables/CreateProductProvider.html":{},"index.html":{}}}],["hive",{"_index":927,"title":{},"body":{"injectables/MailService.html":{}}}],["hive's",{"_index":943,"title":{},"body":{"injectables/MailService.html":{}}}],["host",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["httpcode",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":1268,"title":{},"body":{"controllers/ProductsController.html":{}}}],["httpcode(httpstatus.ok",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://nestjs.com",{"_index":1823,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{}}}],["id",{"_index":121,"title":{},"body":{"interfaces/ActiveUserData.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"injectables/SignInProvider.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["id'})@apiparam({name",{"_index":1216,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["id'})@apiresponse({status",{"_index":1215,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["id.provider",{"_index":1631,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["id.provider.ts",{"_index":769,"title":{},"body":{"injectables/FindOneByIdProvider.html":{},"coverage.html":{}}}],["id.provider.ts:14",{"_index":772,"title":{},"body":{"injectables/FindOneByIdProvider.html":{}}}],["id.provider.ts:32",{"_index":774,"title":{},"body":{"injectables/FindOneByIdProvider.html":{}}}],["identifier",{"_index":1219,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["iloghaluagneskc@gmail.com",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{}}}],["image",{"_index":545,"title":{},"body":{"injectables/CreateProductProvider.html":{},"entities/ProductVariant.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["image.entity",{"_index":507,"title":{},"body":{"injectables/CreateProductProvider.html":{},"modules/ProductImagesModule.html":{},"entities/ProductVariant.html":{}}}],["image.entity.ts",{"_index":1130,"title":{},"body":{"entities/ProductImage.html":{},"coverage.html":{}}}],["image.entity.ts:13",{"_index":1133,"title":{},"body":{"entities/ProductImage.html":{}}}],["image.entity.ts:16",{"_index":1134,"title":{},"body":{"entities/ProductImage.html":{}}}],["image.entity.ts:19",{"_index":1132,"title":{},"body":{"entities/ProductImage.html":{}}}],["image.entity.ts:25",{"_index":1139,"title":{},"body":{"entities/ProductImage.html":{}}}],["image.productvariant",{"_index":1154,"title":{},"body":{"entities/ProductVariant.html":{}}}],["image/jpeg",{"_index":1551,"title":{},"body":{"injectables/UploadsService.html":{}}}],["image/jpg'].includes(file.mimetype",{"_index":1553,"title":{},"body":{"injectables/UploadsService.html":{}}}],["image/png",{"_index":1552,"title":{},"body":{"injectables/UploadsService.html":{}}}],["imagepath",{"_index":551,"title":{},"body":{"injectables/CreateProductProvider.html":{},"entities/ProductImage.html":{}}}],["images",{"_index":499,"title":{},"body":{"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"entities/ProductVariant.html":{}}}],["images.module",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["images.module.ts",{"_index":1145,"title":{},"body":{"modules/ProductImagesModule.html":{}}}],["images.service",{"_index":1147,"title":{},"body":{"modules/ProductImagesModule.html":{}}}],["images.service.ts",{"_index":1150,"title":{},"body":{"injectables/ProductImagesService.html":{},"coverage.html":{}}}],["images/product",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"injectables/CreateProductProvider.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"entities/ProductVariant.html":{},"coverage.html":{}}}],["images/providers/product",{"_index":1149,"title":{},"body":{"injectables/ProductImagesService.html":{},"coverage.html":{}}}],["imgurl",{"_index":552,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["imgurls.map((imgurl",{"_index":549,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["implements",{"_index":65,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{},"guards/RolesGuard.html":{}}}],["import",{"_index":51,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["importation",{"_index":882,"title":{},"body":{"modules/MailModule.html":{}}}],["importing",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["imports",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["in')@auth(authtype.none)@httpcode(httpstatus.ok",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{}}}],["in(productquery['category'].slice().split",{"_index":734,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["in(productquery['clothtype'].slice().split",{"_index":738,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["in(productquery['colors'].slice().split",{"_index":745,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["in(productquery['dressstyle'].slice().split",{"_index":740,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["in(productquery['sizes'].slice().split",{"_index":747,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["in.dto",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["in.dto.ts",{"_index":1375,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["in.dto.ts:19",{"_index":1376,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.dto.ts:30",{"_index":1377,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.provider",{"_index":349,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["in.provider.ts",{"_index":1380,"title":{},"body":{"injectables/SignInProvider.html":{},"coverage.html":{}}}],["in.provider.ts:17",{"_index":1382,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["in.provider.ts:42",{"_index":1383,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["indetifying",{"_index":85,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":1592,"title":{},"body":{"controllers/UsersController.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inhjecting",{"_index":673,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["inject",{"_index":52,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"injectables/CreateUsersProvider.html":{},"injectables/GenerateTokensProvider.html":{},"modules/MailModule.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["inject(forwardref",{"_index":1313,"title":{},"body":{"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["inject(jwtconfig.key",{"_index":70,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["inject(request",{"_index":1005,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["injectable",{"_index":53,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}},"body":{"guards/AccessTokenGuard.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":239,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injecting",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["injectrepository",{"_index":437,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["injectrepository(product",{"_index":721,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["injectrepository(productvariant",{"_index":1182,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["injectrepository(review",{"_index":623,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["injectrepository(subscriber",{"_index":1448,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["injectrepository(user",{"_index":441,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/UsersService.html":{}}}],["inlinecssenabled",{"_index":904,"title":{},"body":{"modules/MailModule.html":{}}}],["inorder",{"_index":1003,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["installcompile",{"_index":1760,"title":{},"body":{"index.html":{}}}],["instance",{"_index":421,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{}}}],["int",{"_index":1334,"title":{},"body":{"entities/Review.html":{}}}],["int'})@check('\"stars",{"_index":1331,"title":{},"body":{"entities/Review.html":{}}}],["interact",{"_index":1793,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":685,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["intercept(context",{"_index":688,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["interceptor",{"_index":684,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"controllers/ProductsController.html":{}}}],["interface",{"_index":111,"title":{"interfaces/ActiveUserData.html":{},"interfaces/Paginated.html":{}},"body":{"interfaces/ActiveUserData.html":{},"interfaces/Paginated.html":{},"coverage.html":{}}}],["interfaces",{"_index":113,"title":{},"body":{"interfaces/ActiveUserData.html":{},"interfaces/Paginated.html":{},"overview.html":{}}}],["interfaces/active",{"_index":818,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["interfaces/paginated.interface",{"_index":1004,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["intersectiontype",{"_index":855,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["invalid",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{}}}],["isarray",{"_index":478,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/PatchProductDto.html":{}}}],["isarray()@isnotempty()@validatenested({each",{"_index":474,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isarray()@isoptional",{"_index":1052,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["isboolean",{"_index":1062,"title":{},"body":{"classes/PatchProductVariantDto.html":{}}}],["isboolean()@isoptional",{"_index":1059,"title":{},"body":{"classes/PatchProductVariantDto.html":{}}}],["isdate",{"_index":868,"title":{},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["isdate()@isoptional",{"_index":865,"title":{},"body":{"classes/GetUsersBaseDto.html":{}}}],["isemail",{"_index":646,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["isenum",{"_index":656,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["isenum(role",{"_index":661,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["isglobal",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":479,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/OtpSigninDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchUserDto.html":{}}}],["isint()@isnotempty",{"_index":465,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isint()@isnotempty()@min(1",{"_index":584,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{}}}],["isint()@isoptional",{"_index":1048,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["isnotempty",{"_index":480,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/OtpSigninDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{}}}],["isoptional",{"_index":587,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{}}}],["isoptional()@isarray()@validatenested({each",{"_index":582,"title":{},"body":{"classes/CreateProductVariantDto.html":{}}}],["isoptional()@isint",{"_index":1081,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["isoptional()@ispositive",{"_index":1035,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["isoptional()@isstring",{"_index":1074,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["ispositive",{"_index":1037,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["isstring",{"_index":481,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/RefreshTokenDto.html":{}}}],["isstring()@isnotempty",{"_index":460,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{}}}],["isstring()@isoptional",{"_index":844,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{}}}],["issuer",{"_index":824,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["item",{"_index":1199,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["items",{"_index":1007,"title":{},"body":{"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{}}}],["itemsperpage",{"_index":980,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["jbfwihfubfjkebiejhfbw",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{}}}],["job",{"_index":1804,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":1806,"title":{},"body":{"index.html":{}}}],["joi",{"_index":1727,"title":{},"body":{"dependencies.html":{}}}],["join",{"_index":743,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"modules/MailModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":901,"title":{},"body":{"modules/MailModule.html":{}}}],["joincolumn",{"_index":1140,"title":{},"body":{"entities/ProductImage.html":{},"entities/ProductVariant.html":{}}}],["jsbfiwhvfquobdfj",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{}}}],["jwt",{"_index":68,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["jwtconfig",{"_index":59,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["jwtconfiguration",{"_index":21,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["jwtmodule",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtmodule.registerasync(jwtconfig.asprovider",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtservice",{"_index":20,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["kamil",{"_index":1820,"title":{},"body":{"index.html":{}}}],["key",{"_index":509,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/FindAllProductsProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UploadToAwsProvider.html":{}}}],["keyof",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keyword",{"_index":395,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["last",{"_index":985,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["lastname",{"_index":1561,"title":{},"body":{"entities/User.html":{}}}],["lasttname",{"_index":1069,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["later",{"_index":634,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["learn",{"_index":1778,"title":{},"body":{"index.html":{}}}],["legend",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PaginationModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":1247,"title":{},"body":{"controllers/ProductsController.html":{},"entities/Subscriber.html":{},"entities/User.html":{}}}],["let's",{"_index":931,"title":{},"body":{"injectables/MailService.html":{}}}],["level",{"_index":1461,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["license",{"_index":1826,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1809,"title":{},"body":{"index.html":{}}}],["like(`%${productquery['name'].slice().split",{"_index":742,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["limit",{"_index":727,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"classes/PaginationQueryDto.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["line",{"_index":95,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["linkedin",{"_index":1802,"title":{},"body":{"index.html":{}}}],["links",{"_index":975,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["list",{"_index":714,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["literal",{"_index":500,"title":{},"body":{"injectables/CreateProductProvider.html":{},"interfaces/Paginated.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["load",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["logged",{"_index":116,"title":{},"body":{"interfaces/ActiveUserData.html":{},"guards/AuthenticationGuard.html":{}}}],["logging",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/MailService.html":{},"injectables/UsersService.html":{}}}],["longdescription",{"_index":455,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["longer",{"_index":801,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["looking",{"_index":1803,"title":{},"body":{"index.html":{}}}],["loop",{"_index":418,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{},"index.html":{}}}],["mail",{"_index":883,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/SignInProvider.html":{},"injectables/SubscribersService.html":{}}}],["mail/mail.module",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["mailer",{"_index":887,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["mailermodule",{"_index":876,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":884,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":911,"title":{},"body":{"injectables/MailService.html":{}}}],["mailmodule",{"_index":146,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules/SubscribersModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":672,"title":{"injectables/MailService.html":{}},"body":{"injectables/CreateUsersProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/SignInProvider.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"overview.html":{}}}],["makes",{"_index":403,"title":{},"body":{"guards/AuthenticationGuard.html":{},"modules/MailModule.html":{}}}],["manually",{"_index":1488,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["manytoone",{"_index":1141,"title":{},"body":{"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{}}}],["manytoone(undefined",{"_index":1135,"title":{},"body":{"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{}}}],["map",{"_index":398,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{}}}],["map((data",{"_index":699,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["map((imgurls",{"_index":547,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["matching",{"_index":110,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["material",{"_index":456,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["math.ceil(totalitems",{"_index":1023,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["max",{"_index":604,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["max(5",{"_index":606,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["maxcount",{"_index":1249,"title":{},"body":{"controllers/ProductsController.html":{}}}],["maxlength",{"_index":647,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["maxlength(96",{"_index":649,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["means",{"_index":391,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["meets",{"_index":1359,"title":{},"body":{"guards/RolesGuard.html":{}}}],["message",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateReviewDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["meta",{"_index":976,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["metadata",{"_index":405,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"dependencies.html":{}}}],["method",{"_index":408,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{}}}],["methods",{"_index":13,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["mimetype",{"_index":1550,"title":{},"body":{"injectables/UploadsService.html":{}}}],["min",{"_index":588,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{}}}],["min(1",{"_index":589,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{}}}],["miscellaneous",{"_index":1736,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{}}}],["mit",{"_index":1808,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1763,"title":{},"body":{"index.html":{}}}],["module",{"_index":133,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PaginationModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/PaginationModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["modules",{"_index":135,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PaginationModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":878,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/ejs.adapter",{"_index":881,"title":{},"body":{"modules/MailModule.html":{}}}],["moment",{"_index":632,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["more",{"_index":1779,"title":{},"body":{"index.html":{}}}],["morethan",{"_index":795,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["morethan(new",{"_index":797,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["myśliwiec",{"_index":1821,"title":{},"body":{"index.html":{}}}],["name",{"_index":27,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["name.replace(/|s/g",{"_index":1528,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["need",{"_index":885,"title":{},"body":{"modules/MailModule.html":{},"index.html":{}}}],["nest",{"_index":1745,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["nested",{"_index":749,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["nestframework",{"_index":1825,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":695,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["nestjs",{"_index":877,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/common",{"_index":55,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":56,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/GenerateTokensProvider.html":{},"modules/MailModule.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/PaginationProvider.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":57,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1061,"title":{},"body":{"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{}}}],["nestjs/platform",{"_index":1237,"title":{},"body":{"controllers/ProductsController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/OtpSigninDto.html":{},"controllers/ProductsController.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"modules/ReviewsModule.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":79,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"modules/MailModule.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newreview",{"_index":627,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newsletter",{"_index":921,"title":{},"body":{"injectables/MailService.html":{},"injectables/SubscribersService.html":{}}}],["newurl",{"_index":1019,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?limit=${paginationquery.limit}&page=${nextpage",{"_index":1030,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?limit=${paginationquery.limit}&page=${paginationquery.page",{"_index":1029,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?limit=${paginationquery.limit}&page=${prevpage",{"_index":1031,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?limit=${paginationquery.limit}&page=${totalpages",{"_index":1028,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?limit=${paginationquery.limit}&page=1",{"_index":1027,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newuser",{"_index":674,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["newuser.email",{"_index":678,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["newuser.id",{"_index":677,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["newuser.role",{"_index":679,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["newuserobj",{"_index":442,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{}}}],["next",{"_index":94,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["next.handle().pipe",{"_index":698,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["nextpage",{"_index":1024,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["nich",{"_index":897,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["node.js",{"_index":1748,"title":{},"body":{"index.html":{}}}],["none",{"_index":1741,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notfoundexception",{"_index":715,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{}}}],["notfoundexception(`product",{"_index":1299,"title":{},"body":{"injectables/ProductsService.html":{}}}],["notfoundexception(error",{"_index":765,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["npm",{"_index":1759,"title":{},"body":{"index.html":{}}}],["null",{"_index":443,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/UsersService.html":{}}}],["nullable",{"_index":1416,"title":{},"body":{"entities/Subscriber.html":{},"entities/User.html":{}}}],["number",{"_index":464,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/GenerateTokensProvider.html":{},"classes/OtpSigninDto.html":{},"interfaces/Paginated.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchUserDto.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"controllers/ProductsController.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["object",{"_index":816,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["object.entries(conditions).filter(([_",{"_index":755,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["object.entries(images).foreach",{"_index":527,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["object.fromentries",{"_index":754,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["object.keys(productquery).foreach((key",{"_index":730,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["object.keys(whereoptions).length",{"_index":759,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["objectliteral",{"_index":1002,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["observable",{"_index":386,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{}}}],["offer",{"_index":1805,"title":{},"body":{"index.html":{}}}],["official",{"_index":1787,"title":{},"body":{"index.html":{}}}],["ondelete",{"_index":1137,"title":{},"body":{"entities/ProductImage.html":{},"entities/ProductVariant.html":{}}}],["one",{"_index":768,"title":{},"body":{"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/PaginationProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["onetomany",{"_index":1119,"title":{},"body":{"entities/Product.html":{},"entities/ProductVariant.html":{},"entities/User.html":{}}}],["onetomany(undefined",{"_index":1106,"title":{},"body":{"entities/Product.html":{},"entities/ProductVariant.html":{}}}],["open",{"_index":1810,"title":{},"body":{"index.html":{}}}],["optional",{"_index":29,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Product.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":760,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"modules/MailModule.html":{},"injectables/PaginationProvider.html":{}}}],["options.relations",{"_index":1012,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["options.select",{"_index":1013,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["options.where",{"_index":1014,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["otp",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["otp'})@apiresponse({status",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["otp.tostring",{"_index":1398,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["otpexpire",{"_index":444,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/User.html":{}}}],["otpsignin",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["otpsignin(@body",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{}}}],["otpsignin(otpsignindto",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["otpsignindto",{"_index":254,"title":{"classes/OtpSigninDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"coverage.html":{}}}],["otpsigninprovider",{"_index":341,"title":{"injectables/OtpSigninProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/OtpSigninProvider.html":{},"coverage.html":{},"overview.html":{}}}],["out",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PaginationModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1830,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1711,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":728,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"classes/PaginationQueryDto.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["pages",{"_index":979,"title":{},"body":{"interfaces/Paginated.html":{}}}],["paginated",{"_index":713,"title":{"interfaces/Paginated.html":{}},"body":{"injectables/FindAllProductsProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["paginated'})@apiquery({name",{"_index":1204,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["paginating",{"_index":1000,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["pagination",{"_index":722,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"injectables/UsersService.html":{}}}],["paginationmodule",{"_index":988,"title":{"modules/PaginationModule.html":{}},"body":{"modules/PaginationModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["paginationprovider",{"_index":706,"title":{"injectables/PaginationProvider.html":{}},"body":{"injectables/FindAllProductsProvider.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["paginationquery",{"_index":995,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["paginationquery(paginationquery",{"_index":998,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["paginationquery.limit",{"_index":1010,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["paginationquery.page",{"_index":1009,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["paginationquerydto",{"_index":856,"title":{"classes/PaginationQueryDto.html":{}},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"coverage.html":{}}}],["param",{"_index":66,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/MailService.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["param('productid",{"_index":1264,"title":{},"body":{"controllers/ProductsController.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parsefloat(productquery['price'].slice().split",{"_index":736,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["part",{"_index":1797,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":1055,"title":{},"body":{"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{}}}],["partialtype(createuserdto",{"_index":1065,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["particular",{"_index":1223,"title":{},"body":{"controllers/ProductsController.html":{}}}],["pass",{"_index":895,"title":{},"body":{"modules/MailModule.html":{}}}],["passing",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["password",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{}}}],["password'})@apiresponse({status",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{}}}],["password1",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["patch('/:productid",{"_index":1263,"title":{},"body":{"controllers/ProductsController.html":{}}}],["patch('/:productid')@roles(role.admin",{"_index":1226,"title":{},"body":{"controllers/ProductsController.html":{}}}],["patch('/otp",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch()@roles(role.user",{"_index":1602,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchproduct",{"_index":1192,"title":{},"body":{"controllers/ProductsController.html":{}}}],["patchproduct(productid",{"_index":1225,"title":{},"body":{"controllers/ProductsController.html":{}}}],["patchproductdto",{"_index":1038,"title":{"classes/PatchProductDto.html":{}},"body":{"classes/PatchProductDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{},"coverage.html":{}}}],["patchproductdto.brand",{"_index":1478,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.category",{"_index":1470,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.clothtype",{"_index":1474,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.discount",{"_index":1468,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.dressstyle",{"_index":1472,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.material",{"_index":1476,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.name",{"_index":1464,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.price",{"_index":1466,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.variants",{"_index":1482,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.variants.length",{"_index":1483,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductvariantdto",{"_index":1051,"title":{"classes/PatchProductVariantDto.html":{}},"body":{"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"coverage.html":{}}}],["patchuserdto",{"_index":1063,"title":{"classes/PatchUserDto.html":{}},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["patchusers",{"_index":1585,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchusers(patchuserdto",{"_index":1601,"title":{},"body":{"controllers/UsersController.html":{}}}],["path",{"_index":879,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/UploadToAwsProvider.html":{}}}],["path.extname(file.originalname",{"_index":1531,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["path.join(root_path",{"_index":934,"title":{},"body":{"injectables/MailService.html":{}}}],["payload",{"_index":83,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"injectables/GenerateTokensProvider.html":{}}}],["per",{"_index":1206,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["permission",{"_index":1373,"title":{},"body":{"guards/RolesGuard.html":{}}}],["pg",{"_index":1729,"title":{},"body":{"dependencies.html":{}}}],["phonenumber",{"_index":1070,"title":{},"body":{"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["please",{"_index":633,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["port",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["position",{"_index":1208,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["post",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{}}}],["post('/sign",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('refresh",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["prd",{"_index":1456,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["precision",{"_index":1094,"title":{},"body":{"entities/Product.html":{}}}],["prefix",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["previous",{"_index":987,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["prevpage",{"_index":1025,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["price",{"_index":457,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["primarygeneratedcolumn",{"_index":1120,"title":{},"body":{"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":1099,"title":{},"body":{"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/User.html":{}}}],["private",{"_index":16,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["process",{"_index":631,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["process.cwd",{"_index":1859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["product",{"_index":190,"title":{"entities/Product.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"injectables/CreateReviewProvider.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"entities/Product.html":{},"modules/ProductImagesModule.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"entities/Review.html":{},"injectables/UpdateProductProvider.html":{},"coverage.html":{}}}],["product.brand",{"_index":1479,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.category",{"_index":1471,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.clothtype",{"_index":1475,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.discount",{"_index":1469,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.dressstyle",{"_index":1473,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.dto",{"_index":717,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["product.dto.ts",{"_index":839,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/PatchProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:11",{"_index":1047,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:14",{"_index":852,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:15",{"_index":1049,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:19",{"_index":1043,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:21",{"_index":845,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:23",{"_index":1041,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:27",{"_index":1044,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:28",{"_index":846,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:31",{"_index":1042,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:35",{"_index":853,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/PatchProductDto.html":{}}}],["product.dto.ts:39",{"_index":1040,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:42",{"_index":848,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:43",{"_index":1050,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:47",{"_index":1046,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:49",{"_index":854,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:51",{"_index":1053,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:56",{"_index":849,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:7",{"_index":1045,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.entity",{"_index":503,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/FindAllProductsProvider.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["product.id",{"_index":1487,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.material",{"_index":1477,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.name",{"_index":1465,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.price",{"_index":1467,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.provider",{"_index":1279,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["product.provider.ts",{"_index":492,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/UpdateProductProvider.html":{},"coverage.html":{}}}],["product.provider.ts:13",{"_index":1454,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.provider.ts:14",{"_index":497,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["product.provider.ts:27",{"_index":1455,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.provider.ts:33",{"_index":501,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["product.reviews",{"_index":1327,"title":{},"body":{"entities/Review.html":{}}}],["product.variants",{"_index":1156,"title":{},"body":{"entities/ProductVariant.html":{}}}],["productclothtype",{"_index":847,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["productid",{"_index":616,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{}}}],["productimage",{"_index":506,"title":{"entities/ProductImage.html":{}},"body":{"injectables/CreateProductProvider.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"entities/ProductVariant.html":{},"coverage.html":{}}}],["productimages",{"_index":546,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["productimages.map(async",{"_index":556,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["productimagesmodule",{"_index":147,"title":{"modules/ProductImagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductImagesModule.html":{},"modules.html":{},"overview.html":{}}}],["productimagesservice",{"_index":1144,"title":{"injectables/ProductImagesService.html":{}},"body":{"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"coverage.html":{},"overview.html":{}}}],["production",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["productquery",{"_index":712,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["productquery['category",{"_index":733,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['clothtype",{"_index":737,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['colors",{"_index":744,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['dressstyle",{"_index":739,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['name",{"_index":741,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['price",{"_index":735,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['sizes",{"_index":746,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery[key",{"_index":731,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productrepository",{"_index":708,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["products",{"_index":624,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["products.controller",{"_index":1277,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.provider",{"_index":1283,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["products.provider.ts",{"_index":703,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"coverage.html":{}}}],["products.provider.ts:10",{"_index":707,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["products.provider.ts:29",{"_index":711,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["products/products.module",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["productscontroller",{"_index":1187,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsmodule",{"_index":149,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsservice",{"_index":612,"title":{"injectables/ProductsService.html":{}},"body":{"injectables/CreateReviewProvider.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["productupdated",{"_index":1463,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["productvariant",{"_index":473,"title":{"entities/ProductVariant.html":{}},"body":{"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"coverage.html":{}}}],["productvariantrepository",{"_index":1176,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["productvariantsmodule",{"_index":148,"title":{"modules/ProductVariantsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productvariantsservice",{"_index":1166,"title":{"injectables/ProductVariantsService.html":{}},"body":{"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":1747,"title":{},"body":{"index.html":{}}}],["project",{"_index":1757,"title":{},"body":{"index.html":{}}}],["promise",{"_index":38,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/MailService.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UsersService.html":{}}}],["promise.all",{"_index":828,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["promise.resolve(instance.canactivate(context",{"_index":422,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["properties",{"_index":117,"title":{"properties.html":{}},"body":{"interfaces/ActiveUserData.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/OtpSigninDto.html":{},"interfaces/Paginated.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"classes/RefreshTokenDto.html":{},"entities/Review.html":{},"classes/SignInDto.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"properties.html":{}}}],["property",{"_index":393,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["provide",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":1462,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["provider",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}}}],["providers",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PaginationModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers/auth.service",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["providers/clear",{"_index":1632,"title":{},"body":{"modules/UsersModule.html":{}}}],["providers/create",{"_index":1278,"title":{},"body":{"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/UsersModule.html":{}}}],["providers/find",{"_index":1282,"title":{},"body":{"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["providers/generate",{"_index":350,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/mail.service",{"_index":875,"title":{},"body":{"modules/MailModule.html":{}}}],["providers/otp",{"_index":355,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/pagination.provider",{"_index":993,"title":{},"body":{"modules/PaginationModule.html":{}}}],["providers/product",{"_index":1146,"title":{},"body":{"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{}}}],["providers/products.service",{"_index":1240,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{}}}],["providers/refresh",{"_index":353,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/reviews.service",{"_index":1346,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["providers/sign",{"_index":348,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/store",{"_index":1628,"title":{},"body":{"modules/UsersModule.html":{}}}],["providers/subscribers.service",{"_index":1428,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["providers/update",{"_index":1284,"title":{},"body":{"modules/ProductsModule.html":{}}}],["providers/upload",{"_index":1540,"title":{},"body":{"modules/UploadsModule.html":{}}}],["providers/uploads.service",{"_index":1539,"title":{},"body":{"modules/UploadsModule.html":{}}}],["providers/users.service",{"_index":1604,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["prvariant",{"_index":540,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["public",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["quantity",{"_index":579,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"entities/ProductVariant.html":{}}}],["queries",{"_index":725,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["query",{"_index":512,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["query.dto",{"_index":858,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"injectables/PaginationProvider.html":{}}}],["query.dto.ts",{"_index":1032,"title":{},"body":{"classes/PaginationQueryDto.html":{},"coverage.html":{}}}],["query.dto.ts:12",{"_index":1033,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["query.dto.ts:19",{"_index":1036,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["queryrunner",{"_index":515,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.committransaction",{"_index":564,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.connect",{"_index":518,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.manager.create(product",{"_index":521,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.manager.create(productimage",{"_index":550,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.manager.create(productvariant",{"_index":541,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.manager.save(image",{"_index":557,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.manager.save(product",{"_index":524,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.manager.save(prvariant",{"_index":543,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.release",{"_index":576,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.rollbacktransaction",{"_index":568,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.starttransaction",{"_index":519,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["questions",{"_index":1780,"title":{},"body":{"index.html":{}}}],["randomint",{"_index":1384,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["randomint(1000",{"_index":1392,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["rating",{"_index":598,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["read",{"_index":1817,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":67,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["real",{"_index":1794,"title":{},"body":{"index.html":{}}}],["record",{"_index":400,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["reflect",{"_index":1731,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":382,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["refresh",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["refreshing",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"classes/RefreshTokenDto.html":{}}}],["refreshtokendto",{"_index":269,"title":{"classes/RefreshTokenDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"coverage.html":{}}}],["refreshtokendto.refreshtoken",{"_index":1316,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["refreshtokenprovider",{"_index":342,"title":{"injectables/RefreshTokenProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenProvider.html":{},"coverage.html":{},"overview.html":{}}}],["refreshtokens",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenProvider.html":{}}}],["refreshtokens(@body",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokens(refreshtokendto",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenProvider.html":{}}}],["registering",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["rejectunauthorized",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["relations",{"_index":761,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["release",{"_index":575,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["relsease",{"_index":573,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["remove",{"_index":748,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/UploadToAwsProvider.html":{}}}],["repository",{"_index":430,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["repository.count",{"_index":1022,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["repository.find",{"_index":1006,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["req",{"_index":104,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["request",{"_index":45,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["request.headers.authorization?.split",{"_index":108,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["request.user",{"_index":90,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["request[request_user_key",{"_index":91,"title":{},"body":{"guards/AccessTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["request_user_key",{"_index":61,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requests",{"_index":1034,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["requesttimeoutexception",{"_index":436,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/ProductsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UsersService.html":{}}}],["requesttimeoutexception('could",{"_index":520,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["requesttimeoutexception(err",{"_index":1458,"title":{},"body":{"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["requesttimeoutexception(error",{"_index":446,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/ProductsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UsersService.html":{}}}],["required",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["requiredroles",{"_index":1367,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.some((role",{"_index":1372,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requirements",{"_index":1360,"title":{},"body":{"guards/RolesGuard.html":{}}}],["reset",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"modules/PaginationModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["resetexpires",{"_index":1408,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["resetpassworddto",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpasswordprovider",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetting",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["resfresh",{"_index":1309,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["resource",{"_index":1374,"title":{},"body":{"guards/RolesGuard.html":{}}}],["resources",{"_index":1773,"title":{},"body":{"index.html":{}}}],["response",{"_index":683,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"interfaces/Paginated.html":{},"injectables/UpdateProductProvider.html":{}}}],["response.interceptor",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["response.interceptor.ts",{"_index":681,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"coverage.html":{}}}],["response.interceptor.ts:14",{"_index":687,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["response.interceptor.ts:32",{"_index":690,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["response/data",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataResponseInterceptor.html":{},"coverage.html":{}}}],["results",{"_index":109,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["return",{"_index":107,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"modules/MailModule.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":977,"title":{},"body":{"interfaces/Paginated.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["returns",{"_index":37,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["review",{"_index":593,"title":{"entities/Review.html":{}},"body":{"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"entities/Product.html":{},"entities/Review.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"coverage.html":{}}}],["review.dto",{"_index":619,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/ReviewsService.html":{}}}],["review.dto.ts",{"_index":592,"title":{},"body":{"classes/CreateReviewDto.html":{},"coverage.html":{}}}],["review.dto.ts:12",{"_index":603,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.dto.ts:16",{"_index":596,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.dto.ts:6",{"_index":597,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.product",{"_index":1107,"title":{},"body":{"entities/Product.html":{}}}],["review.provider",{"_index":1347,"title":{},"body":{"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{}}}],["review.provider.ts",{"_index":609,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"coverage.html":{}}}],["review.provider.ts:29",{"_index":617,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["review.provider.ts:9",{"_index":613,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["reviewer",{"_index":594,"title":{},"body":{"classes/CreateReviewDto.html":{},"entities/Review.html":{}}}],["reviews",{"_index":622,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"entities/Product.html":{},"controllers/ReviewsController.html":{}}}],["reviews.controller",{"_index":1345,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["reviews.entity",{"_index":620,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{}}}],["reviews/reviews.module",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["reviewscontroller",{"_index":1337,"title":{"controllers/ReviewsController.html":{}},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"coverage.html":{}}}],["reviewsmodule",{"_index":150,"title":{"modules/ReviewsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ReviewsModule.html":{},"modules.html":{},"overview.html":{}}}],["reviewsrepository",{"_index":614,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["reviewsservice",{"_index":1343,"title":{"injectables/ReviewsService.html":{}},"body":{"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"coverage.html":{},"overview.html":{}}}],["role",{"_index":119,"title":{},"body":{"interfaces/ActiveUserData.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"controllers/ProductsController.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["role.admin",{"_index":1366,"title":{},"body":{"guards/RolesGuard.html":{},"controllers/UsersController.html":{}}}],["roles",{"_index":1238,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(role.admin",{"_index":1251,"title":{},"body":{"controllers/ProductsController.html":{}}}],["roles(role.user",{"_index":1614,"title":{},"body":{"controllers/UsersController.html":{}}}],["roles_key",{"_index":1363,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":183,"title":{"guards/RolesGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["rollback",{"_index":566,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["root",{"_index":1860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root_path",{"_index":922,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["route",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["routes",{"_index":1861,"title":{"routes.html":{}},"body":{"routes.html":{}}}],["run",{"_index":1761,"title":{},"body":{"index.html":{}}}],["runner",{"_index":514,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["rxjs",{"_index":387,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{},"dependencies.html":{}}}],["s3",{"_index":1512,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["save",{"_index":522,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/UpdateProductProvider.html":{}}}],["savedproduct",{"_index":523,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["savedvariants",{"_index":535,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["savedvariants.push(vr",{"_index":544,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["savedvariants[urlsindex",{"_index":554,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["saveproductvariant",{"_index":1173,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["saveproductvariant(variant",{"_index":1180,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["saves",{"_index":1185,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["scalable",{"_index":1752,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1095,"title":{},"body":{"entities/Product.html":{}}}],["sdk",{"_index":1513,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"dependencies.html":{}}}],["secret",{"_index":826,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["secure",{"_index":893,"title":{},"body":{"modules/MailModule.html":{}}}],["select",{"_index":785,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"injectables/PaginationProvider.html":{}}}],["send",{"_index":972,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["sending",{"_index":915,"title":{},"body":{"injectables/MailService.html":{}}}],["sendloginotp",{"_index":907,"title":{},"body":{"injectables/MailService.html":{}}}],["sendloginotp(user",{"_index":913,"title":{},"body":{"injectables/MailService.html":{}}}],["sendresetotp",{"_index":908,"title":{},"body":{"injectables/MailService.html":{}}}],["sendresetotp(user",{"_index":916,"title":{},"body":{"injectables/MailService.html":{}}}],["sendsubscribermail",{"_index":909,"title":{},"body":{"injectables/MailService.html":{}}}],["sendsubscribermail(subscriber",{"_index":918,"title":{},"body":{"injectables/MailService.html":{}}}],["server",{"_index":1753,"title":{},"body":{"index.html":{}}}],["service",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/GenerateTokensProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"controllers/ProductsController.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}}}],["set",{"_index":1269,"title":{},"body":{"controllers/ProductsController.html":{}}}],["setmetadata(auth_type_key",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(roles_key",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setting",{"_index":89,"title":{},"body":{"guards/AccessTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["setup",{"_index":1758,"title":{},"body":{"index.html":{}}}],["shortdescription",{"_index":458,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["side",{"_index":1754,"title":{},"body":{"index.html":{}}}],["sigining",{"_index":1381,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["sign",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GenerateTokensProvider.html":{},"classes/OtpSigninDto.html":{},"classes/SignInDto.html":{}}}],["signed",{"_index":43,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{}}}],["signin",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/OtpSigninDto.html":{},"injectables/SignInProvider.html":{}}}],["signin(@body",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(signindto",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["signin.provider",{"_index":356,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["signin.provider.ts",{"_index":951,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"coverage.html":{}}}],["signin.provider.ts:21",{"_index":958,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["signin.provider.ts:8",{"_index":956,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["signindto",{"_index":280,"title":{"classes/SignInDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"coverage.html":{}}}],["signindto.email",{"_index":1390,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["signindto.role",{"_index":1391,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["signing",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["signinprovider",{"_index":343,"title":{"injectables/SignInProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{},"coverage.html":{},"overview.html":{}}}],["signinwithotp",{"_index":952,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["signinwithotp(otpsignindto",{"_index":957,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["signs",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{},"injectables/GenerateTokensProvider.html":{}}}],["signtoken",{"_index":806,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["signtoken(userid",{"_index":810,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["size",{"_index":580,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"injectables/FindAllProductsProvider.html":{},"entities/ProductVariant.html":{}}}],["sizes",{"_index":843,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["skip",{"_index":1008,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["soldout",{"_index":1056,"title":{},"body":{"classes/PatchProductVariantDto.html":{},"entities/ProductVariant.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["spaces",{"_index":1527,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["specific",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{}}}],["specified",{"_index":1481,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["sponsors",{"_index":1813,"title":{},"body":{"index.html":{}}}],["src/.../active",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":1738,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../auth.constant.ts",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.decorator.ts",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1743,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../paths.config.ts",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role",{"_index":1740,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role.constant.ts",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.decorator.ts",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":125,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":128,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":240,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":241,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:115",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:155",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:76",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":1625,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/auth/auth.module.ts",{"_index":344,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/config/jwt.config",{"_index":60,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["src/auth/constants/auth.constant",{"_index":62,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["src/auth/constants/auth.constant.ts",{"_index":1682,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/constants/role.constant",{"_index":1364,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/constants/role.constant.ts",{"_index":1683,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorator/active",{"_index":1606,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorator/auth.decorator",{"_index":1241,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/auth/decorator/auth.decorator.ts",{"_index":1685,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorator/role.decorator",{"_index":1239,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["src/auth/decorator/role.decorator.ts",{"_index":1686,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dtos/otpsignin.dto.ts",{"_index":946,"title":{},"body":{"classes/OtpSigninDto.html":{},"coverage.html":{}}}],["src/auth/dtos/otpsignin.dto.ts:17",{"_index":948,"title":{},"body":{"classes/OtpSigninDto.html":{}}}],["src/auth/dtos/refresh",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["src/auth/dtos/sign",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{},"classes/SignInDto.html":{},"coverage.html":{}}}],["src/auth/enums/auth",{"_index":388,"title":{},"body":{"guards/AuthenticationGuard.html":{},"controllers/ProductsController.html":{},"miscellaneous/enumerations.html":{}}}],["src/auth/enums/role",{"_index":659,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/ProductsController.html":{},"guards/RolesGuard.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{}}}],["src/auth/guards/access",{"_index":6,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{}}}],["src/auth/guards/authentication/authentication.guard.ts",{"_index":376,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/auth/guards/authentication/authentication.guard.ts:33",{"_index":383,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/authentication/authentication.guard.ts:59",{"_index":384,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/roles/roles.guard.ts",{"_index":1355,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles/roles.guard.ts:16",{"_index":1356,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/guards/roles/roles.guard.ts:31",{"_index":1357,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/interfaces/active",{"_index":114,"title":{},"body":{"interfaces/ActiveUserData.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts:13",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:43",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:52",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:61",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/generate",{"_index":802,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"coverage.html":{}}}],["src/auth/providers/otp",{"_index":950,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"coverage.html":{}}}],["src/auth/providers/refresh",{"_index":1307,"title":{},"body":{"injectables/RefreshTokenProvider.html":{},"coverage.html":{}}}],["src/auth/providers/sign",{"_index":1379,"title":{},"body":{"injectables/SignInProvider.html":{},"coverage.html":{}}}],["src/common/interceptors/data",{"_index":680,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"coverage.html":{}}}],["src/common/pagination/dtos/pagination",{"_index":857,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/PaginationQueryDto.html":{},"coverage.html":{}}}],["src/common/pagination/interfaces/paginated.interface",{"_index":718,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["src/common/pagination/interfaces/paginated.interface.ts",{"_index":974,"title":{},"body":{"interfaces/Paginated.html":{},"coverage.html":{}}}],["src/common/pagination/pagination.module",{"_index":1281,"title":{},"body":{"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["src/common/pagination/pagination.module.ts",{"_index":992,"title":{},"body":{"modules/PaginationModule.html":{}}}],["src/common/pagination/providers/pagination.provider",{"_index":720,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/UsersService.html":{}}}],["src/common/pagination/providers/pagination.provider.ts",{"_index":994,"title":{},"body":{"injectables/PaginationProvider.html":{},"coverage.html":{}}}],["src/common/pagination/providers/pagination.provider.ts:14",{"_index":997,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["src/common/pagination/providers/pagination.provider.ts:34",{"_index":999,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["src/config/paths.config.ts",{"_index":1691,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/events/event.entity",{"_index":1578,"title":{},"body":{"entities/User.html":{}}}],["src/mail/mail.module",{"_index":1430,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["src/mail/mail.module.ts",{"_index":873,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/providers/mail.service",{"_index":1385,"title":{},"body":{"injectables/SignInProvider.html":{},"injectables/SubscribersService.html":{}}}],["src/mail/providers/mail.service.ts",{"_index":906,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/mail/providers/mail.service.ts:12",{"_index":912,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/providers/mail.service.ts:29",{"_index":917,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/providers/mail.service.ts:48",{"_index":914,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/providers/mail.service.ts:65",{"_index":919,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/templates/loginotp.ejs",{"_index":940,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/templates/resetotp.ejs",{"_index":935,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/templates/subscription.ejs",{"_index":944,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":1692,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/product",{"_index":485,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"modules/ProductsModule.html":{},"injectables/UpdateProductProvider.html":{},"coverage.html":{}}}],["src/products/dtos/createproductdto.ts",{"_index":449,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/products/dtos/createproductdto.ts:15",{"_index":470,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:19",{"_index":471,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:23",{"_index":466,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:27",{"_index":462,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:31",{"_index":467,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:35",{"_index":463,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:39",{"_index":469,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:43",{"_index":461,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:47",{"_index":472,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:51",{"_index":468,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:57",{"_index":476,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/get",{"_index":838,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"coverage.html":{}}}],["src/products/dtos/patch",{"_index":1039,"title":{},"body":{"classes/PatchProductDto.html":{},"coverage.html":{}}}],["src/products/product.entity",{"_index":1162,"title":{},"body":{"entities/ProductVariant.html":{},"entities/Review.html":{}}}],["src/products/product.entity.ts",{"_index":1084,"title":{},"body":{"entities/Product.html":{},"coverage.html":{}}}],["src/products/product.entity.ts:17",{"_index":1100,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:20",{"_index":1103,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:23",{"_index":1105,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:26",{"_index":1097,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:29",{"_index":1089,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:32",{"_index":1098,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:35",{"_index":1090,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:38",{"_index":1102,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:41",{"_index":1088,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:44",{"_index":1109,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:47",{"_index":1101,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:53",{"_index":1115,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:56",{"_index":1108,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:59",{"_index":1092,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:62",{"_index":1111,"title":{},"body":{"entities/Product.html":{}}}],["src/products/products.controller.ts",{"_index":1188,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/products/products.controller.ts:100",{"_index":1222,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:133",{"_index":1212,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:145",{"_index":1227,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:160",{"_index":1198,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:60",{"_index":1195,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.module",{"_index":1348,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["src/products/products.module.ts",{"_index":1276,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/providers/create",{"_index":491,"title":{},"body":{"injectables/CreateProductProvider.html":{},"coverage.html":{}}}],["src/products/providers/find",{"_index":702,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"coverage.html":{}}}],["src/products/providers/products.service",{"_index":621,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["src/products/providers/products.service.ts",{"_index":1286,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/products/providers/products.service.ts:106",{"_index":1291,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:18",{"_index":1289,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:49",{"_index":1290,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:61",{"_index":1293,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:82",{"_index":1292,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:94",{"_index":1295,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/update",{"_index":1453,"title":{},"body":{"injectables/UpdateProductProvider.html":{},"coverage.html":{}}}],["src/reviews/dtos/create",{"_index":591,"title":{},"body":{"classes/CreateReviewDto.html":{},"coverage.html":{}}}],["src/reviews/providers/create",{"_index":608,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"coverage.html":{}}}],["src/reviews/providers/reviews.service.ts",{"_index":1350,"title":{},"body":{"injectables/ReviewsService.html":{},"coverage.html":{}}}],["src/reviews/providers/reviews.service.ts:21",{"_index":1353,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/providers/reviews.service.ts:7",{"_index":1352,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/reviews.controller.ts",{"_index":1338,"title":{},"body":{"controllers/ReviewsController.html":{},"coverage.html":{}}}],["src/reviews/reviews.entity",{"_index":1116,"title":{},"body":{"entities/Product.html":{}}}],["src/reviews/reviews.entity.ts",{"_index":1320,"title":{},"body":{"entities/Review.html":{},"coverage.html":{}}}],["src/reviews/reviews.entity.ts:14",{"_index":1326,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.entity.ts:17",{"_index":1329,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.entity.ts:20",{"_index":1324,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.entity.ts:24",{"_index":1332,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.entity.ts:27",{"_index":1325,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.entity.ts:30",{"_index":1328,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.module.ts",{"_index":1344,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["src/subscribers/dtos/create",{"_index":637,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/providers/subscribers.service.ts",{"_index":1433,"title":{},"body":{"injectables/SubscribersService.html":{},"coverage.html":{}}}],["src/subscribers/providers/subscribers.service.ts:12",{"_index":1437,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/providers/subscribers.service.ts:36",{"_index":1440,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/providers/subscribers.service.ts:55",{"_index":1444,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscriber.entity",{"_index":924,"title":{},"body":{"injectables/MailService.html":{}}}],["src/subscribers/subscriber.entity.ts",{"_index":1412,"title":{},"body":{"entities/Subscriber.html":{},"coverage.html":{}}}],["src/subscribers/subscriber.entity.ts:17",{"_index":1417,"title":{},"body":{"entities/Subscriber.html":{}}}],["src/subscribers/subscriber.entity.ts:9",{"_index":1418,"title":{},"body":{"entities/Subscriber.html":{}}}],["src/subscribers/subscribers.controller.ts",{"_index":1420,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.module.ts",{"_index":1427,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["src/uploads/providers/upload",{"_index":1500,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"coverage.html":{}}}],["src/uploads/providers/uploads.service",{"_index":505,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["src/uploads/providers/uploads.service.ts",{"_index":1542,"title":{},"body":{"injectables/UploadsService.html":{},"coverage.html":{}}}],["src/uploads/providers/uploads.service.ts:10",{"_index":1545,"title":{},"body":{"injectables/UploadsService.html":{}}}],["src/uploads/providers/uploads.service.ts:33",{"_index":1547,"title":{},"body":{"injectables/UploadsService.html":{}}}],["src/uploads/uploads.module",{"_index":1280,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/uploads/uploads.module.ts",{"_index":1538,"title":{},"body":{"modules/UploadsModule.html":{}}}],["src/users/dtos/create",{"_index":651,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/get",{"_index":862,"title":{},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"coverage.html":{}}}],["src/users/dtos/patch",{"_index":1064,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["src/users/providers/clear",{"_index":425,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"coverage.html":{}}}],["src/users/providers/create",{"_index":663,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"coverage.html":{}}}],["src/users/providers/find",{"_index":767,"title":{},"body":{"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"coverage.html":{}}}],["src/users/providers/store",{"_index":1401,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{},"coverage.html":{}}}],["src/users/providers/users.service",{"_index":959,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["src/users/providers/users.service.ts",{"_index":1634,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/providers/users.service.ts:106",{"_index":1657,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:115",{"_index":1655,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:126",{"_index":1644,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:135",{"_index":1653,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:144",{"_index":1649,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:168",{"_index":1646,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:179",{"_index":1659,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:27",{"_index":1642,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:87",{"_index":1645,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:96",{"_index":1651,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/user.entity",{"_index":820,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/MailService.html":{}}}],["src/users/user.entity.ts",{"_index":1560,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/user.entity.ts:13",{"_index":1566,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:20",{"_index":1565,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:27",{"_index":1567,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:34",{"_index":1571,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:41",{"_index":1563,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:48",{"_index":1574,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:55",{"_index":1562,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:62",{"_index":1575,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:67",{"_index":1577,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:75",{"_index":1564,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:82",{"_index":1573,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:89",{"_index":1568,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:95",{"_index":1569,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.controller.ts",{"_index":1581,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:111",{"_index":1596,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:117",{"_index":1603,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:156",{"_index":1590,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:67",{"_index":1600,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":347,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":1623,"title":{},"body":{"modules/UsersModule.html":{}}}],["ssl",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["stamp",{"_index":1532,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["star",{"_index":605,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["star'})@max(5",{"_index":600,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["stars",{"_index":595,"title":{},"body":{"classes/CreateReviewDto.html":{},"entities/Review.html":{}}}],["start",{"_index":511,"title":{},"body":{"injectables/CreateProductProvider.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"index.html":{}}}],["start:dev",{"_index":1764,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":1765,"title":{},"body":{"index.html":{}}}],["startdate",{"_index":864,"title":{},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["started",{"_index":1746,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1756,"title":{},"body":{"index.html":{}}}],["state",{"_index":1071,"title":{},"body":{"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["statements",{"_index":1676,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":379,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["status",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["stay",{"_index":1800,"title":{},"body":{"index.html":{}}}],["store",{"_index":1395,"title":{},"body":{"injectables/SignInProvider.html":{},"injectables/UsersService.html":{}}}],["stored",{"_index":789,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UsersService.html":{}}}],["storedimagesurls",{"_index":530,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["storedimagesurls.push(urls",{"_index":534,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["storeotpandexpire",{"_index":1404,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["storeotpandexpire(user",{"_index":1406,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["storeotpandexpireprovider",{"_index":1400,"title":{"injectables/StoreOtpAndExpireProvider.html":{}},"body":{"injectables/StoreOtpAndExpireProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["storeotpandexpiresprovider",{"_index":1640,"title":{},"body":{"injectables/UsersService.html":{}}}],["storetokenotpandotpexpire",{"_index":1637,"title":{},"body":{"injectables/UsersService.html":{}}}],["storetokenotpandotpexpire(user",{"_index":1656,"title":{},"body":{"injectables/UsersService.html":{}}}],["storing",{"_index":1403,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{},"injectables/UsersService.html":{}}}],["streetaddress",{"_index":1072,"title":{},"body":{"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["strict",{"_index":905,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":49,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"injectables/MailService.html":{},"interfaces/Paginated.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"entities/Review.html":{},"injectables/ReviewsService.html":{},"classes/SignInDto.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["string(error",{"_index":571,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["style",{"_index":851,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["sub",{"_index":120,"title":{},"body":{"interfaces/ActiveUserData.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["subject",{"_index":930,"title":{},"body":{"injectables/MailService.html":{}}}],["subscribe",{"_index":920,"title":{},"body":{"injectables/MailService.html":{}}}],["subscribed",{"_index":1442,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["subscriber",{"_index":640,"title":{"entities/Subscriber.html":{}},"body":{"classes/CreateSubscriberDto.html":{},"injectables/MailService.html":{},"entities/Subscriber.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{}}}],["subscriber.dto",{"_index":1447,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["subscriber.dto.ts",{"_index":638,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"coverage.html":{}}}],["subscriber.dto.ts:18",{"_index":643,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.email",{"_index":941,"title":{},"body":{"injectables/MailService.html":{}}}],["subscriber.entity",{"_index":1429,"title":{},"body":{"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{}}}],["subscriber.id",{"_index":945,"title":{},"body":{"injectables/MailService.html":{}}}],["subscriberrepository",{"_index":1438,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["subscribers",{"_index":1421,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["subscribers.controller",{"_index":1431,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["subscribers/subscribers.module",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["subscriberscontroller",{"_index":1419,"title":{"controllers/SubscribersController.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"coverage.html":{}}}],["subscribersmodule",{"_index":151,"title":{"modules/SubscribersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SubscribersModule.html":{},"modules.html":{},"overview.html":{}}}],["subscribersservice",{"_index":1426,"title":{"injectables/SubscribersService.html":{}},"body":{"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"overview.html":{}}}],["successful",{"_index":558,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/UsersService.html":{}}}],["successfully",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["summary",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["support",{"_index":928,"title":{},"body":{"injectables/MailService.html":{},"index.html":{},"modules.html":{}}}],["supported",{"_index":1555,"title":{},"body":{"injectables/UploadsService.html":{}}}],["svg",{"_index":1828,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["t",{"_index":812,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["table",{"_index":1413,"title":{},"body":{"entities/Subscriber.html":{},"entities/User.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1710,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1011,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["team",{"_index":929,"title":{},"body":{"injectables/MailService.html":{}}}],["template",{"_index":899,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["templates",{"_index":902,"title":{},"body":{"modules/MailModule.html":{}}}],["test",{"_index":1768,"title":{},"body":{"index.html":{}}}],["test:covresources",{"_index":1771,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1770,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1766,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1812,"title":{},"body":{"index.html":{}}}],["this.accesstokenguard",{"_index":401,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.appservice.gethello",{"_index":132,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.otpsignin(otpsignindto",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.refreshtokens(refreshtokendto",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signin(signindto",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authtypeguardmap[type]).flat",{"_index":416,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.category",{"_index":1124,"title":{},"body":{"entities/Product.html":{}}}],["this.category.tolowercase",{"_index":1125,"title":{},"body":{"entities/Product.html":{}}}],["this.clearotpandexpirytimeprovider.clearotpandexpirytime(user",{"_index":1666,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.clothtype",{"_index":1128,"title":{},"body":{"entities/Product.html":{}}}],["this.clothtype.tolowercase",{"_index":1129,"title":{},"body":{"entities/Product.html":{}}}],["this.configservice.get('appconfig.apiversion",{"_index":700,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["this.configservice.get('appconfig.awsbucketname",{"_index":1519,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["this.configservice.get('appconfig.awscloudfronturl')}/${name",{"_index":1558,"title":{},"body":{"injectables/UploadsService.html":{}}}],["this.createproductprovider.createproduct(createproductdto",{"_index":1297,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.createreviewprovider.createreview(createreviewdto",{"_index":1354,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.createuserprovider.createuser(createuserdto",{"_index":1662,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.datasource.createqueryrunner",{"_index":516,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["this.dressstyle",{"_index":1126,"title":{},"body":{"entities/Product.html":{}}}],["this.dressstyle.tolowercase",{"_index":1127,"title":{},"body":{"entities/Product.html":{}}}],["this.extractrequestfromheader(request",{"_index":77,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.findallproductsprovider.findall(productquery",{"_index":1300,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.findonebyidprovider.findbyid(id",{"_index":1667,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.findoneuserbyemailprovider.findonebyemail(email",{"_index":1663,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.finduserbyotpandexpiresprovider.finduserbyotpandexpirytime",{"_index":1665,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.generatefilename(file",{"_index":1521,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["this.generatetokenprovider.generatetokens(user",{"_index":973,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["this.jwtconfiguration",{"_index":88,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.jwtconfiguration.accesstokenttl",{"_index":832,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.jwtconfiguration.audience",{"_index":823,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["this.jwtconfiguration.issuer",{"_index":825,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["this.jwtconfiguration.refreshtokenttl",{"_index":836,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.jwtconfiguration.secret",{"_index":827,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["this.jwtservice.signasync",{"_index":821,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.jwtservice.verify",{"_index":87,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.jwtservice.verifyasync",{"_index":1315,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["this.mailerservice.sendmail",{"_index":925,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailservice.sendloginotp(user",{"_index":1397,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.mailservice.sendsubscribermail(subscriber",{"_index":1451,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.name",{"_index":1122,"title":{},"body":{"entities/Product.html":{}}}],["this.name.tolowercase",{"_index":1123,"title":{},"body":{"entities/Product.html":{}}}],["this.otpsigninprovider.signinwithotp(otpsignindto",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.paginationprovider.paginationquery",{"_index":763,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/UsersService.html":{}}}],["this.productrepository",{"_index":764,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["this.productrepository.delete(productid",{"_index":1302,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productrepository.findone",{"_index":1457,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["this.productrepository.findoneby",{"_index":1298,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productrepository.save(product",{"_index":1480,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["this.productsservice.createproduct(createproductdto",{"_index":1252,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.deleteproduct(productid",{"_index":1270,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findall(productquery",{"_index":1261,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findproductbyid(productid",{"_index":626,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"controllers/ProductsController.html":{}}}],["this.productsservice.updateproduct(productid",{"_index":1265,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productvariantrepository.findone",{"_index":1183,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["this.productvariantrepository.save(variant",{"_index":1186,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["this.productvariantsservice.findproductvariantbyid",{"_index":1485,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["this.productvariantsservice.saveproductvariant(variant",{"_index":1498,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["this.reflector.getallandoverride(auth_type_key",{"_index":410,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.reflector.getallandoverride(roles_key",{"_index":1368,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.refreshtokenprovider.refreshtokens(refreshtokendto",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.request.headers.host",{"_index":1018,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["this.request.protocol",{"_index":1017,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["this.reviewsrepository.create",{"_index":628,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["this.reviewsrepository.save(newreview",{"_index":629,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["this.signinprovider.signin(signindto",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.signtoken",{"_index":830,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.signtoken(user.id",{"_index":835,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.storeotpandexpiresprovider.storeotpandexpire(user",{"_index":1664,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.subscriberrepository.create(createsubscriberdto",{"_index":1449,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscriberrepository.delete(id",{"_index":1452,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscriberrepository.save(subscriber",{"_index":1450,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.updateproductprovider.updateproduct(id",{"_index":1301,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.uploadsservice.uploadfile(file",{"_index":533,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["this.uploadtoawsprovider.fileupload(file",{"_index":1557,"title":{},"body":{"injectables/UploadsService.html":{}}}],["this.usersrepository",{"_index":1670,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.create",{"_index":675,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["this.usersrepository.delete(userid",{"_index":1671,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.find",{"_index":796,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["this.usersrepository.findone",{"_index":784,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{}}}],["this.usersrepository.findoneby",{"_index":775,"title":{},"body":{"injectables/FindOneByIdProvider.html":{},"injectables/UsersService.html":{}}}],["this.usersrepository.save(newuser",{"_index":676,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["this.usersrepository.save(newuserobj",{"_index":445,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{}}}],["this.usersrepository.save(user",{"_index":1673,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.clearotpandexpirytime(user",{"_index":971,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["this.usersservice.createuser",{"_index":1389,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.usersservice.deleteuser(userid",{"_index":1618,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(usersquery",{"_index":1613,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyemail(signindto.email",{"_index":1387,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.usersservice.findonebyid(sub",{"_index":1318,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["this.usersservice.findonebyid(userid",{"_index":1611,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.finduserbyresetotpandexpirytime(hashedotp",{"_index":969,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["this.usersservice.storetokenotpandotpexpire(user",{"_index":1396,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.usersservice.updateuser(user.sub",{"_index":1615,"title":{},"body":{"controllers/UsersController.html":{}}}],["through",{"_index":419,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{}}}],["throw",{"_index":78,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}}}],["ticket",{"_index":926,"title":{},"body":{"injectables/MailService.html":{}}}],["time",{"_index":790,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["time.provider",{"_index":1630,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["time.provider.ts",{"_index":427,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"coverage.html":{}}}],["time.provider.ts:14",{"_index":792,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["time.provider.ts:25",{"_index":434,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{}}}],["time.provider.ts:32",{"_index":794,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["time.provider.ts:7",{"_index":431,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{}}}],["timestamp",{"_index":968,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/UploadToAwsProvider.html":{},"entities/User.html":{}}}],["tls",{"_index":896,"title":{},"body":{"modules/MailModule.html":{}}}],["token",{"_index":11,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"controllers/ProductsController.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["token.dto",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenProvider.html":{}}}],["token.dto.ts",{"_index":1303,"title":{},"body":{"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["token.dto.ts:17",{"_index":1305,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["token.guard",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{}}}],["token.guard.ts",{"_index":8,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{}}}],["token.guard.ts:18",{"_index":24,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard.ts:42",{"_index":32,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard.ts:77",{"_index":46,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.provider",{"_index":354,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["token.provider.ts",{"_index":1308,"title":{},"body":{"injectables/RefreshTokenProvider.html":{},"coverage.html":{}}}],["token.provider.ts:19",{"_index":1310,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["token.provider.ts:56",{"_index":1311,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["token/access",{"_index":7,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["tokend",{"_index":1312,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["tokens",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["tokens')@httpcode(httpstatus.ok)@auth(authtype.none",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{}}}],["tokens'})@apiresponse({status",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{}}}],["tokens.provider",{"_index":351,"title":{},"body":{"modules/AuthModule.html":{},"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["tokens.provider.ts",{"_index":803,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"coverage.html":{}}}],["tokens.provider.ts:12",{"_index":807,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["tokens.provider.ts:38",{"_index":813,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["tokens.provider.ts:58",{"_index":809,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["top",{"_index":1460,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["totalitems",{"_index":981,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["totalpages",{"_index":983,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["touch",{"_index":1818,"title":{},"body":{"index.html":{}}}],["track",{"_index":933,"title":{},"body":{"injectables/MailService.html":{}}}],["transaction",{"_index":513,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["transformer",{"_index":477,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"dependencies.html":{}}}],["transformtolowercase",{"_index":1121,"title":{},"body":{"entities/Product.html":{}}}],["transport",{"_index":892,"title":{},"body":{"modules/MailModule.html":{}}}],["trim",{"_index":1529,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["true",{"_index":39,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"modules/MailModule.html":{},"entities/Product.html":{},"entities/ProductVariant.html":{},"controllers/ProductsController.html":{},"guards/RolesGuard.html":{},"entities/Subscriber.html":{},"injectables/UpdateProductProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["true})@type(undefined",{"_index":475,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{}}}],["try",{"_index":81,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}}}],["twitter",{"_index":1824,"title":{},"body":{"index.html":{}}}],["txn",{"_index":561,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["type",{"_index":28,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateUserDto.html":{},"controllers/ProductsController.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["type.enum.ts",{"_index":1739,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typeorm",{"_index":439,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/PaginationProvider.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"entities/Review.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([product",{"_index":1285,"title":{},"body":{"modules/ProductsModule.html":{}}}],["typeormmodule.forfeature([productimage",{"_index":1148,"title":{},"body":{"modules/ProductImagesModule.html":{}}}],["typeormmodule.forfeature([productvariant",{"_index":1169,"title":{},"body":{"modules/ProductVariantsModule.html":{}}}],["typeormmodule.forfeature([review",{"_index":1349,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["typeormmodule.forfeature([subscriber",{"_index":1432,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":1633,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":399,"title":{},"body":{"guards/AuthenticationGuard.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{}}}],["types/multer",{"_index":1720,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":96,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["unable",{"_index":630,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["unauthorizedexception",{"_index":54,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["unauthorizedexception('otp",{"_index":800,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["unauthorizedexception('user",{"_index":787,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{}}}],["unauthorizedexception(error",{"_index":1319,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["undefined",{"_index":50,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/UpdateProductProvider.html":{},"miscellaneous/variables.html":{}}}],["undefined'])@auth(authtype.none)@get('/:productid",{"_index":1221,"title":{},"body":{"controllers/ProductsController.html":{}}}],["undefined'])@delete('/:userid",{"_index":1589,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined'])@get",{"_index":1595,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined'])@get('/:userid",{"_index":1599,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined})@apibody({description",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{}}}],["undefined})@httpcode(httpstatus.ok)@auth(authtype.none)@patch('/otp",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{}}}],["undefined})@post('/sign",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{}}}],["undefined})@post('refresh",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{}}}],["unique",{"_index":1218,"title":{},"body":{"controllers/ProductsController.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["unit",{"_index":1767,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":1837,"title":{},"body":{"properties.html":{}}}],["unsubscribed",{"_index":1446,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["unsubscribeemail",{"_index":1435,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["unsubscribeemail(id",{"_index":1443,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["unsubscribing",{"_index":1445,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["unsuccessful",{"_index":565,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["unsupported",{"_index":1549,"title":{},"body":{"injectables/UploadsService.html":{}}}],["unused",{"_index":98,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["update",{"_index":1296,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["update(otp.tostring",{"_index":1394,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["update(otpsignindto.otp.tostring",{"_index":965,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["updated",{"_index":1228,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["updatedat",{"_index":1086,"title":{},"body":{"entities/Product.html":{}}}],["updatedatecolumn",{"_index":1110,"title":{},"body":{"entities/Product.html":{}}}],["updateproduct",{"_index":1287,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["updateproduct(id",{"_index":1294,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["updateproductprovider",{"_index":1275,"title":{"injectables/UpdateProductProvider.html":{}},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{},"coverage.html":{},"overview.html":{}}}],["updates",{"_index":1262,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"index.html":{}}}],["updateuser",{"_index":1638,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuser(id",{"_index":1658,"title":{},"body":{"injectables/UsersService.html":{}}}],["upload",{"_index":525,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["uploadedfiles",{"_index":1230,"title":{},"body":{"controllers/ProductsController.html":{}}}],["uploadfile",{"_index":1543,"title":{},"body":{"injectables/UploadsService.html":{}}}],["uploadfile(file",{"_index":1546,"title":{},"body":{"injectables/UploadsService.html":{}}}],["uploading",{"_index":1507,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["uploadresult",{"_index":1517,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["uploadresult.key",{"_index":1524,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["uploads",{"_index":508,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["uploads/uploads.module",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["uploadsmodule",{"_index":152,"title":{"modules/UploadsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/UploadsModule.html":{},"modules.html":{},"overview.html":{}}}],["uploadsservice",{"_index":496,"title":{"injectables/UploadsService.html":{}},"body":{"injectables/CreateProductProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"coverage.html":{},"overview.html":{}}}],["uploadtoawsprovider",{"_index":1499,"title":{"injectables/UploadToAwsProvider.html":{}},"body":{"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"coverage.html":{},"overview.html":{}}}],["url",{"_index":1548,"title":{},"body":{"injectables/UploadsService.html":{}}}],["url(this.request.url",{"_index":1020,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["urls",{"_index":1015,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["urlsindex",{"_index":548,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["use",{"_index":392,"title":{},"body":{"guards/AuthenticationGuard.html":{},"modules/MailModule.html":{},"guards/RolesGuard.html":{}}}],["useclass",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["useinterceptors",{"_index":1231,"title":{},"body":{"controllers/ProductsController.html":{}}}],["user",{"_index":35,"title":{"entities/User.html":{}},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"controllers/ProductsController.html":{},"injectables/RefreshTokenProvider.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user.decorator",{"_index":1607,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.decorator.ts",{"_index":1684,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":670,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":652,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/PatchUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":1078,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:14",{"_index":867,"title":{},"body":{"classes/GetUsersBaseDto.html":{}}}],["user.dto.ts:16",{"_index":1076,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:20",{"_index":1079,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:21",{"_index":653,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUsersBaseDto.html":{}}}],["user.dto.ts:24",{"_index":1080,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:28",{"_index":1075,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:32",{"_index":655,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{}}}],["user.dto.ts:36",{"_index":1082,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:8",{"_index":1077,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.email",{"_index":833,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{}}}],["user.entity",{"_index":438,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.fullname",{"_index":937,"title":{},"body":{"injectables/MailService.html":{}}}],["user.id",{"_index":831,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{}}}],["user.role",{"_index":834,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{}}}],["user?.[field",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user[0",{"_index":799,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["userid",{"_index":814,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["userquery",{"_index":1650,"title":{},"body":{"injectables/UsersService.html":{}}}],["userquery.limit",{"_index":1668,"title":{},"body":{"injectables/UsersService.html":{}}}],["userquery.page",{"_index":1669,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":440,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/OtpSigninProvider.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":1624,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.provider",{"_index":1626,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["users.provider.ts",{"_index":664,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"coverage.html":{}}}],["users.provider.ts:18",{"_index":666,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["users.provider.ts:38",{"_index":668,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["users/users.module",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":1580,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":153,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersquery",{"_index":1597,"title":{},"body":{"controllers/UsersController.html":{}}}],["usersrepository",{"_index":432,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/UsersService.html":{}}}],["usersservice",{"_index":954,"title":{"injectables/UsersService.html":{}},"body":{"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":390,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"index.html":{}}}],["uuid",{"_index":1516,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"dependencies.html":{}}}],["uuid4",{"_index":1515,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["uuid4()}${extension",{"_index":1534,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["v",{"_index":756,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["v4",{"_index":1514,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["valid",{"_index":82,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["validate",{"_index":80,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["validatenested",{"_index":482,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{}}}],["validating",{"_index":1358,"title":{},"body":{"guards/RolesGuard.html":{}}}],["validation",{"_index":106,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["validationschema",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":483,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/OtpSigninDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{},"dependencies.html":{}}}],["value",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{},"classes/PaginationQueryDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":1414,"title":{},"body":{"entities/Subscriber.html":{},"entities/User.html":{}}}],["variable",{"_index":1678,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1838,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variant",{"_index":536,"title":{},"body":{"injectables/CreateProductProvider.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["variant.color",{"_index":1490,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variant.dto",{"_index":487,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{}}}],["variant.dto.ts",{"_index":577,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"classes/PatchProductVariantDto.html":{},"coverage.html":{}}}],["variant.dto.ts:10",{"_index":1057,"title":{},"body":{"classes/PatchProductVariantDto.html":{}}}],["variant.dto.ts:14",{"_index":1060,"title":{},"body":{"classes/PatchProductVariantDto.html":{}}}],["variant.dto.ts:15",{"_index":581,"title":{},"body":{"classes/CreateProductVariantDto.html":{}}}],["variant.dto.ts:19",{"_index":586,"title":{},"body":{"classes/CreateProductVariantDto.html":{}}}],["variant.dto.ts:24",{"_index":585,"title":{},"body":{"classes/CreateProductVariantDto.html":{}}}],["variant.dto.ts:30",{"_index":583,"title":{},"body":{"classes/CreateProductVariantDto.html":{}}}],["variant.images",{"_index":1136,"title":{},"body":{"entities/ProductImage.html":{}}}],["variant.product",{"_index":1112,"title":{},"body":{"entities/Product.html":{}}}],["variant.quantity",{"_index":1494,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variant.size",{"_index":1492,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variant.soldout",{"_index":1496,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantdto",{"_index":1484,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantdto.color",{"_index":1489,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantdto.id",{"_index":1486,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantdto.quantity",{"_index":1493,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantdto.size",{"_index":1491,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantdto.soldout",{"_index":1495,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantid",{"_index":1179,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["variants",{"_index":459,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"injectables/FindAllProductsProvider.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{},"injectables/UpdateProductProvider.html":{}}}],["variants.entity",{"_index":488,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{}}}],["variants.entity.ts",{"_index":1151,"title":{},"body":{"entities/ProductVariant.html":{},"coverage.html":{}}}],["variants.entity.ts:15",{"_index":1153,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:18",{"_index":1152,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:21",{"_index":1159,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:24",{"_index":1158,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:27",{"_index":1161,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:33",{"_index":1157,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:39",{"_index":1155,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.images",{"_index":762,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["variants.module",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{}}}],["variants.module.ts",{"_index":1167,"title":{},"body":{"modules/ProductVariantsModule.html":{}}}],["variants.service",{"_index":1168,"title":{},"body":{"modules/ProductVariantsModule.html":{},"injectables/UpdateProductProvider.html":{}}}],["variants.service.ts",{"_index":1171,"title":{},"body":{"injectables/ProductVariantsService.html":{},"coverage.html":{}}}],["variants.service.ts:22",{"_index":1178,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["variants.service.ts:44",{"_index":1181,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["variants.service.ts:7",{"_index":1175,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["variants/dto/create",{"_index":486,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"coverage.html":{}}}],["variants/dto/patch",{"_index":1054,"title":{},"body":{"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"coverage.html":{}}}],["variants/product",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["variants/providers/product",{"_index":1170,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{},"coverage.html":{}}}],["variants[${i}][images",{"_index":1248,"title":{},"body":{"controllers/ProductsController.html":{}}}],["variantsimages",{"_index":526,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["variantsimages.push(filearray",{"_index":529,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["various",{"_index":978,"title":{},"body":{"interfaces/Paginated.html":{}}}],["vars",{"_index":99,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["verify",{"_index":1314,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["version",{"_index":1835,"title":{},"body":{"properties.html":{}}}],["video",{"_index":1788,"title":{},"body":{"index.html":{}}}],["visit",{"_index":1777,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":1790,"title":{},"body":{"index.html":{}}}],["vr",{"_index":542,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["want",{"_index":1209,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["watch",{"_index":1762,"title":{},"body":{"index.html":{}}}],["wears",{"_index":939,"title":{},"body":{"injectables/MailService.html":{}}}],["website",{"_index":1822,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":942,"title":{},"body":{"injectables/MailService.html":{}}}],["whereoptions",{"_index":729,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["whereoptions.push(filteredconditions",{"_index":757,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["whether",{"_index":42,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{},"guards/RolesGuard.html":{}}}],["white",{"_index":1526,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["without",{"_index":394,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["working",{"_index":1776,"title":{},"body":{"index.html":{}}}],["world",{"_index":243,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":1256,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["yes",{"_index":815,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/PaginationProvider.html":{}}}],["you'd",{"_index":1816,"title":{},"body":{"index.html":{}}}],["zipcode",{"_index":1073,"title":{},"body":{"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["zoom",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PaginationModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AccessTokenGuard.html":{"url":"guards/AccessTokenGuard.html","title":"guard - AccessTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AccessTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/access-token/access-token.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    guard for access token\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractRequestFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConfiguration: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/access-token/access-token.guard.ts:18\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/access-token/access-token.guard.ts:42\n                        \n                    \n\n\n            \n                \n                        function for checking if user has access token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                true or false depending on whether user is signed in or not\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractRequestFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractRequestFromHeader(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/access-token/access-token.guard.ts:77\n                        \n                    \n\n\n            \n                \n                        function for extracting the access token from the request headers\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                access token\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ConfigType } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\nimport jwtConfig from 'src/auth/config/jwt.config';\nimport { REQUEST_USER_KEY } from 'src/auth/constants/auth.constant';\n\n/**\n * guard for access token\n */\n@Injectable()\nexport class AccessTokenGuard implements CanActivate {\n  /**\n   * constructor\n   * @param jwtService\n   * @param jwtConfiguration\n   */\n  constructor(\n    /**\n     * Inject jwtService\n     */\n    private readonly jwtService: JwtService,\n\n    /**\n     * inject jwt config\n     */\n    @Inject(jwtConfig.KEY)\n    private readonly jwtConfiguration: ConfigType,\n  ) {}\n\n  /**\n   * function for checking if user has access token\n   * @param context\n   * @returns true or false depending on whether user is signed in or not\n   */\n  async canActivate(context: ExecutionContext): Promise {\n    // we can grab the request from the excetion context\n    const request = context.switchToHttp().getRequest();\n\n    // extract the token from the header\n    const token = this.extractRequestFromHeader(request);\n\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n\n    // validate the token\n    try {\n      // if the token is valid, jwt returns the payload which contains info for indetifying the user\n      const payload = await this.jwtService.verify(\n        token,\n        this.jwtConfiguration,\n      );\n\n      // setting the request.user = payload\n      request[REQUEST_USER_KEY] = payload;\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (_) {\n      throw new UnauthorizedException();\n    }\n\n    // accept or deny req based on validation\n    return true;\n  }\n\n  /**\n   * function for extracting the access token from the request headers\n   * @param request\n   * @returns access token\n   */\n  private extractRequestFromHeader(request: Request): string | undefined {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [_, token] = request.headers.authorization?.split(' ') ?? [];\n    return token;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActiveUserData.html":{"url":"interfaces/ActiveUserData.html","title":"interface - ActiveUserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActiveUserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/active-user-data.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for a user that has logged in (payload)\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    user email\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    user role\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    id for user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ActiveUserData {\n  /**\n   * id for user\n   */\n  sub: string;\n\n  /**\n   * user email\n   */\n  email: string;\n\n  /**\n   * user role\n   */\n  role: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nProductImagesModule\n\nProductImagesModule\n\nAppModule -->\n\nProductImagesModule->AppModule\n\n\n\n\n\nProductVariantsModule\n\nProductVariantsModule\n\nAppModule -->\n\nProductVariantsModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nReviewsModule\n\nReviewsModule\n\nAppModule -->\n\nReviewsModule->AppModule\n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUploadsModule\n\nUploadsModule\n\nAppModule -->\n\nUploadsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            ProductImagesModule\n                        \n                        \n                            ProductVariantsModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            ReviewsModule\n                        \n                        \n                            SubscribersModule\n                        \n                        \n                            UploadsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport appConfig from './config/app.config';\nimport databaseConfig from './config/database.config';\nimport enviromentValidation from './config/enviroment.validation';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { MailModule } from './mail/mail.module';\nimport { SubscribersModule } from './subscribers/subscribers.module';\nimport { APP_GUARD, APP_INTERCEPTOR } from '@nestjs/core';\nimport { DataResponseInterceptor } from './common/interceptors/data-response/data-response.interceptor';\nimport { AuthenticationGuard } from './auth/guards/authentication/authentication.guard';\nimport { RolesGuard } from './auth/guards/roles/roles.guard';\nimport { AccessTokenGuard } from './auth/guards/access-token/access-token.guard';\nimport jwtConfig from './auth/config/jwt.config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ProductsModule } from './products/products.module';\nimport { ProductVariantsModule } from './product-variants/product-variants.module';\nimport { ProductImagesModule } from './product-images/product-images.module';\n\nimport { ReviewsModule } from './reviews/reviews.module';\nimport { UploadsModule } from './uploads/uploads.module';\n\n/**\n * app environment\n */\nconst ENV = process.env.NODE_ENV;\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: !ENV ? '.env' : `.env.${ENV}`,\n      load: [appConfig, databaseConfig],\n      validationSchema: enviromentValidation,\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => {\n        return {\n          type: 'postgres',\n          autoLoadEntities: configService.get('database.autoLoadEntities'),\n          synchronize: configService.get('database.synchronize'),\n          port: +configService.get('database.port'),\n          username: configService.get('database.user'),\n          password: configService.get('database.password'),\n          host: configService.get('database.host'),\n          database: configService.get('database.name'),\n          ssl:\n            process.env.NODE_ENV === 'development'\n              ? false\n              : {\n                  rejectUnauthorized: false,\n                },\n          logging: process.env.NODE_ENV !== 'production',\n        };\n      },\n    }),\n    UsersModule,\n    AuthModule,\n    MailModule,\n    SubscribersModule,\n    // Importing an enviroment config specific for this module\n    ConfigModule.forFeature(jwtConfig),\n    // for asynchrousnously registering the jwt module and passing the config to the module\n    JwtModule.registerAsync(jwtConfig.asProvider()),\n    ProductsModule,\n    ProductVariantsModule,\n    ProductImagesModule,\n    ReviewsModule,\n    UploadsModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: DataResponseInterceptor,\n    },\n    {\n      provide: APP_GUARD,\n      useClass: AuthenticationGuard,\n    },\n    {\n      provide: APP_GUARD,\n      useClass: RolesGuard,\n    },\n    AccessTokenGuard,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n            \n                Description\n            \n            \n                controller for the auth route\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                otpSignin\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                refreshTokens\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        otpSignin\n                        \n                    \n                \n            \n            \n                \n                        \n                    otpSignin(otpSigninDto: OtpSigninDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It signs in the user with a valid otp'})@ApiResponse({status: 200, description: 'Login Successfully', example: undefined})@ApiBody({description: 'Contains the  otp', required: true, type: OtpSigninDto, examples: undefined})@HttpCode(HttpStatus.OK)@Auth(AuthType.None)@Patch('/otp-signin')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:115\n                        \n                    \n\n\n            \n                \n                        route for otp signin\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otpSigninDto\n                                            \n                                                            OtpSigninDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshTokens(refreshTokenDto: RefreshTokenDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It creates  new access and refresh tokens'})@ApiResponse({status: 200, description: 'Access and refresh tokens are created successfully', example: undefined})@ApiBody({description: 'Contains the refresh token', required: true, type: RefreshTokenDto, examples: undefined})@Post('refresh-tokens')@HttpCode(HttpStatus.OK)@Auth(AuthType.None)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:155\n                        \n                    \n\n\n            \n                \n                        route for refresh tokens\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshTokenDto\n                                            \n                                                            RefreshTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: SignInDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It signs in a user with valid email and password'})@ApiResponse({status: 200, description: 'User is signed in successfully', example: undefined})@ApiBody({description: 'Signs in a user', required: true, type: SignInDto, examples: undefined})@Post('/sign-in')@Auth(AuthType.None)@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:76\n                        \n                    \n\n\n            \n                \n                        route for sign in\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                access token and refresh token\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  HttpCode,\n  HttpStatus,\n  Patch,\n  Post,\n} from '@nestjs/common';\nimport { SignInDto } from './dtos/sign-in.dto';\nimport { AuthService } from './providers/auth.service';\nimport { Auth } from './decorator/auth.decorator';\nimport { AuthType } from './enums/auth-type.enum';\nimport { RefreshTokenDto } from './dtos/refresh-token.dto';\nimport { ApiBody, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { OtpSigninDto } from './dtos/otpSignin.dto';\n\n/**\n * controller for the auth route\n */\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  /**\n   * constructor\n   * @param authService\n   */\n  constructor(\n    /**\n     * injecting the auth service\n     */\n    private readonly authService: AuthService,\n  ) {}\n\n  /**\n   * route for sign in\n   * @param signInDto\n   * @returns access token and refresh token\n   */\n  @ApiOperation({\n    summary: 'It signs in a user with valid email and password',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'User is signed in successfully',\n    example: {\n      summary: 'Access and refresh token',\n      value: {\n        accessToken: 'jsbfiwhvfquobdfj',\n        refreshToken: 'jsbfiwhvfquobdfj',\n      },\n    },\n  })\n  @ApiBody({\n    description: 'Signs in a user',\n    required: true,\n    type: SignInDto,\n    examples: {\n      example1: {\n        summary: 'Valid request example',\n        value: {\n          email: 'iloghaluagneskc@gmail.com',\n          password: '@Password1',\n        },\n      },\n      example2: {\n        summary: 'Invalid request example (missing password)',\n        value: {\n          email: 'iloghaluagneskc@gmail.com',\n        },\n      },\n    },\n  })\n  @Post('/sign-in')\n  @Auth(AuthType.None)\n  @HttpCode(HttpStatus.OK)\n  public signIn(@Body() signInDto: SignInDto) {\n    return this.authService.signIn(signInDto);\n  }\n\n  /**\n   * route for otp signin\n   */\n  @ApiOperation({\n    summary: 'It signs in the user with a valid otp',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Login Successfully',\n    example: {\n      value: {\n        message: 'Login successfully',\n      },\n    },\n  })\n  @ApiBody({\n    description: 'Contains the  otp',\n    required: true,\n    type: OtpSigninDto,\n    examples: {\n      example1: {\n        summary: 'Valid request example',\n        value: {\n          otp: 2354,\n        },\n      },\n      example2: {\n        summary: 'Invalid request example (missing otp)',\n        value: {},\n      },\n    },\n  })\n  @HttpCode(HttpStatus.OK)\n  @Auth(AuthType.None)\n  @Patch('/otp-signin')\n  public otpSignin(@Body() otpSigninDto: OtpSigninDto) {\n    return this.authService.otpSignin(otpSigninDto);\n  }\n\n  /**\n   * route for refresh tokens\n   */\n  @ApiOperation({\n    summary: 'It creates  new access and refresh tokens',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Access and refresh tokens are created successfully',\n    example: {\n      value: {\n        accessToken: 'jsbfiwhvfquobdfj',\n        refreshToken: 'jsbfiwhvfquobdfj',\n      },\n    },\n  })\n  @ApiBody({\n    description: 'Contains the refresh token',\n    required: true,\n    type: RefreshTokenDto,\n    examples: {\n      example1: {\n        summary: 'Valid request example',\n        value: {\n          refreshToken: 'jbfwihfubfjkebiejhfbw',\n        },\n      },\n      example2: {\n        summary: 'Invalid request example (missing refresh token)',\n        value: {},\n      },\n    },\n  })\n  @Post('refresh-tokens')\n  @HttpCode(HttpStatus.OK)\n  @Auth(AuthType.None)\n  public async refreshTokens(@Body() refreshTokenDto: RefreshTokenDto) {\n    // console.log('re', refreshTokenDto);\n    return await this.authService.refreshTokens(refreshTokenDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nGenerateTokensProvider\n\nGenerateTokensProvider\n\nAuthModule -->\n\nGenerateTokensProvider->AuthModule\n\n\n\n\n\nOtpSigninProvider\n\nOtpSigninProvider\n\nAuthModule -->\n\nOtpSigninProvider->AuthModule\n\n\n\n\n\nRefreshTokenProvider\n\nRefreshTokenProvider\n\nAuthModule -->\n\nRefreshTokenProvider->AuthModule\n\n\n\n\n\nSignInProvider\n\nSignInProvider\n\nAuthModule -->\n\nSignInProvider->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            GenerateTokensProvider\n                        \n                        \n                            OtpSigninProvider\n                        \n                        \n                            RefreshTokenProvider\n                        \n                        \n                            SignInProvider\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { AuthService } from './providers/auth.service';\nimport { AuthController } from './auth.controller';\nimport { UsersModule } from 'src/users/users.module';\nimport { SignInProvider } from './providers/sign-in.provider';\nimport { GenerateTokensProvider } from './providers/generate-tokens.provider';\nimport { ConfigModule } from '@nestjs/config';\nimport jwtConfig from './config/jwt.config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { RefreshTokenProvider } from './providers/refresh-token.provider';\nimport { OtpSigninProvider } from './providers/otp-signin.provider';\n\n@Module({\n  providers: [\n    AuthService,\n\n    SignInProvider,\n    GenerateTokensProvider,\n\n    RefreshTokenProvider,\n    OtpSigninProvider,\n  ],\n  controllers: [AuthController],\n  imports: [\n    forwardRef(() => UsersModule),\n    ConfigModule.forFeature(jwtConfig),\n    // for asynchrousnously registering the jwt module and passing the config to the module\n    JwtModule.registerAsync(jwtConfig.asProvider()),\n  ],\n  exports: [],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                auth service for the auth module\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                otpSignin\n                            \n                            \n                                    Public\n                                    Async\n                                refreshTokens\n                            \n                            \n                                    Public\n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(signInProvider: SignInProvider, otpSigninProvider: OtpSigninProvider, refreshTokenProvider: RefreshTokenProvider)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        signInProvider\n                                                  \n                                                        \n                                                                        SignInProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        otpSigninProvider\n                                                  \n                                                        \n                                                                        OtpSigninProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        refreshTokenProvider\n                                                  \n                                                        \n                                                                        RefreshTokenProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        otpSignin\n                        \n                    \n                \n            \n            \n                \n                        \n                    otpSignin(otpSigninDto: OtpSigninDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:52\n                        \n                    \n\n\n            \n                \n                        function for resetting password\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otpSigninDto\n                                            \n                                                            OtpSigninDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshTokens(refreshTokenDto: RefreshTokenDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:61\n                        \n                    \n\n\n            \n                \n                        function for refreshing access token after it expires\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshTokenDto\n                                            \n                                                            RefreshTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                access and refresh tokens\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: SignInDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:43\n                        \n                    \n\n\n            \n                \n                        function for signing in a user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                access and refresh tokens\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SignInDto } from 'src/auth/dtos/sign-in.dto';\nimport { SignInProvider } from './sign-in.provider';\nimport { RefreshTokenDto } from 'src/auth/dtos/refresh-token.dto';\nimport { RefreshTokenProvider } from './refresh-token.provider';\nimport { OtpSigninDto } from '../dtos/otpSignin.dto';\nimport { OtpSigninProvider } from './otp-signin.provider';\n\n/**\n * auth service for the auth module\n */\n@Injectable()\nexport class AuthService {\n  /**\n   * constructor\n   * @param signInProvider\n   * @param forgotPasswordProvider\n   * @param resetPasswordProvider\n   * @param refreshTokenProvider\n   */\n  constructor(\n    /**\n     * injecting the sign in provider\n     */\n    private readonly signInProvider: SignInProvider,\n\n    /**\n     * injecting the otp sign in provider\n     */\n    private readonly otpSigninProvider: OtpSigninProvider,\n\n    /**\n     * injecting the refresh token provider\n     */\n    private readonly refreshTokenProvider: RefreshTokenProvider,\n  ) {}\n\n  /**\n   * function for signing in a user\n   * @param signInDto\n   * @returns access and refresh tokens\n   */\n  public async signIn(signInDto: SignInDto) {\n    return await this.signInProvider.signIn(signInDto);\n  }\n\n  /**\n   * function for resetting password\n   * @param resetPasswordDto\n   * @returns user\n   */\n  public async otpSignin(otpSigninDto: OtpSigninDto) {\n    return await this.otpSigninProvider.signInWithOtp(otpSigninDto);\n  }\n\n  /**\n   * function for refreshing access token after it expires\n   * @param refreshTokenDto\n   * @returns access and refresh tokens\n   */\n  public async refreshTokens(refreshTokenDto: RefreshTokenDto) {\n    return await this.refreshTokenProvider.refreshTokens(refreshTokenDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/authentication/authentication.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    guard for authentication\n\n                \n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authTypeGuardMap\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                defaultAuthType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, accessTokenGuard: AccessTokenGuard)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/authentication/authentication.guard.ts:33\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessTokenGuard\n                                                  \n                                                        \n                                                                        AccessTokenGuard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/authentication/authentication.guard.ts:59\n                        \n                    \n\n\n            \n                \n                        function for authenticating a user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                true or false based on whether user is logged in or not\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\n// import { Observable } from 'rxjs';\nimport { AccessTokenGuard } from '../access-token/access-token.guard';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\nimport { AUTH_TYPE_KEY } from 'src/auth/constants/auth.constant';\n\n/**\n * guard for authentication\n */\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  // using static means you can use the name of the property of the class without the \"this\" keyword\n  /**\n   * default auth type\n   */\n  private static readonly defaultAuthType = AuthType.Bearer;\n\n  /**\n   * map for auth types and guards they use\n   */\n  private readonly authTypeGuardMap: Record = {\n    [AuthType.Bearer]: this.accessTokenGuard,\n    [AuthType.None]: { canActivate: () => true },\n  };\n\n  /**\n   * constructor\n   * @param reflector\n   * @param accessTokenGuard\n   */\n  constructor(\n    /**\n     * injecting the reflector class\n     * The reflector class makes you access diff metadata from the execution context\n     */\n    private readonly reflector: Reflector,\n\n    /**\n     * Injecting the access token guard\n     *\n     */\n    private readonly accessTokenGuard: AccessTokenGuard,\n  ) {}\n\n  /**\n   * function for authenticating a user\n   * @param context\n   * @returns true or false based on whether user is logged in or not\n   */\n  async canActivate(context: ExecutionContext): Promise {\n    // Get all the auth types from reflector\n    // This returns an array of the auth types for a specific class or method in a class\n    const authTypes = this.reflector.getAllAndOverride(AUTH_TYPE_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]) ?? [AuthenticationGuard.defaultAuthType];\n\n    // create an array of the guards\n    const guards = authTypes.map((type) => this.authTypeGuardMap[type]).flat();\n\n    // Default error\n    const error = new UnauthorizedException();\n\n    // loop through the guards and fire the canActivate\n    for (const instance of guards) {\n      let canActivate;\n\n      try {\n        canActivate = await Promise.resolve(instance.canActivate(context));\n      } catch (err) {\n        throw err;\n      }\n\n      if (canActivate) {\n        return true;\n      }\n    }\n\n    throw error;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClearOtpAndExpiryTimeProvider.html":{"url":"injectables/ClearOtpAndExpiryTimeProvider.html","title":"injectable - ClearOtpAndExpiryTimeProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClearOtpAndExpiryTimeProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/clear-otp-and-expiry-time.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                clearOtpAndExpiryTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/clear-otp-and-expiry-time.provider.ts:7\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        clearOtpAndExpiryTime\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearOtpAndExpiryTime(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/clear-otp-and-expiry-time.provider.ts:25\n                        \n                    \n\n\n            \n                \n                        function for clearing otp after login\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from '../user.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class ClearOtpAndExpiryTimeProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * injecting the users repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for clearing otp after login\n   * @param user\n   * @returns user\n   */\n  public async clearOtpAndExpiryTime(user: User) {\n    const newUserObj = {\n      ...user,\n      otp: null,\n      otpExpire: null,\n    };\n\n    try {\n      return await this.usersRepository.save(newUserObj);\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/createProductDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                brand\n                            \n                            \n                                    \n                                    \n                                category\n                            \n                            \n                                    \n                                    \n                                clothType\n                            \n                            \n                                    \n                                    \n                                discount\n                            \n                            \n                                    \n                                    \n                                dressStyle\n                            \n                            \n                                    \n                                    \n                                longDescription\n                            \n                            \n                                    \n                                    \n                                material\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                shortDescription\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                variants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        brand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        clothType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dressStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        longDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        material\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        shortDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProductVariant[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsNotEmpty()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:57\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsInt,\n  IsNotEmpty,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { CreateProductVariantDto } from 'src/product-variants/dto/create-product-variant.dto';\nimport { ProductVariant } from 'src/product-variants/product-variants.entity';\n\nexport class CreateProductDto {\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  price: number;\n\n  @IsInt()\n  @IsNotEmpty()\n  discount: number;\n\n  @IsString()\n  @IsNotEmpty()\n  category: string;\n\n  @IsString()\n  @IsNotEmpty()\n  dressStyle: string;\n\n  @IsString()\n  @IsNotEmpty()\n  clothType: string;\n\n  @IsString()\n  @IsNotEmpty()\n  material: string;\n\n  @IsString()\n  @IsNotEmpty()\n  brand: string;\n\n  @IsString()\n  @IsNotEmpty()\n  shortDescription: string;\n\n  @IsString()\n  @IsNotEmpty()\n  longDescription: string;\n\n  @IsArray()\n  @IsNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => CreateProductVariantDto)\n  variants: ProductVariant[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateProductProvider.html":{"url":"injectables/CreateProductProvider.html","title":"injectable - CreateProductProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateProductProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/providers/create-product.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataSource: DataSource, uploadsService: UploadsService)\n                    \n                \n                        \n                            \n                                Defined in src/products/providers/create-product.provider.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uploadsService\n                                                  \n                                                        \n                                                                        UploadsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProduct(createProductDto: CreateProductDto, images: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/create-product.provider.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                images\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                a product\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { DataSource } from 'typeorm';\nimport { Product } from '../product.entity';\nimport { CreateProductDto } from '../dtos/createProductDto';\nimport { UploadsService } from 'src/uploads/providers/uploads.service';\nimport { ProductVariant } from 'src/product-variants/product-variants.entity';\nimport { ProductImage } from 'src/product-images/product-image.entity';\n\n@Injectable()\nexport class CreateProductProvider {\n  constructor(\n    /**\n     * Injecting datasource\n     */\n    private readonly dataSource: DataSource,\n\n    /**\n     * injecting uploads service\n     */\n    private readonly uploadsService: UploadsService,\n  ) {}\n\n  /**\n   * @function creates a product\n   * @param createProductDto\n   * @param images\n   * @returns a product\n   */\n  public async createProduct(\n    createProductDto: CreateProductDto,\n    images: { [key: string]: Express.Multer.File[] },\n  ): Promise {\n    // start query transaction\n    // create Query Runner instance\n    const queryRunner = this.dataSource.createQueryRunner();\n    try {\n      // connect query runner to datasource\n      await queryRunner.connect();\n      // start transaction\n      await queryRunner.startTransaction();\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error) {\n      throw new RequestTimeoutException('Could not connect to datasource');\n    }\n\n    try {\n      // create the product\n      const product = queryRunner.manager.create(Product, {\n        ...createProductDto,\n        variants: [],\n      });\n\n      // save the product\n      const savedProduct = await queryRunner.manager.save(product);\n\n      // upload the images in the variants\n      const variantsImages = [];\n\n      Object.entries(images).forEach(\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        ([key, fileArray]) => {\n          variantsImages.push(fileArray);\n        },\n      );\n\n      const storedImagesUrls = [];\n\n      // loop through the array of files and upload them\n      for (let i = 0; i  await this.uploadsService.uploadFile(file),\n          ),\n        );\n        storedImagesUrls.push(urls);\n      }\n\n      // loop through the product variants and create product variants\n      const savedVariants = [];\n\n      for (const variant of createProductDto.variants) {\n        /**\n         * param\n         * entity\n         * dto\n         */\n        const prVariant = queryRunner.manager.create(ProductVariant, {\n          ...variant,\n          product: savedProduct,\n        });\n\n        const vr = await queryRunner.manager.save(prVariant);\n        savedVariants.push(vr);\n      }\n\n      // loop through the images and create a product image\n      const productImages = storedImagesUrls\n        .map((imgUrls: string[], urlsIndex) =>\n          imgUrls.map((imgUrl, index) =>\n            queryRunner.manager.create(ProductImage, {\n              imagePath: imgUrl,\n              displayOrder: index,\n              productVariant: savedVariants[urlsIndex],\n            }),\n          ),\n        )\n        .flat();\n\n      productImages.map(async (image) => await queryRunner.manager.save(image));\n\n      // if successful commit\n      // ensures the txn is committed to the db\n      await queryRunner.commitTransaction();\n\n      // return product\n      return savedProduct;\n    } catch (error) {\n      // if unsuccessful rollback\n      // we rollback the txn here if it is not successful\n      await queryRunner.rollbackTransaction();\n      throw new ConflictException('Could not complete the transaction', {\n        description: String(error),\n      });\n    } finally {\n      // relsease the connection\n      // release connection whether it was successful or not\n      try {\n        await queryRunner.release();\n      } catch (error) {\n        throw new RequestTimeoutException('Could not release the connection', {\n          description: String(error),\n        });\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductVariantDto.html":{"url":"classes/CreateProductVariantDto.html","title":"class - CreateProductVariantDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductVariantDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-variants/dto/create-product-variant.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                color\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                images\n                            \n                            \n                                    \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/create-product-variant.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/create-product-variant.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/create-product-variant.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/create-product-variant.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsInt,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Min,\n  ValidateNested,\n} from 'class-validator';\n\nexport class CreateProductVariantDto {\n  @IsString()\n  @IsNotEmpty()\n  color: string;\n\n  @IsString()\n  @IsNotEmpty()\n  size: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  @Min(1)\n  quantity: number;\n\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => String)\n  images?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReviewDto.html":{"url":"classes/CreateReviewDto.html","title":"class - CreateReviewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReviewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/dtos/create-review.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                review\n                            \n                            \n                                    \n                                    \n                                reviewer\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                stars\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        review\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/create-review.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        reviewer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/create-review.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        stars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()@Min(1, {message: 'Rating must be at least 1 star'})@Max(5, {message: 'Rating cannot exceed 5 stars'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/create-review.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsNotEmpty, IsString, Max, Min } from 'class-validator';\n\nexport class CreateReviewDto {\n  @IsString()\n  @IsNotEmpty()\n  reviewer: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  @Min(1, { message: 'Rating must be at least 1 star' })\n  @Max(5, { message: 'Rating cannot exceed 5 stars' })\n  stars: number;\n\n  @IsString()\n  @IsNotEmpty()\n  review: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateReviewProvider.html":{"url":"injectables/CreateReviewProvider.html","title":"injectable - CreateReviewProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateReviewProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/providers/create-review.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createReview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reviewsRepository: Repository, productsService: ProductsService)\n                    \n                \n                        \n                            \n                                Defined in src/reviews/providers/create-review.provider.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reviewsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productsService\n                                                  \n                                                        \n                                                                        ProductsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createReview\n                        \n                    \n                \n            \n            \n                \n                        \n                    createReview(createReviewDto: CreateReviewDto, productId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/reviews/providers/create-review.provider.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createReviewDto\n                                            \n                                                            CreateReviewDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                a review\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { CreateReviewDto } from '../dtos/create-review.dto';\nimport { Review } from '../reviews.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProductsService } from 'src/products/providers/products.service';\n\n@Injectable()\nexport class CreateReviewProvider {\n  constructor(\n    /**\n     * injecting the reviews repository\n     */\n    @InjectRepository(Review)\n    private readonly reviewsRepository: Repository,\n\n    /**\n     * injecting the products service\n     */\n    private readonly productsService: ProductsService,\n  ) {}\n\n  /**\n   * @function creates a review\n   * @param createReviewDto\n   * @param productId\n   * @returns  a review\n   */\n  public async createReview(\n    createReviewDto: CreateReviewDto,\n    productId: string,\n  ): Promise {\n    // find product\n    const product = await this.productsService.findProductById(productId);\n\n    // create a new review\n    let newReview = this.reviewsRepository.create({\n      ...createReviewDto,\n      product: product,\n    });\n\n    // save the review to the db\n    try {\n      newReview = await this.reviewsRepository.save(newReview);\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    return newReview;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSubscriberDto.html":{"url":"classes/CreateSubscriberDto.html","title":"class - CreateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dtos/create-subscriber.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto for creating a subscriber\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the email of the subscriber', example: 'Favour@gmail.com'})@IsEmail()@MaxLength(96)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dtos/create-subscriber.dto.ts:18\n                        \n                    \n\n            \n                \n                    email address\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, MaxLength } from 'class-validator';\n\n/**\n * dto for creating a subscriber\n */\nexport class CreateSubscriberDto {\n  /**\n   * email address\n   */\n  @ApiProperty({\n    description: 'This is the email of the subscriber',\n    example: 'Favour@gmail.com',\n  })\n  @IsEmail()\n  @MaxLength(96)\n  @IsNotEmpty()\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto class for creating user dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the email of the user', example: 'Favour@gmail.com'})@IsEmail()@MaxLength(96)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:21\n                        \n                    \n\n            \n                \n                    user email address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the role of the user', example: 'Admin'})@IsEnum(Role)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:32\n                        \n                    \n\n            \n                \n                    user role\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsEnum, IsNotEmpty, MaxLength } from 'class-validator';\n// import { accountType } from '../enums/account-type.enum';\n// import { Role } from 'src/auth/enums/role-type.enum';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Role } from 'src/auth/enums/role-type.enum';\n\n/**\n * dto class for creating user dto\n */\nexport class CreateUserDto {\n  /**\n   * user email address\n   */\n  @ApiProperty({\n    description: 'This is the email of the user',\n    example: 'Favour@gmail.com',\n  })\n  @IsEmail()\n  @MaxLength(96)\n  @IsNotEmpty()\n  email: string;\n\n  /**\n   * user role\n   */\n  @ApiProperty({\n    description: 'This is the role of the user',\n    example: 'Admin',\n  })\n  @IsEnum(Role)\n  @IsNotEmpty()\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUsersProvider.html":{"url":"injectables/CreateUsersProvider.html","title":"injectable - CreateUsersProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateUsersProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/create-users.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider class for creating user\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/create-users.provider.ts:18\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/create-users.provider.ts:38\n                        \n                    \n\n\n            \n                \n                        function for creating user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                created user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  forwardRef,\n  Inject,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { CreateUserDto } from '../dtos/create-user.dto';\nimport { Repository } from 'typeorm';\nimport { User } from '../user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n/**\n * provider class for creating user\n */\n@Injectable()\nexport class CreateUsersProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   * @param hashingProvider\n   * @param mailService\n   */\n  constructor(\n    /**\n     * inhjecting the user repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for creating user\n   * @param createUserDto\n   * @returns created user\n   */\n  public async createUser(createUserDto: CreateUserDto) {\n    // create a new user\n    let newUser = this.usersRepository.create({\n      ...createUserDto,\n    });\n\n    // save the user to the db\n    try {\n      newUser = await this.usersRepository.save(newUser);\n    } catch (error) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    return {\n      id: newUser.id,\n      email: newUser.email,\n      role: newUser.role,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataResponseInterceptor.html":{"url":"injectables/DataResponseInterceptor.html","title":"injectable - DataResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/data-response/data-response.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for the data response interceptor\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/data-response/data-response.interceptor.ts:14\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/interceptors/data-response/data-response.interceptor.ts:32\n                        \n                    \n\n\n            \n                \n                        function for formatting the response data\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                the response in {apiVersion: \"1.0.0\", data: ...} format\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { map, Observable } from 'rxjs';\n\n/**\n * provider for the data response interceptor\n */\n@Injectable()\nexport class DataResponseInterceptor implements NestInterceptor {\n  /**\n   * constructor\n   * @param configService\n   */\n  constructor(\n    /**\n     * injecting config service\n     */\n    private readonly configService: ConfigService,\n  ) {}\n\n  /**\n   * function for formatting the response data\n   * @param context\n   * @param next\n   * @returns the response in {apiVersion: \"1.0.0\", data: ...} format\n   */\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    // console.log('Before ...');\n    // before method execution\n    return next.handle().pipe(\n      map((data) => ({\n        apiVersion: this.configService.get('appConfig.apiVersion'),\n        data: data,\n      })),\n    );\n    // After method execution\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindAllProductsProvider.html":{"url":"injectables/FindAllProductsProvider.html","title":"injectable - FindAllProductsProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindAllProductsProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/providers/find-all-products.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productRepository: Repository, paginationProvider: PaginationProvider)\n                    \n                \n                        \n                            \n                                Defined in src/products/providers/find-all-products.provider.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paginationProvider\n                                                  \n                                                        \n                                                                        PaginationProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(productQuery: GetProductsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/find-all-products.provider.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productQuery\n                                            \n                                                            GetProductsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                a paginated list of products\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { GetProductsDto } from '../dtos/get-product.dto';\nimport { Paginated } from 'src/common/pagination/interfaces/paginated.interface';\nimport { Product } from '../product.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Between, In, Like, Repository } from 'typeorm';\nimport { PaginationProvider } from 'src/common/pagination/providers/pagination.provider';\n\n@Injectable()\nexport class FindAllProductsProvider {\n  constructor(\n    /**\n     * injecting the product repository\n     */\n    @InjectRepository(Product)\n    private readonly productRepository: Repository,\n\n    /**\n     * injecting the pagination provider\n     */\n    private readonly paginationProvider: PaginationProvider,\n  ) {}\n\n  /**\n   * @function finds all products And handle queries for filtering products\n   * @param productQuery\n   * @returns  a paginated list of products\n   */\n  public async findAll(\n    productQuery: GetProductsDto,\n  ): Promise> {\n    const { limit, page } = productQuery;\n\n    const whereOptions = [];\n\n    Object.keys(productQuery).forEach((key) => {\n      if (key === 'limit' || key === 'page' || !productQuery[key]) {\n        return;\n      }\n\n      const conditions = {\n        category: productQuery['category']\n          ? In(productQuery['category'].slice().split(','))\n          : undefined,\n        price: productQuery['price']\n          ? Between(\n              parseFloat(productQuery['price'].slice().split('-')[0]),\n              parseFloat(productQuery['price'].slice().split('-')[1]),\n            )\n          : undefined,\n        clothType: productQuery['clothType']\n          ? In(productQuery['clothType'].slice().split(','))\n          : undefined,\n        dressStyle: productQuery['dressStyle']\n          ? In(productQuery['dressStyle'].slice().split(','))\n          : undefined,\n        name: productQuery['name']\n          ? Like(`%${productQuery['name'].slice().split('-').join(' ')}%`)\n          : undefined,\n        variants: {\n          color: productQuery['colors']\n            ? In(productQuery['colors'].slice().split(','))\n            : undefined,\n          size: productQuery['sizes']\n            ? In(productQuery['sizes'].slice().split(','))\n            : undefined,\n        },\n      };\n\n      // Remove undefined nested conditions for variants\n      if (\n        conditions.variants.color === undefined &&\n        conditions.variants.size === undefined\n      ) {\n        conditions.variants = undefined;\n      }\n\n      // Remove undefined conditions\n      const filteredConditions = Object.fromEntries(\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        Object.entries(conditions).filter(([_, v]) => v !== undefined),\n      );\n\n      whereOptions.push(filteredConditions);\n    });\n\n    const checkWhereOptions = Object.keys(whereOptions).length;\n\n    const options = {\n      where: checkWhereOptions ? whereOptions : null,\n      relations: ['variants', 'variants.images'],\n    };\n\n    try {\n      const products = await this.paginationProvider.paginationQuery(\n        {\n          limit: limit,\n          page: page,\n        },\n        this.productRepository,\n        options,\n      );\n\n      return products;\n    } catch (error) {\n      throw new NotFoundException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindOneByIdProvider.html":{"url":"injectables/FindOneByIdProvider.html","title":"injectable - FindOneByIdProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindOneByIdProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/find-one-by-id.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider class for finding one user by id\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/find-one-by-id.provider.ts:14\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/find-one-by-id.provider.ts:32\n                        \n                    \n\n\n            \n                \n                        function for finding user based on id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { User } from '../user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n/**\n * provider class for finding one user by id\n */\n@Injectable()\nexport class FindOneByIdProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * injecting user repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for finding user based on id\n   * @param id\n   * @returns user\n   */\n  public async findById(id: string) {\n    let user;\n    try {\n      user = await this.usersRepository.findOneBy({\n        id,\n      });\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (err: any) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    /**\n     * Handle the user does not exist\n     */\n    if (!user) {\n      throw new BadRequestException('The user does not exist');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindOneUserByEmailProvider.html":{"url":"injectables/FindOneUserByEmailProvider.html","title":"injectable - FindOneUserByEmailProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindOneUserByEmailProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/find-one-user-by-email.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for finding user based on email\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findOneByEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/find-one-user-by-email.provider.ts:14\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/find-one-user-by-email.provider.ts:32\n                        \n                    \n\n\n            \n                \n                        function for finding user based on email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  RequestTimeoutException,\n  // UnauthorizedException,\n} from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { User } from '../user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n/**\n * provider for finding user based on email\n */\n@Injectable()\nexport class FindOneUserByEmailProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * Injecting usersRepository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for finding user based on email\n   * @param email\n   * @returns user\n   */\n  public async findOneByEmail(email: string) {\n    let user: User | undefined = undefined;\n\n    try {\n      user = await this.usersRepository.findOne({\n        where: { email: email },\n        select: ['id', 'email', 'role'],\n      });\n    } catch (error) {\n      throw new RequestTimeoutException(error, {\n        description: 'Could not fetch the user',\n      });\n    }\n\n    // if (!user) {\n    //   throw new UnauthorizedException('User does not exist');\n    // }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{"url":"injectables/FindUserByOtpAndExpiryTimeProvider.html","title":"injectable - FindUserByOtpAndExpiryTimeProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindUserByOtpAndExpiryTimeProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/find-user-by-reset-otp-and-expiry-time.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider class for finding user based on stored reset token and expiry time\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findUserByOtpAndExpiryTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/find-user-by-reset-otp-and-expiry-time.provider.ts:14\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findUserByOtpAndExpiryTime\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserByOtpAndExpiryTime(otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/find-user-by-reset-otp-and-expiry-time.provider.ts:32\n                        \n                    \n\n\n            \n                \n                        function for finding a user based on the stored reset token and expiry time\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  RequestTimeoutException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { MoreThan, Repository } from 'typeorm';\nimport { User } from '../user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n/**\n * provider class for finding user based on stored reset token and expiry time\n */\n@Injectable()\nexport class FindUserByOtpAndExpiryTimeProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * injecting the users repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for finding a user based on the stored reset token and expiry time\n   * @param otp\n   * @returns user\n   */\n  public async findUserByOtpAndExpiryTime(otp: string) {\n    let user;\n\n    try {\n      user = await this.usersRepository.find({\n        where: {\n          otp: otp,\n          otpExpire: MoreThan(new Date()),\n        },\n      });\n    } catch (error) {\n      throw new RequestTimeoutException(error, {\n        description: 'Could not fetch the user',\n      });\n    }\n\n    if (!user[0]) {\n      throw new UnauthorizedException('Otp is no longer valid');\n    }\n\n    return user[0];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GenerateTokensProvider.html":{"url":"injectables/GenerateTokensProvider.html","title":"injectable - GenerateTokensProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GenerateTokensProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/generate-tokens.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for generating tokens\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                generateTokens\n                            \n                            \n                                    Public\n                                    Async\n                                signToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConfiguration: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/generate-tokens.provider.ts:12\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        generateTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateTokens(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/generate-tokens.provider.ts:58\n                        \n                    \n\n\n            \n                \n                        function for generating tokens\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                access and refresh tokens\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        signToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    signToken(userId: string, expiresIn: number, payload?: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/generate-tokens.provider.ts:38\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        function for using jwt to sign the user info\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                expiresIn\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                the object containing payload when a user signs in\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport jwtConfig from '../config/jwt.config';\nimport { ConfigType } from '@nestjs/config';\nimport { ActiveUserData } from '../interfaces/active-user-data.interface';\nimport { User } from 'src/users/user.entity';\n\n/**\n * provider for generating tokens\n */\n@Injectable()\nexport class GenerateTokensProvider {\n  /**\n   * constructor\n   * @param jwtService\n   * @param jwtConfiguration\n   */\n  constructor(\n    /**\n     * Injecting the jwt service\n     */\n    private readonly jwtService: JwtService,\n\n    /**\n     * Injecting the jwt config\n     */\n    @Inject(jwtConfig.KEY)\n    private readonly jwtConfiguration: ConfigType,\n  ) {}\n\n  /**\n   * function for using jwt to sign the user info\n   * @param userId\n   * @param expiresIn\n   * @param payload\n   * @returns the object containing payload when a user signs in\n   */\n  public async signToken(userId: string, expiresIn: number, payload?: T) {\n    return await this.jwtService.signAsync(\n      {\n        sub: userId,\n        ...payload,\n      },\n      {\n        audience: this.jwtConfiguration.audience,\n        issuer: this.jwtConfiguration.issuer,\n        secret: this.jwtConfiguration.secret,\n        expiresIn,\n      },\n    );\n  }\n\n  /**\n   * function for generating tokens\n   * @param user\n   * @returns access and refresh tokens\n   */\n  public async generateTokens(user: User) {\n    const [accessToken, refreshToken] = await Promise.all([\n      // Generate the access token\n      this.signToken>(\n        user.id,\n        this.jwtConfiguration.accessTokenTtl,\n        {\n          email: user.email,\n          role: user.role,\n        },\n      ),\n      // Generate the refresh token\n      this.signToken(user.id, this.jwtConfiguration.refreshTokenTtl),\n    ]);\n\n    return {\n      accessToken,\n      refreshToken,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProductsBaseDto.html":{"url":"classes/GetProductsBaseDto.html","title":"class - GetProductsBaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProductsBaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/get-product.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                base dto fot products\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                category\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                clothType\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                colors\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                dressStyle\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                price\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                sizes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:21\n                        \n                    \n\n            \n                \n                    product category\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        clothType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:28\n                        \n                    \n\n            \n                \n                    productClothType\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        colors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:42\n                        \n                    \n\n            \n                \n                    product colors\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        dressStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:56\n                        \n                    \n\n            \n                \n                    product dressing style\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:14\n                        \n                    \n\n            \n                \n                    product name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:35\n                        \n                    \n\n            \n                \n                    product price\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        sizes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:49\n                        \n                    \n\n            \n                \n                    product sizes\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from 'class-validator';\nimport { IntersectionType } from '@nestjs/swagger';\nimport { PaginationQueryDto } from 'src/common/pagination/dtos/pagination-query.dto';\n\n/**\n * base dto fot products\n */\nclass GetProductsBaseDto {\n  /**\n   * product name\n   */\n  @IsString()\n  @IsOptional()\n  name?: string;\n\n  /**\n   * product category\n   */\n  @IsString()\n  @IsOptional()\n  category?: string;\n\n  /**\n   * productClothType\n   */\n  @IsString()\n  @IsOptional()\n  clothType?: string;\n\n  /**\n   * product price\n   */\n  @IsString()\n  @IsOptional()\n  price?: string;\n\n  /**\n   * product colors\n   */\n  @IsString()\n  @IsOptional()\n  colors?: string;\n\n  /**\n   * product sizes\n   */\n  @IsString()\n  @IsOptional()\n  sizes?: string;\n\n  /**\n   * product dressing style\n   */\n  @IsString()\n  @IsOptional()\n  dressStyle?: string;\n}\n\n/**\n * dto for get events\n */\nexport class GetProductsDto extends IntersectionType(\n  GetProductsBaseDto,\n  PaginationQueryDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProductsDto.html":{"url":"classes/GetProductsDto.html","title":"class - GetProductsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProductsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/get-product.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto for get events\n\n            \n\n            \n                Extends\n            \n            \n                            IntersectionType(\n  GetProductsBaseDto,\n  PaginationQueryDto,\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from 'class-validator';\nimport { IntersectionType } from '@nestjs/swagger';\nimport { PaginationQueryDto } from 'src/common/pagination/dtos/pagination-query.dto';\n\n/**\n * base dto fot products\n */\nclass GetProductsBaseDto {\n  /**\n   * product name\n   */\n  @IsString()\n  @IsOptional()\n  name?: string;\n\n  /**\n   * product category\n   */\n  @IsString()\n  @IsOptional()\n  category?: string;\n\n  /**\n   * productClothType\n   */\n  @IsString()\n  @IsOptional()\n  clothType?: string;\n\n  /**\n   * product price\n   */\n  @IsString()\n  @IsOptional()\n  price?: string;\n\n  /**\n   * product colors\n   */\n  @IsString()\n  @IsOptional()\n  colors?: string;\n\n  /**\n   * product sizes\n   */\n  @IsString()\n  @IsOptional()\n  sizes?: string;\n\n  /**\n   * product dressing style\n   */\n  @IsString()\n  @IsOptional()\n  dressStyle?: string;\n}\n\n/**\n * dto for get events\n */\nexport class GetProductsDto extends IntersectionType(\n  GetProductsBaseDto,\n  PaginationQueryDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersBaseDto.html":{"url":"classes/GetUsersBaseDto.html","title":"class - GetUsersBaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersBaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/get-user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto class for get user base\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                endDate\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/get-user.dto.ts:21\n                        \n                    \n\n            \n                \n                    end date\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/get-user.dto.ts:14\n                        \n                    \n\n            \n                \n                    start date\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IntersectionType } from '@nestjs/swagger';\nimport { IsDate, IsOptional } from 'class-validator';\nimport { PaginationQueryDto } from 'src/common/pagination/dtos/pagination-query.dto';\n\n/**\n * dto class for get user base\n */\nexport class GetUsersBaseDto {\n  /**\n   * start date\n   */\n  @IsDate()\n  @IsOptional()\n  startDate?: Date;\n\n  /**\n   * end date\n   */\n  @IsDate()\n  @IsOptional()\n  endDate?: Date;\n}\n\n/**\n * dto class for get user\n */\nexport class GetUsersDto extends IntersectionType(\n  GetUsersBaseDto,\n  PaginationQueryDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersDto.html":{"url":"classes/GetUsersDto.html","title":"class - GetUsersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/get-user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto class for get user\n\n            \n\n            \n                Extends\n            \n            \n                            IntersectionType(\n  GetUsersBaseDto,\n  PaginationQueryDto,\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IntersectionType } from '@nestjs/swagger';\nimport { IsDate, IsOptional } from 'class-validator';\nimport { PaginationQueryDto } from 'src/common/pagination/dtos/pagination-query.dto';\n\n/**\n * dto class for get user base\n */\nexport class GetUsersBaseDto {\n  /**\n   * start date\n   */\n  @IsDate()\n  @IsOptional()\n  startDate?: Date;\n\n  /**\n   * end date\n   */\n  @IsDate()\n  @IsOptional()\n  endDate?: Date;\n}\n\n/**\n * dto class for get user\n */\nexport class GetUsersDto extends IntersectionType(\n  GetUsersBaseDto,\n  PaginationQueryDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { MailService } from './providers/mail.service';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { ConfigService } from '@nestjs/config';\nimport { join } from 'path';\nimport { EjsAdapter } from '@nestjs-modules/mailer/dist/adapters/ejs.adapter';\n\n// makes importation of mail module to any module\n@Global()\n@Module({\n  imports: [\n    MailerModule.forRootAsync({\n      // we need the config service to configure the mailer module\n      inject: [ConfigService],\n      // we use the useFactory to inject the mailer module\n      useFactory: async (config: ConfigService) => {\n        // console.log(\n        //   config.get('appConfig.mailHost'),\n        //   config.get('appConfig.smtpUsername'),\n        //   config.get('appConfig.smtpPassword'),\n        // );\n        return {\n          transport: {\n            host: config.get('appConfig.mailHost'),\n            secure: true,\n            port: 465,\n            auth: {\n              user: config.get('appConfig.smtpUsername'),\n              pass: config.get('appConfig.smtpPassword'),\n            },\n            // tls: { rejectUnauthorized: false },\n          },\n          default: {\n            from: `Nich Fashion `,\n          },\n          template: {\n            dir: join(__dirname, 'templates'),\n            adapter: new EjsAdapter({\n              inlineCssEnabled: true,\n            }),\n            options: {\n              strict: false,\n            },\n          },\n        };\n      },\n    }),\n  ],\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/providers/mail.service.ts\n        \n\n\n            \n                Description\n            \n            \n                service for the mail module\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                sendLoginOtp\n                            \n                            \n                                    Public\n                                    Async\n                                sendResetOtp\n                            \n                            \n                                    Public\n                                    Async\n                                sendSubscriberMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService)\n                    \n                \n                        \n                            \n                                Defined in src/mail/providers/mail.service.ts:12\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendLoginOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendLoginOtp(user: User, otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/providers/mail.service.ts:48\n                        \n                    \n\n\n            \n                \n                        function for sending reset otp mail to user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendResetOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendResetOtp(user: User, otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/providers/mail.service.ts:29\n                        \n                    \n\n\n            \n                \n                        function for sending reset otp mail to user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendSubscriberMail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendSubscriberMail(subscriber: Subscriber)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/providers/mail.service.ts:65\n                        \n                    \n\n\n            \n                \n                        function for sending mail to user when they subscribe to the newsletter\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                subscriber\n                                            \n                                                            Subscriber\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ROOT_PATH } from '../../config/paths.config';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { Injectable } from '@nestjs/common';\nimport * as path from 'path';\nimport { Subscriber } from 'src/subscribers/subscriber.entity';\nimport { User } from 'src/users/user.entity';\n\n/**\n * service for the mail module\n */\n@Injectable()\nexport class MailService {\n  /**\n   * constructor\n   * @param mailerService\n   */\n  constructor(\n    /**\n     * injecting mailer service\n     */\n    private mailerService: MailerService,\n  ) {}\n\n  /**\n   * function for sending reset otp mail to user\n   * @param user\n   * @param otp\n   */\n  public async sendResetOtp(user: User, otp: string): Promise {\n    await this.mailerService.sendMail({\n      to: user.email,\n      from: `Ticket Hive - Support Team  `,\n      subject: `🔐 Reset Your Password – Let's Get You Back on Track!`,\n      template: path.join(ROOT_PATH, '/src/mail/templates/resetOtp.ejs'),\n      context: {\n        // fullname: user.fullname,\n        email: user.email,\n        otp: otp,\n      },\n    });\n  }\n\n  /**\n   * function for sending reset otp mail to user\n   * @param user\n   * @param otp\n   */\n  public async sendLoginOtp(user: User, otp: string): Promise {\n    await this.mailerService.sendMail({\n      to: user.email,\n      from: `Nich Fashion - Team  `,\n      subject: `🔐 Login to Nich Fashion- Get your best wears`,\n      template: path.join(ROOT_PATH, '/src/mail/templates/loginOtp.ejs'),\n      context: {\n        email: user.email,\n        otp: otp,\n      },\n    });\n  }\n\n  /**\n   * function for sending mail to user when they subscribe to the newsletter\n   * @param subscriber\n   */\n  public async sendSubscriberMail(subscriber: Subscriber): Promise {\n    await this.mailerService.sendMail({\n      to: subscriber.email,\n      from: `Ticket Hive -Team  `,\n      subject: `Welcome to Ticket Hive's Newsletter! 🎉`,\n      template: path.join(ROOT_PATH, '/src/mail/templates/subscription.ejs'),\n      context: {\n        email: subscriber.email,\n        id: subscriber.id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OtpSigninDto.html":{"url":"classes/OtpSigninDto.html","title":"class - OtpSigninDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OtpSigninDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/otpSignin.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                otp sign in dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                otp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        otp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the reset otp', example: 2343})@IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/otpSignin.dto.ts:17\n                        \n                    \n\n            \n                \n                    otp for signin\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsInt, IsNotEmpty } from 'class-validator';\n\n/**\n * otp sign in dto\n */\nexport class OtpSigninDto {\n  /**\n   * otp for signin\n   */\n  @ApiProperty({\n    description: 'This is the reset otp',\n    example: 2343,\n  })\n  @IsInt()\n  @IsNotEmpty()\n  otp: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtpSigninProvider.html":{"url":"injectables/OtpSigninProvider.html","title":"injectable - OtpSigninProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OtpSigninProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/otp-signin.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                signInWithOtp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, generateTokenProvider: GenerateTokensProvider)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/otp-signin.provider.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        generateTokenProvider\n                                                  \n                                                        \n                                                                        GenerateTokensProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        signInWithOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signInWithOtp(otpSigninDto: OtpSigninDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/otp-signin.provider.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otpSigninDto\n                                            \n                                                            OtpSigninDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/providers/users.service';\nimport { OtpSigninDto } from '../dtos/otpSignin.dto';\nimport * as crypto from 'crypto';\nimport { GenerateTokensProvider } from './generate-tokens.provider';\n\n@Injectable()\nexport class OtpSigninProvider {\n  constructor(\n    /**\n     * injecting users service\n     */\n    private readonly usersService: UsersService,\n\n    /**\n     * injecting the generateToken Provider\n     */\n    private readonly generateTokenProvider: GenerateTokensProvider,\n  ) {}\n\n  public async signInWithOtp(otpSigninDto: OtpSigninDto) {\n    // get the otp and hash it\n    const hashedOtp = crypto\n      .createHash('sha256')\n      .update(otpSigninDto.otp.toString())\n      .digest('hex');\n\n    // find the user based on the hased otp and timestamp\n    const user =\n      await this.usersService.findUserByResetOtpAndExpiryTime(hashedOtp);\n\n    // clear the otp and expiry time\n    await this.usersService.clearOtpAndExpiryTime(user);\n\n    // send access token and refresh token\n    // // generate an access token\n    const { accessToken, refreshToken } =\n      await this.generateTokenProvider.generateTokens(user);\n\n    return {\n      accessToken,\n      refreshToken,\n      user: {\n        id: user.id,\n        email: user.email,\n        role: user.role,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paginated.html":{"url":"interfaces/Paginated.html","title":"interface - Paginated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Paginated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pagination/interfaces/paginated.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for the response on paginated queries\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            links\n                                        \n                                \n                                \n                                        \n                                            meta\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the data to be returned\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        links:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    various links for the pages of the data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the metadata for the data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Paginated {\n  /**\n   * the data to be returned\n   */\n  data: T[];\n\n  /**\n   * the metadata for the data\n   */\n  meta: {\n    itemsPerPage: number;\n    totalItems: number;\n    currentPage: number;\n    totalPages: number;\n  };\n\n  /**\n   * various links for the pages of the data\n   */\n  links: {\n    first: string;\n    last: string;\n    current: string;\n    next: string;\n    previous: string;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaginationModule.html":{"url":"modules/PaginationModule.html","title":"module - PaginationModule","body":"\n                   \n\n\n\n\n    Modules\n    PaginationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaginationModule\n\n\n\ncluster_PaginationModule_providers\n\n\n\ncluster_PaginationModule_exports\n\n\n\n\nPaginationProvider \n\nPaginationProvider \n\n\n\nPaginationModule\n\nPaginationModule\n\nPaginationProvider  -->\n\nPaginationModule->PaginationProvider \n\n\n\n\n\nPaginationProvider\n\nPaginationProvider\n\nPaginationModule -->\n\nPaginationProvider->PaginationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/pagination/pagination.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaginationProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PaginationProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PaginationProvider } from './providers/pagination.provider';\n\n@Module({\n  providers: [PaginationProvider],\n  exports: [PaginationProvider],\n})\nexport class PaginationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaginationProvider.html":{"url":"injectables/PaginationProvider.html","title":"injectable - PaginationProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaginationProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pagination/providers/pagination.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for pagination\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                paginationQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in src/common/pagination/providers/pagination.provider.ts:14\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        paginationQuery\n                        \n                    \n                \n            \n            \n                \n                        \n                    paginationQuery(paginationQuery: PaginationQueryDto, repository: Repository, options?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/pagination/providers/pagination.provider.ts:34\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        function for paginating find all queries\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paginationQuery\n                                            \n                                                            PaginationQueryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                repository\n                                            \n                                                        Repository\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                data, metadata and links for the findAll queries\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { PaginationQueryDto } from '../dtos/pagination-query.dto';\nimport { ObjectLiteral, Repository } from 'typeorm';\n\n// inorder to inject a request to a provider\nimport { Request } from 'express';\nimport { REQUEST } from '@nestjs/core';\nimport { Paginated } from '../interfaces/paginated.interface';\n\n/**\n * provider for pagination\n */\n@Injectable()\nexport class PaginationProvider {\n  /**\n   * constructor\n   * @param request\n   */\n  constructor(\n    /**\n     * Injecting request\n     */\n    @Inject(REQUEST)\n    private readonly request: Request,\n  ) {}\n\n  /**\n   * function for paginating find all queries\n   * @param paginationQuery\n   * @param repository\n   * @param options\n   * @returns data, metadata and links for the findAll queries\n   */\n  public async paginationQuery(\n    paginationQuery: PaginationQueryDto,\n    repository: Repository,\n    options?: any,\n  ): Promise> {\n    const results = await repository.find({\n      // no of items to skip in one query\n      skip: (paginationQuery.page - 1) * paginationQuery.limit,\n      // the no items to take in one query\n      take: paginationQuery.limit,\n      relations: options.relations,\n      select: options.select,\n      where: options.where,\n    });\n\n    /**\n     * Create the request URLS\n     */\n    const baseURL =\n      this.request.protocol + '://' + this.request.headers.host + '/';\n\n    const newUrl = new URL(this.request.url, baseURL);\n\n    // console.log(newUrl);\n\n    const totalItems = await repository.count();\n    const totalPages = Math.ceil(totalItems / paginationQuery.limit);\n    const nextPage =\n      paginationQuery.page === totalPages\n        ? paginationQuery.page\n        : paginationQuery.page + 1;\n    const prevPage =\n      paginationQuery.page === 1\n        ? paginationQuery.page\n        : paginationQuery.page - 1;\n\n    const finalResponse: Paginated = {\n      data: results,\n      meta: {\n        itemsPerPage: paginationQuery.limit,\n        totalItems: totalItems,\n        currentPage: paginationQuery.page,\n        totalPages: totalPages,\n      },\n      links: {\n        first: `${newUrl.origin}${newUrl.pathname}?limit=${paginationQuery.limit}&page=1`,\n        last: `${newUrl.origin}${newUrl.pathname}?limit=${paginationQuery.limit}&page=${totalPages}`,\n        current: `${newUrl.origin}${newUrl.pathname}?limit=${paginationQuery.limit}&page=${paginationQuery.page}`,\n        next: `${newUrl.origin}${newUrl.pathname}?limit=${paginationQuery.limit}&page=${nextPage}`,\n        previous: `${newUrl.origin}${newUrl.pathname}?limit=${paginationQuery.limit}&page=${prevPage}`,\n      },\n    };\n\n    return finalResponse;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQueryDto.html":{"url":"classes/PaginationQueryDto.html","title":"class - PaginationQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pagination/dtos/pagination-query.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto for the pagination query\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/pagination/dtos/pagination-query.dto.ts:12\n                        \n                    \n\n            \n                \n                    limit for the number of items in the get all requests\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/pagination/dtos/pagination-query.dto.ts:19\n                        \n                    \n\n            \n                \n                    page number for the get all requests\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsPositive } from 'class-validator';\n\n/**\n * dto for the pagination query\n */\nexport class PaginationQueryDto {\n  /**\n   * limit for the number of items in the get all requests\n   */\n  @IsOptional()\n  limit?: number = 0;\n\n  /**\n   * page number for the get all requests\n   */\n  @IsOptional()\n  @IsPositive()\n  page?: number = 1;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchProductDto.html":{"url":"classes/PatchProductDto.html","title":"class - PatchProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/patch-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                brand\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                category\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                clothType\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                discount\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                dressStyle\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    \n                                longDescription\n                            \n                            \n                                    \n                                    \n                                material\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                price\n                            \n                            \n                                    \n                                    \n                                shortDescription\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                variants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        brand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        clothType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        dressStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        longDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        material\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        shortDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PatchProductVariantDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsInt, IsOptional, IsString } from 'class-validator';\nimport { PatchProductVariantDto } from 'src/product-variants/dto/patch-product-variant.dto';\n\nexport class PatchProductDto {\n  @IsString()\n  @IsOptional()\n  id?: string;\n\n  @IsString()\n  @IsOptional()\n  name?: string;\n\n  @IsInt()\n  @IsOptional()\n  price?: number;\n\n  @IsString()\n  @IsOptional()\n  discount?: string;\n\n  @IsString()\n  @IsOptional()\n  category?: string;\n\n  @IsString()\n  @IsOptional()\n  dressStyle?: string;\n\n  @IsString()\n  @IsOptional()\n  clothType?: string;\n\n  @IsString()\n  @IsOptional()\n  material: string;\n\n  @IsString()\n  @IsOptional()\n  brand: string;\n\n  @IsString()\n  @IsOptional()\n  shortDescription: string;\n\n  @IsString()\n  @IsOptional()\n  longDescription: string;\n\n  @IsArray()\n  @IsOptional()\n  variants?: PatchProductVariantDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchProductVariantDto.html":{"url":"classes/PatchProductVariantDto.html","title":"class - PatchProductVariantDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchProductVariantDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-variants/dto/patch-product-variant.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(\n  CreateProductVariantDto,\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                soldOut\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/patch-product-variant.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        soldOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/patch-product-variant.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateProductVariantDto } from './create-product-variant.dto';\nimport { IsBoolean, IsOptional, IsString } from 'class-validator';\n\nexport class PatchProductVariantDto extends PartialType(\n  CreateProductVariantDto,\n) {\n  @IsString()\n  @IsOptional()\n  id?: string;\n\n  @IsBoolean()\n  @IsOptional()\n  soldOut?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUserDto.html":{"url":"classes/PatchUserDto.html","title":"class - PatchUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/patch-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                country\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lasttName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                state\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                streetAddress\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lasttName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        streetAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\nimport { IsInt, IsOptional, IsString } from 'class-validator';\n\nexport class PatchUserDto extends PartialType(CreateUserDto) {\n  @IsOptional()\n  @IsString()\n  firstName?: string;\n\n  @IsOptional()\n  @IsString()\n  lasttName?: string;\n\n  @IsOptional()\n  @IsString()\n  country?: string;\n\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @IsOptional()\n  @IsString()\n  state?: string;\n\n  @IsOptional()\n  @IsString()\n  city?: string;\n\n  @IsOptional()\n  @IsString()\n  streetAddress?: string;\n\n  @IsOptional()\n  @IsInt()\n  zipCode?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Product.html":{"url":"entities/Product.html","title":"entity - Product","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/product.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                brand\n                            \n                            \n                                    \n                                category\n                            \n                            \n                                    \n                                clothType\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                discount\n                            \n                            \n                                    \n                                dressStyle\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                longDescription\n                            \n                            \n                                    \n                                material\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                    Optional\n                                reviews\n                            \n                            \n                                    \n                                shortDescription\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    Optional\n                                variants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        brand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        clothType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {precision: 5, scale: 2, default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dressStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        longDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        material\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {precision: 10, scale: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        reviews\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Review[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, review => review.product)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        shortDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProductVariant[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, variant => variant.product, {cascade: true, eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:53\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ProductVariant } from 'src/product-variants/product-variants.entity';\nimport { Review } from 'src/reviews/reviews.entity';\nimport {\n  BeforeInsert,\n  BeforeUpdate,\n  Column,\n  CreateDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Product {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column('decimal', { precision: 10, scale: 2 })\n  price: number;\n\n  @Column('decimal', { precision: 5, scale: 2, default: 0 })\n  discount: number;\n\n  @Column()\n  category: string;\n\n  @Column()\n  dressStyle: string;\n\n  @Column()\n  clothType: string;\n\n  @Column()\n  material: string;\n\n  @Column()\n  brand: string;\n\n  @Column()\n  shortDescription: string;\n\n  @Column()\n  longDescription: string;\n\n  @OneToMany(() => ProductVariant, (variant) => variant.product, {\n    cascade: true,\n    eager: true,\n  })\n  variants?: ProductVariant[];\n\n  @OneToMany(() => Review, (review) => review.product)\n  reviews?: Review[];\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @BeforeInsert()\n  @BeforeUpdate()\n  transformToLowercase() {\n    if (this.name) {\n      this.name = this.name.toLowerCase();\n    }\n    if (this.category) {\n      this.category = this.category.toLowerCase();\n    }\n    if (this.dressStyle) {\n      this.dressStyle = this.dressStyle.toLowerCase();\n    }\n    if (this.clothType) {\n      this.clothType = this.clothType.toLowerCase();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProductImage.html":{"url":"entities/ProductImage.html","title":"entity - ProductImage","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProductImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-images/product-image.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                displayOrder\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                imagePath\n                            \n                            \n                                    \n                                    \n                                productVariant\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        displayOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int', {default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-images/product-image.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-images/product-image.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        imagePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-images/product-image.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        productVariant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductVariant\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, variant => variant.images, {onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-images/product-image.entity.ts:25\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ProductVariant } from 'src/product-variants/product-variants.entity';\nimport {\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class ProductImage {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  imagePath: string;\n\n  @Column('int', { default: 0 })\n  displayOrder: number;\n\n  @ManyToOne(() => ProductVariant, (variant) => variant.images, {\n    onDelete: 'CASCADE',\n  })\n  @JoinColumn()\n  productVariant: ProductVariant;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductImagesModule.html":{"url":"modules/ProductImagesModule.html","title":"module - ProductImagesModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductImagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductImagesModule\n\n\n\ncluster_ProductImagesModule_providers\n\n\n\n\nProductImagesService\n\nProductImagesService\n\n\n\nProductImagesModule\n\nProductImagesModule\n\nProductImagesModule -->\n\nProductImagesService->ProductImagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product-images/product-images.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductImagesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductImagesService } from './providers/product-images.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProductImage } from './product-image.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ProductImage])],\n  providers: [ProductImagesService],\n})\nexport class ProductImagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductImagesService.html":{"url":"injectables/ProductImagesService.html","title":"injectable - ProductImagesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductImagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-images/providers/product-images.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ProductImagesService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProductVariant.html":{"url":"entities/ProductVariant.html","title":"entity - ProductVariant","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProductVariant\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-variants/product-variants.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                color\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                images\n                            \n                            \n                                    \n                                    \n                                product\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                soldOut\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProductImage[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, image => image.productVariant, {cascade: true, eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, product => product.variants, {onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        soldOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:27\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ProductImage } from 'src/product-images/product-image.entity';\nimport { Product } from 'src/products/product.entity';\nimport {\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  OneToMany,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class ProductVariant {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  color: string;\n\n  @Column()\n  size: string;\n\n  @Column('int')\n  quantity: number;\n\n  @Column({ default: false })\n  soldOut: boolean;\n\n  @ManyToOne(() => Product, (product) => product.variants, {\n    onDelete: 'CASCADE',\n  })\n  @JoinColumn()\n  product: Product;\n\n  @OneToMany(() => ProductImage, (image) => image.productVariant, {\n    cascade: true,\n    eager: true,\n  })\n  images?: ProductImage[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductVariantsModule.html":{"url":"modules/ProductVariantsModule.html","title":"module - ProductVariantsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductVariantsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductVariantsModule\n\n\n\ncluster_ProductVariantsModule_exports\n\n\n\ncluster_ProductVariantsModule_providers\n\n\n\n\nProductVariantsService \n\nProductVariantsService \n\n\n\nProductVariantsModule\n\nProductVariantsModule\n\nProductVariantsService  -->\n\nProductVariantsModule->ProductVariantsService \n\n\n\n\n\nProductVariantsService\n\nProductVariantsService\n\nProductVariantsModule -->\n\nProductVariantsService->ProductVariantsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product-variants/product-variants.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductVariantsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProductVariantsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductVariantsService } from './providers/product-variants.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProductVariant } from './product-variants.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ProductVariant])],\n  providers: [ProductVariantsService],\n  exports: [ProductVariantsService],\n})\nexport class ProductVariantsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductVariantsService.html":{"url":"injectables/ProductVariantsService.html","title":"injectable - ProductVariantsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductVariantsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-variants/providers/product-variants.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findProductVariantById\n                            \n                            \n                                    Public\n                                    Async\n                                saveProductVariant\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productVariantRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/product-variants/providers/product-variants.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productVariantRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findProductVariantById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductVariantById(variantId: string, productId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product-variants/providers/product-variants.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                variantId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a product variant\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        saveProductVariant\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveProductVariant(variant: ProductVariant)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product-variants/providers/product-variants.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                variant\n                                            \n                                                            ProductVariant\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a product variant\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { ProductVariant } from '../product-variants.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class ProductVariantsService {\n  constructor(\n    /**\n     * injecting the product variant repository\n     */\n    @InjectRepository(ProductVariant)\n    private readonly productVariantRepository: Repository,\n  ) {}\n\n  /**\n   * @function finds a product variant by id\n   * @param variantId\n   * @param productId\n   * @returns a product variant\n   */\n  public async findProductVariantById(\n    variantId: string,\n    productId: string,\n  ): Promise {\n    const variant = await this.productVariantRepository.findOne({\n      where: { id: variantId, product: { id: productId } },\n    });\n\n    if (!variant) {\n      throw new NotFoundException(\n        `Variant with ID ${variantId} not found for product ${productId}`,\n      );\n    }\n\n    return variant;\n  }\n\n  /**\n   * @function saves a variant\n   * @param variant\n   * @returns  a product variant\n   */\n  public async saveProductVariant(\n    variant: ProductVariant,\n  ): Promise {\n    return await this.productVariantRepository.save(variant);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                createProduct\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                deleteProduct\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                findAllProducts\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                findProductById\n                            \n                            \n                                    \n                                    \n                                    Public\n                                patchProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProduct(createProductDto: CreateProductDto, files: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiConsumes('multipart/form-data')@UseInterceptors(undefined)@Roles(Role.ADMIN)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                files\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProduct(productId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:productId')@Roles(Role.ADMIN)@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a message that the item was successfully deleted\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        findAllProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllProducts(productQuery: GetProductsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It finds all products '})@ApiResponse({status: 200, description: 'All products are fetched and paginated'})@ApiQuery({name: 'limit', type: 'number', required: false, description: 'The number of entries returned per query', example: 10})@ApiQuery({name: 'page', type: 'number', required: false, description: 'The position of the page number that you want the api to return', example: 1})@Auth(AuthType.None)@Get('')\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:133\n                        \n                    \n\n\n            \n                \n                        route for getting all products\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productQuery\n                                            \n                                                            GetProductsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                all products\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        findProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductById(productId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It finds a product based on its id'})@ApiResponse({status: 200, description: 'Product is fetched successfully based on its id'})@ApiParam({name: 'eventId', required: true, type: String, description: 'The unique identifier of the product', example: '12345'})@ApiHeaders(['undefined', 'undefined'])@Auth(AuthType.None)@Get('/:productId')\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:100\n                        \n                    \n\n\n            \n                \n                        route for getting a product by the product id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                a particular event\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        patchProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchProduct(productId: string, patchProductDto: PatchProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:productId')@Roles(Role.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patchProductDto\n                                            \n                                                            PatchProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                updated product\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  Query,\n  UploadedFiles,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { CreateProductDto } from './dtos/createProductDto';\nimport {\n  ApiConsumes,\n  ApiHeaders,\n  ApiOperation,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n} from '@nestjs/swagger';\nimport { FileFieldsInterceptor } from '@nestjs/platform-express';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { Role } from 'src/auth/enums/role-type.enum';\nimport { ProductsService } from './providers/products.service';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\nimport { Auth } from 'src/auth/decorator/auth.decorator';\nimport { GetProductsDto } from './dtos/get-product.dto';\nimport { PatchProductDto } from './dtos/patch-product.dto';\n\n@Controller('products')\nexport class ProductsController {\n  constructor(\n    /**\n     * injecting the products service\n     */\n    private readonly productsService: ProductsService,\n  ) {}\n\n  /**\n   * @function createProduct\n   * @param createProductDto\n   * @param user\n   * @param files\n   */\n  @ApiConsumes('multipart/form-data')\n  @UseInterceptors(\n    FileFieldsInterceptor(\n      // Dynamically generate interceptor fields\n      Array.from({ length: 10 }, (_, i) => ({\n        name: `variants[${i}][images]`,\n        maxCount: 6,\n      })),\n    ),\n  )\n  @Roles(Role.ADMIN)\n  @Post()\n  public createProduct(\n    @Body() createProductDto: CreateProductDto,\n    @UploadedFiles() files: { [key: string]: Express.Multer.File[] },\n  ) {\n    return this.productsService.createProduct(createProductDto, files);\n  }\n\n  /**\n   * route for getting a product by the product id\n   * @param eventId\n   * @returns a particular event\n   */\n  @ApiOperation({\n    summary: 'It finds a product based on its id',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Product is fetched successfully based on its id',\n  })\n  @ApiParam({\n    name: 'eventId',\n    required: true,\n    type: String,\n    description: 'The unique identifier of the product',\n    example: '12345',\n  })\n  @ApiHeaders([\n    {\n      name: 'Authorization',\n      required: true,\n      description: 'Bearer token for authorization',\n    },\n    {\n      name: 'X-Custom-Header',\n      required: false,\n      description: 'A custom optional header',\n    },\n  ])\n  @Auth(AuthType.None)\n  @Get('/:productId')\n  public findProductById(@Param('productId') productId: string) {\n    return this.productsService.findProductById(productId);\n  }\n\n  /**\n   * route for getting all products\n   * @param productQuery\n   * @returns all products\n   */\n  @ApiOperation({\n    summary: 'It finds all products ',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'All products are fetched and paginated',\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: 'number',\n    required: false,\n    description: 'The number of entries returned per query',\n    example: 10,\n  })\n  @ApiQuery({\n    name: 'page',\n    type: 'number',\n    required: false,\n    description:\n      'The position of the page number that you want the api to return',\n    example: 1,\n  })\n  @Auth(AuthType.None)\n  @Get('')\n  public findAllProducts(@Query() productQuery: GetProductsDto) {\n    return this.productsService.findAll(productQuery);\n  }\n\n  /**\n   * @function updates a product\n   * @param productId\n   * @param patchProductDto\n   * @returns updated product\n   */\n  @Patch('/:productId')\n  @Roles(Role.ADMIN)\n  public patchProduct(\n    @Param('productId') productId: string,\n    @Body() patchProductDto: PatchProductDto,\n  ) {\n    return this.productsService.updateProduct(productId, patchProductDto);\n  }\n\n  /**\n   * @function deletes a product\n   * @param productId\n   * @returns a message that the item was successfully deleted\n   */\n  @Delete('/:productId')\n  @Roles(Role.ADMIN)\n  @HttpCode(HttpStatus.NO_CONTENT) // This set\n  public deleteProduct(\n    @Param('productId') productId: string,\n  ): Promise {\n    return this.productsService.deleteProduct(productId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_exports\n\n\n\ncluster_ProductsModule_imports\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nPaginationModule\n\nPaginationModule\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nPaginationModule->ProductsModule\n\n\n\n\n\nProductVariantsModule\n\nProductVariantsModule\n\nProductsModule -->\n\nProductVariantsModule->ProductsModule\n\n\n\n\n\nUploadsModule\n\nUploadsModule\n\nProductsModule -->\n\nUploadsModule->ProductsModule\n\n\n\n\n\nProductsService \n\nProductsService \n\nProductsService  -->\n\nProductsModule->ProductsService \n\n\n\n\n\nCreateProductProvider\n\nCreateProductProvider\n\nProductsModule -->\n\nCreateProductProvider->ProductsModule\n\n\n\n\n\nFindAllProductsProvider\n\nFindAllProductsProvider\n\nProductsModule -->\n\nFindAllProductsProvider->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nUpdateProductProvider\n\nUpdateProductProvider\n\nProductsModule -->\n\nUpdateProductProvider->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateProductProvider\n                        \n                        \n                            FindAllProductsProvider\n                        \n                        \n                            ProductsService\n                        \n                        \n                            UpdateProductProvider\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PaginationModule\n                        \n                        \n                            ProductVariantsModule\n                        \n                        \n                            UploadsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductsController } from './products.controller';\nimport { ProductsService } from './providers/products.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Product } from './product.entity';\nimport { CreateProductProvider } from './providers/create-product.provider';\nimport { UploadsModule } from 'src/uploads/uploads.module';\nimport { PaginationModule } from 'src/common/pagination/pagination.module';\nimport { ProductVariantsModule } from 'src/product-variants/product-variants.module';\nimport { FindAllProductsProvider } from './providers/find-all-products.provider';\nimport { UpdateProductProvider } from './providers/update-product.provider';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Product]),\n    UploadsModule,\n    PaginationModule,\n    ProductVariantsModule,\n  ],\n  controllers: [ProductsController],\n  providers: [\n    ProductsService,\n    CreateProductProvider,\n    FindAllProductsProvider,\n    UpdateProductProvider,\n  ],\n  exports: [ProductsService],\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/providers/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createProduct\n                            \n                            \n                                    Public\n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findProductById\n                            \n                            \n                                    Public\n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createProductProvider: CreateProductProvider, productRepository: Repository, findAllProductsProvider: FindAllProductsProvider, updateProductProvider: UpdateProductProvider)\n                    \n                \n                        \n                            \n                                Defined in src/products/providers/products.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createProductProvider\n                                                  \n                                                        \n                                                                        CreateProductProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        findAllProductsProvider\n                                                  \n                                                        \n                                                                        FindAllProductsProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateProductProvider\n                                                  \n                                                        \n                                                                        UpdateProductProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProduct(createProductDto: CreateProductDto, files: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                files\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                the created product\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProduct(productId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a message that the item was successfully deleted\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(productQuery: GetProductsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productQuery\n                                            \n                                                            GetProductsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                all products\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductById(productId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                product by id\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProduct(id: string, patchProductDto: PatchProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patchProductDto\n                                            \n                                                            PatchProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                updated product\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { CreateProductProvider } from './create-product.provider';\nimport { CreateProductDto } from '../dtos/createProductDto';\nimport { Repository } from 'typeorm';\nimport { Product } from '../product.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { GetProductsDto } from '../dtos/get-product.dto';\nimport { Paginated } from 'src/common/pagination/interfaces/paginated.interface';\nimport { PatchProductDto } from '../dtos/patch-product.dto';\nimport { FindAllProductsProvider } from './find-all-products.provider';\nimport { UpdateProductProvider } from './update-product.provider';\n\n@Injectable()\nexport class ProductsService {\n  constructor(\n    /**\n     * injecting the create product provider\n     */\n\n    private readonly createProductProvider: CreateProductProvider,\n\n    /**\n     * injecting the product repository\n     */\n    @InjectRepository(Product)\n    private readonly productRepository: Repository,\n\n    /**\n     * injecting the find all products provider\n     */\n    private readonly findAllProductsProvider: FindAllProductsProvider,\n\n    /**\n     * injecting the update product provider\n     */\n    private readonly updateProductProvider: UpdateProductProvider,\n  ) {}\n\n  /**\n   * @function creates a product\n   * @param createProductDto\n   * @param files\n   * @returns the created product\n   */\n  public async createProduct(\n    createProductDto: CreateProductDto,\n    files: { [key: string]: Express.Multer.File[] },\n  ): Promise {\n    return this.createProductProvider.createProduct(createProductDto, files);\n  }\n\n  /**\n   * @function to get product by id\n   * @param productId\n   * @returns product by id\n   */\n  public async findProductById(productId: string): Promise {\n    try {\n      const product = await this.productRepository.findOneBy({\n        id: productId,\n      });\n\n      if (!product) {\n        throw new NotFoundException(`product with ${productId}  not found`);\n      }\n\n      return product;\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n\n  /**\n   * @function for getting all products\n   * @param productQuery\n   * @returns all products\n   */\n  public async findAll(\n    productQuery: GetProductsDto,\n  ): Promise> {\n    return await this.findAllProductsProvider.findAll(productQuery);\n  }\n\n  /**\n   * @function updates a product\n   * @param id\n   * @param patchProductDto\n   * @returns updated product\n   */\n  public async updateProduct(\n    id: string,\n    patchProductDto: PatchProductDto,\n  ): Promise {\n    return await this.updateProductProvider.updateProduct(id, patchProductDto);\n  }\n\n  /**\n   * @function deletes a product\n   * @param productId\n   * @returns a message that the item was successfully deleted\n   */\n  public async deleteProduct(productId: string): Promise {\n    try {\n      await this.productRepository.delete(productId);\n      return {\n        message: `Product ${productId}, was successfully deleted`,\n      };\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenDto.html":{"url":"classes/RefreshTokenDto.html","title":"class - RefreshTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/refresh-token.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                refresh token dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the refresh token', example: 'hdfbwojefbnqpkfbjoqfehfewfeqwf234jr'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/refresh-token.dto.ts:17\n                        \n                    \n\n            \n                \n                    refresh token\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\n/**\n * refresh token dto\n */\nexport class RefreshTokenDto {\n  /**\n   * refresh token\n   */\n  @ApiProperty({\n    description: 'This is the refresh token',\n    example: 'hdfbwojefbnqpkfbjoqfehfewfeqwf234jr',\n  })\n  @IsNotEmpty()\n  @IsString()\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RefreshTokenProvider.html":{"url":"injectables/RefreshTokenProvider.html","title":"injectable - RefreshTokenProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RefreshTokenProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/refresh-token.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for resfresh token\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                refreshTokens\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConfiguration: ConfigType<>, generateTokenProvider: GenerateTokensProvider, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/refresh-token.provider.ts:19\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        generateTokenProvider\n                                                  \n                                                        \n                                                                        GenerateTokensProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshTokens(refreshTokenDto: RefreshTokenDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/refresh-token.provider.ts:56\n                        \n                    \n\n\n            \n                \n                        function for using the refresh token to generate a new access and refresh token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshTokenDto\n                                            \n                                                            RefreshTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                access and refresh tokend\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  forwardRef,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { RefreshTokenDto } from '../dtos/refresh-token.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport jwtConfig from '../config/jwt.config';\nimport { ConfigType } from '@nestjs/config';\nimport { GenerateTokensProvider } from './generate-tokens.provider';\nimport { UsersService } from 'src/users/providers/users.service';\nimport { ActiveUserData } from '../interfaces/active-user-data.interface';\n\n/**\n * provider for resfresh token\n */\n@Injectable()\nexport class RefreshTokenProvider {\n  /**\n   * constructor\n   * @param jwtService\n   * @param jwtConfiguration\n   * @param generateTokenProvider\n   * @param usersService\n   */\n  constructor(\n    /**\n     * Injecting the jwt service\n     */\n    private readonly jwtService: JwtService,\n\n    /**\n     * Injecting the jwt config\n     */\n    @Inject(jwtConfig.KEY)\n    private readonly jwtConfiguration: ConfigType,\n\n    /**\n     * injecting the generate token provider\n     */\n    private readonly generateTokenProvider: GenerateTokensProvider,\n\n    /**\n     * Injecting the usersService\n     */\n    @Inject(forwardRef(() => UsersService))\n    private readonly usersService: UsersService,\n  ) {}\n\n  /**\n   * function for using the refresh token to generate a new access and refresh token\n   * @param refreshTokenDto\n   * @returns access and refresh tokend\n   */\n  public async refreshTokens(refreshTokenDto: RefreshTokenDto) {\n    try {\n      // verify the refresh token using the jwtService\n      const { sub } = await this.jwtService.verifyAsync\n      >(refreshTokenDto.refreshToken, {\n        secret: this.jwtConfiguration.secret,\n        audience: this.jwtConfiguration.audience,\n        issuer: this.jwtConfiguration.issuer,\n      });\n\n      // based on the id gotten, fetch the user from the db\n      const user = await this.usersService.findOneById(sub);\n\n      // generate the tokens\n      return await this.generateTokenProvider.generateTokens(user);\n    } catch (error) {\n      throw new UnauthorizedException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Review.html":{"url":"entities/Review.html","title":"entity - Review","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Review\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/reviews.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                comment\n                            \n                            \n                                    \n                                dateCreated\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                product\n                            \n                            \n                                    \n                                reviewer\n                            \n                            \n                                    \n                                    \n                                stars\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, product => product.reviews)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reviewer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        stars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})@Check('\"stars\" BETWEEN 1 AND 5')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Product } from 'src/products/product.entity';\nimport {\n  Check,\n  Column,\n  CreateDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Review {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  reviewer: string;\n\n  @Column('text')\n  comment: string;\n\n  @Column({ type: 'int' })\n  @Check('\"stars\" BETWEEN 1 AND 5') // This ad\n  stars: number;\n\n  @CreateDateColumn()\n  dateCreated: Date;\n\n  @ManyToOne(() => Product, (product) => product.reviews)\n  product: Product;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ReviewsController.html":{"url":"controllers/ReviewsController.html","title":"controller - ReviewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ReviewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/reviews.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                reviews\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('reviews')\nexport class ReviewsController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReviewsModule.html":{"url":"modules/ReviewsModule.html","title":"module - ReviewsModule","body":"\n                   \n\n\n\n\n    Modules\n    ReviewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReviewsModule\n\n\n\ncluster_ReviewsModule_providers\n\n\n\ncluster_ReviewsModule_imports\n\n\n\n\nProductsModule\n\nProductsModule\n\n\n\nReviewsModule\n\nReviewsModule\n\nReviewsModule -->\n\nProductsModule->ReviewsModule\n\n\n\n\n\nCreateReviewProvider\n\nCreateReviewProvider\n\nReviewsModule -->\n\nCreateReviewProvider->ReviewsModule\n\n\n\n\n\nReviewsService\n\nReviewsService\n\nReviewsModule -->\n\nReviewsService->ReviewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/reviews/reviews.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateReviewProvider\n                        \n                        \n                            ReviewsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ReviewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProductsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ReviewsController } from './reviews.controller';\nimport { ReviewsService } from './providers/reviews.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Review } from './reviews.entity';\nimport { CreateReviewProvider } from './providers/create-review.provider';\nimport { ProductsModule } from 'src/products/products.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Review]), ProductsModule],\n  controllers: [ReviewsController],\n  providers: [ReviewsService, CreateReviewProvider],\n})\nexport class ReviewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReviewsService.html":{"url":"injectables/ReviewsService.html","title":"injectable - ReviewsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReviewsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/providers/reviews.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createReview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createReviewProvider: CreateReviewProvider)\n                    \n                \n                        \n                            \n                                Defined in src/reviews/providers/reviews.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createReviewProvider\n                                                  \n                                                        \n                                                                        CreateReviewProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createReview\n                        \n                    \n                \n            \n            \n                \n                        \n                    createReview(createReviewDto: CreateReviewDto, productId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/reviews/providers/reviews.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createReviewDto\n                                            \n                                                            CreateReviewDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                a review\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateReviewProvider } from './create-review.provider';\nimport { Review } from '../reviews.entity';\nimport { CreateReviewDto } from '../dtos/create-review.dto';\n\n@Injectable()\nexport class ReviewsService {\n  constructor(\n    /**\n     * injecting the create review provider\n     */\n    private readonly createReviewProvider: CreateReviewProvider,\n  ) {}\n\n  /**\n   * @function creates a review\n   * @param createReviewDto\n   * @param productId\n   * @returns a review\n   */\n  public async createReview(\n    createReviewDto: CreateReviewDto,\n    productId: string,\n  ): Promise {\n    return this.createReviewProvider.createReview(createReviewDto, productId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/roles/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    role guard\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/roles/roles.guard.ts:16\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/roles/roles.guard.ts:31\n                        \n                    \n\n\n            \n                \n                        function for validating role of user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true or false depending whether the users role meets the role requirements in the role decorator\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  ForbiddenException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { ROLES_KEY } from 'src/auth/constants/role.constant';\nimport { Role } from 'src/auth/enums/role-type.enum';\n\n/**\n * role guard\n */\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  // using static means you can use the name of the property of the class without the \"this\" keyword\n  //   private static readonly defaultRoleType: Role = Role.ADMIN;\n\n  /**\n   * constructor\n   * @param reflector\n   */\n  constructor(private reflector: Reflector) {}\n\n  /**\n   * function for validating role of user\n   * @param context\n   * @returns true or false depending whether the users role meets the role requirements in the role decorator\n   */\n  canActivate(context: ExecutionContext): boolean {\n    const requiredRoles = this.reflector.getAllAndOverride(ROLES_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    if (!requiredRoles) {\n      return true; //  allow access.\n    }\n\n    const { user } = context.switchToHttp().getRequest();\n\n    if (!user) {\n      throw new ForbiddenException('User not found.');\n    }\n\n    const hasRole = requiredRoles.some((role) => user.role === role);\n\n    if (!hasRole) {\n      throw new ForbiddenException(\n        'You do not have permission to access this resource.',\n      );\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/sign-in.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                sign in dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the email of the user', example: 'Favour@gmail.com'})@IsEmail()@MaxLength(96)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/sign-in.dto.ts:19\n                        \n                    \n\n            \n                \n                    user email address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the role of the user', example: 'Admin'})@IsEnum(Role)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/sign-in.dto.ts:30\n                        \n                    \n\n            \n                \n                    user role\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsEnum, IsNotEmpty, MaxLength } from 'class-validator';\nimport { Role } from '../enums/role-type.enum';\n\n/**\n * sign in dto\n */\nexport class SignInDto {\n  /**\n   * user email address\n   */\n  @ApiProperty({\n    description: 'This is the email of the user',\n    example: 'Favour@gmail.com',\n  })\n  @IsEmail()\n  @MaxLength(96)\n  @IsNotEmpty()\n  email: string;\n\n  /**\n   * user role\n   */\n  @ApiProperty({\n    description: 'This is the role of the user',\n    example: 'Admin',\n  })\n  @IsEnum(Role)\n  @IsNotEmpty()\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SignInProvider.html":{"url":"injectables/SignInProvider.html","title":"injectable - SignInProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SignInProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/sign-in.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for sigining in users\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, mailService: MailService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/sign-in.provider.ts:17\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: SignInDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/sign-in.provider.ts:42\n                        \n                    \n\n\n            \n                \n                        function for signing in users\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                access and refresh tokens\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  forwardRef,\n  Inject,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { SignInDto } from '../dtos/sign-in.dto';\nimport { UsersService } from 'src/users/providers/users.service';\nimport { randomInt } from 'crypto';\nimport * as crypto from 'crypto';\nimport { MailService } from 'src/mail/providers/mail.service';\n\n/**\n * provider for sigining in users\n */\n@Injectable()\nexport class SignInProvider {\n  /**\n   * constructor\n   * @param usersService\n   * @param hashingProvider\n   * @param generateTokenProvider\n   */\n  constructor(\n    /**\n     * injecting the user service\n     */\n    @Inject(forwardRef(() => UsersService))\n    private readonly usersService: UsersService,\n\n    /**\n     * injecting the mail service\n     */\n    private readonly mailService: MailService,\n  ) {}\n\n  /**\n   * function for signing in users\n   * @param signInDto\n   * @returns access and refresh tokens\n   */\n  public async signIn(signInDto: SignInDto) {\n    // find  the user using the email ID\n    // throw an exception if the user does not exist\n\n    let user: any;\n    user = await this.usersService.findOneByEmail(signInDto.email);\n\n    // if user does not exist already, create user\n    if (!user) {\n      user = await this.usersService.createUser({\n        email: signInDto.email,\n        role: signInDto.role,\n      });\n    }\n\n    // generate otp\n    const otp = randomInt(1000, 1000000);\n\n    const hashedOtp = crypto\n      .createHash('sha256')\n      .update(otp.toString())\n      .digest('hex');\n\n    // store the otp in the db\n    await this.usersService.storeTokenOtpAndOtpExpire(user, hashedOtp);\n\n    try {\n      await this.mailService.sendLoginOtp(user, otp.toString());\n    } catch (error) {\n      console.log(error);\n      throw new RequestTimeoutException(error);\n    }\n\n    return {\n      user: {\n        id: user.id,\n        role: user.role,\n        email: user.email,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StoreOtpAndExpireProvider.html":{"url":"injectables/StoreOtpAndExpireProvider.html","title":"injectable - StoreOtpAndExpireProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StoreOtpAndExpireProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/store-otp-and-expire.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider class for storing otp and expiry date\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                storeOtpAndExpire\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/store-otp-and-expire.provider.ts:10\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        storeOtpAndExpire\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeOtpAndExpire(user: User, otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/store-otp-and-expire.provider.ts:29\n                        \n                    \n\n\n            \n                \n                        function for storing otp and expiry date\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '../user.entity';\n\n/**\n * provider class for storing otp and expiry date\n */\n@Injectable()\nexport class StoreOtpAndExpireProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * Injecting the users repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for storing otp and expiry date\n   * @param user\n   * @param otp\n   * @returns user\n   */\n  public async storeOtpAndExpire(user: User, otp: string) {\n    const resetExpires = new Date(Date.now() + 5 * 60 * 1000);\n    const newUserObj = { ...user, otp: otp, otpExpire: resetExpires };\n    try {\n      return await this.usersRepository.save(newUserObj);\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Subscriber.html":{"url":"entities/Subscriber.html","title":"entity - Subscriber","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Subscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscriber.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                subscriber entity for the table in the database\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/subscriber.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/subscriber.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * subscriber entity for the table in the database\n */\n@Entity()\nexport class Subscriber {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: false,\n    unique: true,\n  })\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SubscribersController.html":{"url":"controllers/SubscribersController.html","title":"controller - SubscribersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SubscribersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                subscribers\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('subscribers')\nexport class SubscribersController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubscribersModule.html":{"url":"modules/SubscribersModule.html","title":"module - SubscribersModule","body":"\n                   \n\n\n\n\n    Modules\n    SubscribersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_imports\n\n\n\ncluster_SubscribersModule_providers\n\n\n\n\nMailModule\n\nMailModule\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nSubscribersModule -->\n\nMailModule->SubscribersModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/subscribers/subscribers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubscribersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SubscribersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MailModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SubscribersService } from './providers/subscribers.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Subscriber } from './subscriber.entity';\nimport { MailModule } from 'src/mail/mail.module';\nimport { SubscribersController } from './subscribers.controller';\n\n@Module({\n  controllers: [SubscribersController],\n  providers: [SubscribersService],\n  imports: [TypeOrmModule.forFeature([Subscriber]), MailModule],\n})\nexport class SubscribersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubscribersService.html":{"url":"injectables/SubscribersService.html","title":"injectable - SubscribersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubscribersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/providers/subscribers.service.ts\n        \n\n\n            \n                Description\n            \n            \n                service for the subscriber module\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createSubscriber\n                            \n                            \n                                    Public\n                                    Async\n                                unsubscribeEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subscriberRepository: Repository, mailService: MailService)\n                    \n                \n                        \n                            \n                                Defined in src/subscribers/providers/subscribers.service.ts:12\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subscriberRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createSubscriber\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSubscriber(createSubscriberDto: CreateSubscriberDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/providers/subscribers.service.ts:36\n                        \n                    \n\n\n            \n                \n                        function for creatng a subscriber\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                message that subscriber has successfully subscribed to the newsletter\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        unsubscribeEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    unsubscribeEmail(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/providers/subscribers.service.ts:55\n                        \n                    \n\n\n            \n                \n                        function for unsubscribing from newsletter\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                message that subscriber has unsubscribed from the newsletter\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { CreateSubscriberDto } from '../dtos/create-subscriber.dto';\nimport { Repository } from 'typeorm';\nimport { Subscriber } from '../subscriber.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { MailService } from 'src/mail/providers/mail.service';\n\n/**\n * service for the subscriber module\n */\n@Injectable()\nexport class SubscribersService {\n  /**\n   * constructor\n   * @param subscriberRepository\n   * @param mailService\n   */\n  constructor(\n    /**\n     * injecting the subscriber repository\n     */\n    @InjectRepository(Subscriber)\n    private readonly subscriberRepository: Repository,\n\n    /**\n     * injecting the mail service\n     */\n    private readonly mailService: MailService,\n  ) {}\n\n  /**\n   * function for creatng a subscriber\n   * @param createSubscriberDto\n   * @returns message that subscriber has successfully subscribed to the newsletter\n   */\n  public async createSubscriber(createSubscriberDto: CreateSubscriberDto) {\n    const subscriber = this.subscriberRepository.create(createSubscriberDto);\n\n    try {\n      await this.subscriberRepository.save(subscriber);\n      await this.mailService.sendSubscriberMail(subscriber);\n      return {\n        message: 'Subscribed to newsletter successfully',\n      };\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n\n  /**\n   * function for unsubscribing from newsletter\n   * @param id\n   * @returns message that subscriber has unsubscribed from the newsletter\n   */\n  public async unsubscribeEmail(id: number) {\n    try {\n      await this.subscriberRepository.delete(id);\n      return {\n        message: 'Unsubscribed from newsletter successfully',\n      };\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateProductProvider.html":{"url":"injectables/UpdateProductProvider.html","title":"injectable - UpdateProductProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateProductProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/providers/update-product.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productRepository: Repository, productVariantsService: ProductVariantsService)\n                    \n                \n                        \n                            \n                                Defined in src/products/providers/update-product.provider.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productVariantsService\n                                                  \n                                                        \n                                                                        ProductVariantsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProduct(id: string, patchProductDto: PatchProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/update-product.provider.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patchProductDto\n                                            \n                                                            PatchProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { PatchProductDto } from '../dtos/patch-product.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Product } from '../product.entity';\nimport { ProductVariantsService } from 'src/product-variants/providers/product-variants.service';\n\n@Injectable()\nexport class UpdateProductProvider {\n  constructor(\n    /**\n     * injecting the product repository\n     */\n    @InjectRepository(Product)\n    private readonly productRepository: Repository,\n\n    /**\n     * injecting the product variant service\n     */\n    private readonly productVariantsService: ProductVariantsService,\n  ) {}\n\n  public async updateProduct(id: string, patchProductDto: PatchProductDto) {\n    let product;\n    // find the prd\n    try {\n      product = await this.productRepository.findOne({\n        where: { id },\n      });\n    } catch (err) {\n      throw new RequestTimeoutException(err);\n    }\n    if (!product) {\n      throw new BadRequestException('Product does not exist');\n    }\n    // update product\n    // Update top-level product fields (if provided)\n    let productUpdated = false;\n    if (patchProductDto.name !== undefined) {\n      product.name = patchProductDto.name;\n      productUpdated = true;\n    }\n    if (patchProductDto.price !== undefined) {\n      product.price = patchProductDto.price;\n      productUpdated = true;\n    }\n    if (patchProductDto.discount !== undefined) {\n      product.discount = patchProductDto.discount;\n      productUpdated = true;\n    }\n\n    if (patchProductDto.category !== undefined) {\n      product.category = patchProductDto.category;\n      productUpdated = true;\n    }\n\n    if (patchProductDto.dressStyle !== undefined) {\n      product.dressStyle = patchProductDto.dressStyle;\n      productUpdated = true;\n    }\n\n    if (patchProductDto.clothType !== undefined) {\n      product.clothType = patchProductDto.clothType;\n      productUpdated = true;\n    }\n\n    if (patchProductDto.material !== undefined) {\n      product.material = patchProductDto.material;\n      productUpdated = true;\n    }\n\n    if (patchProductDto.brand !== undefined) {\n      product.brand = patchProductDto.brand;\n      productUpdated = true;\n    }\n\n    try {\n      // Save product only if top-level fields were updated\n      if (productUpdated) {\n        await this.productRepository.save(product);\n      }\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error: any) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    // Update only the specified variants\n    if (patchProductDto.variants && patchProductDto.variants.length > 0) {\n      for (const variantDto of patchProductDto.variants) {\n        const variant =\n          await this.productVariantsService.findProductVariantById(\n            variantDto.id,\n            product.id,\n          );\n        // Manually update only the provided fields\n        if (variantDto.color !== undefined) variant.color = variantDto.color;\n        if (variantDto.size !== undefined) variant.size = variantDto.size;\n        if (variantDto.quantity !== undefined)\n          variant.quantity = variantDto.quantity;\n        if (variantDto.soldOut !== undefined)\n          variant.soldOut = variantDto.soldOut;\n\n        // Save the variant directly\n        await this.productVariantsService.saveProductVariant(variant);\n      }\n    }\n\n    // Return the updated product with its variants (for response)\n    return this.productRepository.findOne({\n      where: { id },\n      relations: ['variants'],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadToAwsProvider.html":{"url":"injectables/UploadToAwsProvider.html","title":"injectable - UploadToAwsProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadToAwsProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/uploads/providers/upload-to-aws.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                fileUpload\n                            \n                            \n                                    Private\n                                generateFileName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/uploads/providers/upload-to-aws.provider.ts:8\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        fileUpload\n                        \n                    \n                \n            \n            \n                \n                        \n                    fileUpload(file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/uploads/providers/upload-to-aws.provider.ts:25\n                        \n                    \n\n\n            \n                \n                        function for uploading image file to aws\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                stored file\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateFileName\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateFileName(file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/uploads/providers/upload-to-aws.provider.ts:49\n                        \n                    \n\n\n            \n                \n                        function for generating the image filename\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    function for generating the image file name\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                the image file name\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { S3 } from 'aws-sdk';\nimport * as path from 'path';\nimport { v4 as uuid4 } from 'uuid';\n\n@Injectable()\nexport class UploadToAwsProvider {\n  /**\n   * constructor\n   * @param configService\n   */\n  constructor(\n    /**\n     * injecting the config service\n     */\n    private readonly configService: ConfigService,\n  ) {}\n\n  /**\n   * function for uploading image file to aws\n   * @param file\n   * @returns stored file\n   */\n  public async fileUpload(file: Express.Multer.File) {\n    const s3 = new S3();\n\n    try {\n      const uploadResult = await s3\n        .upload({\n          Bucket: this.configService.get('appConfig.awsBucketName'),\n          Body: file.buffer,\n          Key: this.generateFileName(file),\n          ContentType: file.mimetype,\n        })\n        .promise();\n\n      return uploadResult.Key;\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n\n  /**\n   *function for generating the image filename\n   * @param file function for generating the image file name\n   * @returns the image file name\n   */\n  private generateFileName(file: Express.Multer.File) {\n    // extract file name\n    const name = file.originalname.split('.')[0];\n\n    // Remove white spaces\n    name.replace(/|s/g, '').trim();\n\n    // extract the extension\n    const extension = path.extname(file.originalname);\n\n    // generate time stamp\n    const timestamp = new Date().getTime().toString().trim();\n\n    // return file uuid\n    return `${name}-${timestamp}-${uuid4()}${extension}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UploadsModule.html":{"url":"modules/UploadsModule.html","title":"module - UploadsModule","body":"\n                   \n\n\n\n\n    Modules\n    UploadsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UploadsModule\n\n\n\ncluster_UploadsModule_providers\n\n\n\ncluster_UploadsModule_exports\n\n\n\n\nUploadsService \n\nUploadsService \n\n\n\nUploadsModule\n\nUploadsModule\n\nUploadsService  -->\n\nUploadsModule->UploadsService \n\n\n\n\n\nUploadToAwsProvider\n\nUploadToAwsProvider\n\nUploadsModule -->\n\nUploadToAwsProvider->UploadsModule\n\n\n\n\n\nUploadsService\n\nUploadsService\n\nUploadsModule -->\n\nUploadsService->UploadsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/uploads/uploads.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UploadToAwsProvider\n                        \n                        \n                            UploadsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UploadsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UploadsService } from './providers/uploads.service';\nimport { UploadToAwsProvider } from './providers/upload-to-aws.provider';\n\n@Module({\n  providers: [UploadsService, UploadToAwsProvider],\n  exports: [UploadsService],\n})\nexport class UploadsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadsService.html":{"url":"injectables/UploadsService.html","title":"injectable - UploadsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/uploads/providers/uploads.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uploadToAwsProvider: UploadToAwsProvider, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/uploads/providers/uploads.service.ts:10\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uploadToAwsProvider\n                                                  \n                                                        \n                                                                        UploadToAwsProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/uploads/providers/uploads.service.ts:33\n                        \n                    \n\n\n            \n                \n                        function for uploading image file\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                url for image file\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  Injectable,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { UploadToAwsProvider } from './upload-to-aws.provider';\n\n@Injectable()\nexport class UploadsService {\n  /**\n   * constructor\n   * @param uploadToAwsProvider\n   * @param configService\n   */\n  constructor(\n    /**\n     * injecting the upload to aws provider\n     */\n    private readonly uploadToAwsProvider: UploadToAwsProvider,\n\n    /**\n     * injecting config service\n     */\n    private readonly configService: ConfigService,\n  ) {}\n\n  /**\n   * function for uploading image file\n   * @param file\n   * @returns url for image file\n   */\n  public async uploadFile(file: Express.Multer.File) {\n    // throw error for unsupported mimetype\n    if (!['image/jpeg', 'image/png', 'image/jpg'].includes(file.mimetype)) {\n      throw new BadRequestException('mime type not supported');\n    }\n\n    try {\n      // upload the file to the aws s3 bucket and a url has been generated\n      const name = await this.uploadToAwsProvider.fileUpload(file);\n\n      return `${this.configService.get('appConfig.awsCloudFrontUrl')}/${name}`;\n    } catch (error) {\n      throw new ConflictException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                user entity for user table in the database\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    Optional\n                                country\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    Optional\n                                otp\n                            \n                            \n                                    \n                                    Optional\n                                otpExpire\n                            \n                            \n                                    \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                    Optional\n                                state\n                            \n                            \n                                    \n                                    Optional\n                                streetAddress\n                            \n                            \n                                    \n                                    Optional\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        otp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        otpExpire\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 20, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: Role, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        streetAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:67\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Role } from 'src/auth/enums/role-type.enum';\nimport { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n// import { Event } from 'src/events/event.entity';\n// import { accountType } from './enums/account-type.enum';\n// import { Role } from 'src/auth/enums/role-type.enum';\n\n/**\n * user entity for user table in the database\n */\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  firstName?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  lastName?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 20,\n    nullable: true,\n  })\n  phoneNumber?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  country?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  state?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  city?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  streetAddress?: string;\n\n  @Column({\n    nullable: true,\n  })\n  zipCode?: number;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: false,\n    unique: true,\n  })\n  email: string;\n\n  @Column({\n    type: 'enum',\n    enum: Role,\n    nullable: false,\n  })\n  role: Role;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  otp?: string;\n\n  @Column({\n    type: 'timestamp',\n    nullable: true,\n  })\n  otpExpire?: Date;\n\n  // @OneToMany(() => Event, (event) => event.owner)\n  // events: Event[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                findAllUsers\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                findUser\n                            \n                            \n                                    \n                                    \n                                    Public\n                                patchUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It deletes a user based on their id'})@ApiResponse({status: 204, description: 'User successfully deleted'})@ApiParam({name: 'userId', required: true, type: String, description: 'The unique identifier of the user', example: '12345'})@ApiHeaders(['undefined', 'undefined'])@Delete('/:userId')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:156\n                        \n                    \n\n\n            \n                \n                        route for deleting a user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                a message indicating user was deleted\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        findAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllUsers(usersQuery: GetUsersDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It finds all users '})@ApiResponse({status: 200, description: 'All users are fetched and paginated'})@ApiQuery({name: 'limit', type: 'number', required: false, description: 'The number of entries returned per query', example: 10})@ApiQuery({name: 'page', type: 'number', required: false, description: 'The position of the page number that you want the api to return', example: 1})@ApiHeaders(['undefined', 'undefined'])@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:111\n                        \n                    \n\n\n            \n                \n                        route for getting all users\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                usersQuery\n                                            \n                                                            GetUsersDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                all users\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        findUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUser(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It finds a user based on their id'})@ApiResponse({status: 200, description: 'User is fetched successfully based on user id'})@ApiParam({name: 'userId', required: true, type: String, description: 'The unique identifier of the user', example: '12345'})@ApiHeaders(['undefined', 'undefined'])@Get('/:userId')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:67\n                        \n                    \n\n\n            \n                \n                        route for getting a user by user id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                a user\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        patchUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchUsers(patchUserDto: PatchUserDto, user: ActiveUserData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@Roles(Role.USER, Role.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Query,\n} from '@nestjs/common';\n\nimport { UsersService } from './providers/users.service';\nimport { PatchUserDto } from './dtos/patch-user.dto';\nimport { Role } from 'src/auth/enums/role-type.enum';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { ActiveUser } from 'src/auth/decorator/active-user.decorator';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\nimport {\n  ApiHeaders,\n  ApiOperation,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n} from '@nestjs/swagger';\nimport { GetUsersDto } from './dtos/get-user.dto';\n\n@Controller('users')\nexport class UsersController {\n  constructor(\n    /**\n     * injecting the usersService\n     */\n    private readonly usersService: UsersService,\n  ) {}\n\n  /**\n   * route for getting a user by user id\n   * @param userId\n   * @returns a user\n   */\n  @ApiOperation({\n    summary: 'It finds a user based on their id',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'User is fetched successfully based on user id',\n  })\n  @ApiParam({\n    name: 'userId',\n    required: true,\n    type: String,\n    description: 'The unique identifier of the user',\n    example: '12345',\n  })\n  @ApiHeaders([\n    {\n      name: 'Authorization',\n      required: true,\n      description: 'Bearer token for authorization',\n    },\n    {\n      name: 'X-Custom-Header',\n      required: false,\n      description: 'A custom optional header',\n    },\n  ])\n  @Get('/:userId')\n  public findUser(@Param('userId') userId: string) {\n    return this.usersService.findOneById(userId);\n  }\n\n  /**\n   * route for getting all users\n   * @param usersQuery\n   * @returns all users\n   */\n  @ApiOperation({\n    summary: 'It finds all users ',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'All users are fetched and paginated',\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: 'number',\n    required: false,\n    description: 'The number of entries returned per query',\n    example: 10,\n  })\n  @ApiQuery({\n    name: 'page',\n    type: 'number',\n    required: false,\n    description:\n      'The position of the page number that you want the api to return',\n    example: 1,\n  })\n  @ApiHeaders([\n    {\n      name: 'Authorization',\n      required: true,\n      description: 'Bearer token for authorization',\n    },\n    {\n      name: 'X-Custom-Header',\n      required: false,\n      description: 'A custom optional header',\n    },\n  ])\n  @Get()\n  public findAllUsers(@Query() usersQuery: GetUsersDto) {\n    return this.usersService.findAll(usersQuery);\n  }\n\n  @Patch()\n  @Roles(Role.USER, Role.ADMIN)\n  public patchUsers(\n    @Body() patchUserDto: PatchUserDto,\n    @ActiveUser() user: ActiveUserData,\n  ) {\n    return this.usersService.updateUser(user.sub, patchUserDto);\n  }\n\n  /**\n   * route for deleting a user\n   * @param userId\n   * @returns a message indicating user was deleted\n   */\n  @ApiOperation({\n    summary: 'It deletes a user based on their id',\n  })\n  @ApiResponse({\n    status: 204,\n    description: 'User successfully deleted',\n  })\n  @ApiParam({\n    name: 'userId',\n    required: true,\n    type: String,\n    description: 'The unique identifier of the user',\n    example: '12345',\n  })\n  @ApiHeaders([\n    {\n      name: 'Authorization',\n      required: true,\n      description: 'Bearer token for authorization',\n    },\n    {\n      name: 'X-Custom-Header',\n      required: false,\n      description: 'A custom optional header',\n    },\n  ])\n  @Delete('/:userId')\n  public deleteUser(@Param('userId') userId: string) {\n    return this.usersService.deleteUser(userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nPaginationModule\n\nPaginationModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPaginationModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nClearOtpAndExpiryTimeProvider\n\nClearOtpAndExpiryTimeProvider\n\nUsersModule -->\n\nClearOtpAndExpiryTimeProvider->UsersModule\n\n\n\n\n\nCreateUsersProvider\n\nCreateUsersProvider\n\nUsersModule -->\n\nCreateUsersProvider->UsersModule\n\n\n\n\n\nFindOneByIdProvider\n\nFindOneByIdProvider\n\nUsersModule -->\n\nFindOneByIdProvider->UsersModule\n\n\n\n\n\nFindOneUserByEmailProvider\n\nFindOneUserByEmailProvider\n\nUsersModule -->\n\nFindOneUserByEmailProvider->UsersModule\n\n\n\n\n\nFindUserByOtpAndExpiryTimeProvider\n\nFindUserByOtpAndExpiryTimeProvider\n\nUsersModule -->\n\nFindUserByOtpAndExpiryTimeProvider->UsersModule\n\n\n\n\n\nStoreOtpAndExpireProvider\n\nStoreOtpAndExpireProvider\n\nUsersModule -->\n\nStoreOtpAndExpireProvider->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClearOtpAndExpiryTimeProvider\n                        \n                        \n                            CreateUsersProvider\n                        \n                        \n                            FindOneByIdProvider\n                        \n                        \n                            FindOneUserByEmailProvider\n                        \n                        \n                            FindUserByOtpAndExpiryTimeProvider\n                        \n                        \n                            StoreOtpAndExpireProvider\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PaginationModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { UsersService } from './providers/users.service';\nimport { UsersController } from './users.controller';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { CreateUsersProvider } from './providers/create-users.provider';\nimport { User } from './user.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { FindOneUserByEmailProvider } from './providers/find-one-user-by-email.provider';\nimport { StoreOtpAndExpireProvider } from './providers/store-otp-and-expire.provider';\nimport { FindUserByOtpAndExpiryTimeProvider } from './providers/find-user-by-reset-otp-and-expiry-time.provider';\nimport { FindOneByIdProvider } from './providers/find-one-by-id.provider';\nimport { PaginationModule } from 'src/common/pagination/pagination.module';\nimport { ClearOtpAndExpiryTimeProvider } from './providers/clear-otp-and-expiry-time.provider';\n\n@Module({\n  providers: [\n    UsersService,\n    CreateUsersProvider,\n    FindOneUserByEmailProvider,\n    StoreOtpAndExpireProvider,\n    FindUserByOtpAndExpiryTimeProvider,\n    FindOneByIdProvider,\n    ClearOtpAndExpiryTimeProvider,\n  ],\n  controllers: [UsersController],\n  imports: [\n    forwardRef(() => AuthModule),\n    TypeOrmModule.forFeature([User]),\n    PaginationModule,\n  ],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/users.service.ts\n        \n\n\n            \n                Description\n            \n            \n                service provider for the user module\ninjectable\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                clearOtpAndExpiryTime\n                            \n                            \n                                    Public\n                                    Async\n                                createUser\n                            \n                            \n                                    Public\n                                    Async\n                                deleteUser\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOneByEmail\n                            \n                            \n                                    Public\n                                    Async\n                                findOneById\n                            \n                            \n                                    Public\n                                    Async\n                                findUserByResetOtpAndExpiryTime\n                            \n                            \n                                    Public\n                                    Async\n                                storeTokenOtpAndOtpExpire\n                            \n                            \n                                    Public\n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createUserProvider: CreateUsersProvider, findOneUserByEmailProvider: FindOneUserByEmailProvider, storeOtpAndExpiresProvider: StoreOtpAndExpireProvider, findUserByOtpAndExpiresProvider: FindUserByOtpAndExpiryTimeProvider, findOneByIdProvider: FindOneByIdProvider, paginationprovider: PaginationProvider, usersRepository: Repository, clearOtpAndExpiryTimeProvider: ClearOtpAndExpiryTimeProvider)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/users.service.ts:27\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createUserProvider\n                                                  \n                                                        \n                                                                        CreateUsersProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        findOneUserByEmailProvider\n                                                  \n                                                        \n                                                                        FindOneUserByEmailProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storeOtpAndExpiresProvider\n                                                  \n                                                        \n                                                                        StoreOtpAndExpireProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        findUserByOtpAndExpiresProvider\n                                                  \n                                                        \n                                                                        FindUserByOtpAndExpiryTimeProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        findOneByIdProvider\n                                                  \n                                                        \n                                                                        FindOneByIdProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paginationprovider\n                                                  \n                                                        \n                                                                        PaginationProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clearOtpAndExpiryTimeProvider\n                                                  \n                                                        \n                                                                        ClearOtpAndExpiryTimeProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        clearOtpAndExpiryTime\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearOtpAndExpiryTime(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:126\n                        \n                    \n\n\n            \n                \n                        function for clearing otp after login\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:87\n                        \n                    \n\n\n            \n                \n                        function for creating a new user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                the create user\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:168\n                        \n                    \n\n\n            \n                \n                        a function for deleting a user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                a message on successful deletion\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(userQuery: GetUsersDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:144\n                        \n                    \n\n\n            \n                \n                        function for getting all users\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userQuery\n                                            \n                                                            GetUsersDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                all users\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:96\n                        \n                    \n\n\n            \n                \n                        function for getting the user based on the email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                a user based on the email\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:135\n                        \n                    \n\n\n            \n                \n                        function for getting the user based on id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user based on the user id\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findUserByResetOtpAndExpiryTime\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserByResetOtpAndExpiryTime(otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:115\n                        \n                    \n\n\n            \n                \n                        function for getting the user based on the stored reset token and expiry date\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                the user based on the stored reset token and expiry date\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        storeTokenOtpAndOtpExpire\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeTokenOtpAndOtpExpire(user: User, token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:106\n                        \n                    \n\n\n            \n                \n                        function for storing the reset token and expiry date of the token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                a user with stored reset token and expiry date\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(id: string, patchUserDto: PatchUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:179\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patchUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { CreateUsersProvider } from './create-users.provider';\nimport { CreateUserDto } from '../dtos/create-user.dto';\nimport { FindOneUserByEmailProvider } from './find-one-user-by-email.provider';\nimport { StoreOtpAndExpireProvider } from './store-otp-and-expire.provider';\nimport { User } from '../user.entity';\nimport { FindUserByOtpAndExpiryTimeProvider } from './find-user-by-reset-otp-and-expiry-time.provider';\n\nimport { FindOneByIdProvider } from './find-one-by-id.provider';\nimport { GetUsersDto } from '../dtos/get-user.dto';\nimport { Paginated } from 'src/common/pagination/interfaces/paginated.interface';\nimport { PaginationProvider } from 'src/common/pagination/providers/pagination.provider';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ClearOtpAndExpiryTimeProvider } from './clear-otp-and-expiry-time.provider';\nimport { PatchUserDto } from '../dtos/patch-user.dto';\n\n/**\n * service provider for the user module\n * injectable\n */\n@Injectable()\nexport class UsersService {\n  /**\n   * constructor\n   * @param createUserProvider\n   * @param findOneUserByEmailProvider\n   * @param storeOtpAndExpiresProvider\n   * @param findUserByResetOtpAndExpiresProvider\n   * @param changeUserPasswordProvider\n   * @param findOneByIdProvider\n   * @param paginationprovider\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * injecting the create user provider\n     */\n    private readonly createUserProvider: CreateUsersProvider,\n\n    /**\n     * Injecting the findOneUserByEmailProvider\n     */\n    private readonly findOneUserByEmailProvider: FindOneUserByEmailProvider,\n\n    /**\n     * injecting the store otp and expires provider\n     */\n    private readonly storeOtpAndExpiresProvider: StoreOtpAndExpireProvider,\n\n    /**\n     * injecting the find user by reset otp and expires provider\n     */\n    private readonly findUserByOtpAndExpiresProvider: FindUserByOtpAndExpiryTimeProvider,\n\n    /**\n     * injecting the find one by id provider\n     */\n    private readonly findOneByIdProvider: FindOneByIdProvider,\n\n    /**\n     * injecting the pagination provider\n     */\n    private readonly paginationprovider: PaginationProvider,\n\n    /**\n     * injecting the user repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n\n    /**\n     * injecting the clear otp and expiry time provider\n     */\n    private readonly clearOtpAndExpiryTimeProvider: ClearOtpAndExpiryTimeProvider,\n  ) {}\n\n  /**\n   * function for creating a new user\n   * @param createUserDto\n   * @returns the create user\n   */\n  public async createUser(createUserDto: CreateUserDto) {\n    return await this.createUserProvider.createUser(createUserDto);\n  }\n\n  /**\n   * function for getting the user based on the email\n   * @param email\n   * @returns a user based on the email\n   */\n  public async findOneByEmail(email: string) {\n    return this.findOneUserByEmailProvider.findOneByEmail(email);\n  }\n\n  /**\n   * function for storing the reset token and expiry date of the token\n   * @param user\n   * @param token\n   * @returns a user with stored reset token and expiry date\n   */\n  public async storeTokenOtpAndOtpExpire(user: User, token: string) {\n    return await this.storeOtpAndExpiresProvider.storeOtpAndExpire(user, token);\n  }\n\n  /**\n   * function for getting the user based on the stored reset token and expiry date\n   * @param otp\n   * @returns the user based on the stored reset token and expiry date\n   */\n  public async findUserByResetOtpAndExpiryTime(otp: string) {\n    return await this.findUserByOtpAndExpiresProvider.findUserByOtpAndExpiryTime(\n      otp,\n    );\n  }\n\n  /**\n   * function for clearing otp after login\n   * @param user\n   * @returns user\n   */\n  public async clearOtpAndExpiryTime(user: User) {\n    return await this.clearOtpAndExpiryTimeProvider.clearOtpAndExpiryTime(user);\n  }\n\n  /**\n   * function for getting the user based on id\n   * @param id\n   * @returns user based on the user id\n   */\n  public async findOneById(id: string) {\n    return await this.findOneByIdProvider.findById(id);\n  }\n\n  /**\n   * function for getting all users\n   * @param userQuery\n   * @returns all users\n   */\n  public async findAll(userQuery: GetUsersDto): Promise> {\n    try {\n      const user = this.paginationprovider.paginationQuery(\n        {\n          limit: userQuery.limit,\n          page: userQuery.page,\n        },\n        this.usersRepository,\n        {\n          relations: null,\n        },\n      );\n\n      return user;\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n\n  /**\n   * a function for deleting a user\n   * @param userId\n   * @returns a message on successful deletion\n   */\n  public async deleteUser(userId: string) {\n    try {\n      await this.usersRepository.delete(userId);\n      return {\n        message: `User ${userId}, was successfully deleted`,\n      };\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n\n  public async updateUser(id: string, patchUserDto: PatchUserDto) {\n    let user;\n    // find the user\n    try {\n      user = await this.usersRepository.findOneBy({\n        id: id,\n      });\n    } catch (err) {\n      throw new RequestTimeoutException(err);\n    }\n    if (!user) {\n      throw new BadRequestException('User does not exist');\n    }\n    // update user\n    user = { ...user, ...patchUserDto };\n\n    try {\n      await this.usersRepository.save(user);\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error: any) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app.module.ts\n            \n            variable\n            ENV\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/auth/constants/auth.constant.ts\n            \n            variable\n            AUTH_TYPE_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/constants/auth.constant.ts\n            \n            variable\n            REQUEST_USER_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/constants/role.constant.ts\n            \n            variable\n            ROLES_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/decorator/active-user.decorator.ts\n            \n            variable\n            ActiveUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/decorator/auth.decorator.ts\n            \n            variable\n            Auth\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/decorator/role.decorator.ts\n            \n            variable\n            Roles\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/auth/dtos/otpSignin.dto.ts\n            \n            class\n            OtpSigninDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/auth/dtos/refresh-token.dto.ts\n            \n            class\n            RefreshTokenDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/auth/dtos/sign-in.dto.ts\n            \n            class\n            SignInDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/guards/access-token/access-token.guard.ts\n            \n            guard\n            AccessTokenGuard\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/guards/authentication/authentication.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/auth/guards/roles/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/interfaces/active-user-data.interface.ts\n            \n            interface\n            ActiveUserData\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/providers/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/auth/providers/generate-tokens.provider.ts\n            \n            injectable\n            GenerateTokensProvider\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/providers/otp-signin.provider.ts\n            \n            injectable\n            OtpSigninProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/providers/refresh-token.provider.ts\n            \n            injectable\n            RefreshTokenProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/providers/sign-in.provider.ts\n            \n            injectable\n            SignInProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/common/interceptors/data-response/data-response.interceptor.ts\n            \n            injectable\n            DataResponseInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/common/pagination/dtos/pagination-query.dto.ts\n            \n            class\n            PaginationQueryDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/common/pagination/interfaces/paginated.interface.ts\n            \n            interface\n            Paginated\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/common/pagination/providers/pagination.provider.ts\n            \n            injectable\n            PaginationProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/config/paths.config.ts\n            \n            variable\n            ROOT_PATH\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/mail/providers/mail.service.ts\n            \n            injectable\n            MailService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/product-images/product-image.entity.ts\n            \n            entity\n            ProductImage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product-images/providers/product-images.service.ts\n            \n            injectable\n            ProductImagesService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product-variants/dto/create-product-variant.dto.ts\n            \n            class\n            CreateProductVariantDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/product-variants/dto/patch-product-variant.dto.ts\n            \n            class\n            PatchProductVariantDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/product-variants/product-variants.entity.ts\n            \n            entity\n            ProductVariant\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product-variants/providers/product-variants.service.ts\n            \n            injectable\n            ProductVariantsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/products/dtos/createProductDto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/products/dtos/get-product.dto.ts\n            \n            class\n            GetProductsBaseDto\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/products/dtos/get-product.dto.ts\n            \n            class\n            GetProductsDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/products/dtos/patch-product.dto.ts\n            \n            class\n            PatchProductDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/products/product.entity.ts\n            \n            entity\n            Product\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/products/providers/create-product.provider.ts\n            \n            injectable\n            CreateProductProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/providers/find-all-products.provider.ts\n            \n            injectable\n            FindAllProductsProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/providers/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/products/providers/update-product.provider.ts\n            \n            injectable\n            UpdateProductProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/reviews/dtos/create-review.dto.ts\n            \n            class\n            CreateReviewDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/reviews/providers/create-review.provider.ts\n            \n            injectable\n            CreateReviewProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/reviews/providers/reviews.service.ts\n            \n            injectable\n            ReviewsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/reviews/reviews.controller.ts\n            \n            controller\n            ReviewsController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/reviews/reviews.entity.ts\n            \n            entity\n            Review\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/dtos/create-subscriber.dto.ts\n            \n            class\n            CreateSubscriberDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/subscribers/providers/subscribers.service.ts\n            \n            injectable\n            SubscribersService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/subscribers/subscriber.entity.ts\n            \n            entity\n            Subscriber\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.controller.ts\n            \n            controller\n            SubscribersController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/uploads/providers/upload-to-aws.provider.ts\n            \n            injectable\n            UploadToAwsProvider\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/uploads/providers/uploads.service.ts\n            \n            injectable\n            UploadsService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/dtos/get-user.dto.ts\n            \n            class\n            GetUsersBaseDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/dtos/get-user.dto.ts\n            \n            class\n            GetUsersDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/users/dtos/patch-user.dto.ts\n            \n            class\n            PatchUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/providers/clear-otp-and-expiry-time.provider.ts\n            \n            injectable\n            ClearOtpAndExpiryTimeProvider\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/users/providers/create-users.provider.ts\n            \n            injectable\n            CreateUsersProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/providers/find-one-by-id.provider.ts\n            \n            injectable\n            FindOneByIdProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/providers/find-one-user-by-email.provider.ts\n            \n            injectable\n            FindOneUserByEmailProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/providers/find-user-by-reset-otp-and-expiry-time.provider.ts\n            \n            injectable\n            FindUserByOtpAndExpiryTimeProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/providers/store-otp-and-expire.provider.ts\n            \n            injectable\n            StoreOtpAndExpireProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/providers/users.service.ts\n            \n            injectable\n            UsersService\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/users/user.entity.ts\n            \n            entity\n            User\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                60 %\n                (3/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.26\n        \n            @nestjs-modules/mailer : ^2.0.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^4.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/platform-express : ^10.4.15\n        \n            @nestjs/swagger : ^11.0.6\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            @types/multer : ^1.4.12\n        \n            aws-sdk : ^2.1692.0\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            joi : ^17.13.3\n        \n            pg : ^8.13.3\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n        \n            uuid : ^11.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthType   (src/.../auth-type.enum.ts)\n                        \n                        \n                            Role   (src/.../role-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/enums/auth-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthType\n                    \n                \n                        \n                            \n                                 Bearer\n                            \n                        \n                        \n                            \n                                 None\n                            \n                        \n            \n        \n\n    src/auth/enums/role-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                        the boostrap nest function\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaginationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductImagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductVariantsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReviewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubscribersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UploadsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_PaginationModule\n\n\n\ncluster_PaginationModule_exports\n\n\n\ncluster_PaginationModule_providers\n\n\n\ncluster_ProductImagesModule\n\n\n\ncluster_ProductImagesModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_exports\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_ProductVariantsModule\n\n\n\ncluster_ProductVariantsModule_exports\n\n\n\ncluster_ProductVariantsModule_providers\n\n\n\ncluster_ReviewsModule\n\n\n\ncluster_ReviewsModule_providers\n\n\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\ncluster_UploadsModule\n\n\n\ncluster_UploadsModule_exports\n\n\n\ncluster_UploadsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nSubscribersModule -->\n\nMailModule->SubscribersModule\n\n\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nProductImagesModule\n\nProductImagesModule\n\nAppModule -->\n\nProductImagesModule->AppModule\n\n\n\n\n\nProductVariantsModule\n\nProductVariantsModule\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nProductVariantsModule->ProductsModule\n\n\n\nAppModule -->\n\nProductVariantsModule->AppModule\n\n\n\n\n\nProductVariantsService \n\nProductVariantsService \n\nProductVariantsService  -->\n\nProductVariantsModule->ProductVariantsService \n\n\n\n\n\nReviewsModule\n\nReviewsModule\n\nReviewsModule -->\n\nProductsModule->ReviewsModule\n\n\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nProductsService \n\nProductsService \n\nProductsService  -->\n\nProductsModule->ProductsService \n\n\n\nAppModule -->\n\nReviewsModule->AppModule\n\n\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUploadsModule\n\nUploadsModule\n\nProductsModule -->\n\nUploadsModule->ProductsModule\n\n\n\nAppModule -->\n\nUploadsModule->AppModule\n\n\n\n\n\nUploadsService \n\nUploadsService \n\nUploadsService  -->\n\nUploadsModule->UploadsService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nGenerateTokensProvider\n\nGenerateTokensProvider\n\nAuthModule -->\n\nGenerateTokensProvider->AuthModule\n\n\n\n\n\nOtpSigninProvider\n\nOtpSigninProvider\n\nAuthModule -->\n\nOtpSigninProvider->AuthModule\n\n\n\n\n\nRefreshTokenProvider\n\nRefreshTokenProvider\n\nAuthModule -->\n\nRefreshTokenProvider->AuthModule\n\n\n\n\n\nSignInProvider\n\nSignInProvider\n\nAuthModule -->\n\nSignInProvider->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nPaginationProvider \n\nPaginationProvider \n\n\n\nPaginationModule\n\nPaginationModule\n\nProductsModule -->\n\nPaginationModule->ProductsModule\n\n\n\nUsersModule -->\n\nPaginationModule->UsersModule\n\n\n\nPaginationProvider  -->\n\nPaginationModule->PaginationProvider \n\n\n\n\n\nPaginationProvider\n\nPaginationProvider\n\nPaginationModule -->\n\nPaginationProvider->PaginationModule\n\n\n\n\n\nProductImagesService\n\nProductImagesService\n\nProductImagesModule -->\n\nProductImagesService->ProductImagesModule\n\n\n\n\n\nCreateProductProvider\n\nCreateProductProvider\n\nProductsModule -->\n\nCreateProductProvider->ProductsModule\n\n\n\n\n\nFindAllProductsProvider\n\nFindAllProductsProvider\n\nProductsModule -->\n\nFindAllProductsProvider->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nUpdateProductProvider\n\nUpdateProductProvider\n\nProductsModule -->\n\nUpdateProductProvider->ProductsModule\n\n\n\n\n\nProductVariantsService\n\nProductVariantsService\n\nProductVariantsModule -->\n\nProductVariantsService->ProductVariantsModule\n\n\n\n\n\nCreateReviewProvider\n\nCreateReviewProvider\n\nReviewsModule -->\n\nCreateReviewProvider->ReviewsModule\n\n\n\n\n\nReviewsService\n\nReviewsService\n\nReviewsModule -->\n\nReviewsService->ReviewsModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\nUploadToAwsProvider\n\nUploadToAwsProvider\n\nUploadsModule -->\n\nUploadToAwsProvider->UploadsModule\n\n\n\n\n\nUploadsService\n\nUploadsService\n\nUploadsModule -->\n\nUploadsService->UploadsModule\n\n\n\n\n\nClearOtpAndExpiryTimeProvider\n\nClearOtpAndExpiryTimeProvider\n\nUsersModule -->\n\nClearOtpAndExpiryTimeProvider->UsersModule\n\n\n\n\n\nCreateUsersProvider\n\nCreateUsersProvider\n\nUsersModule -->\n\nCreateUsersProvider->UsersModule\n\n\n\n\n\nFindOneByIdProvider\n\nFindOneByIdProvider\n\nUsersModule -->\n\nFindOneByIdProvider->UsersModule\n\n\n\n\n\nFindOneUserByEmailProvider\n\nFindOneUserByEmailProvider\n\nUsersModule -->\n\nFindOneUserByEmailProvider->UsersModule\n\n\n\n\n\nFindUserByOtpAndExpiryTimeProvider\n\nFindUserByOtpAndExpiryTimeProvider\n\nUsersModule -->\n\nFindUserByOtpAndExpiryTimeProvider->UsersModule\n\n\n\n\n\nStoreOtpAndExpireProvider\n\nStoreOtpAndExpireProvider\n\nUsersModule -->\n\nStoreOtpAndExpireProvider->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    27 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActiveUser   (src/.../active-user.decorator.ts)\n                        \n                        \n                            Auth   (src/.../auth.decorator.ts)\n                        \n                        \n                            AUTH_TYPE_KEY   (src/.../auth.constant.ts)\n                        \n                        \n                            ENV   (src/.../app.module.ts)\n                        \n                        \n                            REQUEST_USER_KEY   (src/.../auth.constant.ts)\n                        \n                        \n                            Roles   (src/.../role.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../role.constant.ts)\n                        \n                        \n                            ROOT_PATH   (src/.../paths.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/decorator/active-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ActiveUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (field: keyof ActiveUserData | undefined, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user: ActiveUserData = request[REQUEST_USER_KEY];\n\n    return field ? user?.[field] : user;\n  },\n)\n                    \n                \n\n            \n                \n                    Custom param decorator for the active user\n\n                \n            \n\n        \n    \n\n    src/auth/decorator/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...authTypes: AuthType[]) =>\n  SetMetadata(AUTH_TYPE_KEY, authTypes)\n                    \n                \n\n            \n                \n                    decorator for guarding user authentication\n\n                \n            \n\n        \n    \n\n    src/auth/constants/auth.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_TYPE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'authType'\n                    \n                \n\n            \n                \n                    constant for auth type\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REQUEST_USER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n\n            \n                \n                    constant for request user\n\n                \n            \n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENV\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV\n                    \n                \n\n            \n                \n                    app environment\n\n                \n            \n\n        \n    \n\n    src/auth/decorator/role.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Role[]) => SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n            \n                \n                    decoraror for gaurding the user roles\n\n                \n            \n\n        \n    \n\n    src/auth/constants/role.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roles'\n                    \n                \n\n            \n                \n                    constant for the roles\n\n                \n            \n\n        \n    \n\n    src/config/paths.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROOT_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.cwd()\n                    \n                \n\n            \n                \n                    setting the default root\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
