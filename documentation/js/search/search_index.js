var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AccessTokenGuard.html",[0,2.921,1,3.234]],["body/guards/AccessTokenGuard.html",[0,3.408,1,3.774,2,2.74,3,0.095,4,0.059,5,0.059,6,6.125,7,5.222,8,3.213,9,0.674,10,4.619,11,4.724,12,0.222,13,0.986,14,1.517,15,5.608,16,1.423,17,5.306,18,1.337,19,2.942,20,6.606,21,5.608,22,4.914,23,0.468,24,3.624,25,1.215,26,0.008,27,1.052,28,0.426,29,0.848,30,4.307,31,4.914,32,3.624,33,1.739,34,5.306,35,1.607,36,4.465,37,1.367,38,2.166,39,2.271,40,2.552,41,4.704,42,3.261,43,4.704,44,5.306,45,3.535,46,3.624,47,5.306,48,4.011,49,0.624,50,3.261,51,0.166,52,3.563,53,0.472,54,4.465,55,0.437,56,1.855,57,2.443,58,2.578,59,2.578,60,3.624,61,2.942,62,3.213,63,0.065,64,0.104,65,2.74,66,1.636,67,1.027,68,3.774,69,1.984,70,2.942,71,3.624,72,3.624,73,2.284,74,3.213,75,3.213,76,2.578,77,3.624,78,1.542,79,1.391,80,3.624,81,1.099,82,2.942,83,5.608,84,3.213,85,3.624,86,0.912,87,3.624,88,3.624,89,3.213,90,3.624,91,3.213,92,2.904,93,2.904,94,2.631,95,2.904,96,2.806,97,2.904,98,2.904,99,2.904,100,1.099,101,4.307,102,3.624,103,3.624,104,2.74,105,1.917,106,3.624,107,0.946,108,3.624,109,0.004,110,0.004]],["title/interfaces/ActiveUserData.html",[111,3.234,112,2.124]],["body/interfaces/ActiveUserData.html",[3,0.109,4,0.099,5,0.099,9,1.13,12,0.372,26,0.008,28,0.555,35,2.006,49,1.089,63,0.109,83,4.935,109,0.006,110,0.006,111,5.358,112,3.519,113,4.935,114,3.215,115,5.39,116,5.39,117,1.896,118,4.31,119,3.568,120,6.945,121,2.016]],["title/controllers/AppController.html",[122,1.608,123,3.437]],["body/controllers/AppController.html",[3,0.117,4,0.105,5,0.105,12,0.397,13,1.456,23,0.484,26,0.008,37,1.204,49,0.922,51,0.169,55,0.781,63,0.117,64,0.185,67,1.254,107,1.156,109,0.006,110,0.006,122,2.77,123,5.921,124,2.291,125,5.745,126,7.753,127,1.388,128,6.48,129,5.675,130,5.745,131,5.745,132,6.48]],["title/modules/AppModule.html",[133,1.192,134,3.437]],["body/modules/AppModule.html",[1,3.298,3,0.054,4,0.049,5,0.049,7,2.288,26,0.008,28,0.205,39,1.095,40,2.23,51,0.199,52,1.718,55,0.365,56,1.549,57,2.041,59,2.153,63,0.054,64,0.087,68,2.153,69,2.538,73,1.001,107,0.54,109,0.004,110,0.004,123,4.26,124,1.64,129,4.842,130,2.684,133,1.883,134,7.061,135,1.236,136,1.236,137,1.302,138,1.302,139,1.236,140,2.423,141,1.302,142,2.684,143,2.684,144,2.684,145,4.842,146,5.109,147,5.109,148,5.109,149,4.842,150,4.842,151,5.109,152,5.109,153,5.109,154,5.109,155,4.414,156,4.614,157,5.109,158,5.109,159,4.614,160,4.614,161,1.994,162,1.121,163,1.236,164,2.458,165,2.633,166,3.028,167,3.764,168,4.258,169,4.637,170,3.028,171,4.637,172,3.028,173,4.637,174,3.028,175,1.549,176,0.844,177,3.028,178,3.028,179,3.028,180,3.028,181,5.636,182,4.637,183,2.153,184,3.505,185,3.028,186,2.458,187,3.028,188,3.505,189,3.028,190,3.505,191,3.028,192,3.028,193,2.684,194,3.028,195,2.684,196,3.028,197,1.406,198,1.414,199,2.288,200,2.041,201,3.028,202,3.028,203,3.028,204,3.028,205,2.041,206,1.861,207,2.684,208,1.718,209,2.153,210,3.028,211,3.028,212,3.028,213,3.028,214,1.786,215,2.153,216,3.028,217,2.684,218,2.684,219,4.575,220,4.996,221,3.028,222,3.028,223,3.028,224,3.028,225,3.028,226,3.028,227,3.028,228,2.684,229,3.028,230,3.028,231,3.028,232,3.028,233,3.028,234,2.684,235,3.028,236,3.028,237,3.028,238,2.288,239,3.028,240,2.684,241,3.028,242,1.414,243,3.028,244,3.028,245,2.684,246,2.684,247,3.028,248,2.684,249,3.028,250,3.028,251,2.684,252,2.684,253,2.684,254,2.684,255,2.684,256,2.684,257,5.636,258,5.636]],["title/injectables/AppService.html",[53,0.404,129,3.065]],["body/injectables/AppService.html",[3,0.12,4,0.109,5,0.109,12,0.41,13,1.484,23,0.499,26,0.008,37,1.244,49,0.94,51,0.144,53,0.71,55,0.806,63,0.12,64,0.191,107,1.194,109,0.007,110,0.007,126,7.836,129,5.383,259,1.65,260,5.932,261,6.691,262,6.691,263,6.691]],["title/classes/ApplyForDiscountDto.html",[64,0.13,264,3.437]],["body/classes/ApplyForDiscountDto.html",[3,0.12,4,0.108,5,0.108,12,0.407,23,0.496,26,0.008,28,0.451,49,0.936,51,0.144,63,0.12,64,0.228,109,0.007,110,0.007,117,2.003,127,1.425,264,6.014,265,2.06,266,7.054,267,5.399,268,6.056,269,4.088,270,5.897,271,3.827,272,3.168,273,2.248]],["title/injectables/ApplyForDiscountProvider.html",[53,0.404,274,3.065]],["body/injectables/ApplyForDiscountProvider.html",[3,0.077,4,0.069,5,0.069,9,0.795,12,0.262,13,1.11,14,1.663,16,1.156,18,1.156,23,0.446,25,1.156,26,0.008,27,1.001,28,0.405,29,0.807,33,1.076,35,1.628,37,1.11,45,1.791,49,0.81,51,0.175,53,0.531,55,0.515,63,0.077,64,0.122,66,1.414,67,1.156,73,1.413,78,1.736,79,1.565,81,1.811,86,1.503,100,1.296,107,1.065,109,0.005,110,0.005,112,3.48,114,2.261,176,1.192,205,4.026,242,1.997,259,1.054,268,5.927,274,4.026,275,6.101,276,3.47,277,1.444,278,4.847,279,3.79,280,2.836,281,5.618,282,4.275,283,5.294,284,4.847,285,4.275,286,1.296,287,4.208,288,3.158,289,2.161,290,4.275,291,4.275,292,1.054,293,3.232,294,1.621,295,2.261,296,2.522,297,3.47,298,3.79,299,1.228,300,3.79,301,4.514,302,1.445,303,3.47,304,3.79,305,3.79,306,3.79,307,3.232,308,4.275,309,3.79,310,4.275,311,2.638,312,3.47,313,4.275,314,1.85,315,2.522,316,2.261,317,2.261,318,2.261,319,2.188,320,2.261,321,2.261,322,3.232,323,3.269,324,4.275,325,2.746,326,3.79,327,5.294,328,4.275,329,3.47,330,3.79,331,4.275,332,2.746]],["title/controllers/AuthController.html",[122,1.608,333,3.437]],["body/controllers/AuthController.html",[3,0.051,4,0.046,5,0.046,9,1.472,10,4.139,11,3.988,12,0.173,13,0.817,14,1.305,16,0.547,18,0.851,23,0.403,25,1.045,26,0.008,27,0.905,28,0.525,29,0.729,35,1.648,37,1.132,39,2.528,43,3.899,45,2.926,51,0.163,55,0.341,63,0.051,64,0.081,66,1.042,67,0.547,79,1.153,82,5.92,84,5.399,86,0.712,107,0.963,109,0.004,110,0.004,118,2.93,122,1.909,124,1,127,1.156,238,4.08,277,1.626,286,0.857,299,0.582,302,0.956,333,3.324,334,2.506,335,1.495,336,3.272,337,6.121,338,3.899,339,3.57,340,5.281,341,2.506,342,5.084,343,4.382,344,6.193,345,2.827,346,5.671,347,4.08,348,3.992,349,4.649,350,5.398,351,3.732,352,5.671,353,6.987,354,2.827,355,2.827,356,2.295,357,5.222,358,2.496,359,5.262,360,2.827,361,4.969,362,3.324,363,2.827,364,2.827,365,2.827,366,2.295,367,5.222,368,2.827,369,2.827,370,2.827,371,2.827,372,3.128,373,1.402,374,1.906,375,1.816,376,1.737,377,1.667,378,2.506,379,2.295,380,4.106,381,2.506,382,2.827,383,1.605,384,2.827,385,1.284,386,2.506,387,2.295,388,6.09,389,4.944,390,4.944,391,2.827,392,1.216,393,2.295,394,2.827,395,2.827,396,6.428,397,3.639,398,5.51,399,3.57,400,6.09,401,4.08,402,5.398,403,4.398,404,2.827,405,5.398,406,5.398,407,5.398,408,2.827,409,3.467,410,4.08,411,2.827,412,2.827,413,1.447,414,2.827,415,2.827,416,2.827,417,2.827,418,2.827,419,2.827,420,2.827,421,2.827,422,2.827]],["title/modules/AuthModule.html",[133,1.192,145,3.065]],["body/modules/AuthModule.html",[3,0.09,4,0.081,5,0.081,26,0.008,51,0.196,55,0.6,56,2.549,57,3.358,59,3.543,63,0.09,64,0.143,68,3.543,69,2.727,109,0.005,110,0.005,124,2.344,133,2.167,135,2.034,136,2.034,137,2.142,138,2.142,139,2.034,140,3.203,141,2.85,145,6.234,160,4.257,161,2.85,162,1.845,163,2.034,165,2.327,167,4.044,195,4.416,252,4.416,253,4.416,254,4.416,255,4.416,256,4.416,333,5.63,380,5.731,381,4.416,423,4.416,424,4.416,425,5.46,426,5.731,427,5.731,428,5.731,429,4.982,430,4.714,431,4.982,432,4.416,433,4.982,434,4.416,435,4.982,436,4.044,437,4.044,438,4.982,439,4.416,440,4.982,441,4.416]],["title/injectables/AuthService.html",[53,0.404,380,3.065]],["body/injectables/AuthService.html",[3,0.069,4,0.062,5,0.062,9,0.714,10,4.449,11,3.43,12,0.235,13,1.028,14,2.036,16,1.256,18,1.374,23,0.53,25,1.374,26,0.008,27,1.19,28,0.481,29,0.959,33,1.973,35,1.551,37,1.457,51,0.174,53,0.492,55,0.463,63,0.069,64,0.11,66,1.913,67,1.256,86,1.633,107,1.157,109,0.005,110,0.005,133,1.451,238,4.182,259,0.947,277,1.768,286,1.967,299,1.334,302,1.87,336,3.52,338,4.905,339,4.491,340,4.182,341,4.905,342,5.073,351,2.831,356,4.491,357,5.284,359,5.035,361,5.049,366,4.491,367,5.284,372,4.614,379,3.117,380,3.73,387,3.117,393,3.117,426,5.446,427,5.574,428,5.446,434,3.404,439,3.404,441,3.404,442,3.404,443,3.84,444,3.84,445,3.84,446,5.533,447,3.84,448,5.533,449,4.905,450,3.84,451,4.905,452,3.117,453,3.117,454,3.84,455,3.84,456,2.242,457,3.84,458,3.84,459,3.84,460,3.84]],["title/guards/AuthenticationGuard.html",[0,2.921,188,3.437]],["body/guards/AuthenticationGuard.html",[0,4.112,1,5.844,2,5.877,3,0.067,4,0.061,5,0.061,7,2.835,9,0.697,10,3.633,11,1.983,12,0.23,13,1.011,14,1.547,15,6.797,16,1.505,18,1.359,23,0.406,25,1.053,26,0.008,27,1.073,28,0.434,29,0.735,30,4.416,31,4.994,33,1.369,35,1.534,36,4.553,37,1.19,38,2.221,39,2.541,40,2.617,42,3.343,51,0.168,53,0.484,54,3.869,55,0.452,62,3.325,63,0.067,64,0.222,65,2.835,66,1.516,67,1.505,73,2.321,78,1.581,79,0.983,81,1.137,86,0.944,100,1.137,105,2.877,107,0.669,109,0.004,110,0.004,116,4.823,117,0.944,183,2.668,188,4.112,193,3.325,251,3.325,299,1.119,314,1.983,336,3.482,383,2.129,385,1.703,461,3.325,462,4.823,463,5.44,464,5.675,465,5.44,466,3.325,467,7.54,468,3.751,469,3.751,470,5.44,471,3.325,472,3.044,473,2.305,474,3.044,475,2.528,476,3.325,477,3.869,478,3.325,479,3.325,480,3.325,481,2.978,482,5.44,483,3.044,484,4.839,485,3.325,486,3.751,487,3.751,488,3.325,489,3.751,490,2.668,491,3.325,492,4.823,493,2.668,494,3.325,495,3.751,496,3.325,497,3.325,498,3.751,499,1.703,500,3.751,501,3.751,502,2.668,503,2.528,504,3.751,505,2.528,506,3.751,507,3.494]],["title/entities/BankTransfer.html",[508,1.572,509,2.921]],["body/entities/BankTransfer.html",[3,0.084,4,0.076,5,0.076,12,0.285,23,0.648,26,0.008,28,0.589,39,1.687,40,4.281,49,0.981,51,0.137,63,0.084,64,0.133,109,0.005,110,0.005,117,1.596,121,1.927,127,1.859,215,6.26,292,1.15,311,3.414,481,3.47,508,2.191,509,4.072,510,2.312,511,5.409,512,4.134,513,5.445,514,4.856,515,6.386,516,7.203,517,4.103,518,5.445,519,3.365,520,2.242,521,5.842,522,4.663,523,4.427,524,4.663,525,3.244,526,4.663,527,4.663,528,4.792,529,4.663,530,3.785,531,4.792,532,3.785,533,4.663,534,5.445,535,4.663,536,4.663,537,3.144,538,4.275,539,4.274,540,5.146,541,2.386,542,4.965]],["title/controllers/BankTransfersController.html",[122,1.608,543,3.437]],["body/controllers/BankTransfersController.html",[3,0.126,4,0.071,5,0.133,12,0.269,13,1.131,16,0.85,18,0.85,23,0.454,25,1.178,26,0.008,27,1.02,28,0.413,29,0.822,33,1.105,35,1.789,37,1.297,49,0.821,51,0.185,55,0.529,58,3.124,63,0.079,64,0.126,66,1.785,67,0.85,107,1.085,109,0.005,110,0.005,112,3.52,114,2.322,119,1.749,122,1.553,124,1.553,127,1.303,214,4.829,215,4.965,277,1.719,295,2.322,299,0.903,335,2.322,373,3.017,376,2.699,377,2.59,385,1.994,511,4.29,543,4.599,544,3.893,545,6.084,546,4.939,547,6.981,548,3.565,549,6.084,550,4.392,551,4.392,552,4.939,553,4.392,554,5.769,555,4.29,556,4.392,557,7.536,558,4.392,559,5.36,560,5.667,561,6.084,562,3.893,563,2.322,564,2.492,565,2.177,566,2.112,567,3.124,568,3.565,569,4.102,570,2.961,571,3.319,572,4.392,573,3.565,574,4.706,575,3.893,576,3.893,577,4.392,578,4.392,579,4.392,580,1.589,581,4.392,582,4.392,583,3.319,584,4.392,585,4.392,586,3.565,587,3.319,588,2.699,589,4.392,590,4.392]],["title/modules/BankTransfersModule.html",[133,1.192,146,3.234]],["body/modules/BankTransfersModule.html",[3,0.092,4,0.083,5,0.083,26,0.008,51,0.194,55,0.619,63,0.092,64,0.147,109,0.006,110,0.006,124,2.393,133,1.983,135,2.099,136,2.099,137,2.21,138,2.21,139,2.099,140,3.253,141,2.21,146,6.604,155,5.27,159,5.509,161,2.91,162,1.904,163,2.099,165,3.161,175,2.63,176,1.433,198,2.401,199,3.885,214,4.741,215,3.656,509,3.302,511,3.159,543,5.718,574,5.781,575,4.557,576,4.557,591,4.557,592,4.557,593,5.14,594,5.781,595,5.781,596,5.14,597,5.14,598,3.885,599,5.14,600,5.999,601,1.818,602,4.557,603,5.14,604,5.14]],["title/injectables/BankTransfersService.html",[53,0.404,574,3.065]],["body/injectables/BankTransfersService.html",[3,0.069,4,0.062,5,0.122,9,0.712,12,0.235,13,1.027,14,2.035,16,1.255,18,1.07,23,0.529,25,1.373,26,0.008,27,1.189,28,0.481,29,0.958,35,1.643,37,1.204,38,2.256,45,1.606,49,0.922,51,0.178,53,0.491,55,0.462,63,0.069,64,0.11,67,1.255,78,1.606,79,1.449,81,1.676,86,1.631,100,1.162,107,1.156,109,0.005,110,0.005,112,3.313,114,2.027,121,1.026,176,1.069,214,4.762,242,1.791,259,0.945,277,1.767,280,2.721,286,1.676,288,2.027,289,2,292,0.945,294,1.454,295,2.027,299,1.333,314,1.712,315,2.261,316,2.027,317,2.027,318,2.027,319,1.962,320,2.027,321,2.027,323,2.098,456,1.91,509,3.55,511,4.621,546,4.486,548,4.486,552,5.758,554,5.443,555,3.983,559,5.878,566,1.844,567,2.726,568,3.112,574,3.726,586,4.486,594,5.443,595,5.281,598,2.897,600,4.899,605,6.666,606,3.398,607,5.527,608,5.745,609,3.833,610,6.481,611,3.833,612,3.833,613,5.527,614,3.833,615,3.398,616,3.833,617,3.396,618,3.833,619,3.833,620,3.833,621,3.833,622,2.584]],["title/injectables/ClearOtpAndExpiryTimeProvider.html",[53,0.404,623,3.065]],["body/injectables/ClearOtpAndExpiryTimeProvider.html",[3,0.091,4,0.082,5,0.082,12,0.308,13,1.241,14,1.81,16,0.975,18,1.544,23,0.498,25,1.292,26,0.008,27,1.119,28,0.453,29,0.902,33,1.68,35,1.954,37,1.241,51,0.172,53,0.593,55,0.607,63,0.091,64,0.144,66,1.581,67,0.975,73,1.665,78,1.464,79,1.32,81,1.527,86,1.268,100,1.527,107,0.898,109,0.006,110,0.006,176,1.404,259,1.242,277,1.572,280,3.002,286,1.527,289,1.823,292,1.242,294,1.91,299,1.036,314,1.56,332,4.289,347,5.047,351,4.364,623,4.501,624,6.639,625,4.811,626,4.089,627,5.919,628,3.396,629,5.037,630,4.811,631,5.919,632,5.037,633,5.919,634,3.095,635,2.971,636,3.235,637,4.465,638,3.807,639,4.465,640,2.859]],["title/injectables/ConfirmBankTransferProvider.html",[53,0.404,594,3.065]],["body/injectables/ConfirmBankTransferProvider.html",[3,0.072,4,0.065,5,0.065,9,1.061,12,0.245,13,1.061,14,1.606,16,0.776,18,1.105,23,0.426,25,1.105,26,0.008,27,0.957,28,0.387,29,0.771,35,0.876,37,0.745,39,1.451,42,2.464,49,0.782,51,0.165,53,0.507,55,0.483,63,0.072,64,0.115,67,0.776,73,2.197,78,2.105,79,1.898,81,2.015,86,2.142,100,2.015,107,0.715,109,0.005,110,0.005,121,1.778,214,4.691,259,0.989,277,1.395,286,1.216,288,2.121,289,1.451,292,0.989,299,0.825,314,2.058,315,2.365,323,2.195,348,2.195,413,2.052,499,1.821,505,2.703,509,2.576,511,4.084,517,3.197,537,2.703,546,4.633,548,4.633,552,4.633,559,5.15,586,3.255,594,3.848,598,3.031,622,2.703,641,5.891,642,3.255,643,3.255,644,6.053,645,4.01,646,4.01,647,2.703,648,2.703,649,3.031,650,3.508,651,4.727,652,2.921,653,4.06,654,2.852,655,2.852,656,4.06,657,2.852,658,2.852,659,4.06,660,2.83,661,4.01,662,4.01,663,3.555,664,4.01,665,4.01,666,3.555,667,3.555,668,4.01,669,3.255,670,4.48,671,3.031,672,3.031,673,4.314,674,3.031,675,2.365,676,2.852,677,4.01,678,2.852,679,2.852,680,2.852,681,2.852,682,2.852,683,4.06,684,2.852,685,2.852,686,4.727,687,4.06,688,2.852]],["title/classes/CreateBankTransferDto.html",[64,0.13,554,3.065]],["body/classes/CreateBankTransferDto.html",[3,0.106,4,0.096,5,0.096,12,0.36,23,0.631,26,0.008,28,0.574,29,1.201,49,0.949,51,0.127,63,0.106,64,0.168,109,0.006,110,0.006,117,1.859,127,1.812,265,1.824,511,3.619,554,4.979,567,4.189,580,2.672,689,5.221,690,5.221,691,3.662,692,5.544,693,4.744,694,4.744,695,5.582,696,4.958,697,8.46,698,5.89,699,5.89,700,5.89,701,3.619,702,3.97,703,3.783,704,5.89,705,4.452,706,4.452]],["title/classes/CreateDeliveryStateDto.html",[64,0.13,707,3.065]],["body/classes/CreateDeliveryStateDto.html",[3,0.112,4,0.101,5,0.101,12,0.382,23,0.572,26,0.008,28,0.519,49,0.901,51,0.135,63,0.112,64,0.219,109,0.006,110,0.006,117,1.928,127,1.641,208,4.702,265,1.935,269,3.839,271,3.985,272,3.05,273,2.112,520,2.709,707,5.164,708,5.322,709,7.345,710,5.071,711,7.345,712,5.585,713,4.722,714,6.248,715,6.248,716,4.348]],["title/classes/CreateDiscountDto.html",[64,0.13,717,3.065]],["body/classes/CreateDiscountDto.html",[3,0.109,4,0.099,5,0.099,12,0.372,23,0.611,26,0.008,28,0.555,49,0.886,51,0.131,63,0.109,64,0.216,109,0.006,110,0.006,117,1.896,127,1.753,265,1.883,267,4.935,268,5.822,269,3.736,270,5.39,271,4.115,272,3,273,2.055,311,3.327,312,6.644,520,2.664,713,4.595,716,4.275,717,5.078,718,7.584,719,7.256,720,6.08,721,6.08,722,6.08,723,5.694]],["title/injectables/CreateDiscountProvider.html",[53,0.404,724,3.065]],["body/injectables/CreateDiscountProvider.html",[3,0.088,4,0.079,5,0.079,9,0.906,12,0.298,13,1.214,14,1.781,16,0.944,18,1.264,23,0.487,25,1.264,26,0.008,27,1.095,28,0.443,29,0.883,33,1.227,37,1.214,38,2.667,45,2.042,51,0.177,53,0.581,55,0.587,63,0.088,64,0.139,66,1.155,67,0.944,78,1.417,79,1.278,81,1.981,86,1.227,92,2.668,93,2.668,94,2.417,95,2.668,96,2.578,97,2.668,98,2.668,99,2.668,100,1.478,107,0.869,109,0.005,110,0.005,176,1.359,205,3.286,242,2.277,259,1.202,276,3.956,277,1.546,279,4.321,280,2.97,283,5.791,287,4.218,289,2.364,292,1.202,293,3.684,294,1.849,299,1.003,300,4.321,314,2.023,316,2.578,317,2.578,318,2.578,319,2.494,320,2.578,321,2.578,358,2.766,566,2.345,617,2.995,675,2.875,717,5.817,724,4.404,725,6.531,726,5.98,727,4.874,728,3.956,729,4.874,730,6.532,731,3.956,732,4.874,733,4.874]],["title/classes/CreateProductDto.html",[64,0.13,734,3.065]],["body/classes/CreateProductDto.html",[3,0.08,4,0.072,5,0.072,12,0.271,23,0.664,26,0.008,27,1.176,28,0.613,39,1.605,49,1.082,51,0.163,63,0.08,64,0.201,109,0.005,110,0.005,117,1.542,127,1.907,197,1.345,198,2.071,265,1.374,269,5.271,271,4.318,272,3.467,273,1.499,287,3.375,520,2.676,601,2.166,702,2.99,703,2.849,713,4.63,716,3.983,734,4.129,735,3.931,736,5.696,737,4.73,738,4.73,739,4.73,740,5.696,741,5.696,742,4.312,743,5.696,744,3.278,745,4.435,746,4.435,747,4.435,748,4.435,749,4.435,750,4.435,751,4.435,752,4.435,753,4.435,754,4.435,755,3.591,756,4.435,757,2.849,758,3.934,759,4.129,760,4.357,761,3.6,762,2.849,763,2.517,764,2.517]],["title/injectables/CreateProductProvider.html",[53,0.404,765,3.065]],["body/injectables/CreateProductProvider.html",[3,0.057,4,0.051,5,0.051,9,0.891,12,0.354,13,0.891,14,1.399,16,0.928,18,0.928,23,0.358,25,0.928,26,0.008,27,0.804,28,0.438,29,0.648,33,0.796,37,0.891,42,1.944,49,0.564,51,0.164,53,0.426,55,0.381,63,0.057,64,0.09,66,1.371,67,0.928,73,2.698,78,1.683,79,1.518,81,1.755,86,2.015,92,2.624,93,2.624,94,2.377,95,2.624,96,2.535,97,2.624,98,2.624,99,2.624,100,1.755,107,0.855,109,0.004,110,0.004,197,2.549,198,1.478,200,2.132,259,0.78,277,1.215,286,0.959,289,1.144,292,0.78,299,0.986,302,1.069,314,1.793,358,1.795,492,2.804,499,2.933,502,4.118,503,3.903,505,2.132,508,1.093,555,1.944,601,1.695,617,1.944,643,2.568,644,5.694,647,2.132,650,2.946,651,4.118,652,2.963,653,3.41,654,2.25,655,2.25,656,3.41,657,2.25,658,2.25,659,3.41,670,3.903,671,2.391,672,2.391,673,3.624,674,2.391,675,1.866,676,2.25,678,3.41,679,2.25,680,2.25,681,2.25,682,2.25,683,3.41,684,2.25,685,2.25,686,4.118,687,3.41,688,2.25,734,5.271,744,3.243,755,2.453,763,1.795,765,3.232,766,5.132,767,2.568,768,4.699,769,4.876,770,3.163,771,2.568,772,5.931,773,3.624,774,3.163,775,2.25,776,2.568,777,2.804,778,2.132,779,2.568,780,2.804,781,3.41,782,3.163,783,5.79,784,3.163,785,3.892,786,3.163,787,3.163,788,3.163,789,3.163,790,4.794,791,2.568,792,1.866,793,2.804,794,2.391,795,3.163,796,4.794,797,2.828,798,3.163,799,1.436,800,3.163,801,3.163,802,2.568,803,3.163,804,3.163,805,3.624,806,3.163,807,3.163,808,3.163,809,3.163,810,3.163,811,2.804,812,3.163,813,2.804,814,3.163,815,2.568,816,3.163,817,3.163,818,3.163]],["title/classes/CreateProductVariantDto.html",[64,0.13,760,3.234]],["body/classes/CreateProductVariantDto.html",[3,0.098,4,0.088,5,0.088,12,0.332,23,0.612,26,0.008,28,0.59,29,0.947,39,1.962,49,1.042,51,0.151,63,0.098,64,0.222,109,0.006,110,0.006,117,1.764,127,1.758,197,2.576,265,1.68,269,4.306,271,3.947,272,3.091,273,1.833,520,2.478,601,3.004,703,3.484,716,3.977,757,3.484,758,4.501,759,4.724,760,4.984,761,6.897,764,3.078,772,6.302,819,4.402,820,5.868,821,4.987,822,5.868,823,5.424,824,5.424,825,5.424,826,4.808,827,5.424,828,5.424,829,3.273,830,4.808,831,4.808]],["title/classes/CreateReviewDto.html",[64,0.13,832,3.065]],["body/classes/CreateReviewDto.html",[3,0.099,4,0.089,5,0.089,12,0.336,23,0.615,26,0.008,28,0.559,49,1.027,51,0.119,63,0.099,64,0.202,109,0.006,110,0.006,117,1.778,127,1.766,265,1.7,269,4.798,271,4.103,272,3.283,273,1.855,413,4.218,520,2.497,716,4.008,826,4.866,830,4.866,831,4.866,832,4.761,833,7.561,834,4.866,835,3.756,836,4.605,837,6.338,838,6.923,839,5.489,840,5.489,841,5.489,842,8.244,843,4.166,844,5.489,845,7.063,846,5.338,847,5.489,848,5.489,849,5.489,850,5.489]],["title/injectables/CreateReviewProvider.html",[53,0.404,851,3.065]],["body/injectables/CreateReviewProvider.html",[3,0.079,4,0.071,5,0.071,9,0.811,12,0.267,13,1.126,14,1.682,16,1.173,18,1.173,23,0.452,25,1.173,26,0.008,27,1.016,28,0.411,29,0.819,33,1.099,37,1.126,38,2.474,45,1.829,51,0.176,53,0.539,55,0.526,63,0.079,64,0.125,66,1.435,67,1.173,73,1.443,78,1.269,79,1.588,81,1.837,86,1.525,92,2.39,93,2.39,94,2.165,95,2.39,96,2.309,97,2.39,98,2.39,99,2.39,100,1.324,107,0.779,109,0.005,110,0.005,121,1.168,176,1.217,197,2.395,242,2.039,259,1.077,277,1.461,280,2.858,289,2.193,292,1.077,294,1.656,299,1.246,302,1.476,314,1.877,316,2.309,317,2.309,318,2.309,319,2.234,320,2.309,321,2.309,358,2.478,499,1.982,566,2.1,580,1.58,617,2.683,660,2.165,675,2.575,832,5.51,835,2.1,836,5.04,837,4.919,838,4.919,851,4.085,852,6.169,853,3.87,854,4.919,855,4.366,856,5.151,857,4.366,858,5.372,859,4.919,860,4.366,861,3.544,862,3.544,863,3.87,864,3.3,865,3.87,866,4.366,867,4.366,868,6.06,869,4.366,870,4.366,871,4.366,872,4.366,873,4.366,874,4.366,875,4.366,876,4.366,877,4.366,878,3.544,879,4.366,880,4.366]],["title/classes/CreateSubscriberDto.html",[64,0.13,881,3.234]],["body/classes/CreateSubscriberDto.html",[3,0.109,4,0.098,5,0.098,9,1.393,12,0.369,23,0.45,26,0.008,28,0.409,49,0.882,51,0.162,63,0.109,64,0.214,109,0.006,110,0.006,117,1.887,118,4.362,127,1.292,265,1.868,271,3.605,273,2.038,349,4.254,392,2.593,799,3.403,881,5.331,882,6.645,883,5.346,884,5.666,885,5.032,886,4.29,887,4.895,888,6.031,889,5.331,890,5.331,891,6.084,892,4.895,893,4.895,894,4.895]],["title/classes/CreateUserDto.html",[64,0.13,895,3.065]],["body/classes/CreateUserDto.html",[3,0.094,4,0.084,5,0.084,9,1.414,12,0.318,23,0.509,26,0.008,28,0.462,35,1.984,49,0.802,51,0.181,63,0.094,64,0.231,109,0.006,110,0.006,117,1.716,118,4.217,119,3.643,127,1.46,265,1.61,271,3.659,273,1.757,349,4.583,385,3.454,392,2.236,565,3.38,587,3.93,799,3.666,884,5.153,886,4.849,887,4.22,889,4.849,890,5.411,891,5.534,892,4.22,893,4.22,894,4.22,895,4.596,896,6.744,897,3.698,898,4.609,899,4.609,900,4.609,901,4.22,902,5.199,903,5.199,904,4.609]],["title/injectables/CreateUsersProvider.html",[53,0.404,905,3.065]],["body/injectables/CreateUsersProvider.html",[3,0.082,4,0.074,5,0.074,9,1.159,12,0.279,13,1.159,14,1.719,16,0.881,18,1.481,23,0.465,25,1.207,26,0.008,27,1.045,28,0.423,29,0.842,33,1.569,35,1.936,37,1.159,45,1.906,51,0.173,52,2.583,53,0.554,55,0.548,63,0.082,64,0.203,66,1.812,67,0.881,78,1.323,79,1.634,81,1.89,86,1.145,100,1.38,107,0.812,109,0.005,110,0.005,118,2.189,119,1.812,121,1.218,176,1.269,242,2.126,259,1.122,277,1.493,280,2.9,286,1.38,288,2.406,289,2.256,292,1.122,294,1.726,314,1.931,316,2.406,317,2.406,318,2.406,319,2.329,320,2.406,321,2.406,362,4.713,430,3.237,456,2.155,499,2.066,566,2.189,617,2.796,628,3.068,630,4.569,634,2.796,636,2.923,675,2.684,884,5.783,895,5.714,905,4.203,906,6.305,907,4.034,908,5.527,909,4.551,910,5.527,911,4.551,912,3.44,913,4.034,914,2.684,915,4.551,916,6.235,917,4.551,918,4.551,919,4.551,920,4.551,921,4.551]],["title/injectables/DataResponseInterceptor.html",[53,0.404,184,3.437]],["body/injectables/DataResponseInterceptor.html",[3,0.087,4,0.078,5,0.078,9,0.896,12,0.295,13,1.205,16,0.933,18,1.517,23,0.484,25,1.255,26,0.008,27,1.087,28,0.44,29,0.876,31,5.574,33,1.632,36,4.613,37,1.205,51,0.158,53,0.576,55,0.581,56,2.468,63,0.087,64,0.138,65,3.645,66,1.736,67,0.933,69,2.639,94,3.886,107,0.86,109,0.005,110,0.005,168,5.801,184,4.902,186,5.948,259,1.189,299,0.992,302,1.63,456,2.242,471,6.496,472,3.914,483,3.914,491,5.749,493,4.613,922,6.496,923,4.275,924,6.222,925,5.99,926,6.485,927,6.485,928,4.275,929,4.822,930,6.485,931,7.837,932,4.822,933,6.485,934,7.328,935,6.485,936,6.485,937,6.485,938,4.822,939,4.822,940,4.822,941,4.822,942,4.822]],["title/entities/DeliveryState.html",[508,1.572,943,3.234]],["body/entities/DeliveryState.html",[3,0.101,4,0.091,5,0.091,12,0.345,23,0.621,26,0.008,28,0.565,49,0.98,51,0.122,63,0.101,64,0.161,109,0.006,110,0.006,117,1.809,121,2.116,127,1.783,209,6.117,292,1.391,311,3.174,508,2.484,510,2.796,520,2.541,523,4.86,525,3.677,538,4.548,541,2.886,708,5.524,711,7.011,712,5.331,878,6.419,943,5.111,944,5,945,5.64,946,5.64,947,5.64,948,5.64,949,6.37,950,6.37,951,5,952,7.186,953,5.64]],["title/controllers/DeliveryStatesController.html",[122,1.608,954,3.437]],["body/controllers/DeliveryStatesController.html",[3,0.075,4,0.067,5,0.067,12,0.254,13,1.085,16,0.802,18,0.802,23,0.505,25,1.31,26,0.008,27,1.231,28,0.459,29,0.914,33,1.703,37,1.44,49,0.946,51,0.182,55,0.499,63,0.075,64,0.118,66,1.74,67,0.802,107,1.207,109,0.005,110,0.005,119,1.649,122,1.465,124,1.465,127,1.449,208,4.988,209,5.225,277,1.8,299,0.852,302,1.4,335,2.19,336,2.054,358,2.351,373,3.354,376,2.545,377,3.445,383,2.351,385,2.652,409,2.661,473,2.545,563,2.19,564,2.351,565,2.054,566,1.992,588,3.589,707,5.686,708,4.719,712,5.859,954,4.415,955,3.672,956,5.997,957,5.997,958,5.841,959,5.997,960,3.672,961,3.672,962,4.142,963,4.142,964,4.142,965,4.142,966,3.672,967,6.099,968,4.142,969,4.142,970,5.997,971,3.937,972,4.561,973,3.672,974,3.672,975,4.741,976,2.792,977,3.672,978,4.142,979,4.142,980,2.792,981,4.142,982,4.142,983,4.142,984,2.946,985,4.142,986,4.142,987,4.142]],["title/modules/DeliveryStatesModule.html",[133,1.192,147,3.234]],["body/modules/DeliveryStatesModule.html",[3,0.108,4,0.098,5,0.098,26,0.008,51,0.189,55,0.725,63,0.108,64,0.172,109,0.006,110,0.006,124,2.646,133,2.135,135,2.456,136,2.456,137,2.586,138,2.586,139,2.456,140,3.503,141,2.586,147,6.357,161,3.218,162,2.228,163,2.456,165,2.81,175,3.078,176,1.677,208,4.247,209,4.278,708,3.864,943,4.278,954,6.157,972,6.025,973,5.332,974,5.332,988,5.332,989,5.332,990,6.015,991,6.015,992,5.332,993,6.015]],["title/injectables/DeliveryStatesService.html",[53,0.404,972,3.065]],["body/injectables/DeliveryStatesService.html",[3,0.057,4,0.052,5,0.052,9,1.08,12,0.195,13,0.895,14,1.938,16,0.616,18,0.932,23,0.483,25,1.254,26,0.008,27,1.086,28,0.439,29,0.875,33,1.462,35,1.052,37,1.361,45,2.433,49,0.862,51,0.158,53,0.428,55,0.383,63,0.057,64,0.091,66,1.376,67,0.616,78,2.128,79,1.919,81,2.306,86,1.631,92,3.18,93,3.18,94,2.88,95,3.18,96,3.072,97,3.18,98,3.18,99,3.18,100,1.964,105,1.682,107,1.036,109,0.004,110,0.004,121,0.851,176,0.887,208,4.925,242,2.714,259,0.785,277,1.683,280,2.518,286,1.761,288,1.682,289,2.344,292,0.785,294,1.206,299,0.654,314,2.156,316,3.072,317,3.072,318,3.072,319,2.973,320,3.072,321,3.072,322,2.404,323,3.18,358,1.805,507,3.093,566,1.53,622,2.144,660,1.577,707,5.127,708,4.47,712,5.936,943,6.22,956,2.82,957,5.15,959,5.15,960,2.82,966,2.82,967,5.703,970,5.15,971,3.246,972,3.246,975,3.908,977,2.82,980,2.144,984,2.262,992,2.82,994,6.17,995,2.82,996,4.815,997,3.181,998,3.181,999,4.815,1000,3.181,1001,4.815,1002,3.181,1003,3.181,1004,3.181,1005,2.82,1006,3.181,1007,4.815,1008,4.815,1009,2.404,1010,3.181,1011,2.144]],["title/entities/Discount.html",[287,2.187,508,1.572]],["body/entities/Discount.html",[3,0.096,4,0.086,5,0.086,12,0.326,23,0.646,26,0.008,28,0.606,39,2.508,49,0.96,50,3.278,51,0.115,63,0.096,64,0.153,79,1.398,109,0.006,110,0.006,117,1.745,121,2.061,127,1.855,268,5.478,287,3.335,292,1.316,309,6.828,311,3.733,312,6.252,481,4.216,508,2.396,510,2.645,520,2.883,525,3.548,538,4.729,541,2.73,542,4.453,719,6.828,843,4.089,1012,4.729,1013,7.702,1014,5.334,1015,5.334,1016,5.334,1017,4.729,1018,5.334,1019,4.453,1020,6.164,1021,5.334,1022,5.334]],["title/entities/DiscountUsage.html",[508,1.572,1023,2.794]],["body/entities/DiscountUsage.html",[3,0.093,4,0.084,5,0.084,12,0.315,23,0.624,26,0.008,28,0.567,35,1.912,39,1.864,49,0.797,51,0.174,63,0.093,64,0.147,109,0.006,110,0.006,117,1.706,121,2.026,127,1.79,206,5.273,287,4.208,292,1.271,296,5.061,311,2.993,508,2.342,510,2.554,523,4.654,525,3.468,530,4.182,532,4.182,539,4.569,540,5.501,541,2.636,542,4.353,1023,4.165,1024,4.567,1025,4.749,1026,7.573,1027,4.82,1028,5.152,1029,5.152,1030,5.501,1031,5.152,1032,5.152,1033,5.152,1034,4.182,1035,4.182,1036,3.664,1037,5.386]],["title/controllers/DiscountsController.html",[122,1.608,1038,3.437]],["body/controllers/DiscountsController.html",[3,0.089,4,0.08,5,0.08,12,0.304,13,1.228,16,0.96,18,0.96,23,0.493,25,1.279,26,0.008,27,1.108,28,0.448,29,0.893,35,1.732,37,1.228,51,0.19,55,0.598,63,0.089,64,0.142,67,0.96,107,1.179,109,0.005,110,0.005,112,3.702,114,2.623,119,1.975,122,1.754,124,1.754,127,1.415,205,4.455,264,6.551,277,1.782,278,6.033,284,4.026,295,2.623,299,1.02,302,1.676,335,2.623,373,3.277,374,3.344,375,3.186,377,3.898,385,2.252,410,3.749,563,2.623,564,2.815,565,2.459,566,2.386,569,4.455,570,3.344,571,3.749,583,3.749,588,3.048,717,5.724,726,5.364,728,4.026,731,5.364,961,4.397,1038,4.995,1039,4.397,1040,4.96,1041,4.96,1042,4.96,1043,5.01,1044,4.397,1045,4.96,1046,4.96,1047,4.96,1048,4.96,1049,4.96,1050,4.96,1051,4.96]],["title/modules/DiscountsModule.html",[133,1.192,148,3.234]],["body/modules/DiscountsModule.html",[3,0.097,4,0.088,5,0.088,26,0.008,51,0.194,55,0.652,63,0.097,64,0.155,109,0.006,110,0.006,124,2.474,133,2.033,135,2.209,136,2.209,137,2.327,138,2.327,139,2.209,140,3.335,141,2.327,148,6.586,149,5.863,161,3.009,162,2.004,163,2.209,165,3.268,175,2.769,176,1.509,206,3.325,207,4.796,274,5.863,287,2.603,293,4.09,296,3.191,724,5.863,1038,5.862,1043,5.863,1044,4.796,1052,4.796,1053,5.411,1054,4.796,1055,5.411,1056,5.411,1057,5.411,1058,6.203,1059,4.09,1060,5.411]],["title/injectables/DiscountsService.html",[53,0.404,1043,3.065]],["body/injectables/DiscountsService.html",[3,0.081,4,0.073,5,0.073,12,0.277,13,1.154,14,1.997,16,1.202,18,1.202,23,0.529,25,1.373,26,0.008,27,1.188,28,0.481,29,0.958,33,1.563,35,1.668,37,1.418,38,2.535,49,0.834,51,0.178,53,0.552,55,0.545,63,0.081,64,0.129,66,1.679,67,1.202,86,1.563,107,1.108,109,0.005,110,0.005,112,3.565,114,2.392,259,1.116,268,5.877,274,5.705,277,1.734,278,5.04,284,5.04,286,1.371,287,4.146,293,3.419,295,2.392,299,1.277,303,3.672,304,4.01,305,4.01,306,4.01,307,3.419,358,2.567,362,4.693,456,2.146,499,2.819,566,2.176,717,5.705,724,5.57,726,5.755,728,3.672,731,3.672,1043,4.186,1058,5.505,1061,4.01,1062,4.523,1063,4.523,1064,4.523,1065,4.523,1066,5.505,1067,6.209,1068,4.523,1069,4.523]],["title/modules/DiscountsUsageModule.html",[133,1.192,149,3.065]],["body/modules/DiscountsUsageModule.html",[3,0.108,4,0.097,5,0.097,26,0.008,51,0.184,55,0.723,63,0.108,64,0.172,109,0.006,110,0.006,133,2.133,135,2.449,136,2.449,137,2.58,138,2.58,139,2.449,140,3.498,141,3.498,149,6.106,161,3.212,162,2.222,163,2.449,165,2.802,175,3.07,176,1.673,205,4.044,206,3.687,281,6.331,296,3.538,298,5.318,1023,3.687,1070,5.318,1071,5.318,1072,5.318,1073,5.999,1074,5.999,1075,4.267,1076,5.999]],["title/injectables/DiscountsUsageService.html",[53,0.404,281,3.065]],["body/injectables/DiscountsUsageService.html",[3,0.084,4,0.075,5,0.075,9,0.863,12,0.284,13,1.175,14,1.737,16,0.899,18,1.224,23,0.472,25,1.224,26,0.008,27,1.06,28,0.429,29,0.854,33,1.169,35,1.686,37,1.175,45,1.945,49,0.98,51,0.167,53,0.562,55,0.56,63,0.084,64,0.133,66,1.497,67,0.899,78,1.35,79,1.217,81,1.917,86,1.169,92,2.542,93,2.542,94,2.303,95,2.542,96,2.456,97,2.542,98,2.542,99,2.542,100,1.408,107,0.828,109,0.005,110,0.005,121,1.692,176,1.295,205,4.262,242,2.169,259,1.145,277,1.509,280,2.921,281,4.262,286,1.408,287,3.712,289,2.288,292,1.145,294,1.761,296,4.24,297,5.835,299,0.955,301,6.102,314,1.958,316,2.456,317,2.456,318,2.456,319,2.376,320,2.456,321,2.456,325,2.983,326,6.372,327,6.372,519,3.771,695,5.433,1023,2.854,1075,3.303,1077,4.117,1078,6.322,1079,4.644,1080,4.644,1081,6.322,1082,6.322,1083,4.644,1084,4.644,1085,4.644,1086,2.739,1087,4.644]],["title/injectables/FindAllOrdersProvider.html",[53,0.404,1088,3.065]],["body/injectables/FindAllOrdersProvider.html",[3,0.084,4,0.075,5,0.075,12,0.284,13,1.175,14,1.737,16,1.224,18,1.224,23,0.472,25,1.224,26,0.008,27,1.06,28,0.429,29,0.854,33,1.169,35,1.015,37,1.175,38,2.581,51,0.184,53,0.562,55,0.56,63,0.084,64,0.133,66,1.1,67,1.224,73,2.376,78,1.35,79,1.217,81,1.408,86,1.169,100,1.408,107,0.828,109,0.005,110,0.005,176,1.295,259,1.145,277,1.509,280,2.921,292,1.145,294,1.761,299,1.3,314,1.438,332,2.983,456,1.605,519,2.169,580,2.288,1025,2.456,1086,4.24,1088,4.262,1089,6.372,1090,4.117,1091,3.729,1092,4.117,1093,4.727,1094,5.835,1095,4.644,1096,5.132,1097,4.957,1098,4.644,1099,4.846,1100,3.678,1101,5.742,1102,3.131,1103,2.303,1104,3.77,1105,2.983,1106,3.77,1107,3.303,1108,2.983,1109,4.117,1110,4.417,1111,4.262,1112,6.322,1113,3.303,1114,4.117,1115,3.51]],["title/injectables/FindAllPaymentsProvider.html",[53,0.404,1116,3.065]],["body/injectables/FindAllPaymentsProvider.html",[3,0.088,4,0.079,5,0.079,12,0.298,13,1.212,14,1.779,16,1.263,18,1.263,23,0.487,25,1.263,26,0.008,27,1.093,28,0.442,29,0.881,37,0.904,51,0.182,53,0.58,55,0.586,63,0.088,64,0.139,67,1.263,73,2.433,78,1.414,79,1.275,81,1.475,86,1.224,100,1.475,107,0.868,109,0.005,110,0.005,176,1.356,259,1.2,277,1.545,280,2.845,286,1.475,292,1.2,294,1.845,299,1.342,314,1.506,332,3.124,456,1.681,517,3.138,519,2.272,580,2.36,1086,4.341,1091,3.847,1093,4.895,1102,3.279,1103,2.412,1107,3.459,1108,3.124,1110,4.523,1111,4.397,1113,3.459,1115,3.676,1116,4.397,1117,6.524,1118,4.312,1119,4.312,1120,4.864,1121,5.782,1122,6.523,1123,5.051,1124,4.864,1125,5.782,1126,3.948,1127,3.676,1128,4.864,1129,4.312,1130,6.523,1131,4.864]],["title/injectables/FindAllProductsProvider.html",[53,0.404,1132,3.065]],["body/injectables/FindAllProductsProvider.html",[3,0.054,4,0.049,5,0.049,12,0.184,13,0.856,14,1.354,16,1.312,18,0.891,23,0.418,25,1.312,26,0.008,27,1.053,28,0.38,29,0.757,33,0.755,37,1.168,38,1.88,50,4.397,51,0.161,53,0.409,55,0.361,63,0.054,64,0.086,66,1.091,67,0.891,73,2.463,78,0.872,79,0.786,81,0.909,86,0.755,92,2.52,93,2.52,94,2.283,95,2.52,96,2.435,97,2.52,98,2.52,99,2.52,100,0.909,101,2.435,105,1.586,107,0.999,109,0.004,110,0.004,176,0.836,197,1.396,259,0.74,277,1.176,280,2.453,292,0.74,294,1.138,299,0.947,314,0.929,322,3.48,332,5.403,398,4.47,456,1.037,493,3.275,514,3.104,580,2.589,652,3.216,737,2.022,738,2.022,739,2.022,742,1.843,744,2.617,775,2.133,781,3.985,792,1.769,820,2.267,822,2.267,843,1.769,980,2.022,1025,3.784,1086,3.999,1091,3.305,1093,4.229,1100,2.867,1102,2.022,1103,1.487,1105,1.927,1107,2.133,1108,1.927,1110,3.862,1111,3.777,1113,2.133,1115,2.267,1132,3.104,1133,5.572,1134,2.659,1135,4.604,1136,2.659,1137,3,1138,3.737,1139,4.604,1140,5.336,1141,3,1142,4.604,1143,4.604,1144,4.604,1145,2.659,1146,3,1147,5.102,1148,4.604,1149,2.267,1150,4.081,1151,2.435,1152,2.435,1153,3,1154,6.344,1155,3,1156,4.604,1157,3,1158,3,1159,5.603,1160,3,1161,3,1162,3,1163,4.604,1164,3,1165,3,1166,3,1167,3,1168,3,1169,3,1170,2.435,1171,3,1172,3,1173,3,1174,3,1175,4.081,1176,3,1177,3,1178,3,1179,3,1180,3,1181,4.604,1182,3,1183,4.604,1184,3,1185,4.604,1186,3,1187,3,1188,4.604,1189,3,1190,2.022,1191,2.659,1192,3,1193,2.659,1194,3,1195,3,1196,2.267,1197,3,1198,3,1199,3,1200,3]],["title/injectables/FindAllSubscribersProvider.html",[53,0.404,1201,3.065]],["body/injectables/FindAllSubscribersProvider.html",[3,0.085,4,0.076,5,0.076,12,0.288,13,1.187,14,1.75,16,1.236,18,1.236,23,0.476,25,1.236,26,0.008,27,1.07,28,0.433,29,0.863,33,1.186,35,1.03,37,1.187,38,2.607,51,0.185,53,0.567,55,0.568,63,0.085,64,0.135,66,1.116,67,1.236,73,2.394,78,1.37,79,1.235,81,1.429,86,1.186,100,1.429,107,0.84,109,0.005,110,0.005,176,1.314,259,1.162,277,1.52,280,2.935,292,1.162,294,1.787,299,1.313,314,1.459,456,1.629,580,2.31,885,2.779,1086,4.271,1091,4.271,1092,4.177,1093,4.747,1094,5.878,1099,3.176,1100,3.706,1101,5.77,1102,3.176,1103,2.336,1105,3.027,1107,3.351,1108,3.027,1110,4.45,1111,4.304,1113,3.351,1114,4.177,1115,3.561,1201,4.304,1202,6.42,1203,4.177,1204,4.712,1205,4.712,1206,4.986,1207,4.712,1208,5.878,1209,3.825,1210,3.825,1211,4.177]],["title/injectables/FindOneByIdProvider.html",[53,0.404,1212,3.065]],["body/injectables/FindOneByIdProvider.html",[3,0.082,4,0.074,5,0.074,9,1.157,12,0.278,13,1.157,14,1.717,16,0.879,18,1.48,23,0.465,25,1.205,26,0.008,27,1.044,28,0.422,29,0.841,33,1.567,35,1.995,37,1.157,45,1.902,49,0.836,51,0.165,53,0.553,55,0.547,63,0.082,64,0.203,66,1.475,67,0.879,78,1.81,79,1.632,81,1.888,86,1.143,92,2.486,93,2.486,94,2.252,95,2.486,96,2.402,97,2.486,98,2.486,99,2.486,100,1.377,105,3.293,107,0.81,109,0.005,110,0.005,121,2.267,176,1.266,242,2.121,259,1.12,277,1.491,280,2.898,286,1.377,288,2.402,289,2.253,292,1.12,294,1.722,299,0.934,314,1.407,316,2.402,317,2.402,318,2.402,319,2.324,320,2.402,321,2.402,322,3.433,323,3.408,456,2.152,507,2.917,622,3.062,628,3.062,630,4.564,634,2.791,636,2.917,1212,4.198,1213,5.371,1214,4.922,1215,4.026,1216,6.205,1217,6.227,1218,4.541,1219,6.227,1220,4.541,1221,4.026]],["title/injectables/FindOneUserByEmailProvider.html",[53,0.404,1222,3.065]],["body/injectables/FindOneUserByEmailProvider.html",[3,0.083,4,0.075,5,0.075,9,1.172,12,0.283,13,1.172,14,1.734,16,0.895,18,1.491,23,0.47,25,1.22,26,0.008,27,1.057,28,0.427,29,0.852,33,1.587,35,2.019,37,1.172,49,0.844,50,3.874,51,0.166,53,0.56,54,3.29,55,0.557,63,0.083,64,0.132,66,1.493,67,0.895,78,1.833,79,1.653,81,1.402,86,1.164,100,1.402,105,4.074,107,0.825,109,0.005,110,0.005,118,4.226,119,1.842,121,1.237,176,1.29,259,1.141,277,1.506,280,2.787,286,1.402,289,1.673,292,1.141,294,1.754,299,0.951,314,1.433,323,2.531,456,2.179,628,3.118,630,4.948,634,2.842,636,2.971,640,2.625,1213,5.422,1214,4.408,1216,6.253,1222,4.25,1223,4.1,1224,5.589,1225,4.625,1226,5.589,1227,4.625,1228,4.625,1229,4.1,1230,3.496,1231,4.625]],["title/injectables/FindUserByOtpAndExpiryTimeProvider.html",[53,0.404,1232,3.065]],["body/injectables/FindUserByOtpAndExpiryTimeProvider.html",[3,0.08,4,0.072,5,0.072,9,1.145,11,4.015,12,0.274,13,1.145,14,1.703,16,0.865,18,1.47,23,0.46,25,1.192,26,0.008,27,1.032,28,0.418,29,0.832,33,1.55,35,1.978,37,1.145,49,0.829,51,0.164,53,0.547,54,3.179,55,0.539,63,0.08,64,0.202,66,1.459,67,0.865,78,1.79,79,1.614,81,1.355,82,3.628,86,1.125,100,1.355,105,4.015,107,0.797,109,0.005,110,0.005,162,3.124,176,1.246,259,1.102,277,1.479,280,2.882,286,1.355,289,1.617,292,1.102,294,1.695,299,0.919,311,1.974,314,1.384,351,4.317,456,2.129,625,5.418,626,3.628,628,3.013,630,4.526,634,2.747,635,2.636,636,2.871,638,3.378,640,2.537,1190,5.119,1213,5.326,1216,6.164,1230,3.378,1232,4.152,1233,6.164,1234,6.159,1235,4.47,1236,6.159,1237,4.47,1238,4.47,1239,4.47,1240,4.47,1241,6.159,1242,4.47,1243,4.47]],["title/injectables/GenerateTokensProvider.html",[53,0.404,425,2.921]],["body/injectables/GenerateTokensProvider.html",[3,0.117,4,0.062,5,0.062,9,0.714,10,3.682,11,2.926,12,0.235,13,1.028,14,1.894,16,1.071,18,1.374,19,3.117,20,6.557,21,5.762,22,5.049,23,0.484,25,1.374,26,0.008,27,1.087,28,0.481,29,0.876,33,1.787,35,1.892,37,1.319,49,0.763,51,0.169,52,2.179,53,0.492,55,0.463,56,1.965,57,2.589,59,2.731,63,0.069,64,0.11,66,1.857,67,1.071,68,5.049,69,2.102,70,3.117,73,1.269,83,6.557,86,1.393,107,0.987,109,0.005,110,0.005,112,1.794,118,1.847,119,1.529,120,3.117,259,0.947,277,1.645,286,1.678,295,2.031,299,1.138,302,1.298,344,4.905,359,4.167,361,5.575,372,3.936,399,4.491,401,4.182,425,3.554,437,3.117,456,1.913,475,3.73,519,3.03,520,2.294,1036,2.731,1066,4.905,1244,6.293,1245,3.404,1246,6.293,1247,5.533,1248,5.533,1249,3.84,1250,5.533,1251,3.84,1252,5.533,1253,7.525,1254,5.762,1255,3.84,1256,3.117,1257,5.533,1258,3.404,1259,3.84,1260,3.404,1261,3.404,1262,3.404,1263,3.404,1264,3.404,1265,3.404,1266,3.404,1267,3.936,1268,3.84,1269,2.902,1270,3.84,1271,2.902,1272,2.902,1273,3.84,1274,3.84]],["title/classes/GetOrdersBaseDto.html",[64,0.13,1275,3.437]],["body/classes/GetOrdersBaseDto.html",[3,0.108,4,0.097,5,0.097,9,1.112,12,0.366,23,0.446,26,0.008,28,0.406,29,1.008,49,0.878,51,0.175,63,0.108,64,0.232,109,0.006,110,0.006,117,1.877,127,1.281,265,1.853,272,2.97,273,2.022,392,2.573,519,3.796,580,2.699,691,2.967,696,3.677,799,3.69,829,3.484,1097,3.843,1275,6.142,1276,6.054,1277,4.857,1278,4.233,1279,4.583,1280,5.983,1281,4.233,1282,3.698,1283,3.164,1284,3.275,1285,3.677]],["title/classes/GetOrdersDto.html",[64,0.13,1097,2.921]],["body/classes/GetOrdersDto.html",[3,0.111,4,0.1,5,0.1,9,1.152,26,0.008,49,0.729,51,0.178,63,0.111,64,0.236,109,0.006,110,0.006,265,1.919,272,3.035,273,2.094,392,2.664,519,2.894,580,2.242,691,3.779,799,3.748,829,3.56,1097,4.896,1275,6.24,1276,5.03,1277,5.03,1278,3.517,1279,3.808,1281,4.685,1282,4.093,1283,3.277,1284,3.392,1285,4.684]],["title/classes/GetPaymentsBaseDto.html",[64,0.13,1286,3.437]],["body/classes/GetPaymentsBaseDto.html",[3,0.108,4,0.097,5,0.097,9,1.112,12,0.366,23,0.446,26,0.008,28,0.406,29,1.008,49,0.878,51,0.175,63,0.108,64,0.232,109,0.006,110,0.006,117,1.877,127,1.281,265,1.853,272,2.97,273,2.022,392,2.573,519,3.796,580,2.699,691,2.967,696,3.677,799,3.69,829,3.484,1123,3.843,1278,4.233,1279,4.583,1281,4.233,1282,3.698,1283,3.164,1284,3.275,1285,3.677,1286,6.142,1287,6.054,1288,4.857,1289,5.983]],["title/classes/GetPaymentsDto.html",[64,0.13,1123,2.921]],["body/classes/GetPaymentsDto.html",[3,0.111,4,0.1,5,0.1,9,1.152,26,0.008,49,0.729,51,0.178,63,0.111,64,0.236,109,0.006,110,0.006,265,1.919,272,3.035,273,2.094,392,2.664,519,2.894,580,2.242,691,3.779,799,3.748,829,3.56,1123,4.896,1278,3.517,1279,3.808,1281,4.685,1282,4.093,1283,3.277,1284,3.392,1285,4.684,1286,6.24,1287,5.03,1288,5.03]],["title/classes/GetProductsBaseDto.html",[64,0.13,1290,3.437]],["body/classes/GetProductsBaseDto.html",[3,0.077,4,0.069,5,0.069,9,0.795,12,0.262,23,0.622,26,0.008,27,1.314,28,0.565,29,1.223,49,1.065,51,0.149,63,0.077,64,0.197,109,0.005,110,0.005,117,1.503,127,1.785,197,2.705,265,1.324,272,3.385,273,1.445,392,1.838,580,2.161,691,2.12,696,5.121,737,5.284,738,4.639,739,4.639,742,4.816,799,3.125,829,3.971,1140,2.746,1278,3.389,1279,3.67,1281,3.389,1282,2.961,1283,2.261,1284,2.34,1285,2.627,1290,5.202,1291,6.901,1292,3.232,1293,6.948,1294,6.948,1295,4.275,1296,4.275,1297,5.294,1298,4.275,1299,4.275,1300,5.294,1301,5.294,1302,4.275,1303,3.79,1304,4.275]],["title/classes/GetProductsDto.html",[64,0.13,1140,2.921]],["body/classes/GetProductsDto.html",[3,0.096,4,0.086,5,0.086,9,0.991,26,0.008,27,1.162,49,1.038,51,0.166,63,0.096,64,0.22,109,0.006,110,0.006,197,2.627,265,1.652,272,3.561,273,1.803,392,2.294,580,1.93,691,3.437,737,4.674,738,3.596,739,3.596,742,4.26,799,3.497,829,4.177,1140,4.453,1278,3.027,1279,3.278,1281,4.371,1282,3.819,1283,2.821,1284,2.92,1285,4.26,1290,5.822,1291,4.33,1292,4.032,1293,6.146,1294,6.146,1297,4.729,1300,4.729,1301,4.729]],["title/classes/GetSubscribersBaseDto.html",[64,0.13,1305,3.437]],["body/classes/GetSubscribersBaseDto.html",[3,0.116,4,0.105,5,0.105,9,1.201,26,0.008,51,0.169,63,0.116,64,0.224,109,0.006,110,0.006,265,2.001,392,2.779,580,2.829,691,3.204,799,3.818,1206,4.151,1278,4.438,1279,4.805,1281,4.438,1282,3.877,1283,3.417,1284,3.537,1285,3.971,1305,6.356,1306,5.245,1307,5.245]],["title/classes/GetSubscribersDto.html",[64,0.13,1206,2.921]],["body/classes/GetSubscribersDto.html",[3,0.115,4,0.104,5,0.104,9,1.191,26,0.008,51,0.168,63,0.115,64,0.223,109,0.006,110,0.006,265,1.984,392,2.755,580,2.318,691,3.857,799,3.804,1206,4.997,1278,3.636,1279,3.937,1281,4.755,1282,4.154,1283,3.388,1284,3.507,1285,4.78,1305,6.332,1306,5.201,1307,5.201]],["title/classes/GetUsersBaseDto.html",[64,0.13,1308,3.437]],["body/classes/GetUsersBaseDto.html",[3,0.099,4,0.089,5,0.089,9,1.023,12,0.337,23,0.528,26,0.008,28,0.48,29,1.115,35,1.708,51,0.169,63,0.127,64,0.25,109,0.006,110,0.006,117,1.78,127,1.515,265,1.704,273,1.86,311,3.975,392,2.366,650,4.347,691,2.728,723,5.909,799,3.549,829,3.652,897,3.914,898,4.878,1278,4.015,1281,4.015,1282,3.507,1283,2.91,1284,3.012,1308,5.909,1309,6.346,1310,6.93,1311,6.93,1312,6.271,1313,6.271,1314,5.503,1315,3.71]],["title/classes/GetUsersDto.html",[64,0.13,1315,3.065]],["body/classes/GetUsersDto.html",[3,0.107,4,0.096,5,0.096,9,1.1,26,0.008,35,1.767,51,0.175,63,0.133,64,0.255,109,0.006,110,0.006,265,1.834,273,2.001,311,3.744,392,2.546,650,3.638,691,3.674,723,6.113,799,3.672,829,3.778,897,4.211,1278,3.36,1281,4.59,1282,4.01,1283,3.131,1284,3.241,1308,6.113,1309,4.806,1310,5.248,1311,5.248,1313,5.248,1315,4.995]],["title/classes/InitiatePaymentDto.html",[64,0.13,692,2.794]],["body/classes/InitiatePaymentDto.html",[3,0.092,4,0.083,5,0.083,12,0.315,23,0.6,26,0.008,28,0.593,29,1.159,39,2.448,49,1.029,51,0.163,63,0.092,64,0.23,109,0.006,110,0.006,117,1.703,127,1.722,197,1.558,265,1.592,271,4.018,272,3.326,273,1.737,520,1.818,580,2.737,601,1.818,692,4.158,693,4.859,694,4.859,695,5.718,696,4.649,701,4.94,702,3.465,703,3.302,705,6.313,716,3.841,742,3.159,744,2.401,757,3.302,758,4.859,759,5.1,762,3.302,764,3.841,829,3.755,835,2.472,1316,4.172,1317,5.14,1318,5.14,1319,5.14,1320,5.14,1321,4.649,1322,3.656]],["title/injectables/InitiatePaymentProvider.html",[53,0.404,1323,3.065]],["body/injectables/InitiatePaymentProvider.html",[3,0.074,4,0.042,5,0.042,9,0.762,12,0.158,13,0.762,14,1.231,16,1.416,18,0.793,22,4.124,23,0.38,25,0.793,26,0.008,27,0.687,28,0.278,29,0.554,33,1.032,35,1.686,37,0.947,42,1.588,45,1.083,48,1.954,49,0.304,51,0.178,52,1.467,53,0.364,55,0.311,56,1.323,63,0.047,64,0.074,67,1.224,69,2.244,73,2.49,76,4.124,78,1.481,79,1.335,81,1.545,86,1.942,100,1.545,107,0.909,109,0.003,110,0.003,112,2.708,114,1.367,118,1.243,121,1.097,168,4.752,197,1.758,208,1.467,259,0.637,277,1.069,286,0.784,287,3.391,289,0.935,292,0.637,295,1.367,299,1.3,302,1.722,314,1.578,315,1.524,325,1.66,336,2.032,397,1.742,456,0.893,477,1.838,485,2.291,490,1.838,493,1.838,499,1.861,502,1.838,503,3.434,505,1.742,513,3.85,517,2.45,519,1.207,537,1.742,560,2.098,580,0.935,601,0.914,635,1.524,644,5.488,647,1.742,648,1.742,649,1.954,650,2.519,651,3.623,652,2.098,653,2.916,654,1.838,655,1.838,656,2.916,657,1.838,658,1.838,659,2.916,660,2.032,669,2.098,670,3.434,671,1.954,672,1.954,673,3.098,674,1.954,675,1.524,676,1.838,678,1.838,679,1.838,680,1.838,681,1.838,682,1.838,683,2.916,684,1.838,685,1.838,686,3.623,687,2.916,688,1.838,692,4.134,693,2.633,694,2.633,706,1.954,744,2.708,764,2.327,792,2.418,797,1.524,821,2.633,835,1.972,889,2.916,925,2.916,1034,2.098,1036,1.838,1214,1.588,1323,2.763,1324,5.14,1325,2.098,1326,5.14,1327,5.094,1328,2.291,1329,4.001,1330,4.001,1331,2.585,1332,3.634,1333,2.585,1334,2.633,1335,4.382,1336,5.131,1337,2.585,1338,2.585,1339,2.098,1340,2.098,1341,2.098,1342,3.327,1343,1.954,1344,1.742,1345,1.742,1346,1.954,1347,2.098,1348,2.098,1349,2.291,1350,1.838,1351,2.291,1352,3.634,1353,2.585,1354,5.094,1355,2.291,1356,1.954,1357,2.585,1358,2.291,1359,2.291,1360,2.291,1361,2.585,1362,2.291,1363,2.291,1364,2.291,1365,2.291,1366,5.527,1367,5.094,1368,2.098,1369,2.291,1370,3.634,1371,2.098,1372,2.291,1373,2.098,1374,3.634,1375,5.14,1376,3.634,1377,2.291,1378,2.098,1379,3.327,1380,2.585,1381,3.098,1382,1.954,1383,2.916,1384,2.763,1385,1.954,1386,2.585,1387,2.098,1388,2.585,1389,2.585,1390,2.585,1391,2.585,1392,2.585,1393,2.585,1394,2.585,1395,2.585,1396,2.291,1397,2.291,1398,2.585,1399,2.098,1400,2.585,1401,2.291,1402,2.291,1403,2.585,1404,2.291]],["title/modules/MailModule.html",[133,1.192,150,3.065]],["body/modules/MailModule.html",[3,0.085,4,0.077,5,0.077,14,1.148,26,0.008,35,1.038,39,2.323,40,3.089,51,0.181,52,3.644,55,0.572,56,2.431,63,0.085,64,0.136,69,3.514,79,1.246,107,0.848,109,0.005,110,0.005,133,2.247,135,1.94,136,1.94,137,2.043,138,2.043,139,1.94,140,3.127,141,3.127,150,5.779,161,2.761,162,1.76,163,1.94,165,2.219,168,4.903,228,5.692,234,4.212,240,4.212,246,4.212,302,1.606,336,2.356,477,3.379,481,2.601,488,4.212,914,5.355,1111,3.203,1170,3.857,1405,4.212,1406,4.212,1407,4.212,1408,4.751,1409,6.421,1410,4.751,1411,4.751,1412,4.853,1413,3.857,1414,3.857,1415,6.421,1416,4.751,1417,4.751,1418,3.379,1419,4.751,1420,4.212,1421,4.751,1422,5.692,1423,4.751,1424,6.421,1425,6.421,1426,6.421,1427,4.751,1428,4.751,1429,4.751,1430,4.751,1431,4.751,1432,4.212,1433,4.212,1434,4.212,1435,4.751,1436,4.751,1437,4.751,1438,4.751,1439,4.751,1440,4.751]],["title/injectables/MailService.html",[53,0.404,914,2.682]],["body/injectables/MailService.html",[3,0.059,4,0.053,5,0.053,9,0.609,12,0.201,13,0.915,14,2.048,16,0.634,18,1.273,23,0.526,25,1.365,26,0.008,27,1.182,28,0.478,29,0.953,33,1.864,35,1.981,36,4.678,37,1.222,38,3.227,49,0.872,51,0.166,53,0.438,55,0.395,63,0.059,64,0.094,66,1.754,86,1.655,109,0.004,110,0.004,118,3.164,121,0.877,133,1.291,162,2.611,197,1.994,238,2.478,259,0.808,277,1.778,299,0.674,302,1.999,347,2.478,351,4.498,580,2.551,885,4.368,914,2.905,1036,2.331,1271,5.598,1412,2.478,1413,2.661,1414,3.998,1418,5.622,1422,2.906,1432,6.565,1433,6.25,1434,5.831,1441,2.906,1442,4.925,1443,5.916,1444,4.925,1445,4.925,1446,3.278,1447,7.682,1448,3.278,1449,4.925,1450,3.278,1451,7.406,1452,3.278,1453,3.278,1454,4.925,1455,3.278,1456,4.925,1457,3.278,1458,4.925,1459,5.244,1460,2.661,1461,3.278,1462,2.478,1463,3.278,1464,6.578,1465,3.278,1466,3.278,1467,2.661,1468,6.578,1469,6.578,1470,3.278,1471,3.278,1472,3.278,1473,6.578,1474,3.278,1475,3.278,1476,3.278,1477,3.278,1478,3.278,1479,3.278,1480,3.278,1481,2.906,1482,3.278,1483,3.278,1484,2.661,1485,3.278,1486,4.925,1487,3.278,1488,3.278,1489,3.278,1490,3.278]],["title/entities/Order.html",[508,1.572,1025,2.405]],["body/entities/Order.html",[3,0.065,4,0.058,5,0.058,12,0.22,23,0.657,26,0.008,27,1.048,28,0.601,29,1.098,39,2.999,40,2.54,49,1.017,50,2.213,51,0.158,63,0.065,64,0.103,109,0.004,110,0.004,117,1.329,121,1.962,127,1.885,197,1.896,206,2.213,292,0.888,296,2.124,311,3.386,481,2.891,508,1.826,510,1.786,514,4.216,517,3.81,518,4.727,519,2.921,520,2.436,521,4.727,523,3.843,525,2.703,530,4.287,531,3.992,532,2.923,534,4.727,537,2.428,538,4.614,539,4.216,540,5.076,541,1.843,542,5.088,580,1.303,693,4.017,694,4.017,835,1.732,1019,2.313,1023,5.094,1025,2.793,1075,2.561,1366,4.727,1462,2.722,1491,3.193,1492,5.544,1493,5.544,1494,6.254,1495,5.544,1496,6.594,1497,3.601,1498,3.601,1499,3.601,1500,3.601,1501,3.601,1502,4.287,1503,3.601,1504,5.281,1505,3.601,1506,3.601,1507,3.601,1508,5.591,1509,3.601,1510,3.601,1511,3.601,1512,3.601,1513,3.601,1514,4.682,1515,4.682,1516,3.193,1517,3.193,1518,3.601,1519,3.601,1520,2.923,1521,4.682,1522,3.193]],["title/controllers/OrdersController.html",[122,1.608,1523,3.437]],["body/controllers/OrdersController.html",[3,0.087,4,0.079,5,0.079,12,0.297,13,1.21,16,0.939,18,0.939,23,0.549,25,1.423,26,0.008,27,1.232,28,0.498,29,0.993,37,1.366,49,0.993,51,0.182,55,0.585,63,0.087,64,0.139,66,1.15,67,0.939,107,1.311,109,0.005,110,0.005,119,1.933,122,1.716,124,1.716,127,1.574,277,1.863,299,0.998,302,1.64,335,2.567,373,3.23,376,2.982,385,2.204,563,2.567,564,2.755,565,2.406,588,2.982,652,2.483,1097,5.047,1099,4.391,1101,4.633,1103,2.406,1104,3.939,1520,6.849,1523,4.923,1524,4.302,1525,6.513,1526,5.287,1527,6.517,1528,4.853,1529,4.853,1530,4.302,1531,6.513,1532,4.853,1533,4.302,1534,6.001,1535,4.853,1536,4.853,1537,3.117,1538,4.302,1539,4.956,1540,4.302,1541,4.853,1542,4.853,1543,4.853,1544,4.853,1545,4.853,1546,4.853,1547,4.853,1548,4.853]],["title/modules/OrdersModule.html",[133,1.192,151,3.234]],["body/modules/OrdersModule.html",[3,0.102,4,0.092,5,0.092,26,0.008,51,0.193,55,0.681,63,0.102,64,0.162,109,0.006,110,0.006,124,2.545,133,2.076,135,2.309,136,2.309,137,2.431,138,2.431,139,2.309,140,3.405,141,2.431,151,6.549,161,3.095,162,2.094,163,2.309,165,3.362,175,2.893,176,1.576,1025,2.99,1088,5.931,1106,4.59,1523,5.985,1539,5.931,1540,5.012,1549,5.012,1550,5.012,1551,5.012,1552,5.189,1553,5.654,1554,5.654,1555,4.022,1556,5.012,1557,4.022,1558,5.654]],["title/injectables/OrdersService.html",[53,0.404,1539,3.065]],["body/injectables/OrdersService.html",[3,0.065,4,0.058,5,0.058,9,0.98,12,0.22,13,0.98,14,2.003,16,1.021,18,1.021,23,0.514,25,1.332,26,0.008,27,1.154,28,0.467,29,0.93,33,0.905,35,0.786,37,1.279,38,2.154,45,2.21,49,0.902,51,0.175,53,0.469,55,0.433,63,0.065,64,0.103,66,0.852,67,1.021,78,2.13,79,1.921,81,2.222,86,1.732,92,1.968,93,1.968,94,1.783,95,1.968,96,1.901,97,1.968,98,1.968,99,1.968,100,1.894,107,1.114,109,0.004,110,0.004,121,1.411,176,1.003,214,2.121,242,2.464,259,0.887,277,1.739,280,2.652,286,1.599,288,1.901,289,2.261,292,0.887,294,1.364,299,1.085,314,2.132,315,2.121,316,2.79,317,2.79,318,2.79,319,2.699,320,2.79,321,2.79,323,2.887,456,1.243,507,2.31,622,2.424,660,3.098,1009,2.718,1011,2.424,1025,4.687,1088,5.337,1091,3.111,1094,4.282,1096,4.282,1097,4.421,1099,3.556,1100,3.197,1101,5.449,1103,1.783,1104,2.919,1105,2.31,1106,2.919,1109,3.187,1520,6.218,1526,4.282,1527,4.676,1530,4.676,1533,4.676,1534,5.449,1537,2.31,1538,3.187,1539,3.556,1556,3.187,1559,3.187,1560,3.596,1561,3.596,1562,3.596,1563,3.596,1564,3.596,1565,3.596,1566,3.596,1567,3.596,1568,3.596,1569,3.596]],["title/classes/OtpSigninDto.html",[64,0.13,342,3.065]],["body/classes/OtpSigninDto.html",[3,0.11,4,0.099,5,0.099,9,1.402,12,0.373,23,0.455,26,0.008,28,0.413,51,0.163,63,0.11,64,0.216,109,0.006,110,0.006,117,1.899,127,1.306,162,2.795,265,1.888,271,3.63,273,2.06,340,5.703,342,5.087,349,4.283,351,4.737,372,5.367,392,2.621,520,2.668,716,4.283,799,3.426,886,4.336,890,5.367,1570,5.404,1571,6.096,1572,6.096,1573,6.096]],["title/injectables/OtpSigninProvider.html",[53,0.404,426,3.065]],["body/injectables/OtpSigninProvider.html",[3,0.086,4,0.078,5,0.078,10,3.66,11,3.858,12,0.293,13,1.198,14,1.763,16,1.248,18,1.248,23,0.481,25,1.248,26,0.008,27,1.081,28,0.437,29,0.871,35,1.594,37,0.889,51,0.176,53,0.573,55,0.576,63,0.086,64,0.137,67,1.248,73,2.412,86,1.836,105,2.529,107,0.853,109,0.005,110,0.005,118,2.3,119,1.904,121,1.279,259,1.179,277,1.531,286,1.45,299,1.326,302,1.616,342,5.497,351,3.734,359,3.071,393,3.881,399,5.234,401,4.874,425,5.016,426,4.347,436,3.881,456,1.653,625,3.071,635,2.82,660,2.371,1020,3.614,1190,3.223,1267,4.587,1269,3.614,1271,3.614,1272,3.614,1329,4.768,1343,3.614,1574,6.468,1575,4.239,1576,6.448,1577,4.239,1578,5.922,1579,4.782,1580,6.448,1581,4.782,1582,5.922,1583,4.782,1584,4.239,1585,4.239,1586,4.239,1587,4.782,1588,3.881,1589,4.782,1590,4.782,1591,4.239,1592,4.782,1593,4.239,1594,4.239]],["title/interfaces/Paginated.html",[111,3.234,1100,2.327]],["body/interfaces/Paginated.html",[3,0.102,4,0.092,5,0.092,9,1.056,12,0.348,26,0.008,28,0.607,49,1.014,63,0.102,94,2.818,109,0.006,110,0.006,111,5.136,113,4.613,117,1.817,490,5.136,520,2.953,773,6.312,924,6.555,925,4.042,1100,4.061,1152,4.613,1254,6.442,1595,5.037,1596,7.81,1597,7.402,1598,5.861,1599,7.22,1600,7.22,1601,5.037,1602,5.037,1603,5.037,1604,5.037,1605,5.037,1606,5.037,1607,5.037,1608,5.037]],["title/modules/PaginationModule.html",[133,1.192,1552,2.682]],["body/modules/PaginationModule.html",[3,0.113,4,0.102,5,0.102,26,0.008,51,0.166,55,0.755,63,0.113,64,0.179,109,0.006,110,0.006,133,2.175,135,2.558,136,2.558,137,2.694,138,2.694,139,2.558,140,3.567,141,3.567,161,3.3,162,2.32,163,2.558,1093,5.359,1552,5.392,1609,5.554,1610,5.554,1611,5.554,1612,6.265,1613,6.265]],["title/injectables/PaginationProvider.html",[53,0.404,1093,2.581]],["body/injectables/PaginationProvider.html",[3,0.069,4,0.062,5,0.062,9,0.708,12,0.233,13,1.022,14,1.56,16,0.737,18,1.369,23,0.41,25,1.25,26,0.008,27,0.922,28,0.438,29,0.743,33,1.384,37,1.022,38,2.245,45,3.62,51,0.169,52,3.121,53,0.489,55,0.459,58,2.708,63,0.069,64,0.109,66,1.675,67,0.737,73,2.727,79,0.998,86,1.384,94,1.888,107,0.679,109,0.006,110,0.005,183,2.708,259,0.939,277,1.355,280,2.985,292,0.939,299,0.783,456,2.232,490,3.912,499,1.729,652,2.814,660,2.727,843,4.171,924,4.592,1025,2.013,1091,3.244,1093,3.121,1100,2.814,1108,3.533,1111,4.767,1152,5.74,1196,2.878,1214,3.38,1229,3.375,1254,3.091,1256,3.091,1282,3.506,1284,2.084,1596,5.723,1597,3.375,1601,3.375,1602,5.723,1603,3.375,1604,6.268,1605,3.375,1606,3.375,1607,3.375,1608,3.375,1614,3.375,1615,7.815,1616,3.807,1617,3.807,1618,3.807,1619,3.807,1620,5.5,1621,3.807,1622,3.807,1623,3.807,1624,3.807,1625,3.807,1626,3.807,1627,4.875,1628,5.5,1629,8.25,1630,7.071,1631,5.5,1632,3.807,1633,3.807,1634,3.807,1635,3.807,1636,3.807,1637,5.5,1638,3.807,1639,3.807,1640,3.807,1641,3.807,1642,3.807,1643,3.807,1644,3.807,1645,3.807,1646,3.807,1647,5.5,1648,3.807,1649,3.807,1650,3.807,1651,3.807,1652,3.807]],["title/classes/PaginationQueryDto.html",[64,0.13,1282,2.255]],["body/classes/PaginationQueryDto.html",[3,0.096,4,0.087,5,0.087,9,0.996,12,0.328,23,0.576,26,0.008,28,0.523,29,1.172,51,0.116,63,0.096,64,0.199,109,0.006,110,0.006,117,1.75,127,1.653,265,1.66,272,2.769,273,1.811,398,4.946,481,3.806,520,3.165,652,3.558,792,4.101,799,3.157,829,3.954,843,4.101,1086,4.993,1108,4.467,1110,5.202,1154,6.843,1191,6.165,1193,6.165,1282,3.448,1283,4.32,1627,6.165,1653,4.751,1654,5.359,1655,8.169,1656,5.359,1657,5.359,1658,4.751,1659,5.359,1660,6.954]],["title/classes/PatchOrderDto.html",[64,0.13,1534,3.234]],["body/classes/PatchOrderDto.html",[3,0.101,4,0.091,5,0.091,12,0.345,23,0.621,26,0.008,28,0.565,29,1.222,49,0.98,51,0.155,63,0.101,64,0.206,109,0.006,110,0.006,117,1.809,127,1.783,265,1.747,272,3.149,273,1.906,311,3.174,696,4.416,723,5.432,829,4.017,901,4.578,1312,5,1492,7.011,1493,7.011,1495,7.011,1496,7.137,1516,5,1517,5,1534,5.111,1661,7.624,1662,5,1663,5.64,1664,5.64,1665,5.64,1666,5.64,1667,5.64,1668,5.64]],["title/classes/PatchProductDto.html",[64,0.13,1669,3.065]],["body/classes/PatchProductDto.html",[3,0.077,4,0.069,5,0.069,12,0.261,23,0.665,26,0.008,27,1.151,28,0.605,29,1.235,49,1.093,51,0.129,63,0.077,64,0.17,109,0.005,110,0.005,117,1.499,121,1.838,127,1.909,197,1.291,265,1.319,272,3.518,273,1.44,287,3.304,520,2.106,601,1.506,696,5.372,716,3.38,736,5.575,737,4.63,738,4.63,739,4.63,740,5.575,741,5.575,742,4.22,743,5.575,744,3.208,758,3.826,762,2.736,829,4.197,1292,3.219,1303,3.776,1321,4.22,1322,3.029,1669,4.015,1670,7.964,1671,4.259,1672,4.259,1673,4.259,1674,4.259,1675,4.259,1676,4.259,1677,4.259,1678,4.259,1679,4.259,1680,4.259,1681,4.259,1682,4.259,1683,4.259]],["title/classes/PatchProductVariantDto.html",[64,0.13,1321,2.794]],["body/classes/PatchProductVariantDto.html",[3,0.105,4,0.095,5,0.095,12,0.358,23,0.548,26,0.008,28,0.498,29,1.14,49,0.865,51,0.174,63,0.105,64,0.21,109,0.006,110,0.006,117,1.85,121,2.151,127,1.574,197,2.558,265,1.81,272,2.926,273,1.975,484,4.417,499,2.653,528,5.555,601,2.843,691,3.644,696,3.591,760,5.718,762,3.754,819,4.744,829,3.756,1321,4.516,1322,5.718,1684,6.526,1685,6.526,1686,5.844,1687,5.844,1688,5.844,1689,4.744,1690,7.35]],["title/classes/PatchUserDto.html",[64,0.13,1691,3.234]],["body/classes/PatchUserDto.html",[3,0.085,4,0.077,5,0.077,12,0.29,23,0.65,26,0.008,28,0.591,29,1.252,49,1.081,51,0.157,63,0.085,64,0.183,109,0.005,110,0.005,117,1.611,127,1.865,265,1.465,272,3.468,273,1.599,484,3.576,499,2.148,520,2.264,691,3.175,712,4.892,716,3.634,829,4.124,895,3.19,897,3.365,900,4.194,912,3.576,1484,5.891,1658,7.591,1684,3.841,1689,3.841,1691,4.554,1692,7.826,1693,6.403,1694,6.433,1695,6.433,1696,7.257,1697,6.433,1698,6.433,1699,6.433,1700,4.732,1701,4.732,1702,4.732,1703,4.732,1704,4.732,1705,4.732,1706,4.732,1707,4.732]],["title/entities/Payment.html",[508,1.572,517,2.187]],["body/entities/Payment.html",[3,0.067,4,0.06,5,0.06,9,0.691,12,0.228,23,0.642,26,0.008,27,1.068,28,0.6,29,1.108,39,3.072,40,2.601,49,0.999,50,2.286,51,0.16,63,0.067,64,0.106,109,0.004,110,0.004,117,1.361,121,1.988,127,1.842,198,1.738,292,0.917,311,3.089,397,4.295,456,2.202,481,2.96,493,4.532,508,2.418,510,1.844,513,4.816,514,4.295,517,3.574,518,4.816,519,2.976,520,1.912,521,4.816,523,3.915,525,2.767,534,4.816,538,4.231,539,2.508,541,1.903,542,5.139,601,1.315,648,5.009,744,1.738,755,3.26,763,2.111,1019,2.389,1346,5.616,1348,3.019,1384,2.508,1399,5.172,1401,3.298,1402,5.648,1502,4.389,1508,6.494,1514,4.794,1515,4.794,1521,4.794,1522,3.298,1708,3.298,1709,5.648,1710,4.794,1711,4.087,1712,4.794,1713,4.389,1714,3.72,1715,3.72,1716,3.72,1717,3.72,1718,3.72,1719,3.72,1720,4.764,1721,3.019,1722,5.408,1723,3.72,1724,3.72,1725,3.72,1726,3.72,1727,3.72,1728,3.72,1729,3.72,1730,4.389,1731,3.72,1732,3.72,1733,2.646,1734,2.646,1735,3.72,1736,2.508]],["title/entities/PaymentVariant.html",[508,1.572,1720,2.794]],["body/entities/PaymentVariant.html",[3,0.089,4,0.08,5,0.08,12,0.302,23,0.646,26,0.008,28,0.596,49,0.998,51,0.16,63,0.089,64,0.141,109,0.005,110,0.005,117,1.658,121,1.984,127,1.854,198,2.307,292,1.218,311,2.91,508,1.707,510,2.448,514,4.999,517,4.284,520,2.33,523,4.557,525,3.372,538,4.484,541,2.527,601,1.746,755,4.049,763,2.803,797,4.862,821,4.763,1019,3.172,1027,4.687,1037,5.275,1127,3.732,1384,4.999,1720,4.049,1736,4.999,1737,6.256,1738,4.378,1739,4.938,1740,4.938,1741,6.589,1742,4.938,1743,4.938,1744,5.841,1745,4.938,1746,6.589,1747,4.938,1748,4.938,1749,4.938]],["title/controllers/PaymentsController.html",[122,1.608,1750,3.437]],["body/controllers/PaymentsController.html",[3,0.097,4,0.088,5,0.088,12,0.33,13,1.298,16,1.045,18,1.045,23,0.521,25,1.352,26,0.008,27,1.171,28,0.474,29,0.944,37,1.298,49,0.912,51,0.183,55,0.65,63,0.097,64,0.154,66,1.279,67,1.045,107,1.246,109,0.006,110,0.006,119,2.149,122,1.909,124,1.909,127,1.496,277,1.824,299,1.11,302,1.824,335,2.854,385,2.451,563,2.854,564,3.064,565,2.676,588,3.317,652,2.762,1099,4.71,1103,2.676,1123,5.262,1126,4.381,1736,4.71,1750,5.281,1751,4.785,1752,6.193,1753,6.986,1754,6.986,1755,5.398,1756,5.398,1757,5.398,1758,5.398,1759,5.398,1760,5.222,1761,4.785,1762,5.398,1763,5.398,1764,5.398,1765,5.398,1766,5.398,1767,5.398]],["title/modules/PaymentsModule.html",[133,1.192,152,3.234]],["body/modules/PaymentsModule.html",[3,0.1,4,0.09,5,0.09,26,0.008,51,0.195,55,0.666,63,0.1,64,0.158,109,0.006,110,0.006,124,2.509,133,2.054,135,2.258,136,2.258,137,2.378,138,2.378,139,2.258,140,3.369,141,2.378,152,6.525,161,3.051,162,2.048,163,2.258,165,3.315,175,2.83,176,1.542,517,3.413,1116,5.897,1127,4.18,1552,5.159,1555,3.933,1557,3.933,1720,4.361,1733,3.933,1750,5.923,1760,5.897,1761,4.902,1768,4.902,1769,4.902,1770,5.53,1771,5.53,1772,5.53,1773,4.902,1774,5.53]],["title/injectables/PaymentsService.html",[53,0.404,1760,3.065]],["body/injectables/PaymentsService.html",[3,0.078,4,0.071,5,0.071,9,0.81,12,0.267,13,1.125,14,1.974,16,1.171,18,1.171,23,0.519,25,1.346,26,0.008,27,1.165,28,0.471,29,0.939,33,1.097,35,0.952,37,1.292,38,2.471,45,1.825,49,0.818,51,0.181,53,0.538,55,0.525,63,0.078,64,0.125,66,1.032,67,1.171,78,1.759,79,1.586,81,1.835,86,1.523,100,1.321,107,1.079,109,0.005,110,0.005,121,1.166,176,1.215,214,2.57,242,2.036,259,1.075,277,1.714,280,2.856,286,1.321,288,2.304,289,2.19,292,1.075,294,1.653,299,1.245,314,1.874,315,2.57,316,2.304,317,2.304,318,2.304,319,2.23,320,2.304,321,2.304,323,2.385,456,1.506,517,4.03,622,2.938,660,3.001,1025,2.304,1091,4.101,1096,3.537,1099,4.08,1100,3.558,1101,3.099,1103,2.161,1105,2.799,1116,5.648,1119,3.863,1121,5.365,1123,4.825,1125,3.863,1126,3.537,1127,3.294,1129,3.863,1526,4.912,1736,4.08,1752,6.659,1760,4.08,1773,3.863,1775,3.863,1776,4.358,1777,4.358,1778,6.052,1779,4.358,1780,4.358,1781,4.358]],["title/controllers/PaystackController.html",[122,1.608,1782,3.437]],["body/controllers/PaystackController.html",[3,0.085,4,0.076,5,0.076,12,0.288,13,1.187,14,1.75,16,0.912,18,0.912,23,0.476,25,1.236,26,0.008,27,1.07,28,0.433,29,0.863,35,1.773,37,1.187,48,3.561,49,0.852,51,0.19,55,0.568,63,0.085,64,0.135,67,0.912,104,6.322,107,1.139,109,0.005,110,0.005,112,3.626,114,2.492,119,1.876,122,1.666,124,1.666,127,1.367,277,1.52,286,1.429,295,2.492,299,0.969,302,1.593,335,2.492,336,2.336,373,4.023,374,3.176,375,3.027,377,2.779,383,2.674,385,2.899,409,4.101,410,3.561,473,2.895,517,2.266,563,2.492,564,2.674,565,2.336,569,4.304,570,3.176,571,3.561,583,3.561,692,5.14,706,3.561,976,3.176,1336,5.878,1339,3.825,1782,4.826,1783,4.177,1784,7.242,1785,6.42,1786,4.712,1787,6.585,1788,4.712,1789,4.712,1790,4.177,1791,6.385,1792,4.712,1793,4.712,1794,4.882,1795,4.177,1796,4.712,1797,4.712,1798,4.712,1799,4.712,1800,4.712]],["title/modules/PaystackModule.html",[133,1.192,153,3.234]],["body/modules/PaystackModule.html",[3,0.092,4,0.083,5,0.083,26,0.008,51,0.195,55,0.617,56,2.618,63,0.092,64,0.146,109,0.006,110,0.006,124,2.386,133,1.979,135,2.089,136,2.089,137,2.2,138,2.2,139,2.089,140,3.246,141,2.2,153,6.653,155,5.264,156,5.502,160,5.502,161,2.901,162,1.895,163,2.089,165,3.151,167,4.153,198,2.39,199,3.868,432,4.536,601,1.809,1323,5.774,1340,4.153,1341,4.153,1782,5.705,1794,5.774,1795,4.536,1801,4.536,1802,5.117,1803,4.536,1804,5.774,1805,5.117,1806,5.117,1807,5.117,1808,5.981,1809,4.536,1810,5.117,1811,5.117]],["title/injectables/PaystackService.html",[53,0.404,1794,3.065]],["body/injectables/PaystackService.html",[3,0.087,4,0.078,5,0.078,12,0.296,13,1.207,14,2.037,16,1.257,18,1.257,23,0.547,25,1.42,26,0.008,27,1.23,28,0.497,29,0.991,35,1.788,37,1.207,49,0.863,51,0.177,53,0.577,55,0.582,63,0.087,64,0.138,67,1.257,86,1.635,104,5.929,107,1.158,109,0.005,110,0.005,112,3.664,114,2.556,259,1.192,277,1.769,286,1.969,295,2.556,299,1.336,373,3.22,456,2.245,517,3.124,692,5.291,706,3.653,1323,5.681,1339,3.923,1785,6.503,1787,6.367,1790,4.284,1794,4.378,1804,5.804,1808,5.757,1812,4.284,1813,5.757,1814,4.833,1815,4.833,1816,4.833,1817,6.495,1818,4.833,1819,6.495,1820,5.272,1821,4.833,1822,4.833]],["title/entities/Product.html",[197,1.379,508,1.572]],["body/entities/Product.html",[3,0.065,4,0.058,5,0.058,12,0.22,23,0.661,26,0.008,27,1.046,28,0.601,29,0.929,39,2.937,49,1.061,51,0.135,63,0.065,64,0.103,109,0.004,110,0.004,117,1.326,121,1.67,127,1.898,197,1.598,198,1.677,287,3.003,292,0.885,311,3.038,481,2.884,508,1.821,510,1.78,514,4.208,518,4.718,520,2.432,523,3.836,525,2.696,531,5.198,534,4.718,538,4.744,541,1.837,601,1.269,736,5.067,737,4.208,738,4.208,739,4.208,740,5.067,741,5.067,742,3.836,743,5.067,744,2.916,755,3.519,763,2.037,792,3.108,797,3.108,836,4.516,846,3.983,864,4.718,949,4.671,950,4.671,951,3.182,1502,5.583,1710,6.097,1711,3.983,1712,6.097,1713,5.583,1721,4.277,1730,5.067,1823,3.182,1824,3.59,1825,3.59,1826,3.59,1827,3.59,1828,3.59,1829,3.59,1830,3.59,1831,3.59,1832,3.59,1833,3.59,1834,3.59,1835,5.269,1836,5.583,1837,3.59,1838,3.59,1839,3.59,1840,5.269,1841,3.59,1842,3.59,1843,5.269,1844,3.59,1845,5.269,1846,3.59,1847,5.269,1848,3.59,1849,5.269,1850,3.59]],["title/entities/ProductImage.html",[508,1.572,778,3.065]],["body/entities/ProductImage.html",[3,0.098,4,0.088,5,0.088,12,0.332,23,0.612,26,0.008,28,0.556,49,0.966,51,0.151,63,0.098,64,0.155,109,0.006,110,0.006,117,1.764,121,2.077,127,1.758,198,2.533,200,5.728,292,1.338,481,3.836,508,2.422,510,2.689,520,2.478,525,3.586,538,4.106,539,4.724,541,2.775,601,3.077,755,4.531,763,3.078,778,4.724,792,4.133,797,4.133,811,6.882,813,6.882,1027,3.858,1037,4.984,1836,4.402,1851,4.808,1852,6.212,1853,5.424,1854,5.424,1855,5.424,1856,7.008,1857,6.212,1858,5.424,1859,5.424]],["title/modules/ProductImagesModule.html",[133,1.192,154,3.234]],["body/modules/ProductImagesModule.html",[3,0.111,4,0.1,5,0.1,26,0.008,51,0.186,55,0.745,63,0.111,64,0.177,109,0.006,110,0.006,133,2.161,135,2.523,136,2.523,137,2.657,138,2.657,139,2.523,140,3.545,141,2.657,154,6.399,161,3.272,162,2.289,163,2.523,165,2.886,175,3.162,176,1.723,197,1.874,200,4.166,601,2.185,778,4.166,779,5.016,1860,5.478,1861,5.478,1862,6.399,1863,6.179,1864,5.016,1865,6.179,1866,6.179]],["title/injectables/ProductImagesService.html",[53,0.404,1862,3.234]],["body/injectables/ProductImagesService.html",[3,0.127,4,0.114,5,0.114,26,0.008,51,0.152,53,0.732,55,0.849,63,0.127,64,0.202,109,0.007,110,0.007,259,1.738,601,2.491,1862,5.855,1867,6.246,1868,6.246]],["title/entities/ProductVariant.html",[508,1.572,755,2.327]],["body/entities/ProductVariant.html",[3,0.078,4,0.071,5,0.071,12,0.267,23,0.637,26,0.008,28,0.579,29,0.818,39,2.718,40,3.344,49,0.961,51,0.162,63,0.078,64,0.125,109,0.005,110,0.005,117,1.523,121,1.86,127,1.829,197,2.63,198,4.052,200,2.938,292,1.075,481,2.385,508,2.092,510,2.161,520,2.14,525,3.097,528,4.574,531,5.678,538,4.319,539,4.08,541,2.23,601,3.105,755,3.097,772,5.643,778,5.064,779,3.537,805,4.574,820,5.255,821,4.466,822,5.255,1017,3.863,1027,3.099,1037,4.304,1462,3.294,1685,5.643,1709,6.163,1720,5.02,1721,4.912,1730,5.643,1733,3.099,1737,3.099,1836,6.097,1852,5.365,1857,5.365,1869,3.863,1870,4.358,1871,4.358,1872,6.052,1873,4.358,1874,6.052,1875,4.358,1876,6.052,1877,4.358,1878,4.358,1879,4.358,1880,4.358,1881,4.358]],["title/controllers/ProductVariantsController.html",[122,1.608,1882,3.437]],["body/controllers/ProductVariantsController.html",[3,0.1,4,0.09,5,0.09,12,0.338,13,1.319,16,1.07,18,1.07,23,0.413,25,1.07,26,0.008,27,0.927,28,0.375,29,0.747,37,1.028,51,0.185,55,0.666,63,0.1,64,0.158,67,1.07,107,0.986,109,0.006,110,0.006,122,1.955,124,1.955,127,1.184,197,1.677,198,3.315,277,1.645,299,1.137,302,1.869,335,2.924,336,2.742,373,3.518,374,3.728,375,3.552,377,3.261,383,3.138,385,2.511,409,3.552,410,4.18,473,3.398,580,2.001,601,2.509,744,3.66,976,3.728,1330,4.447,1345,3.728,1385,4.18,1864,4.489,1882,5.363,1883,4.902,1884,7.836,1885,5.53,1886,5.997,1887,7.096,1888,5.53,1889,5.53,1890,4.902,1891,4.902,1892,5.53,1893,5.53]],["title/modules/ProductVariantsModule.html",[133,1.192,155,2.794]],["body/modules/ProductVariantsModule.html",[3,0.105,4,0.095,5,0.095,26,0.008,51,0.188,55,0.704,63,0.105,64,0.167,109,0.006,110,0.006,124,2.599,133,2.108,135,2.386,136,2.386,137,2.513,138,2.513,139,2.386,140,3.457,141,3.457,155,5.535,161,3.16,162,2.164,163,2.386,165,2.73,175,2.99,176,1.629,197,2.228,198,2.73,601,2.066,755,2.99,763,3.317,1330,5.311,1345,3.94,1864,4.744,1882,6.077,1894,5.181,1895,5.181,1896,5.181,1897,5.844,1898,5.844,1899,5.844]],["title/injectables/ProductVariantsService.html",[53,0.404,1330,2.581]],["body/injectables/ProductVariantsService.html",[3,0.044,4,0.04,5,0.04,10,1.391,12,0.15,13,0.73,14,1.966,16,0.474,18,0.76,23,0.49,25,1.272,26,0.008,27,1.101,28,0.446,29,0.969,33,1.237,35,0.535,37,1.283,38,2.514,39,0.887,40,1.179,45,1.026,49,0.979,51,0.133,53,0.349,55,0.295,63,0.044,64,0.07,66,1.635,67,0.474,73,2.371,78,2.006,79,1.809,86,1.654,107,0.877,109,0.003,110,0.003,121,2.113,162,0.908,163,2.296,176,0.683,197,2.496,242,1.145,259,0.604,277,1.658,280,2.228,286,0.743,288,3.65,292,0.604,294,0.929,299,0.504,303,1.989,325,4.22,332,1.574,413,1.254,503,2.648,520,2.177,601,2.44,744,2.297,755,2.878,763,1.391,764,2.23,797,5.395,820,2.969,821,5.52,822,2.969,835,4.133,980,1.652,1102,2.648,1230,3.716,1256,1.989,1330,2.23,1344,4.653,1381,2.969,1382,1.852,1383,2.794,1384,5.793,1385,1.852,1685,1.989,1886,4.429,1890,2.172,1891,2.172,1900,2.172,1901,4.917,1902,4.917,1903,4.917,1904,3.928,1905,4.917,1906,2.45,1907,2.45,1908,3.928,1909,2.45,1910,6.57,1911,2.45,1912,6.902,1913,2.45,1914,2.45,1915,2.45,1916,2.45,1917,2.45,1918,2.45,1919,2.45,1920,2.45,1921,2.45,1922,3.928,1923,3.716,1924,2.45,1925,2.45,1926,2.45,1927,2.45,1928,2.172,1929,2.45,1930,4.917,1931,2.45,1932,2.45,1933,3.482,1934,3.928,1935,2.172,1936,3.482,1937,3.482,1938,3.482,1939,3.928,1940,5.625,1941,4.359,1942,3.482,1943,3.482,1944,5.625,1945,5.625,1946,6.156,1947,5.457,1948,5.217,1949,2.172,1950,2.172,1951,2.45,1952,2.45,1953,2.45,1954,2.45,1955,2.45,1956,2.45]],["title/classes/ProductWithVariantDto.html",[64,0.13,701,2.794]],["body/classes/ProductWithVariantDto.html",[3,0.096,4,0.087,5,0.087,12,0.327,23,0.575,26,0.008,28,0.588,39,2.512,49,0.995,51,0.167,63,0.096,64,0.233,109,0.006,110,0.006,117,1.748,127,1.651,197,1.621,265,1.656,269,3.286,271,4.069,272,3.368,273,1.807,520,2.455,580,1.935,601,1.891,692,3.286,693,3.434,694,3.434,695,4.041,701,5.016,702,3.604,703,3.434,705,6.169,713,4.041,716,3.941,742,4.738,744,3.602,757,3.434,758,4.953,759,5.198,762,3.434,764,3.941,829,3.813,835,3.709,1316,4.34,1321,5.016,1322,3.803,1957,5.347,1958,5.347,1959,5.347]],["title/classes/ProductWithVariantDto-1.html",[64,0.108,701,2.326,843,2.232]],["body/classes/ProductWithVariantDto-1.html",[3,0.103,4,0.093,5,0.093,12,0.35,23,0.54,26,0.008,28,0.585,39,2.621,49,0.852,51,0.172,63,0.103,64,0.239,109,0.006,110,0.006,117,1.823,127,1.551,197,1.732,265,1.769,269,3.51,271,4.024,272,2.884,273,1.93,376,3.51,580,2.066,601,2.813,701,5.141,702,3.85,703,3.669,744,3.716,757,3.669,758,5.11,759,5.363,762,3.669,764,4.111,835,3.826,1321,5.141,1886,3.85,1960,6.457,1961,4.636,1962,5.711,1963,5.711]],["title/controllers/ProductsController.html",[122,1.608,1964,3.437]],["body/controllers/ProductsController.html",[3,0.046,4,0.041,5,0.041,9,1.483,11,1.347,12,0.156,13,0.753,16,0.493,18,0.493,23,0.499,25,1.294,26,0.008,27,1.338,28,0.557,29,0.947,33,1.27,35,0.557,37,1.428,38,1.654,39,1.825,40,3.019,49,0.939,51,0.169,55,0.307,58,1.812,63,0.046,64,0.073,66,1.775,67,0.493,76,2.882,101,2.067,105,3.041,107,1.25,109,0.003,110,0.003,119,1.014,121,1.538,122,0.901,124,0.901,127,1.431,197,2.488,277,1.791,299,0.524,302,0.861,335,1.347,336,1.263,337,4.667,343,3.289,346,4.667,348,3.147,349,3.793,352,5.905,373,2.501,374,1.717,375,1.636,376,1.565,377,2.39,383,1.446,385,1.84,389,4.095,390,4.095,392,1.095,396,3.289,397,2.731,409,3.24,413,2.073,473,1.565,520,2.572,555,1.565,562,3.592,563,1.347,564,1.446,565,1.263,573,2.067,580,2.779,588,3.1,652,2.581,734,4.725,768,4.667,771,2.067,773,3.062,776,2.067,781,1.812,791,5.094,835,3.499,843,1.502,856,3.1,924,1.812,971,2.731,976,1.717,980,3.876,984,1.812,1086,2.39,1100,1.303,1103,1.263,1110,3.533,1140,4.502,1147,5.094,1149,3.062,1334,3.693,1335,3.062,1350,1.812,1356,1.925,1537,1.636,1598,3.289,1669,5.053,1711,1.925,1734,2.882,1964,3.062,1965,2.258,1966,4.095,1967,4.051,1968,3.592,1969,4.051,1970,5.045,1971,4.051,1972,2.547,1973,2.547,1974,2.258,1975,2.547,1976,2.547,1977,3.289,1978,2.731,1979,2.547,1980,2.258,1981,5.097,1982,2.258,1983,3.592,1984,3.592,1985,2.258,1986,3.592,1987,3.592,1988,3.592,1989,2.547,1990,2.547,1991,2.258,1992,2.258,1993,2.258,1994,5.045,1995,3.289,1996,2.258,1997,2.547,1998,2.547,1999,4.051,2000,3.592,2001,2.547,2002,2.547,2003,4.051,2004,2.547,2005,2.547,2006,2.547,2007,2.547,2008,2.547,2009,2.067,2010,4.051,2011,2.547,2012,3.592,2013,3.592,2014,4.472,2015,4.051,2016,2.258,2017,2.547,2018,2.547,2019,2.067,2020,4.051,2021,2.547,2022,2.547,2023,2.547,2024,2.258,2025,2.067,2026,3.289,2027,2.547,2028,2.547,2029,2.547,2030,2.547,2031,2.547,2032,2.547,2033,4.051,2034,2.547,2035,1.812,2036,2.547,2037,2.258,2038,2.547,2039,2.547,2040,2.547]],["title/modules/ProductsModule.html",[133,1.192,156,2.921]],["body/modules/ProductsModule.html",[3,0.086,4,0.078,5,0.078,26,0.008,51,0.195,55,0.579,63,0.086,64,0.137,109,0.005,110,0.005,124,2.287,133,1.917,135,1.961,136,1.961,137,2.065,138,2.065,139,1.961,140,3.144,141,3.144,155,5.169,156,6.022,159,5.403,161,2.781,162,1.778,163,1.961,165,3.021,175,2.457,176,1.339,197,1.456,198,2.243,199,3.629,601,1.698,602,4.257,765,5.67,775,3.415,856,5.589,1059,3.629,1132,5.67,1552,4.961,1555,3.415,1557,3.415,1964,5.527,2016,4.257,2041,4.257,2042,4.257,2043,4.802,2044,4.257,2045,5.67,2046,4.802,2047,4.802,2048,5.733,2049,4.257,2050,4.802,2051,4.802]],["title/injectables/ProductsService.html",[53,0.404,856,2.794]],["body/injectables/ProductsService.html",[3,0.054,4,0.049,5,0.049,12,0.185,13,0.859,14,2.077,16,1.22,18,0.895,23,0.535,25,1.388,26,0.008,27,1.202,28,0.522,29,0.969,33,1.711,37,1.498,38,3.145,49,0.948,51,0.177,53,0.411,55,0.363,63,0.054,64,0.086,66,1.768,67,1.22,73,0.997,78,1.634,79,1.474,81,1.402,86,1.586,100,1.402,107,1.212,109,0.004,110,0.004,121,1.997,176,0.841,197,2.664,259,0.744,277,1.803,280,2.459,286,0.914,289,1.091,292,0.744,294,1.144,299,1.296,314,1.432,348,3.077,358,1.711,362,3.494,413,2.877,456,1.943,499,2.099,555,1.853,580,2.28,640,2.624,660,2.292,734,5.032,765,4.834,768,4.563,771,2.448,773,3.494,775,2.145,776,2.448,781,2.145,791,5.517,835,3.591,856,2.841,971,3.116,984,2.145,1011,3.116,1091,3.316,1100,1.543,1102,2.033,1103,1.495,1105,1.937,1132,5.032,1138,4.563,1140,4.048,1145,2.673,1147,4.563,1149,3.494,1151,2.448,1334,1.937,1537,1.937,1669,5.323,1923,2.279,1966,3.752,1968,4.098,1974,4.098,1977,3.752,1978,3.79,1991,4.098,2035,2.145,2045,5.032,2048,4.098,2049,2.673,2052,2.673,2053,4.984,2054,3.016,2055,3.016,2056,3.016,2057,3.016,2058,3.016,2059,3.016,2060,2.673,2061,3.016,2062,3.016,2063,3.016,2064,3.016,2065,3.016,2066,3.016,2067,3.016]],["title/classes/ProductsWithVariantsDto.html",[64,0.13,1886,3.065]],["body/classes/ProductsWithVariantsDto.html",[3,0.106,4,0.096,5,0.096,12,0.36,23,0.439,26,0.008,28,0.574,39,2.672,49,0.693,51,0.174,63,0.106,64,0.242,109,0.006,110,0.006,117,1.859,127,1.261,197,1.786,265,1.824,271,4.069,272,2.941,273,1.991,376,3.619,580,2.919,601,2.611,701,5.199,702,3.97,703,3.783,744,2.751,757,3.783,758,5.183,759,5.439,762,3.783,764,4.192,835,2.833,1321,4.958,1886,4.979,1960,5.995,1961,4.781,2068,5.89]],["title/classes/RefreshTokenDto.html",[64,0.13,357,3.065]],["body/classes/RefreshTokenDto.html",[3,0.109,4,0.098,5,0.098,9,1.398,11,4.736,12,0.371,23,0.452,26,0.008,28,0.411,49,0.885,51,0.162,63,0.109,64,0.215,109,0.006,110,0.006,117,1.893,127,1.299,265,1.878,271,3.617,272,2.995,273,2.049,349,4.268,357,5.07,359,5.752,392,2.607,401,6.179,453,6.104,799,3.415,886,4.313,890,5.349,2069,5.375,2070,6.063,2071,6.063,2072,6.063]],["title/injectables/RefreshTokenProvider.html",[53,0.404,427,3.065]],["body/injectables/RefreshTokenProvider.html",[3,0.071,4,0.064,5,0.064,9,0.735,10,4.083,11,4.407,12,0.242,13,1.05,14,1.594,16,1.393,18,1.393,19,3.209,20,6.764,21,5.84,22,5.117,23,0.422,25,1.094,26,0.008,27,0.947,28,0.383,29,0.764,33,1.422,35,1.441,37,1.05,51,0.18,52,2.244,53,0.502,54,2.812,55,0.476,56,2.023,57,2.665,59,2.812,63,0.071,64,0.113,66,1.803,67,1.393,68,4.019,69,2.164,70,3.209,73,1.868,78,1.149,79,1.729,81,1.199,86,1.66,100,1.199,105,2.091,107,0.705,109,0.005,110,0.005,112,1.847,120,3.209,121,1.058,259,0.975,277,1.384,286,1.199,295,2.091,299,1.48,302,1.336,314,1.225,339,4.587,356,4.587,357,5.336,359,5.234,361,2.812,386,3.505,387,3.209,425,4.621,427,3.809,430,2.812,436,3.209,437,3.209,456,2.279,475,4.445,675,2.332,1230,2.989,1258,3.505,1260,3.505,1261,3.505,1262,3.505,1263,3.505,1264,3.505,1265,3.505,1267,5.413,1329,4.884,1343,2.989,1578,5.84,1594,3.505,1820,3.209,2073,5.846,2074,3.505,2075,5.651,2076,3.954,2077,3.954,2078,5.651,2079,3.505,2080,3.954,2081,3.954,2082,3.954,2083,3.954,2084,3.954]],["title/entities/Review.html",[508,1.572,836,2.682]],["body/entities/Review.html",[3,0.094,4,0.085,5,0.085,12,0.32,23,0.643,26,0.008,28,0.595,49,1.014,51,0.148,63,0.094,64,0.15,109,0.006,110,0.006,117,1.724,121,2.042,127,1.846,197,2.731,292,1.291,311,3.025,325,3.363,508,2.367,510,2.596,520,2.422,523,4.691,525,3.505,538,4.281,541,2.679,836,4.956,837,6.196,838,6.196,843,4.039,846,5.177,878,6.196,1019,3.363,1027,3.724,1037,4.871,1150,6.071,1462,3.957,1744,4.641,2085,4.641,2086,5.235,2087,5.235,2088,6.849,2089,5.235,2090,6.849,2091,5.235,2092,5.235,2093,5.235,2094,5.235,2095,5.235,2096,5.235]],["title/controllers/ReviewsController.html",[122,1.608,2097,3.437]],["body/controllers/ReviewsController.html",[3,0.085,4,0.077,5,0.077,12,0.29,13,1.19,16,0.916,18,0.916,23,0.478,25,1.239,26,0.008,27,1.073,28,0.434,29,0.865,33,1.611,37,1.445,38,3.175,49,0.854,51,0.185,55,0.57,63,0.085,64,0.135,66,1.719,67,0.916,107,1.142,109,0.005,110,0.005,119,1.884,122,1.673,124,1.673,127,1.371,197,1.435,277,1.758,299,0.973,302,1.599,335,2.502,336,2.346,348,3.505,358,2.685,373,2.346,374,3.19,375,3.039,377,3.776,383,2.685,385,2.907,409,3.039,413,3.276,473,2.908,563,2.502,564,2.685,565,2.346,566,2.276,588,2.908,832,5.773,835,2.276,836,4.28,854,5.197,859,3.841,861,3.841,864,4.84,976,3.19,1356,3.576,1966,5.891,1977,5.197,1978,4.316,2009,3.841,2035,3.365,2037,4.194,2097,4.84,2098,4.194,2099,4.732,2100,4.732,2101,4.732,2102,4.732,2103,4.732,2104,5.676,2105,4.892,2106,4.194,2107,4.732,2108,4.732,2109,4.732,2110,4.732,2111,4.732,2112,4.732]],["title/modules/ReviewsModule.html",[133,1.192,157,3.234]],["body/modules/ReviewsModule.html",[3,0.102,4,0.092,5,0.092,26,0.008,51,0.193,55,0.681,63,0.102,64,0.162,109,0.006,110,0.006,124,2.545,133,2.076,135,2.309,136,2.309,137,2.431,138,2.431,139,2.309,140,3.405,141,2.431,156,5.652,157,6.549,161,3.095,162,2.094,163,2.309,165,3.362,175,2.893,176,1.576,836,3.335,851,5.931,862,4.59,1059,4.274,1809,5.012,2097,5.985,2105,5.931,2106,5.012,2113,5.012,2114,5.012,2115,5.654,2116,5.654,2117,5.654,2118,5.012,2119,5.654]],["title/injectables/ReviewsService.html",[53,0.404,2105,3.065]],["body/injectables/ReviewsService.html",[3,0.081,4,0.073,5,0.073,12,0.275,13,1.149,14,1.993,16,1.197,18,1.197,23,0.527,25,1.368,26,0.008,27,1.185,28,0.479,29,0.955,33,1.556,37,1.415,38,3.108,49,0.832,51,0.178,53,0.55,55,0.542,63,0.081,64,0.129,66,1.674,67,1.197,78,1.307,79,1.179,81,1.363,86,1.132,100,1.363,107,1.103,109,0.005,110,0.005,176,1.254,197,1.363,259,1.109,277,1.731,280,2.888,289,1.627,292,1.109,294,1.705,299,1.272,314,1.393,348,3.869,358,2.552,413,3.617,456,1.554,499,2.808,566,2.163,640,2.552,832,5.56,835,2.163,836,5.076,851,5.56,854,5.02,858,6.266,859,5.02,861,3.65,862,3.65,864,3.399,865,3.986,1978,4.765,2035,3.198,2104,6.266,2105,4.169,2118,3.986,2120,3.986,2121,6.184,2122,4.496,2123,4.496,2124,4.496,2125,6.184,2126,4.496,2127,4.496,2128,4.496]],["title/guards/RolesGuard.html",[0,2.921,190,3.437]],["body/guards/RolesGuard.html",[0,3.978,2,3.405,3,0.081,4,0.073,5,0.073,9,0.837,10,3.515,12,0.276,13,1.151,15,6.184,16,0.872,18,1.37,23,0.462,25,1.199,26,0.008,27,1.186,28,0.42,29,0.837,30,5.026,31,5.419,33,1.559,35,1.665,36,4.404,37,1.151,39,2.757,40,2.979,41,5.489,42,3.805,51,0.165,53,0.55,55,0.543,63,0.081,64,0.177,65,3.405,66,1.467,67,0.872,73,2.339,74,3.994,78,1.8,79,1.623,107,1.105,109,0.005,110,0.005,119,3.609,131,3.994,183,3.204,190,4.681,385,2.046,464,5.489,466,3.994,467,7.494,475,3.037,476,3.994,477,3.204,478,3.994,479,3.994,480,3.994,496,3.994,497,3.994,528,4.681,565,2.234,635,3.652,1005,3.994,1272,3.405,1923,3.405,2129,3.994,2130,4.505,2131,4.505,2132,6.192,2133,6.192,2134,6.192,2135,5.489,2136,6.192,2137,3.657,2138,4.505,2139,4.505,2140,3.994,2141,6.192,2142,4.505,2143,4.505,2144,4.505,2145,6.192,2146,4.505,2147,4.505]],["title/injectables/SaveBankTransferProvider.html",[53,0.404,595,3.065]],["body/injectables/SaveBankTransferProvider.html",[3,0.087,4,0.039,5,0.09,9,0.72,12,0.147,13,0.72,14,1.175,16,0.941,18,0.75,23,0.289,25,0.75,26,0.008,27,0.649,28,0.263,29,0.523,35,1.686,37,0.448,42,1.48,45,1.009,51,0.179,53,0.344,55,0.29,63,0.043,64,0.069,67,0.941,73,2.74,78,1.413,79,1.274,81,1.474,86,2.064,100,1.474,107,0.867,109,0.003,110,0.003,112,2.601,114,1.274,121,1.744,197,1.85,198,1.125,206,1.48,208,1.367,214,3.845,259,0.594,277,1.02,286,0.73,287,3.842,289,0.871,292,0.594,295,1.274,296,1.421,299,1,301,4.21,302,1.31,307,1.821,314,1.505,315,1.421,329,1.955,330,2.135,348,1.318,413,1.232,477,1.713,499,2.771,502,1.713,503,3.277,505,1.624,509,3.122,511,2.987,513,2.929,515,2.135,517,2.936,519,1.125,537,1.624,554,4.395,555,2.987,559,1.713,560,1.955,566,1.159,567,1.713,568,1.955,595,2.612,598,1.821,601,1.37,608,4.309,615,2.135,617,1.48,642,1.955,643,1.955,644,5.233,647,1.624,648,1.624,649,1.821,650,2.381,651,3.457,652,1.983,653,2.756,654,1.713,655,1.713,656,2.756,657,1.713,658,1.713,659,2.756,660,1.921,670,3.277,671,1.821,672,1.821,673,2.929,674,1.821,675,2.285,676,1.713,678,1.713,679,1.713,680,1.713,681,1.713,682,1.713,683,2.756,684,1.713,685,1.713,686,3.457,687,2.756,688,1.713,693,1.547,694,1.547,744,3.046,755,1.232,763,1.367,764,2.199,769,4.403,777,2.135,780,2.135,792,2.285,793,2.135,794,2.929,797,4.043,802,1.955,815,1.955,821,4.188,835,2.338,889,2.756,1023,3.422,1025,3.625,1030,1.955,1034,1.955,1035,1.955,1036,1.713,1075,1.713,1214,1.48,1330,3.89,1344,1.624,1345,1.624,1346,1.821,1347,1.955,1348,1.955,1352,3.435,1355,2.135,1356,1.821,1358,2.135,1359,2.135,1360,2.135,1362,2.135,1363,2.135,1364,2.135,1365,2.135,1366,4.928,1368,1.955,1369,2.135,1370,3.435,1371,3.145,1372,2.135,1373,3.145,1374,3.435,1375,4.937,1376,3.435,1377,2.135,1378,3.145,1379,1.955,1381,2.929,1382,1.821,1383,2.756,1384,3.277,1387,1.955,1397,3.435,1720,1.48,1733,1.713,1736,1.624,1737,1.713,1933,2.135,1935,2.135,1936,2.135,1937,2.135,1938,2.135,1947,2.135,1948,3.674,1949,2.135,1950,2.135,2148,4.309,2149,2.409,2150,2.409,2151,2.409,2152,4.861,2153,2.409,2154,2.409,2155,3.874,2156,2.409,2157,3.874,2158,2.409,2159,2.135,2160,2.135,2161,2.135,2162,2.135,2163,2.135,2164,2.135,2165,2.135,2166,4.309,2167,3.435,2168,2.135,2169,2.135,2170,2.135,2171,2.135,2172,2.409,2173,2.409,2174,2.409]],["title/classes/SignInDto.html",[64,0.13,367,3.065]],["body/classes/SignInDto.html",[3,0.098,4,0.088,5,0.088,9,1.446,12,0.334,23,0.524,26,0.008,28,0.477,35,1.963,49,0.827,51,0.168,63,0.098,64,0.201,109,0.006,110,0.006,117,1.769,118,4.264,119,3.644,127,1.505,265,1.688,271,3.743,273,1.842,349,4.666,367,4.739,372,5,385,2.474,392,2.343,452,6.316,587,4.119,799,3.192,886,5,887,4.424,889,5,890,5.535,891,5.706,892,4.424,893,4.424,894,4.424,899,4.831,901,4.424,904,4.831,2175,4.831,2176,5.45,2177,5.45,2178,5.45]],["title/injectables/SignInProvider.html",[53,0.404,428,3.065]],["body/injectables/SignInProvider.html",[3,0.074,4,0.067,5,0.067,9,0.767,10,3.306,12,0.253,13,1.083,14,1.632,16,1.128,18,1.42,23,0.435,25,1.128,26,0.008,27,0.976,28,0.395,29,0.787,33,1.466,35,1.898,37,1.083,51,0.173,52,2.342,53,0.518,55,0.497,63,0.074,64,0.118,66,1.737,67,1.128,73,1.926,78,1.693,79,1.082,81,1.251,86,1.846,100,1.251,107,0.736,109,0.005,110,0.005,118,3.248,119,2.32,121,1.559,259,1.018,277,1.417,286,1.251,289,1.493,299,1.198,302,1.969,314,1.278,315,2.434,323,3.189,340,4.403,351,3.455,359,3.742,361,4.143,366,4.729,367,5.412,378,3.659,379,3.35,428,3.927,430,2.935,451,5.164,456,2.014,475,2.782,499,1.874,635,4.326,640,2.342,660,2.046,675,2.434,913,3.659,914,4.866,1267,2.935,1269,3.119,1271,3.119,1272,3.119,1329,4.782,1343,3.119,1418,2.935,1577,3.659,1578,3.35,1582,5.954,1585,5.164,1586,3.659,1588,3.35,2079,3.659,2179,5.985,2180,3.659,2181,5.826,2182,4.127,2183,4.127,2184,4.127,2185,3.35,2186,4.127,2187,4.127,2188,4.127,2189,4.127,2190,4.127,2191,4.127,2192,4.127,2193,4.127,2194,4.127,2195,3.659,2196,4.127,2197,4.127,2198,4.127]],["title/injectables/StoreOtpAndExpireProvider.html",[53,0.404,2199,3.065]],["body/injectables/StoreOtpAndExpireProvider.html",[3,0.084,4,0.076,5,0.076,9,0.868,12,0.286,13,1.18,14,1.743,16,0.905,18,1.498,23,0.474,25,1.229,26,0.008,27,1.064,28,0.43,29,0.858,33,1.598,35,1.924,37,1.18,49,0.849,51,0.167,53,0.564,55,0.563,63,0.084,64,0.206,66,1.708,67,0.905,73,2.099,78,1.358,79,1.664,81,1.417,86,1.176,100,1.417,107,0.833,109,0.005,110,0.005,176,1.303,259,1.152,277,1.514,280,2.927,286,1.417,289,1.691,292,1.152,294,1.772,299,0.961,311,3.417,314,1.447,351,4.664,456,2.195,625,4.969,628,3.15,630,4.632,634,2.872,635,2.756,636,3.002,637,4.142,638,3.532,639,4.142,640,2.652,846,3.532,2199,4.28,2200,6.392,2201,4.142,2202,6.858,2203,6.349,2204,4.673,2205,6.349,2206,4.673,2207,6.349,2208,4.673,2209,4.142,2210,4.673]],["title/entities/Subscriber.html",[508,1.572,885,2.682]],["body/entities/Subscriber.html",[3,0.107,4,0.097,5,0.097,9,1.109,12,0.365,23,0.556,26,0.008,28,0.55,39,2.694,40,3.582,49,1,51,0.129,63,0.107,64,0.171,109,0.006,110,0.006,117,1.874,118,3.904,121,2.172,127,1.595,242,3.478,292,1.472,508,2.938,510,2.959,525,3.81,538,3.938,541,3.054,542,4.783,885,5.013,1019,3.833,1734,5.296,2019,6.044,2211,5.29,2212,6.044,2213,6.601,2214,6.601,2215,5.967,2216,5.967]],["title/controllers/SubscribersController.html",[122,1.608,2217,3.437]],["body/controllers/SubscribersController.html",[3,0.085,4,0.077,5,0.077,12,0.29,13,1.192,16,0.918,18,1.241,23,0.542,25,1.406,26,0.008,27,1.218,28,0.493,29,0.982,37,1.35,49,0.855,51,0.188,55,0.571,63,0.085,64,0.136,66,1.519,67,0.918,107,1.296,109,0.005,110,0.005,119,1.888,122,1.677,124,1.677,127,1.556,277,1.854,299,0.975,302,1.603,335,2.507,336,2.351,373,2.351,377,3.782,383,2.691,385,2.911,409,4.119,473,2.914,563,2.507,564,2.691,565,2.351,566,2.281,588,2.914,652,2.426,881,5.96,885,2.796,976,3.196,1103,2.351,1206,4.999,1208,5.205,1210,3.849,2217,4.846,2218,4.203,2219,4.203,2220,5.684,2221,6.412,2222,5.684,2223,4.203,2224,4.741,2225,4.741,2226,4.741,2227,4.741,2228,4.741,2229,6.412,2230,4.203,2231,4.741,2232,4.741,2233,4.203,2234,4.322,2235,4.203,2236,4.741,2237,6.412,2238,4.741,2239,4.741,2240,4.741,2241,4.741,2242,4.741,2243,4.741,2244,4.741]],["title/modules/SubscribersModule.html",[133,1.192,158,3.234]],["body/modules/SubscribersModule.html",[3,0.098,4,0.088,5,0.088,26,0.008,51,0.194,55,0.657,63,0.098,64,0.156,109,0.006,110,0.006,124,2.486,133,2.04,135,2.225,136,2.225,137,2.343,138,2.343,139,2.225,140,3.346,141,2.343,150,5.874,158,6.593,161,3.023,162,2.018,163,2.225,165,3.284,175,2.789,176,1.519,885,3.214,1201,5.874,1209,4.424,1552,5.139,1555,3.876,1557,3.876,2217,5.882,2234,5.874,2235,4.831,2245,4.831,2246,5.45,2247,4.831,2248,5.45,2249,5.45,2250,5.45,2251,4.831,2252,5.45]],["title/injectables/SubscribersService.html",[53,0.404,2234,3.065]],["body/injectables/SubscribersService.html",[3,0.067,4,0.06,5,0.06,9,0.69,12,0.227,13,1.004,14,2.019,16,1.232,18,1.353,23,0.521,25,1.353,26,0.008,27,1.171,28,0.474,29,0.944,33,1.759,37,1.38,49,0.749,51,0.177,53,0.48,55,0.447,63,0.067,64,0.106,66,1.655,67,1.232,73,1.228,78,1.57,79,1.416,81,1.638,86,1.759,100,1.638,107,1.135,109,0.004,110,0.004,121,1.445,133,1.416,176,1.035,259,0.916,277,1.753,280,2.687,286,1.93,289,1.344,292,0.916,294,1.408,299,1.309,302,2.151,314,1.673,348,3.825,413,3.965,456,1.284,566,1.786,640,3.066,660,2.678,881,5.511,885,5.071,914,4.833,1103,1.841,1201,4.712,1206,4.489,1208,3.014,1209,3.014,1210,3.014,1211,3.292,1418,2.641,1459,7.263,2185,3.014,2219,3.292,2220,4.788,2222,4.788,2223,4.788,2230,4.788,2233,3.292,2234,3.641,2251,3.292,2253,3.292,2254,5.401,2255,3.714,2256,6.365,2257,3.714,2258,6.365,2259,3.714,2260,5.401,2261,6.365,2262,3.714,2263,5.401,2264,3.714,2265,5.401,2266,6.365,2267,3.714,2268,3.714,2269,3.714,2270,3.714,2271,3.714]],["title/classes/UpdateDeliveryStateDto.html",[64,0.13,967,3.234]],["body/classes/UpdateDeliveryStateDto.html",[3,0.121,4,0.109,5,0.109,26,0.008,51,0.173,63,0.121,64,0.192,109,0.007,110,0.007,208,4.54,265,2.079,484,5.073,499,3.047,691,3.966,707,5.761,708,4.311,710,5.447,967,5.69,975,5.447,1684,6.937,1689,5.447,2272,5.949]],["title/injectables/UpdateProductProvider.html",[53,0.404,2045,3.065]],["body/injectables/UpdateProductProvider.html",[3,0.06,4,0.054,5,0.054,9,0.621,12,0.204,13,0.928,14,1.446,16,0.967,18,0.967,23,0.373,25,0.967,26,0.008,27,0.837,28,0.339,29,0.675,37,0.621,39,2.876,40,1.607,45,1.399,49,0.704,50,5.228,51,0.161,53,0.444,55,0.403,63,0.06,64,0.096,67,0.967,73,1.651,78,1.739,79,1.569,81,1.814,86,1.671,92,1.828,93,1.828,94,1.656,95,1.828,96,1.767,97,1.828,98,1.828,99,1.828,100,1.515,107,0.891,109,0.004,110,0.004,121,1.601,176,0.931,197,2.509,242,1.56,259,0.824,277,1.256,280,2.572,286,1.013,288,1.767,289,1.808,292,0.824,294,1.267,299,1.028,302,1.129,314,1.547,316,1.767,317,1.767,318,1.767,319,1.709,320,1.767,321,1.767,323,1.828,507,2.146,601,1.181,617,3.07,660,1.656,744,2.795,767,2.712,775,2.376,792,1.97,797,3.529,925,2.376,971,3.368,1009,2.525,1011,4.476,1136,2.961,1138,4.055,1149,2.525,1151,2.712,1196,2.525,1330,4.388,1344,2.252,1345,2.252,1383,2.376,1537,2.146,1669,5.212,1928,2.961,1941,2.961,1942,2.961,1943,2.961,1948,2.525,2045,3.368,2053,4.428,2060,4.428,2273,5.304,2274,3.341,2275,3.341,2276,3.341,2277,4.996,2278,3.341,2279,4.996,2280,4.996,2281,5.984,2282,4.996,2283,8.275,2284,4.996,2285,3.341,2286,4.996,2287,3.341,2288,4.996,2289,3.341,2290,4.996,2291,3.341,2292,4.996,2293,3.341,2294,4.996,2295,3.341,2296,4.996,2297,3.341,2298,4.996,2299,3.341,2300,3.341,2301,4.996,2302,3.341,2303,3.341,2304,3.341,2305,3.341,2306,3.341,2307,4.996,2308,4.996,2309,4.996,2310,4.996,2311,3.341,2312,3.341]],["title/injectables/UploadToAwsProvider.html",[53,0.404,2313,3.065]],["body/injectables/UploadToAwsProvider.html",[3,0.071,4,0.064,5,0.146,9,0.734,12,0.242,13,1.049,14,1.592,16,1.392,18,1.392,23,0.492,25,1.275,26,0.008,27,1.442,28,0.447,29,0.89,33,1.991,37,1.336,38,1.612,49,0.846,51,0.164,53,0.502,55,0.476,56,2.02,63,0.071,64,0.113,66,1.56,67,0.764,69,2.16,73,2.693,75,5.003,78,1.147,79,1.727,81,1.197,86,0.993,100,1.197,107,1.175,109,0.005,110,0.005,168,5.491,259,0.973,277,1.383,286,1.197,289,1.428,299,0.812,302,1.334,314,1.223,349,2.24,373,1.957,555,4.862,640,2.24,781,2.807,785,3.204,794,4.979,805,6.296,928,3.499,1020,4.266,1175,3.499,1190,2.661,1233,4.581,1246,6.373,1267,2.807,1414,4.581,2313,3.805,2314,6.373,2315,3.499,2316,5.644,2317,5.644,2318,3.947,2319,5.644,2320,3.947,2321,5.003,2322,5.347,2323,5.644,2324,3.947,2325,5.644,2326,6.373,2327,3.499,2328,3.947,2329,3.947,2330,5.003,2331,3.947,2332,3.947,2333,3.947,2334,5.644,2335,3.947,2336,3.947,2337,3.499,2338,3.947,2339,3.947,2340,3.947,2341,3.947,2342,3.947,2343,3.947,2344,3.947,2345,3.947,2346,3.947,2347,3.947,2348,5.644,2349,3.947,2350,3.947,2351,3.947,2352,3.947]],["title/modules/UploadsModule.html",[133,1.192,159,2.921]],["body/modules/UploadsModule.html",[3,0.109,4,0.098,5,0.098,26,0.008,51,0.176,55,0.727,63,0.109,64,0.173,109,0.006,110,0.006,133,2.138,135,2.462,136,2.462,137,2.593,138,2.593,139,2.462,140,3.507,141,3.507,159,5.936,161,3.223,162,2.234,163,2.462,769,6.036,2313,6.029,2353,5.346,2354,5.346,2355,5.346,2356,6.031,2357,6.031,2358,6.031,2359,5.346]],["title/injectables/UploadsService.html",[53,0.404,769,2.921]],["body/injectables/UploadsService.html",[3,0.084,4,0.076,5,0.141,12,0.287,13,1.183,14,1.747,16,1.232,18,1.5,23,0.475,25,1.232,26,0.008,27,1.211,28,0.49,29,0.86,33,1.602,37,1.183,49,0.85,51,0.156,53,0.566,55,0.565,56,2.401,63,0.084,64,0.134,66,1.712,67,1.232,69,2.568,73,1.551,78,2.1,79,1.669,81,1.423,86,1.181,100,1.423,107,0.837,109,0.005,110,0.005,168,5.861,259,1.157,277,1.517,286,1.423,288,2.481,299,1.31,302,1.586,314,1.972,456,1.622,555,4.441,647,3.163,769,4.09,785,5.866,794,5.858,805,5.858,2313,5.76,2321,5.644,2322,5.168,2326,4.16,2337,4.16,2359,4.16,2360,4.16,2361,6.367,2362,4.692,2363,4.692,2364,6.367,2365,4.692,2366,7.226,2367,4.692,2368,4.692,2369,4.692,2370,4.692,2371,4.692,2372,4.692,2373,4.692,2374,4.692,2375,4.692,2376,4.692,2377,4.692]],["title/entities/User.html",[35,0.994,508,1.572]],["body/entities/User.html",[3,0.061,4,0.055,5,0.055,9,0.627,12,0.207,23,0.643,26,0.008,28,0.621,29,1.22,35,1.636,39,3.293,40,3.211,49,1.062,51,0.109,63,0.061,64,0.097,109,0.004,110,0.004,117,1.267,118,2.896,119,3.175,121,1.611,127,1.846,242,2.352,292,0.833,311,2.224,351,3.081,385,1.533,508,2.307,510,1.674,520,1.78,521,2.551,525,2.576,538,4.557,541,1.727,542,5.866,565,1.674,638,4.551,712,4.059,1019,5.409,1020,3.805,1484,4.887,1508,5.418,1694,5.337,1695,5.337,1697,5.337,1698,5.337,1699,5.337,1734,3.581,2019,7.256,2212,4.087,2213,7.925,2214,7.83,2378,2.992,2379,6.021,2380,3.376,2381,3.376,2382,3.376,2383,3.376,2384,3.376,2385,3.376,2386,3.376,2387,3.376,2388,5.035,2389,3.376,2390,3.376,2391,3.376,2392,3.376,2393,3.376]],["title/controllers/UsersController.html",[122,1.608,2394,3.437]],["body/controllers/UsersController.html",[3,0.049,4,0.044,5,0.044,9,1.623,11,2.769,12,0.165,13,0.787,16,0.522,18,0.522,23,0.443,25,1.149,26,0.008,27,1.393,28,0.549,29,0.968,35,1.975,37,1.331,39,2.592,40,3.446,49,0.919,51,0.165,55,0.325,63,0.049,64,0.077,66,1.406,67,0.522,76,4.871,105,3.622,107,1.222,109,0.003,110,0.003,112,2.772,114,1.425,119,1.073,121,1.726,122,0.953,124,0.953,127,1.271,277,1.699,295,1.425,299,0.554,335,1.425,337,5.559,343,4.25,346,4.817,348,3.248,349,4.212,352,6.748,373,2.101,376,2.604,385,1.224,389,4.817,390,4.817,392,1.159,396,4.25,397,3.53,413,2.168,519,3.649,520,2.624,563,1.425,564,1.53,565,1.337,569,2.857,570,1.817,571,2.038,583,2.038,635,4.502,652,2.679,843,1.59,912,3.203,980,4.001,1086,2.499,1100,1.379,1103,1.337,1110,3.647,1315,4.001,1329,3.368,1334,3.812,1335,5.177,1350,3.724,1537,1.732,1598,3.44,1691,5.096,1711,2.038,1734,4.221,1978,3.53,1980,2.39,1981,5.261,1982,2.39,1983,3.756,1984,3.756,1985,2.39,1986,3.756,1987,3.756,1988,3.756,1992,3.756,1993,2.39,1995,4.817,1996,3.756,2009,2.188,2012,5.261,2013,4.641,2014,4.641,2024,3.756,2025,4.25,2026,5.559,2035,3.014,2140,3.756,2394,3.203,2395,2.39,2396,3.756,2397,4.237,2398,4.237,2399,5.236,2400,2.39,2401,4.237,2402,2.696,2403,2.696,2404,2.696,2405,3.756,2406,4.237,2407,2.696,2408,2.696,2409,2.696,2410,2.696,2411,5.236,2412,2.696,2413,2.696,2414,2.696,2415,2.696,2416,2.696,2417,2.696,2418,2.39,2419,2.696,2420,2.696,2421,2.696,2422,2.696,2423,2.696,2424,2.696,2425,2.696,2426,2.696,2427,2.696,2428,2.696]],["title/modules/UsersModule.html",[133,1.192,160,2.921]],["body/modules/UsersModule.html",[3,0.081,4,0.073,5,0.073,26,0.008,35,1.543,51,0.196,55,0.541,63,0.081,64,0.128,109,0.005,110,0.005,124,2.184,133,1.851,135,1.832,136,1.832,137,1.93,138,1.93,139,1.832,140,3.036,141,3.036,145,4.163,160,6.013,161,2.655,162,2.287,163,1.832,165,2.885,175,2.296,176,1.251,351,3.613,430,4.392,623,5.557,625,3.967,634,2.758,905,5.557,1059,3.392,1212,5.557,1214,3.795,1222,5.557,1232,5.557,1329,5.105,1552,4.862,1555,5.022,1557,3.192,2199,5.557,2394,5.337,2418,3.978,2429,3.978,2430,3.978,2431,4.487,2432,3.978,2433,4.487,2434,4.487,2435,4.487,2436,3.978,2437,3.978,2438,4.487,2439,3.978,2440,5.474,2441,3.978,2442,4.487,2443,4.487]],["title/injectables/UsersService.html",[53,0.404,1329,2.581]],["body/injectables/UsersService.html",[3,0.034,4,0.031,5,0.031,9,0.596,11,4.094,12,0.117,13,0.596,14,2.072,16,1.259,18,0.937,23,0.521,25,1.352,26,0.008,27,1.17,28,0.473,29,0.943,33,1.976,35,2.005,37,1.477,38,1.308,45,0.801,49,0.945,51,0.167,53,0.43,55,0.23,63,0.034,64,0.055,66,1.882,67,1.259,73,0.632,78,1.568,79,1.625,81,1.635,86,1.637,92,1.046,93,1.046,94,0.948,95,1.046,96,1.011,97,1.046,98,1.046,99,1.046,100,1.468,105,3.883,107,1.206,109,0.003,110,0.003,118,2.807,121,1.868,133,0.84,162,2.586,176,0.533,242,0.893,259,0.472,277,1.799,280,1.951,286,1.972,288,1.011,289,1.16,292,0.472,294,0.725,299,1.338,302,1.083,311,2.872,314,1.5,316,1.011,317,1.011,318,1.011,319,0.978,320,1.011,321,1.011,323,1.046,332,1.228,347,2.422,348,1.046,351,3.671,413,2.117,449,2.841,456,2.248,499,2.198,507,1.228,519,1.933,566,0.92,623,4.179,625,4.608,627,2.841,630,3.11,631,2.841,633,2.841,634,1.175,635,2.856,636,1.228,640,1.819,660,2.894,670,2.16,884,2.422,895,3.934,905,3.264,908,2.841,910,2.841,912,3.127,1009,1.445,1011,1.289,1086,1.128,1091,1.89,1093,3.691,1100,0.978,1103,0.948,1105,1.228,1107,1.36,1108,1.228,1110,1.175,1113,1.36,1190,1.289,1196,1.445,1212,4.384,1214,2.542,1221,1.695,1222,4.558,1224,2.841,1226,2.841,1232,3.264,1233,4.737,1315,3.264,1329,1.819,1334,4.177,1537,1.228,1591,2.841,1691,4.625,1978,1.289,2195,2.841,2199,3.264,2202,2.841,2396,2.841,2400,2.841,2405,2.841,2436,1.695,2437,1.695,2439,1.695,2440,2.841,2441,1.695,2444,1.695,2445,3.205,2446,3.205,2447,3.205,2448,3.205,2449,1.912,2450,4.842,2451,4.137,2452,1.912,2453,4.137,2454,1.912,2455,1.912,2456,1.912,2457,3.205,2458,3.205,2459,1.912,2460,3.205,2461,1.912,2462,3.205,2463,1.912,2464,3.205,2465,1.912,2466,3.205,2467,1.912,2468,3.205,2469,1.912,2470,1.912,2471,1.912,2472,1.912,2473,1.912,2474,1.912,2475,1.912,2476,1.912,2477,1.912,2478,1.912,2479,1.912,2480,1.912,2481,1.912,2482,1.912,2483,1.912]],["title/injectables/VerifyPaymentProvider.html",[53,0.404,1804,3.065]],["body/injectables/VerifyPaymentProvider.html",[3,0.038,4,0.034,5,0.034,9,0.64,12,0.128,13,0.64,14,1.559,16,1.43,18,0.667,22,3.637,23,0.381,25,0.852,26,0.008,27,0.738,28,0.347,29,0.595,33,1.425,35,1.474,37,1.133,38,1.407,42,1.282,45,0.874,48,1.577,49,0.759,51,0.171,52,1.184,53,0.306,55,0.251,56,1.068,63,0.038,64,0.06,66,1.211,67,1.096,69,1.142,73,2.682,76,3.132,78,1.96,79,1.768,81,1.55,86,2.099,100,1.55,104,3.865,107,0.912,109,0.003,110,0.003,121,0.922,197,1.716,198,0.975,206,1.282,259,0.515,277,0.924,286,0.633,287,3.363,289,0.755,292,0.515,296,1.231,299,1.164,301,3.865,302,1.488,307,1.577,314,1.364,315,1.231,325,1.34,329,1.694,336,1.034,348,1.142,373,2.183,375,1.34,397,1.407,413,1.068,483,1.694,499,2.57,503,1.407,505,1.407,507,1.34,517,4.041,519,0.975,537,1.407,580,2.048,601,1.219,617,2.118,644,5.123,647,1.407,648,1.407,649,1.577,650,1.282,651,2.451,652,1.764,653,2.451,654,1.484,655,1.484,656,2.451,657,1.484,658,1.484,659,2.451,663,1.85,666,3.055,667,1.85,669,1.694,670,2.323,676,1.484,678,1.484,680,1.484,681,1.484,682,1.484,683,2.451,684,1.484,685,1.484,686,3.132,687,2.451,688,1.484,693,2.828,694,2.828,744,2.847,755,1.068,763,1.184,764,1.184,797,3.338,802,1.694,815,1.694,821,3.284,835,1.658,856,3.963,863,1.85,914,3.804,924,3.132,925,1.484,971,1.407,1011,1.407,1023,3.142,1025,3.697,1030,1.694,1035,1.694,1075,1.484,1266,3.055,1269,1.577,1325,1.694,1326,4.532,1328,1.85,1330,3.66,1332,3.055,1334,1.34,1335,3.865,1336,4.594,1340,1.694,1341,1.694,1342,2.797,1344,1.407,1345,1.407,1349,1.85,1350,1.484,1351,3.055,1366,3.328,1368,2.797,1371,1.694,1373,1.694,1378,1.694,1381,1.577,1382,1.577,1383,2.451,1384,2.968,1385,1.577,1387,1.694,1396,1.85,1399,1.694,1404,1.85,1418,2.451,1481,1.85,1582,3.574,1584,3.055,1588,1.694,1593,3.055,1720,1.282,1733,1.484,1736,1.407,1737,1.484,1787,5.235,1804,2.323,1813,3.055,1820,2.797,1923,1.577,1948,1.577,2000,3.903,2159,1.85,2160,1.85,2161,1.85,2162,3.055,2163,1.85,2164,1.85,2165,3.055,2166,3.903,2167,3.055,2168,1.85,2169,1.85,2170,1.85,2171,3.055,2185,1.694,2484,5.018,2485,3.446,2486,2.086,2487,2.086,2488,3.446,2489,2.086,2490,3.446,2491,3.055,2492,3.446,2493,6.095,2494,3.446,2495,2.086,2496,3.446,2497,3.446,2498,2.086,2499,2.086,2500,2.086,2501,3.446,2502,2.086,2503,2.086,2504,2.086,2505,2.086,2506,2.086,2507,3.055,2508,2.086,2509,3.055,2510,2.086,2511,2.086,2512,2.086,2513,2.086,2514,2.086,2515,2.086,2516,2.086,2517,2.086,2518,3.446,2519,2.086,2520,2.086,2521,3.446,2522,3.446,2523,2.086,2524,2.086,2525,2.086,2526,2.086,2527,2.086,2528,2.086]],["title/coverage.html",[2529,5.058]],["body/coverage.html",[0,2.771,1,1.441,5,0.033,6,1.797,7,1.532,8,1.797,26,0.008,28,0.137,33,0.51,35,1.097,53,0.807,61,1.645,64,0.253,79,0.531,109,0.003,110,0.003,111,2.393,112,0.947,114,1.072,115,1.797,122,2.695,123,1.532,125,1.797,129,1.366,139,0.827,162,0.751,164,1.645,184,1.532,186,1.645,188,1.532,190,1.532,197,1.308,198,1.572,200,1.366,206,1.245,208,1.909,209,2.393,214,1.984,215,2.393,219,1.645,260,1.797,264,1.532,266,1.797,267,2.731,274,1.366,275,1.797,276,2.731,281,1.366,287,0.975,296,1.984,297,1.645,333,1.532,334,1.797,336,1.005,342,1.366,351,2.207,357,1.366,367,1.366,380,1.366,425,1.302,426,1.366,427,1.366,428,1.366,442,1.797,452,1.645,453,1.645,461,1.797,474,1.645,508,2.635,509,1.302,511,3.693,512,1.797,517,0.975,543,1.532,544,1.797,554,1.366,563,1.072,567,1.441,569,1.366,570,1.366,574,1.366,594,1.366,595,1.366,601,2.445,605,1.797,606,1.797,623,1.366,624,1.797,625,2.161,626,2.731,641,1.797,642,2.731,689,1.797,690,1.797,692,1.245,701,2.067,705,2.543,707,1.366,708,3.578,709,1.797,710,2.731,717,1.366,718,1.797,724,1.366,725,1.797,734,1.366,735,1.797,755,1.037,760,1.441,761,1.645,765,1.366,766,1.797,767,2.731,769,1.302,778,1.366,792,5.478,819,2.731,832,1.366,833,1.797,834,1.797,836,1.195,851,1.366,852,1.797,853,1.797,856,1.245,881,1.441,882,1.797,883,1.797,885,1.195,895,1.366,896,1.797,897,3.572,905,1.366,906,1.797,907,1.797,914,1.195,922,1.797,923,1.797,943,1.441,944,1.797,954,1.532,955,1.797,967,1.441,972,1.366,994,1.797,995,1.797,1012,1.797,1023,1.245,1024,1.797,1025,1.072,1038,1.532,1039,1.797,1043,1.366,1061,1.797,1077,1.797,1088,1.366,1089,1.797,1090,1.797,1093,1.15,1097,1.302,1100,1.037,1116,1.366,1117,1.797,1118,1.797,1123,1.302,1132,1.366,1133,1.797,1134,1.797,1140,1.302,1201,1.366,1202,1.797,1203,1.797,1206,1.302,1212,1.366,1213,3.26,1214,2.067,1215,1.797,1222,1.366,1223,1.797,1232,1.366,1244,1.797,1245,1.797,1275,1.532,1276,2.731,1277,2.731,1282,1.005,1283,1.072,1286,1.532,1287,2.731,1288,2.731,1290,1.532,1291,2.731,1292,3.26,1305,1.532,1306,2.731,1307,2.731,1308,1.532,1309,2.731,1315,1.366,1316,2.731,1321,1.245,1322,1.441,1323,1.366,1324,1.797,1325,2.731,1329,1.15,1330,1.15,1344,1.366,1379,7.355,1441,1.797,1460,1.645,1491,1.797,1523,1.532,1524,1.797,1534,1.441,1539,1.366,1559,1.797,1570,1.797,1574,1.797,1575,1.797,1595,1.797,1614,1.797,1653,1.797,1661,1.797,1662,1.797,1669,1.366,1670,1.797,1691,1.441,1692,1.797,1708,1.797,1720,1.245,1737,1.441,1738,1.797,1750,1.532,1751,1.797,1760,1.366,1775,1.797,1782,1.532,1783,1.797,1794,1.366,1804,1.366,1812,1.797,1823,1.797,1851,1.797,1862,1.441,1867,1.797,1868,1.797,1869,1.797,1882,1.532,1883,1.797,1886,1.366,1900,1.797,1960,2.731,1961,2.731,1964,1.532,1965,1.797,1995,1.645,2045,1.366,2052,1.797,2069,1.797,2073,1.797,2074,1.797,2085,1.797,2097,1.532,2098,1.797,2105,1.366,2120,1.797,2129,1.797,2137,1.645,2148,1.797,2175,1.797,2179,1.797,2180,1.797,2199,1.366,2200,1.797,2201,1.797,2209,1.797,2211,1.797,2212,1.645,2217,1.532,2218,1.797,2234,1.366,2253,1.797,2272,1.797,2273,1.797,2313,1.366,2314,1.797,2315,1.797,2360,1.797,2378,1.797,2394,1.532,2395,1.797,2444,1.797,2484,1.797,2529,1.645,2530,1.797,2531,2.027,2532,5.571,2533,6.664,2534,8.142,2535,5.571,2536,2.982,2537,1.797,2538,1.797,2539,1.797,2540,1.797,2541,4.314,2542,7.622,2543,3.364,2544,8.289,2545,7.478,2546,6.664,2547,3.364,2548,3.364,2549,1.797,2550,6.915,2551,2.027,2552,2.027,2553,1.797,2554,3.364,2555,3.364,2556,3.364,2557,3.364,2558,2.027,2559,2.027,2560,3.364,2561,2.027,2562,2.027,2563,2.027,2564,2.027,2565,2.027,2566,2.027,2567,2.027,2568,3.364,2569,3.364,2570,2.027,2571,2.027,2572,2.027,2573,2.027,2574,2.027]],["title/dependencies.html",[136,2.236,2575,3.355]],["body/dependencies.html",[26,0.008,55,0.731,56,3.103,57,4.088,58,4.313,64,0.215,109,0.006,110,0.006,136,2.476,176,1.691,183,4.313,273,2.049,292,1.495,392,2.607,472,4.922,490,4.313,573,4.922,757,3.895,1342,4.922,1412,4.583,1413,4.922,2322,4.922,2327,5.375,2330,5.375,2576,6.063,2577,6.063,2578,6.063,2579,7.521,2580,6.063,2581,7.521,2582,6.063,2583,6.063,2584,6.063,2585,6.063,2586,6.063,2587,6.063,2588,6.063,2589,6.063,2590,6.063,2591,6.063,2592,6.063,2593,6.063,2594,6.063,2595,6.063,2596,6.063,2597,6.063,2598,6.063,2599,6.063,2600,6.063]],["title/miscellaneous/enumerations.html",[2601,2.551,2602,4.854]],["body/miscellaneous/enumerations.html",[12,0.36,26,0.008,35,1.614,109,0.006,110,0.006,119,2.941,208,4.192,383,4.192,398,6.663,473,3.619,559,5.253,565,2.92,587,5.582,648,4.979,1346,5.582,1347,4.781,1350,4.189,1496,5.995,2507,6.547,2509,6.547,2601,3.97,2602,5.221,2603,5.89,2604,8.46,2605,5.89,2606,7.386,2607,5.89,2608,7.386,2609,5.89,2610,5.89,2611,5.89,2612,5.89,2613,7.386,2614,7.386,2615,7.386,2616,7.386,2617,7.386,2618,5.89,2619,7.386]],["title/miscellaneous/functions.html",[2601,2.551,2620,4.854]],["body/miscellaneous/functions.html",[12,0.441,26,0.007,33,1.813,109,0.007,110,0.007,139,3.593,2553,6.385,2601,4.856,2620,6.385,2621,7.203,2622,7.203,2623,6.385]],["title/index.html",[12,0.232,1334,2.431,2624,3.785]],["body/index.html",[4,0.078,9,0.894,26,0.008,96,2.545,109,0.005,110,0.005,163,3.197,245,4.266,248,4.266,280,1.741,319,3.314,325,5.029,349,4.154,475,3.244,502,3.423,650,2.957,679,3.423,984,3.423,1170,3.906,1190,4.935,1412,5.918,1420,4.266,1467,6.356,2025,3.906,2491,4.266,2529,3.906,2530,4.266,2623,6.489,2625,4.812,2626,4.812,2627,7.32,2628,4.812,2629,4.812,2630,4.812,2631,4.812,2632,4.812,2633,4.812,2634,7.83,2635,4.812,2636,8.601,2637,4.812,2638,8.601,2639,4.812,2640,6.476,2641,4.812,2642,4.812,2643,7.32,2644,4.812,2645,6.476,2646,4.812,2647,4.812,2648,4.812,2649,4.812,2650,4.812,2651,4.812,2652,4.812,2653,4.812,2654,6.476,2655,4.812,2656,7.32,2657,4.812,2658,4.812,2659,4.812,2660,4.812,2661,4.812,2662,4.812,2663,4.812,2664,7.32,2665,4.812,2666,4.812,2667,4.812,2668,6.476,2669,4.812,2670,4.812,2671,4.812,2672,4.812,2673,4.812,2674,4.812,2675,4.812,2676,4.812,2677,6.476,2678,4.812,2679,4.812,2680,4.812,2681,6.476,2682,4.812,2683,4.812,2684,4.812,2685,6.476,2686,6.476,2687,4.812,2688,4.812,2689,4.812,2690,4.812,2691,4.812,2692,4.812,2693,4.812,2694,4.812,2695,4.812,2696,4.266,2697,4.812,2698,4.812,2699,4.812,2700,4.812,2701,4.812,2702,4.812,2703,4.266]],["title/modules.html",[135,2.544]],["body/modules.html",[26,0.006,109,0.006,110,0.006,134,4.339,135,2.344,145,3.87,146,4.083,147,4.083,148,4.083,149,3.87,150,3.87,151,4.083,152,4.083,153,4.083,154,4.083,155,3.527,156,3.687,157,4.083,158,4.083,159,3.687,160,3.687,1467,7.725,1552,3.386,2704,9.516,2705,9.516,2706,9.516]],["title/overview.html",[2707,5.524]],["body/overview.html",[2,2.065,26,0.008,109,0.004,110,0.004,113,2.217,124,0.966,129,3.56,133,0.716,134,6.974,135,1.115,136,1.115,137,1.174,138,1.174,139,1.115,140,1.174,141,1.174,142,2.421,143,2.421,144,2.421,145,5.553,146,5.859,147,4.618,148,5.685,149,4.854,150,4.854,151,5.452,152,5.452,153,5.993,154,4.618,155,4.71,156,5.621,157,5.452,158,5.685,159,5.037,160,5.652,161,1.841,162,1.012,163,1.115,259,0.674,265,0.846,274,3.56,281,4.854,380,3.56,423,2.421,424,2.421,425,3.392,426,3.56,427,3.56,428,3.56,510,1.354,574,3.56,591,2.421,592,2.421,594,3.56,595,3.56,623,3.56,724,3.56,765,3.56,769,4.625,851,3.56,856,4.425,905,3.56,914,4.247,972,3.56,988,2.421,989,2.421,1043,3.56,1052,2.421,1054,2.421,1070,2.421,1071,2.421,1072,2.421,1088,3.56,1093,4.087,1116,3.56,1132,3.56,1201,3.56,1212,3.56,1222,3.56,1232,3.56,1323,3.56,1329,4.087,1330,4.087,1405,2.421,1406,2.421,1407,2.421,1539,3.56,1549,2.421,1550,2.421,1551,2.421,1552,4.625,1609,2.421,1610,2.421,1611,2.421,1713,2.217,1760,3.56,1768,2.421,1769,2.421,1794,3.56,1801,2.421,1803,2.421,1804,3.56,1860,2.421,1861,2.421,1862,3.756,1894,2.421,1895,2.421,1896,2.421,2041,2.421,2042,2.421,2044,2.421,2045,3.56,2105,3.56,2113,2.421,2114,2.421,2199,3.56,2234,3.56,2245,2.421,2247,2.421,2313,3.56,2353,2.421,2354,2.421,2355,2.421,2429,2.421,2430,2.421,2432,2.421,2707,2.421,2708,2.731,2709,4.282,2710,2.731,2711,2.731,2712,2.731]],["title/properties.html",[117,1.378,2575,3.355]],["body/properties.html",[9,1.339,26,0.008,109,0.007,110,0.007,117,1.813,2696,6.385,2703,6.385,2713,7.203,2714,7.203,2715,7.203]],["title/miscellaneous/variables.html",[2601,2.551,2716,4.854]],["body/miscellaneous/variables.html",[12,0.315,26,0.008,28,0.545,31,3.656,35,1.911,45,2.834,49,0.89,50,3.159,61,5.493,66,1.217,73,2.237,89,4.557,91,4.557,107,0.917,109,0.006,110,0.006,112,3.161,119,2.047,164,4.172,217,4.557,218,4.557,219,5.493,220,4.557,336,3.751,383,3.841,398,6.311,462,4.557,474,5.493,481,4.913,494,5.999,563,4.623,569,4.562,570,3.465,1460,5.493,2026,4.172,2135,5.999,2137,5.493,2536,4.557,2537,4.557,2538,5.999,2539,4.557,2540,4.557,2549,4.557,2601,3.465,2716,4.557,2717,5.14,2718,5.14,2719,6.767,2720,5.14,2721,5.14,2722,5.14,2723,5.14,2724,5.14,2725,6.767,2726,5.14,2727,5.14,2728,5.14,2729,5.14,2730,5.14,2731,5.14,2732,5.14,2733,7.565,2734,5.14,2735,5.14,2736,5.14,2737,5.14,2738,5.14]],["title/routes.html",[2739,5.524]],["body/routes.html",[26,0.007,109,0.007,110,0.007,2739,6.595]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"entities/BankTransfer.html":{},"controllers/BankTransfersController.html":{},"modules/BankTransfersModule.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"classes/CreateBankTransferDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetSubscribersBaseDto.html":{},"classes/GetSubscribersDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchOrderDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"controllers/ProductVariantsController.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProductsWithVariantsDto.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["0",{"_index":792,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"classes/PaginationQueryDto.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/UpdateProductProvider.html":{},"coverage.html":{}}}],["0.0.1",{"_index":2714,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":2591,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":2597,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":2599,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":2590,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2545,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2561,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2563,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2532,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2544,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2550,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2546,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2560,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2570,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":843,"title":{"classes/ProductWithVariantDto-1.html":{}},"body":{"classes/CreateReviewDto.html":{},"entities/Discount.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"controllers/ProductsController.html":{},"entities/Review.html":{},"controllers/UsersController.html":{}}}],["1.0.0",{"_index":935,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["1.1.26",{"_index":2577,"title":{},"body":{"dependencies.html":{}}}],["1.4.12",{"_index":2585,"title":{},"body":{"dependencies.html":{}}}],["1.8.4",{"_index":2587,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2534,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2555,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2557,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1711,"title":{},"body":{"entities/Payment.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["10.0.0",{"_index":2579,"title":{},"body":{"dependencies.html":{}}}],["10.4.15",{"_index":2582,"title":{},"body":{"dependencies.html":{}}}],["10/11",{"_index":2572,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1379,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"coverage.html":{}}}],["1000",{"_index":2210,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["1000000",{"_index":2193,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["10})@apiquery({name",{"_index":1985,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["11.0.0",{"_index":2581,"title":{},"body":{"dependencies.html":{}}}],["11.0.6",{"_index":2583,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":2600,"title":{},"body":{"dependencies.html":{}}}],["12345",{"_index":2024,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["12345'})@apiheaders(['undefined",{"_index":1996,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["13",{"_index":2709,"title":{},"body":{"overview.html":{}}}],["17.13.3",{"_index":2593,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":2708,"title":{},"body":{"overview.html":{}}}],["1})@apiheaders(['undefined",{"_index":2408,"title":{},"body":{"controllers/UsersController.html":{}}}],["1})@auth(authtype.none)@get",{"_index":1989,"title":{},"body":{"controllers/ProductsController.html":{}}}],["2",{"_index":1713,"title":{},"body":{"entities/Payment.html":{},"entities/Product.html":{},"overview.html":{}}}],["2.0.2",{"_index":2578,"title":{},"body":{"dependencies.html":{}}}],["2.1692.0",{"_index":2586,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":2541,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":2569,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":2559,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":2565,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2388,"title":{},"body":{"entities/User.html":{}}}],["200",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["204",{"_index":2401,"title":{},"body":{"controllers/UsersController.html":{}}}],["2343",{"_index":1573,"title":{},"body":{"classes/OtpSigninDto.html":{}}}],["2343})@isint()@isnotempty",{"_index":1571,"title":{},"body":{"classes/OtpSigninDto.html":{}}}],["2354",{"_index":414,"title":{},"body":{"controllers/AuthController.html":{}}}],["25",{"_index":2556,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":2564,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":2712,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":2542,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":2548,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":2573,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2020,"title":{},"body":{"controllers/ProductsController.html":{}}}],["32",{"_index":2711,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":2580,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":2535,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":2567,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":2558,"title":{},"body":{"coverage.html":{}}}],["43",{"_index":2710,"title":{},"body":{"overview.html":{}}}],["465",{"_index":1429,"title":{},"body":{"modules/MailModule.html":{}}}],["5",{"_index":846,"title":{},"body":{"classes/CreateReviewDto.html":{},"entities/Product.html":{},"entities/Review.html":{},"injectables/StoreOtpAndExpireProvider.html":{}}}],["5.1.1",{"_index":2589,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":2543,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":2552,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2554,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":2209,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{},"coverage.html":{}}}],["66",{"_index":2568,"title":{},"body":{"coverage.html":{}}}],["7.8.1",{"_index":2598,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":2547,"title":{},"body":{"coverage.html":{}}}],["8.13.3",{"_index":2595,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":2562,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":2566,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":2551,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":2571,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":2214,"title":{},"body":{"entities/Subscriber.html":{},"entities/User.html":{}}}],["_",{"_index":101,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/FindAllProductsProvider.html":{},"controllers/ProductsController.html":{}}}],["acc",{"_index":1376,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["accept",{"_index":102,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["accepts",{"_index":1393,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["access",{"_index":10,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/RefreshTokenProvider.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{}}}],["accesstoken",{"_index":399,"title":{},"body":{"controllers/AuthController.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{}}}],["accesstokenguard",{"_index":1,"title":{"guards/AccessTokenGuard.html":{}},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["accounttype",{"_index":902,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["active",{"_index":2730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activeuser",{"_index":569,"title":{},"body":{"controllers/BankTransfersController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["activeuserdata",{"_index":112,"title":{"interfaces/ActiveUserData.html":{}},"body":{"interfaces/ActiveUserData.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ad",{"_index":2096,"title":{},"body":{"entities/Review.html":{}}}],["adapter",{"_index":1438,"title":{},"body":{"modules/MailModule.html":{}}}],["add",{"_index":2166,"title":{},"body":{"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["address",{"_index":889,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"classes/SignInDto.html":{}}}],["admin",{"_index":587,"title":{},"body":{"controllers/BankTransfersController.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"miscellaneous/enumerations.html":{}}}],["admin'})@isenum(role)@isnotempty",{"_index":899,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["allavailable",{"_index":1956,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["allow",{"_index":2143,"title":{},"body":{"guards/RolesGuard.html":{}}}],["already",{"_index":2188,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["amazing",{"_index":2691,"title":{},"body":{"index.html":{}}}],["amount",{"_index":513,"title":{},"body":{"entities/BankTransfer.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["amounts",{"_index":1394,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["api",{"_index":1988,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apibody",{"_index":388,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes",{"_index":2011,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiconsumes('multipart/form",{"_index":1971,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiheaders",{"_index":2012,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apioperation",{"_index":389,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":343,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apiparam",{"_index":2013,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":890,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/OtpSigninDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{}}}],["apiproperty({description",{"_index":886,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/OtpSigninDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{}}}],["apiquery",{"_index":2014,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apiresponse",{"_index":390,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apiresponse({status",{"_index":1980,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":391,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('auth",{"_index":394,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiversion",{"_index":934,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["app",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["app.controller",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":130,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["app_interceptor",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["appconfig",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":123,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":2668,"title":{},"body":{"index.html":{}}}],["applications",{"_index":2632,"title":{},"body":{"index.html":{}}}],["applied",{"_index":2168,"title":{},"body":{"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["apply",{"_index":1067,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["applyfordiscount",{"_index":278,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{}}}],["applyfordiscount(user",{"_index":284,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{}}}],["applyfordiscountdto",{"_index":264,"title":{"classes/ApplyForDiscountDto.html":{}},"body":{"classes/ApplyForDiscountDto.html":{},"controllers/DiscountsController.html":{},"coverage.html":{}}}],["applyfordiscountdto.code",{"_index":1051,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["applyfordiscountprovider",{"_index":274,"title":{"injectables/ApplyForDiscountProvider.html":{}},"body":{"injectables/ApplyForDiscountProvider.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":134,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":129,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":492,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{}}}],["array.from",{"_index":2018,"title":{},"body":{"controllers/ProductsController.html":{}}}],["arrivals",{"_index":2003,"title":{},"body":{"controllers/ProductsController.html":{}}}],["asc",{"_index":1194,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["async",{"_index":14,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["asynchrousnously",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["audience",{"_index":1260,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["auth",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/DeliveryStatesController.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"controllers/PaystackController.html":{},"controllers/ProductVariantsController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/SubscribersController.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth(authtype.none",{"_index":409,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/PaystackController.html":{},"controllers/ProductVariantsController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/SubscribersController.html":{}}}],["auth(authtype.none)@get('/:state",{"_index":964,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["auth(authtype.none)@get('/new",{"_index":2002,"title":{},"body":{"controllers/ProductsController.html":{}}}],["auth.controller",{"_index":431,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/config/jwt.config",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/access",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/authentication/authentication.guard",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/roles/roles.guard",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["auth_type_key",{"_index":474,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":333,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticating",{"_index":470,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authentication",{"_index":462,"title":{},"body":{"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["authenticationguard",{"_index":188,"title":{"guards/AuthenticationGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["authenticationguard.defaultauthtype",{"_index":498,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authmodule",{"_index":145,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2696,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":1335,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["authorizationurl",{"_index":1402,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{}}}],["authservice",{"_index":380,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authtype",{"_index":383,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"controllers/DeliveryStatesController.html":{},"controllers/PaystackController.html":{},"controllers/ProductVariantsController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/SubscribersController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["authtype.bearer",{"_index":482,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtype.none",{"_index":487,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtypeguardmap",{"_index":463,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtypes",{"_index":494,"title":{},"body":{"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["authtypes.map((type",{"_index":500,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["autoloadentities",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["availability",{"_index":1385,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/ProductVariantsController.html":{},"injectables/ProductVariantsService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["availability')@auth(authtype.none)@httpcode(httpstatus.ok",{"_index":1888,"title":{},"body":{"controllers/ProductVariantsController.html":{}}}],["available",{"_index":1946,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["await",{"_index":86,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/PaymentsService.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["aws",{"_index":2322,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"dependencies.html":{}}}],["aws.provider",{"_index":2359,"title":{},"body":{"modules/UploadsModule.html":{},"injectables/UploadsService.html":{}}}],["aws.provider.ts",{"_index":2315,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"coverage.html":{}}}],["aws.provider.ts:25",{"_index":2320,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["aws.provider.ts:52",{"_index":2324,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["aws.provider.ts:8",{"_index":2318,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["axios",{"_index":1342,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"dependencies.html":{}}}],["axios.get",{"_index":2498,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["axios.post",{"_index":1388,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["back",{"_index":1471,"title":{},"body":{"injectables/MailService.html":{}}}],["backers",{"_index":2692,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":288,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/BankTransfersService.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/OrdersService.html":{},"injectables/PaymentsService.html":{},"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('delivery",{"_index":1010,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["badrequestexception('mime",{"_index":2372,"title":{},"body":{"injectables/UploadsService.html":{}}}],["badrequestexception('order",{"_index":1566,"title":{},"body":{"injectables/OrdersService.html":{}}}],["badrequestexception('product",{"_index":2278,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["badrequestexception('the",{"_index":622,"title":{},"body":{"injectables/BankTransfersService.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/OrdersService.html":{},"injectables/PaymentsService.html":{}}}],["badrequestexception('user",{"_index":2482,"title":{},"body":{"injectables/UsersService.html":{}}}],["bank",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"controllers/BankTransfersController.html":{},"modules/BankTransfersModule.html":{},"injectables/BankTransfersService.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/OrdersService.html":{},"injectables/PaymentsService.html":{},"injectables/SaveBankTransferProvider.html":{},"coverage.html":{}}}],["banktransfer",{"_index":509,"title":{"entities/BankTransfer.html":{}},"body":{"entities/BankTransfer.html":{},"modules/BankTransfersModule.html":{},"injectables/BankTransfersService.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"coverage.html":{}}}],["banktransferrepository",{"_index":610,"title":{},"body":{"injectables/BankTransfersService.html":{}}}],["banktransferscontroller",{"_index":543,"title":{"controllers/BankTransfersController.html":{}},"body":{"controllers/BankTransfersController.html":{},"modules/BankTransfersModule.html":{},"coverage.html":{}}}],["banktransfersmodule",{"_index":146,"title":{"modules/BankTransfersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BankTransfersModule.html":{},"modules.html":{},"overview.html":{}}}],["banktransfersservice",{"_index":574,"title":{"injectables/BankTransfersService.html":{}},"body":{"controllers/BankTransfersController.html":{},"modules/BankTransfersModule.html":{},"injectables/BankTransfersService.html":{},"coverage.html":{},"overview.html":{}}}],["base",{"_index":1278,"title":{},"body":{"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetSubscribersBaseDto.html":{},"classes/GetSubscribersDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["based",{"_index":105,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/DeliveryStatesService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/OtpSigninProvider.html":{},"controllers/ProductsController.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["baseurl",{"_index":1637,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["bcrypt",{"_index":2588,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":1350,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"injectables/VerifyPaymentProvider.html":{},"miscellaneous/enumerations.html":{}}}],["becomes",{"_index":1952,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["before",{"_index":939,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["beforeinsert",{"_index":949,"title":{},"body":{"entities/DeliveryState.html":{},"entities/Product.html":{}}}],["beforeupdate",{"_index":950,"title":{},"body":{"entities/DeliveryState.html":{},"entities/Product.html":{}}}],["belongs",{"_index":1927,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["best",{"_index":1477,"title":{},"body":{"injectables/MailService.html":{}}}],["between",{"_index":1150,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"entities/Review.html":{}}}],["board",{"_index":2684,"title":{},"body":{"index.html":{}}}],["body",{"_index":373,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankTransfersController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/OrdersController.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ProductVariantsController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/SubscribersController.html":{},"injectables/UploadToAwsProvider.html":{},"controllers/UsersController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["boolean",{"_index":528,"title":{},"body":{"entities/BankTransfer.html":{},"classes/PatchProductVariantDto.html":{},"entities/ProductVariant.html":{},"guards/RolesGuard.html":{}}}],["boostrap",{"_index":2622,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankTransfersModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaymentsModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["both",{"_index":2170,"title":{},"body":{"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["bought",{"_index":581,"title":{},"body":{"controllers/BankTransfersController.html":{}}}],["brand",{"_index":736,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["brank",{"_index":567,"title":{},"body":{"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"classes/CreateBankTransferDto.html":{},"injectables/SaveBankTransferProvider.html":{},"coverage.html":{}}}],["browse",{"_index":2706,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2704,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":2337,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["building",{"_index":2628,"title":{},"body":{"index.html":{}}}],["buy",{"_index":1382,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["buyer",{"_index":1352,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["buyer.city",{"_index":1359,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["buyer.email",{"_index":1390,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["buyer.firstname",{"_index":1362,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["buyer.id",{"_index":1397,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["buyer.lastname",{"_index":1363,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["buyer.state",{"_index":1360,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["buyer.streetaddress",{"_index":1358,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["calculate",{"_index":1364,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["callback_url",{"_index":1391,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["called",{"_index":2490,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["callhandler",{"_index":931,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["canactivate",{"_index":15,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":30,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["carrier",{"_index":1492,"title":{},"body":{"entities/Order.html":{},"classes/PatchOrderDto.html":{}}}],["carrierphonenumber",{"_index":1493,"title":{},"body":{"entities/Order.html":{},"classes/PatchOrderDto.html":{}}}],["cascade",{"_index":1836,"title":{},"body":{"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{}}}],["cascade'})@joincolumn",{"_index":1858,"title":{},"body":{"entities/ProductImage.html":{}}}],["catch",{"_index":100,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"guards/AuthenticationGuard.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OrdersService.html":{},"injectables/PaymentsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["category",{"_index":737,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["changeuserpasswordprovider",{"_index":2471,"title":{},"body":{"injectables/UsersService.html":{}}}],["channel",{"_index":2659,"title":{},"body":{"index.html":{}}}],["charge.success",{"_index":2520,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["check",{"_index":325,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsUsageService.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/ProductVariantsService.html":{},"entities/Review.html":{},"injectables/VerifyPaymentProvider.html":{},"index.html":{}}}],["check('\"stars",{"_index":2095,"title":{},"body":{"entities/Review.html":{}}}],["checking",{"_index":34,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["checkproductvariantavailability",{"_index":1884,"title":{},"body":{"controllers/ProductVariantsController.html":{}}}],["checkproductvariantavailability(productswithvariantsdto",{"_index":1885,"title":{},"body":{"controllers/ProductVariantsController.html":{}}}],["checks",{"_index":303,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsService.html":{},"injectables/ProductVariantsService.html":{}}}],["checkvariantavailability",{"_index":1901,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["checkvariantavailability(manager",{"_index":1909,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["checkvvariantavailabilityfortransfers",{"_index":1902,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["checkvvariantavailabilityfortransfers(productswithvariantsdto",{"_index":1913,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["checkwhereoptions",{"_index":1185,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["city",{"_index":1694,"title":{},"body":{"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["class",{"_index":64,"title":{"classes/ApplyForDiscountDto.html":{},"classes/CreateBankTransferDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetSubscribersBaseDto.html":{},"classes/GetSubscribersDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/OtpSigninDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchOrderDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"classes/ProductsWithVariantsDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{},"classes/UpdateDeliveryStateDto.html":{}},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"entities/BankTransfer.html":{},"controllers/BankTransfersController.html":{},"modules/BankTransfersModule.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"classes/CreateBankTransferDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetSubscribersBaseDto.html":{},"classes/GetSubscribersDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchOrderDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"controllers/ProductVariantsController.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProductsWithVariantsDto.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":265,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"classes/CreateBankTransferDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetSubscribersBaseDto.html":{},"classes/GetSubscribersDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/OtpSigninDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchOrderDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"classes/ProductsWithVariantsDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{},"classes/UpdateDeliveryStateDto.html":{},"overview.html":{}}}],["clean",{"_index":1143,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["cleanquery",{"_index":1135,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["cleanquery(query",{"_index":1139,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["clear",{"_index":1591,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/UsersService.html":{}}}],["clearing",{"_index":633,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/UsersService.html":{}}}],["clearotpandexpirytime",{"_index":627,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/UsersService.html":{}}}],["clearotpandexpirytime(user",{"_index":631,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/UsersService.html":{}}}],["clearotpandexpirytimeprovider",{"_index":623,"title":{"injectables/ClearOtpAndExpiryTimeProvider.html":{}},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["clothtype",{"_index":738,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["cluster_appmodule",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":423,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":424,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_banktransfersmodule",{"_index":591,"title":{},"body":{"modules/BankTransfersModule.html":{},"overview.html":{}}}],["cluster_banktransfersmodule_imports",{"_index":593,"title":{},"body":{"modules/BankTransfersModule.html":{}}}],["cluster_banktransfersmodule_providers",{"_index":592,"title":{},"body":{"modules/BankTransfersModule.html":{},"overview.html":{}}}],["cluster_deliverystatesmodule",{"_index":988,"title":{},"body":{"modules/DeliveryStatesModule.html":{},"overview.html":{}}}],["cluster_deliverystatesmodule_providers",{"_index":989,"title":{},"body":{"modules/DeliveryStatesModule.html":{},"overview.html":{}}}],["cluster_discountsmodule",{"_index":1052,"title":{},"body":{"modules/DiscountsModule.html":{},"overview.html":{}}}],["cluster_discountsmodule_imports",{"_index":1053,"title":{},"body":{"modules/DiscountsModule.html":{}}}],["cluster_discountsmodule_providers",{"_index":1054,"title":{},"body":{"modules/DiscountsModule.html":{},"overview.html":{}}}],["cluster_discountsusagemodule",{"_index":1070,"title":{},"body":{"modules/DiscountsUsageModule.html":{},"overview.html":{}}}],["cluster_discountsusagemodule_exports",{"_index":1072,"title":{},"body":{"modules/DiscountsUsageModule.html":{},"overview.html":{}}}],["cluster_discountsusagemodule_providers",{"_index":1071,"title":{},"body":{"modules/DiscountsUsageModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":1405,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":1406,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":1407,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_ordersmodule",{"_index":1549,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_ordersmodule_imports",{"_index":1550,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_ordersmodule_providers",{"_index":1551,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_paginationmodule",{"_index":1609,"title":{},"body":{"modules/PaginationModule.html":{},"overview.html":{}}}],["cluster_paginationmodule_exports",{"_index":1610,"title":{},"body":{"modules/PaginationModule.html":{},"overview.html":{}}}],["cluster_paginationmodule_providers",{"_index":1611,"title":{},"body":{"modules/PaginationModule.html":{},"overview.html":{}}}],["cluster_paymentsmodule",{"_index":1768,"title":{},"body":{"modules/PaymentsModule.html":{},"overview.html":{}}}],["cluster_paymentsmodule_imports",{"_index":1770,"title":{},"body":{"modules/PaymentsModule.html":{}}}],["cluster_paymentsmodule_providers",{"_index":1769,"title":{},"body":{"modules/PaymentsModule.html":{},"overview.html":{}}}],["cluster_paystackmodule",{"_index":1801,"title":{},"body":{"modules/PaystackModule.html":{},"overview.html":{}}}],["cluster_paystackmodule_imports",{"_index":1802,"title":{},"body":{"modules/PaystackModule.html":{}}}],["cluster_paystackmodule_providers",{"_index":1803,"title":{},"body":{"modules/PaystackModule.html":{},"overview.html":{}}}],["cluster_productimagesmodule",{"_index":1860,"title":{},"body":{"modules/ProductImagesModule.html":{},"overview.html":{}}}],["cluster_productimagesmodule_providers",{"_index":1861,"title":{},"body":{"modules/ProductImagesModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":2041,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_exports",{"_index":2044,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_imports",{"_index":2043,"title":{},"body":{"modules/ProductsModule.html":{}}}],["cluster_productsmodule_providers",{"_index":2042,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productvariantsmodule",{"_index":1894,"title":{},"body":{"modules/ProductVariantsModule.html":{},"overview.html":{}}}],["cluster_productvariantsmodule_exports",{"_index":1895,"title":{},"body":{"modules/ProductVariantsModule.html":{},"overview.html":{}}}],["cluster_productvariantsmodule_providers",{"_index":1896,"title":{},"body":{"modules/ProductVariantsModule.html":{},"overview.html":{}}}],["cluster_reviewsmodule",{"_index":2113,"title":{},"body":{"modules/ReviewsModule.html":{},"overview.html":{}}}],["cluster_reviewsmodule_imports",{"_index":2115,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["cluster_reviewsmodule_providers",{"_index":2114,"title":{},"body":{"modules/ReviewsModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule",{"_index":2245,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule_imports",{"_index":2246,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["cluster_subscribersmodule_providers",{"_index":2247,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_uploadsmodule",{"_index":2353,"title":{},"body":{"modules/UploadsModule.html":{},"overview.html":{}}}],["cluster_uploadsmodule_exports",{"_index":2354,"title":{},"body":{"modules/UploadsModule.html":{},"overview.html":{}}}],["cluster_uploadsmodule_providers",{"_index":2355,"title":{},"body":{"modules/UploadsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":2429,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":2430,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":2431,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":2432,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":268,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"classes/CreateDiscountDto.html":{},"entities/Discount.html":{},"injectables/DiscountsService.html":{}}}],["color",{"_index":820,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"injectables/FindAllProductsProvider.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{}}}],["colors",{"_index":1293,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["column",{"_index":538,"title":{},"body":{"entities/BankTransfer.html":{},"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{}}}],["column('decimal",{"_index":1502,"title":{},"body":{"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{}}}],["column('int",{"_index":1852,"title":{},"body":{"entities/ProductImage.html":{},"entities/ProductVariant.html":{}}}],["column('text",{"_index":2090,"title":{},"body":{"entities/Review.html":{}}}],["column({default",{"_index":1017,"title":{},"body":{"entities/Discount.html":{},"entities/ProductVariant.html":{}}}],["column({enum",{"_index":1718,"title":{},"body":{"entities/Payment.html":{}}}],["column({nullable",{"_index":521,"title":{},"body":{"entities/BankTransfer.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/User.html":{}}}],["column({type",{"_index":1019,"title":{},"body":{"entities/Discount.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{}}}],["column({unique",{"_index":1725,"title":{},"body":{"entities/Payment.html":{}}}],["come",{"_index":2651,"title":{},"body":{"index.html":{}}}],["commit",{"_index":671,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["committed",{"_index":674,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["common/interceptors/data",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["complete",{"_index":682,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["compodoc/compodoc",{"_index":2576,"title":{},"body":{"dependencies.html":{}}}],["concurrent",{"_index":1932,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["conditions",{"_index":1159,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["conditions.variants",{"_index":1179,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["conditions.variants.color",{"_index":1177,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["conditions.variants.size",{"_index":1178,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["config",{"_index":69,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["config.get('appconfig.mailhost",{"_index":1424,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('appconfig.smtppassword",{"_index":1426,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('appconfig.smtpusername",{"_index":1425,"title":{},"body":{"modules/MailModule.html":{}}}],["config/app.config",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["config/database.config",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["config/enviroment.validation",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["config/jwt.config",{"_index":437,"title":{},"body":{"modules/AuthModule.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["config/paths.config",{"_index":1461,"title":{},"body":{"injectables/MailService.html":{}}}],["config/paystack.config",{"_index":1341,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"modules/PaystackModule.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["configmodule",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PaystackModule.html":{}}}],["configmodule.forfeature(jwtconfig",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forfeature(paystackconfig",{"_index":1811,"title":{},"body":{"modules/PaystackModule.html":{}}}],["configmodule.forroot",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["configservice.get('database.autoloadentities",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.host",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.name",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.password",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.port",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.synchronize",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.user",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["configtype",{"_index":22,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["configure",{"_index":1421,"title":{},"body":{"modules/MailModule.html":{}}}],["confirm",{"_index":586,"title":{},"body":{"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"injectables/ConfirmBankTransferProvider.html":{}}}],["confirmation",{"_index":1482,"title":{},"body":{"injectables/MailService.html":{}}}],["confirmbanktransfer",{"_index":546,"title":{},"body":{"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"injectables/ConfirmBankTransferProvider.html":{}}}],["confirmbanktransfer(@param('transferid",{"_index":589,"title":{},"body":{"controllers/BankTransfersController.html":{}}}],["confirmbanktransfer(transferid",{"_index":548,"title":{},"body":{"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"injectables/ConfirmBankTransferProvider.html":{}}}],["confirmbanktransferprovider",{"_index":594,"title":{"injectables/ConfirmBankTransferProvider.html":{}},"body":{"modules/BankTransfersModule.html":{},"injectables/BankTransfersService.html":{},"injectables/ConfirmBankTransferProvider.html":{},"coverage.html":{},"overview.html":{}}}],["confirmed",{"_index":677,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{}}}],["conflictexception",{"_index":647,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/UploadsService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["conflictexception('could",{"_index":681,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["conflictexception(err",{"_index":2514,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["conflictexception(error",{"_index":2377,"title":{},"body":{"injectables/UploadsService.html":{}}}],["connect",{"_index":656,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["connecting",{"_index":321,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/BankTransfersService.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/OrdersService.html":{},"injectables/PaymentsService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["connection",{"_index":686,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["console.log",{"_index":1423,"title":{},"body":{"modules/MailModule.html":{}}}],["console.log('before",{"_index":938,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["console.log('limit",{"_index":1155,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["console.log('order",{"_index":1195,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["console.log('payment",{"_index":2524,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["console.log('re",{"_index":421,"title":{},"body":{"controllers/AuthController.html":{}}}],["console.log('variantid",{"_index":2508,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["console.log(error",{"_index":315,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/BankTransfersService.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OrdersService.html":{},"injectables/PaymentsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["console.log(newurl",{"_index":1642,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["console.log(transfer",{"_index":662,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{}}}],["const",{"_index":73,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"injectables/ApplyForDiscountProvider.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"miscellaneous/variables.html":{}}}],["constant",{"_index":2733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ProductVariantsController.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["constructor(configservice",{"_index":928,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"injectables/UploadToAwsProvider.html":{}}}],["constructor(creatediscountprovider",{"_index":1062,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["constructor(createproductprovider",{"_index":2054,"title":{},"body":{"injectables/ProductsService.html":{}}}],["constructor(createreviewprovider",{"_index":2122,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["constructor(createuserprovider",{"_index":2449,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(datasource",{"_index":643,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["constructor(deliverystaterepository",{"_index":997,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["constructor(discountsrepository",{"_index":279,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{}}}],["constructor(discountsusagerepository",{"_index":1079,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["constructor(initiatepaymentprovider",{"_index":1814,"title":{},"body":{"injectables/PaystackService.html":{}}}],["constructor(jwtservice",{"_index":19,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["constructor(mailerservice",{"_index":1446,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(ordersrepository",{"_index":1560,"title":{},"body":{"injectables/OrdersService.html":{}}}],["constructor(paginationprovider",{"_index":1092,"title":{},"body":{"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllSubscribersProvider.html":{}}}],["constructor(paymentrepository",{"_index":1119,"title":{},"body":{"injectables/FindAllPaymentsProvider.html":{},"injectables/PaymentsService.html":{}}}],["constructor(paystackconfiguration",{"_index":1328,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["constructor(private",{"_index":131,"title":{},"body":{"controllers/AppController.html":{},"guards/RolesGuard.html":{}}}],["constructor(productrepository",{"_index":1136,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/UpdateProductProvider.html":{}}}],["constructor(productvariantrepository",{"_index":1906,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["constructor(reflector",{"_index":466,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["constructor(request",{"_index":1616,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["constructor(reviewsrepository",{"_index":855,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["constructor(savebanktransferprovider",{"_index":609,"title":{},"body":{"injectables/BankTransfersService.html":{}}}],["constructor(signinprovider",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(subscriberrepository",{"_index":2255,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["constructor(uploadtoawsprovider",{"_index":2362,"title":{},"body":{"injectables/UploadsService.html":{}}}],["constructor(usersrepository",{"_index":628,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{}}}],["constructor(usersservice",{"_index":1577,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{}}}],["containing",{"_index":1257,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["contains",{"_index":84,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{}}}],["contenttype",{"_index":2340,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["context",{"_index":36,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{}}}],["context.getclass",{"_index":497,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":496,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":74,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/RolesGuard.html":{}}}],["controller",{"_index":122,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BankTransfersController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductVariantsController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BankTransfersController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductVariantsController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":395,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('bank",{"_index":577,"title":{},"body":{"controllers/BankTransfersController.html":{}}}],["controller('delivery",{"_index":978,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["controller('discounts",{"_index":1046,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["controller('orders",{"_index":1541,"title":{},"body":{"controllers/OrdersController.html":{}}}],["controller('payments",{"_index":1762,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["controller('paystack",{"_index":1796,"title":{},"body":{"controllers/PaystackController.html":{}}}],["controller('product",{"_index":1892,"title":{},"body":{"controllers/ProductVariantsController.html":{}}}],["controller('products",{"_index":2017,"title":{},"body":{"controllers/ProductsController.html":{}}}],["controller('reviews",{"_index":2107,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["controller('subscribers",{"_index":2236,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["controller('users",{"_index":2419,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":124,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BankTransfersController.html":{},"modules/BankTransfersModule.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"controllers/ProductVariantsController.html":{},"modules/ProductVariantsModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["count",{"_index":326,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsUsageService.html":{}}}],["countdiscountusage",{"_index":1078,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["countdiscountusage(discountid",{"_index":1082,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["country",{"_index":1695,"title":{},"body":{"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["courses",{"_index":2666,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":2529,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":499,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DiscountsService.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["createbanktransferdto",{"_index":554,"title":{"classes/CreateBankTransferDto.html":{}},"body":{"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"classes/CreateBankTransferDto.html":{},"injectables/SaveBankTransferProvider.html":{},"coverage.html":{}}}],["createbanktransferdto.deliveryaddress",{"_index":2153,"title":{},"body":{"injectables/SaveBankTransferProvider.html":{}}}],["createbanktransferdto.deliverypicker",{"_index":2154,"title":{},"body":{"injectables/SaveBankTransferProvider.html":{}}}],["createbanktransferdto.discountid",{"_index":2152,"title":{},"body":{"injectables/SaveBankTransferProvider.html":{}}}],["createbanktransferdto.products",{"_index":2155,"title":{},"body":{"injectables/SaveBankTransferProvider.html":{}}}],["created",{"_index":362,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DiscountsService.html":{},"injectables/ProductsService.html":{}}}],["createdat",{"_index":514,"title":{},"body":{"entities/BankTransfer.html":{},"injectables/FindAllProductsProvider.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"entities/Product.html":{}}}],["createdatecolumn",{"_index":523,"title":{},"body":{"entities/BankTransfer.html":{},"entities/DeliveryState.html":{},"entities/DiscountUsage.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"entities/Product.html":{},"entities/Review.html":{}}}],["createdeliverystate",{"_index":957,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{}}}],["createdeliverystate(createdeliverystatedto",{"_index":960,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{}}}],["createdeliverystatedto",{"_index":707,"title":{"classes/CreateDeliveryStateDto.html":{}},"body":{"classes/CreateDeliveryStateDto.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"classes/UpdateDeliveryStateDto.html":{},"coverage.html":{}}}],["creatediscount",{"_index":726,"title":{},"body":{"injectables/CreateDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{}}}],["creatediscount(@body",{"_index":1047,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["creatediscount(creatediscountdto",{"_index":728,"title":{},"body":{"injectables/CreateDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{}}}],["creatediscountdto",{"_index":717,"title":{"classes/CreateDiscountDto.html":{}},"body":{"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"coverage.html":{}}}],["creatediscountprovider",{"_index":724,"title":{"injectables/CreateDiscountProvider.html":{}},"body":{"injectables/CreateDiscountProvider.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"coverage.html":{},"overview.html":{}}}],["createhash('sha256",{"_index":1586,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{}}}],["createhmac('sha512",{"_index":2516,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["createparamdecorator",{"_index":2724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproduct",{"_index":768,"title":{},"body":{"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createproduct(createproductdto",{"_index":771,"title":{},"body":{"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createproductdto",{"_index":734,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["createproductdto.variants",{"_index":798,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["createproductprovider",{"_index":765,"title":{"injectables/CreateProductProvider.html":{}},"body":{"injectables/CreateProductProvider.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["createproductvariantdto",{"_index":760,"title":{"classes/CreateProductVariantDto.html":{}},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/PatchProductVariantDto.html":{},"coverage.html":{}}}],["createquerybuilder(productvariant",{"_index":1933,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["createreview",{"_index":854,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["createreview(@body",{"_index":2108,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["createreview(createreviewdto",{"_index":859,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["createreviewdto",{"_index":832,"title":{"classes/CreateReviewDto.html":{}},"body":{"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"coverage.html":{}}}],["createreviewdto.productid",{"_index":867,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["createreviewdto.review",{"_index":871,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["createreviewdto.reviewer",{"_index":870,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["createreviewdto.stars",{"_index":872,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["createreviewprovider",{"_index":851,"title":{"injectables/CreateReviewProvider.html":{}},"body":{"injectables/CreateReviewProvider.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"coverage.html":{},"overview.html":{}}}],["creates",{"_index":358,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["createsubscriber",{"_index":2220,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["createsubscriber(@body",{"_index":2238,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["createsubscriber(createsubscriberdto",{"_index":2223,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["createsubscriberdto",{"_index":881,"title":{"classes/CreateSubscriberDto.html":{}},"body":{"classes/CreateSubscriberDto.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"coverage.html":{}}}],["createuser",{"_index":908,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"injectables/UsersService.html":{}}}],["createuser(createuserdto",{"_index":910,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"injectables/UsersService.html":{}}}],["createuserdto",{"_index":895,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"classes/PatchUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserprovider",{"_index":2453,"title":{},"body":{"injectables/UsersService.html":{}}}],["createusersprovider",{"_index":905,"title":{"injectables/CreateUsersProvider.html":{}},"body":{"injectables/CreateUsersProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["creating",{"_index":884,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/UsersService.html":{}}}],["creation",{"_index":1189,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["creatng",{"_index":2260,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["crypto",{"_index":1582,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["ctx",{"_index":2727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":2728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cur",{"_index":1375,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["current",{"_index":1607,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["currentpage",{"_index":1603,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["custom",{"_index":2026,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":924,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"controllers/ProductsController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["data')@useinterceptors(undefined)@roles(role.admin)@post",{"_index":1972,"title":{},"body":{"controllers/ProductsController.html":{}}}],["data.interface",{"_index":295,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"controllers/UsersController.html":{}}}],["data.interface.ts",{"_index":115,"title":{},"body":{"interfaces/ActiveUserData.html":{},"coverage.html":{}}}],["database",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplyForDiscountProvider.html":{},"injectables/BankTransfersService.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/OrdersService.html":{},"injectables/PaymentsService.html":{},"injectables/ProductVariantsService.html":{},"entities/Subscriber.html":{},"injectables/UpdateProductProvider.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["databaseconfig",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["dataresponseinterceptor",{"_index":184,"title":{"injectables/DataResponseInterceptor.html":{}},"body":{"modules/AppModule.html":{},"injectables/DataResponseInterceptor.html":{},"coverage.html":{}}}],["datasource",{"_index":644,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["date",{"_index":311,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"entities/BankTransfer.html":{},"classes/CreateDiscountDto.html":{},"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"entities/Order.html":{},"classes/PatchOrderDto.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"entities/Product.html":{},"entities/Review.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["date().gettime().tostring().trim",{"_index":2351,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["date(date.now",{"_index":2208,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["datecreated",{"_index":878,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"entities/DeliveryState.html":{},"entities/Review.html":{}}}],["db",{"_index":675,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{}}}],["declarations",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankTransfersModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaymentsModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decoraror",{"_index":2735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorator",{"_index":2135,"title":{},"body":{"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["decorator/auth.decorator",{"_index":382,"title":{},"body":{"controllers/AuthController.html":{}}}],["decorators",{"_index":127,"title":{},"body":{"controllers/AppController.html":{},"classes/ApplyForDiscountDto.html":{},"controllers/AuthController.html":{},"entities/BankTransfer.html":{},"controllers/BankTransfersController.html":{},"classes/CreateBankTransferDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/InitiatePaymentDto.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"classes/OtpSigninDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchOrderDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"controllers/PaymentsController.html":{},"controllers/PaystackController.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"controllers/ProductVariantsController.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"controllers/ProductsController.html":{},"classes/ProductsWithVariantsDto.html":{},"classes/RefreshTokenDto.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"classes/SignInDto.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["decrementing",{"_index":1950,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["deeper",{"_index":2661,"title":{},"body":{"index.html":{}}}],["default",{"_index":481,"title":{},"body":{"guards/AuthenticationGuard.html":{},"entities/BankTransfer.html":{},"entities/Discount.html":{},"modules/MailModule.html":{},"entities/Order.html":{},"classes/PaginationQueryDto.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"miscellaneous/variables.html":{}}}],["defaultauthtype",{"_index":465,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["defaultroletype",{"_index":2139,"title":{},"body":{"guards/RolesGuard.html":{}}}],["define",{"_index":1187,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["defined",{"_index":23,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"entities/BankTransfer.html":{},"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"classes/CreateBankTransferDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchOrderDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"controllers/ProductVariantsController.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ProductsWithVariantsDto.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["delete",{"_index":2009,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{}}}],["delete('/:productid",{"_index":2036,"title":{},"body":{"controllers/ProductsController.html":{}}}],["delete('/:productid')@roles(role.admin)@httpcode(httpstatus.no_content",{"_index":1975,"title":{},"body":{"controllers/ProductsController.html":{}}}],["delete('/:reviewid",{"_index":2110,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["delete('/:reviewid')@roles(role.admin)@httpcode(httpstatus.no_content",{"_index":2102,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["delete('/:userid",{"_index":2426,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleted",{"_index":1978,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleted'})@apiparam({name",{"_index":2402,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteproduct",{"_index":1966,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{}}}],["deleteproduct(productid",{"_index":1974,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["deleteproduct(reviewid",{"_index":2101,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["deletereview",{"_index":2121,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["deletereview(reviewid",{"_index":2125,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["deletes",{"_index":2035,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/UsersController.html":{}}}],["deletesubscriber",{"_index":2221,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["deletesubscriber(@param('subscriberid",{"_index":2241,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["deletesubscriber(subscriberid",{"_index":2226,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["deleteuser",{"_index":2396,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteuser(@param('userid",{"_index":2427,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser(userid",{"_index":2400,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleting",{"_index":2405,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deletion",{"_index":2457,"title":{},"body":{"injectables/UsersService.html":{}}}],["delivered",{"_index":2616,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["delivery",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateDeliveryStateDto.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"classes/UpdateDeliveryStateDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["deliveryaddress",{"_index":693,"title":{},"body":{"classes/CreateBankTransferDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/Order.html":{},"classes/ProductWithVariantDto.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["deliverypicker",{"_index":694,"title":{},"body":{"classes/CreateBankTransferDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/Order.html":{},"classes/ProductWithVariantDto.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["deliverystate",{"_index":943,"title":{"entities/DeliveryState.html":{}},"body":{"entities/DeliveryState.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"coverage.html":{}}}],["deliverystaterepository",{"_index":999,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["deliverystatescontroller",{"_index":954,"title":{"controllers/DeliveryStatesController.html":{}},"body":{"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"coverage.html":{}}}],["deliverystatesmodule",{"_index":147,"title":{"modules/DeliveryStatesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DeliveryStatesModule.html":{},"modules.html":{},"overview.html":{}}}],["deliverystatesservice",{"_index":972,"title":{"injectables/DeliveryStatesService.html":{}},"body":{"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"coverage.html":{},"overview.html":{}}}],["deny",{"_index":103,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["dependencies",{"_index":136,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankTransfersModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaymentsModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":41,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/RolesGuard.html":{}}}],["desc",{"_index":1192,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["description",{"_index":9,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BankTransfersService.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetSubscribersBaseDto.html":{},"classes/GetSubscribersDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"entities/Payment.html":{},"injectables/PaymentsService.html":{},"controllers/ProductsController.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"index.html":{},"properties.html":{}}}],["details",{"_index":560,"title":{},"body":{"controllers/BankTransfersController.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["development",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["devtools",{"_index":2672,"title":{},"body":{"index.html":{}}}],["diff",{"_index":489,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["digest('hex",{"_index":1588,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["dir",{"_index":1435,"title":{},"body":{"modules/MailModule.html":{}}}],["directly",{"_index":2311,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["disable",{"_index":93,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/OrdersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["discord",{"_index":2658,"title":{},"body":{"index.html":{}}}],["discount",{"_index":287,"title":{"entities/Discount.html":{}},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/InitiatePaymentProvider.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["discount.dto",{"_index":731,"title":{},"body":{"injectables/CreateDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{}}}],["discount.dto.ts",{"_index":267,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDiscountDto.html":{},"coverage.html":{}}}],["discount.dto.ts:10",{"_index":720,"title":{},"body":{"classes/CreateDiscountDto.html":{}}}],["discount.dto.ts:14",{"_index":722,"title":{},"body":{"classes/CreateDiscountDto.html":{}}}],["discount.dto.ts:6",{"_index":270,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDiscountDto.html":{}}}],["discount.id",{"_index":329,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["discount.percentoff",{"_index":1378,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["discount.provider",{"_index":1058,"title":{},"body":{"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{}}}],["discount.provider.ts",{"_index":276,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"coverage.html":{}}}],["discount.provider.ts:13",{"_index":282,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["discount.provider.ts:22",{"_index":729,"title":{},"body":{"injectables/CreateDiscountProvider.html":{}}}],["discount.provider.ts:33",{"_index":285,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["discount.provider.ts:8",{"_index":727,"title":{},"body":{"injectables/CreateDiscountProvider.html":{}}}],["discount.usagelimit",{"_index":331,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["discountapplied",{"_index":1494,"title":{},"body":{"entities/Order.html":{}}}],["discountid",{"_index":695,"title":{},"body":{"classes/CreateBankTransferDto.html":{},"injectables/DiscountsUsageService.html":{},"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["discounts",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{}}}],["discounts.controller",{"_index":1056,"title":{},"body":{"modules/DiscountsModule.html":{}}}],["discounts.entity",{"_index":293,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{}}}],["discounts/discounts.module",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["discountscontroller",{"_index":1038,"title":{"controllers/DiscountsController.html":{}},"body":{"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"coverage.html":{}}}],["discountsmodule",{"_index":148,"title":{"modules/DiscountsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DiscountsModule.html":{},"modules.html":{},"overview.html":{}}}],["discountsrepository",{"_index":283,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{}}}],["discountsservice",{"_index":1043,"title":{"injectables/DiscountsService.html":{}},"body":{"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"coverage.html":{},"overview.html":{}}}],["discountsusagemodule",{"_index":149,"title":{"modules/DiscountsUsageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules.html":{},"overview.html":{}}}],["discountsusagerepository",{"_index":1081,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["discountsusageservice",{"_index":281,"title":{"injectables/DiscountsUsageService.html":{}},"body":{"injectables/ApplyForDiscountProvider.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"coverage.html":{},"overview.html":{}}}],["discountusage",{"_index":1023,"title":{"entities/DiscountUsage.html":{}},"body":{"entities/DiscountUsage.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"entities/Order.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["discountusage.order",{"_index":1504,"title":{},"body":{"entities/Order.html":{}}}],["displayorder",{"_index":813,"title":{},"body":{"injectables/CreateProductProvider.html":{},"entities/ProductImage.html":{}}}],["dive",{"_index":2660,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":2530,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dressing",{"_index":1300,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["dressstyle",{"_index":739,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["dto",{"_index":799,"title":{},"body":{"injectables/CreateProductProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetSubscribersBaseDto.html":{},"classes/GetSubscribersDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/OtpSigninDto.html":{},"classes/PaginationQueryDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{}}}],["dto/products",{"_index":1890,"title":{},"body":{"controllers/ProductVariantsController.html":{},"injectables/ProductVariantsService.html":{}}}],["dtos/apply",{"_index":1045,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["dtos/create",{"_index":566,"title":{},"body":{"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/SaveBankTransferProvider.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["dtos/createproductdto",{"_index":776,"title":{},"body":{"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["dtos/get",{"_index":1103,"title":{},"body":{"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/initiate",{"_index":1339,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{}}}],["dtos/otpsignin.dto",{"_index":393,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/OtpSigninProvider.html":{}}}],["dtos/pagination",{"_index":1621,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["dtos/patch",{"_index":1537,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/refresh",{"_index":386,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RefreshTokenProvider.html":{}}}],["dtos/sign",{"_index":378,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SignInProvider.html":{}}}],["dtos/update",{"_index":977,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{}}}],["e2e",{"_index":2646,"title":{},"body":{"index.html":{}}}],["each",{"_index":764,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"classes/ProductsWithVariantsDto.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["eager",{"_index":531,"title":{},"body":{"entities/BankTransfer.html":{},"entities/Order.html":{},"entities/Product.html":{},"entities/ProductVariant.html":{}}}],["efficient",{"_index":2629,"title":{},"body":{"index.html":{}}}],["ejsadapter",{"_index":1415,"title":{},"body":{"modules/MailModule.html":{}}}],["email",{"_index":118,"title":{},"body":{"interfaces/ActiveUserData.html":{},"controllers/AuthController.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["email.provider",{"_index":2437,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["email.provider.ts",{"_index":1223,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"coverage.html":{}}}],["email.provider.ts:14",{"_index":1225,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{}}}],["email.provider.ts:32",{"_index":1227,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{}}}],["end",{"_index":1313,"title":{},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["enddate",{"_index":1310,"title":{},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["ensures",{"_index":672,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["ensuring",{"_index":1926,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["enterprise",{"_index":2676,"title":{},"body":{"index.html":{}}}],["entities",{"_index":510,"title":{},"body":{"entities/BankTransfer.html":{},"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"overview.html":{}}}],["entity",{"_index":508,"title":{"entities/BankTransfer.html":{},"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{}},"body":{"entities/BankTransfer.html":{},"injectables/CreateProductProvider.html":{},"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"coverage.html":{}}}],["entity('payment_variants",{"_index":1749,"title":{},"body":{"entities/PaymentVariant.html":{}}}],["entitymanager",{"_index":1910,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["entries",{"_index":1983,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["enum",{"_index":1508,"title":{},"body":{"entities/Order.html":{},"entities/Payment.html":{},"entities/User.html":{}}}],["enumerations",{"_index":2602,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/account",{"_index":903,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["enums/auth",{"_index":384,"title":{},"body":{"controllers/AuthController.html":{}}}],["enums/order",{"_index":1516,"title":{},"body":{"entities/Order.html":{},"classes/PatchOrderDto.html":{}}}],["enums/payment",{"_index":1732,"title":{},"body":{"entities/Payment.html":{}}}],["enums/paymentstatus.enum",{"_index":1731,"title":{},"body":{"entities/Payment.html":{}}}],["enums/role",{"_index":2178,"title":{},"body":{"classes/SignInDto.html":{}}}],["env",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["env.${env",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["enviroment",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["enviromentvalidation",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":507,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DeliveryStatesService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/OrdersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["error",{"_index":314,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"guards/AuthenticationGuard.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OrdersService.html":{},"injectables/PaymentsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["error('purchase",{"_index":2505,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["eslint",{"_index":92,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/OrdersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["eslint/no",{"_index":97,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/OrdersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["estimateddeliverydate",{"_index":1495,"title":{},"body":{"entities/Order.html":{},"classes/PatchOrderDto.html":{}}}],["event",{"_index":2000,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["eventid",{"_index":1994,"title":{},"body":{"controllers/ProductsController.html":{}}}],["events",{"_index":1285,"title":{},"body":{"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetSubscribersBaseDto.html":{},"classes/GetSubscribersDto.html":{}}}],["example",{"_index":349,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/OtpSigninDto.html":{},"controllers/ProductsController.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{},"injectables/UploadToAwsProvider.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["example1",{"_index":402,"title":{},"body":{"controllers/AuthController.html":{}}}],["example2",{"_index":405,"title":{},"body":{"controllers/AuthController.html":{}}}],["examples",{"_index":353,"title":{},"body":{"controllers/AuthController.html":{}}}],["exceed",{"_index":845,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["exceeds",{"_index":1945,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["exception",{"_index":2186,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["excetion",{"_index":72,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["execution",{"_index":491,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{}}}],["executioncontext",{"_index":31,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":323,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/BankTransfersService.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/OrdersService.html":{},"injectables/PaymentsService.html":{},"injectables/SignInProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["exists",{"_index":1939,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["experience",{"_index":2663,"title":{},"body":{"index.html":{}}}],["expire.provider",{"_index":2439,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["expire.provider.ts",{"_index":2201,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{},"coverage.html":{}}}],["expire.provider.ts:10",{"_index":2204,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["expire.provider.ts:29",{"_index":2206,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["expired",{"_index":324,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["expires",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["expiresin",{"_index":1253,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["expiry",{"_index":625,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["export",{"_index":63,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"entities/BankTransfer.html":{},"controllers/BankTransfersController.html":{},"modules/BankTransfersModule.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"classes/CreateBankTransferDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetSubscribersBaseDto.html":{},"classes/GetSubscribersDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchOrderDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"controllers/ProductVariantsController.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProductsWithVariantsDto.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["exports",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankTransfersModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaymentsModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":58,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/BankTransfersController.html":{},"injectables/PaginationProvider.html":{},"controllers/ProductsController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":555,"title":{},"body":{"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["extends",{"_index":691,"title":{},"body":{"classes/CreateBankTransferDto.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetSubscribersBaseDto.html":{},"classes/GetSubscribersDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/UpdateDeliveryStateDto.html":{}}}],["extension",{"_index":2348,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["extract",{"_index":75,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/UploadToAwsProvider.html":{}}}],["extracting",{"_index":47,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["extractrequestfromheader",{"_index":17,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["extractrequestfromheader(request",{"_index":44,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["failed",{"_index":2509,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{},"miscellaneous/enumerations.html":{}}}],["false",{"_index":40,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"entities/BankTransfer.html":{},"modules/MailModule.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"guards/RolesGuard.html":{},"entities/Subscriber.html":{},"injectables/UpdateProductProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["false})@joincolumn",{"_index":1877,"title":{},"body":{"entities/ProductVariant.html":{}}}],["fashion",{"_index":1433,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["fashion's",{"_index":1488,"title":{},"body":{"injectables/MailService.html":{}}}],["favour@gmail.com",{"_index":893,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["favour@gmail.com'})@isemail()@maxlength(96)@isnotempty",{"_index":887,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["fee",{"_index":711,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"entities/DeliveryState.html":{}}}],["fetch",{"_index":1230,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/RefreshTokenProvider.html":{}}}],["fetched",{"_index":1981,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["few",{"_index":2649,"title":{},"body":{"index.html":{}}}],["field",{"_index":2725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fields",{"_index":2281,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"entities/BankTransfer.html":{},"controllers/BankTransfersController.html":{},"modules/BankTransfersModule.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"classes/CreateBankTransferDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetSubscribersBaseDto.html":{},"classes/GetSubscribersDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchOrderDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"controllers/ProductVariantsController.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProductsWithVariantsDto.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["file.buffer",{"_index":2339,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["file.mimetype",{"_index":2341,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["file.originalname.split('.')[0",{"_index":2343,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["filearray",{"_index":788,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["filedir",{"_index":794,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["filefieldsinterceptor",{"_index":2015,"title":{},"body":{"controllers/ProductsController.html":{}}}],["fileinterceptor",{"_index":572,"title":{},"body":{"controllers/BankTransfersController.html":{}}}],["filekey",{"_index":2334,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["filename",{"_index":2325,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["files",{"_index":791,"title":{},"body":{"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["fileupload",{"_index":2316,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["fileupload(file",{"_index":2319,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["filteredconditions",{"_index":1180,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["filtering",{"_index":1153,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["finally",{"_index":684,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["finalresponse",{"_index":1647,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["find",{"_index":660,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/PaymentsService.html":{},"injectables/ProductsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["findall",{"_index":1091,"title":{},"body":{"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/OrdersService.html":{},"injectables/PaginationProvider.html":{},"injectables/PaymentsService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["findall(orderquery",{"_index":1096,"title":{},"body":{"injectables/FindAllOrdersProvider.html":{},"injectables/OrdersService.html":{},"injectables/PaymentsService.html":{}}}],["findall(paymentquery",{"_index":1122,"title":{},"body":{"injectables/FindAllPaymentsProvider.html":{}}}],["findall(productquery",{"_index":1145,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/ProductsService.html":{}}}],["findall(subscriberquery",{"_index":1205,"title":{},"body":{"injectables/FindAllSubscribersProvider.html":{}}}],["findall(userquery",{"_index":2458,"title":{},"body":{"injectables/UsersService.html":{}}}],["findallorders",{"_index":1525,"title":{},"body":{"controllers/OrdersController.html":{}}}],["findallorders(@query",{"_index":1547,"title":{},"body":{"controllers/OrdersController.html":{}}}],["findallorders(orderquery",{"_index":1528,"title":{},"body":{"controllers/OrdersController.html":{}}}],["findallordersprovider",{"_index":1088,"title":{"injectables/FindAllOrdersProvider.html":{}},"body":{"injectables/FindAllOrdersProvider.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"overview.html":{}}}],["findallpayments",{"_index":1753,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["findallpayments(@query",{"_index":1766,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["findallpayments(orderquery",{"_index":1755,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["findallpaymentsprovider",{"_index":1116,"title":{"injectables/FindAllPaymentsProvider.html":{}},"body":{"injectables/FindAllPaymentsProvider.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"coverage.html":{},"overview.html":{}}}],["findallproducts",{"_index":1967,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findallproducts(@query",{"_index":2030,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findallproducts(productquery",{"_index":1979,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findallproductsprovider",{"_index":1132,"title":{"injectables/FindAllProductsProvider.html":{}},"body":{"injectables/FindAllProductsProvider.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["findallsubscribers",{"_index":2222,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["findallsubscribers(@query",{"_index":2243,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["findallsubscribers(subscriberquery",{"_index":2230,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["findallsubscribersprovider",{"_index":1201,"title":{"injectables/FindAllSubscribersProvider.html":{}},"body":{"injectables/FindAllSubscribersProvider.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"overview.html":{}}}],["findallsubscribersproviders",{"_index":2256,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["findallusers",{"_index":2397,"title":{},"body":{"controllers/UsersController.html":{}}}],["findallusers(@query",{"_index":2423,"title":{},"body":{"controllers/UsersController.html":{}}}],["findallusers(usersquery",{"_index":2407,"title":{},"body":{"controllers/UsersController.html":{}}}],["findbanktransferbyid",{"_index":607,"title":{},"body":{"injectables/BankTransfersService.html":{}}}],["findbanktransferbyid(transferid",{"_index":613,"title":{},"body":{"injectables/BankTransfersService.html":{}}}],["findbyid",{"_index":1217,"title":{},"body":{"injectables/FindOneByIdProvider.html":{}}}],["findbyid(id",{"_index":1219,"title":{},"body":{"injectables/FindOneByIdProvider.html":{}}}],["finddeliverystatebyname",{"_index":996,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["finddeliverystatebyname(state",{"_index":1001,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["finddeliverystatebystate",{"_index":958,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["finddeliverystatebystate(@param('state",{"_index":982,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["finddeliverystatebystate(state",{"_index":963,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["finding",{"_index":1216,"title":{},"body":{"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["findonebyemail",{"_index":1224,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"injectables/UsersService.html":{}}}],["findonebyemail(email",{"_index":1226,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"injectables/UsersService.html":{}}}],["findonebyid",{"_index":2445,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyid(id",{"_index":2462,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyidprovider",{"_index":1212,"title":{"injectables/FindOneByIdProvider.html":{}},"body":{"injectables/FindOneByIdProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["findoneuserbyemailprovider",{"_index":1222,"title":{"injectables/FindOneUserByEmailProvider.html":{}},"body":{"injectables/FindOneUserByEmailProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["findorderbyid",{"_index":1526,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"injectables/PaymentsService.html":{}}}],["findorderbyid(@param('orderid",{"_index":1545,"title":{},"body":{"controllers/OrdersController.html":{}}}],["findorderbyid(orderid",{"_index":1530,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["findorderbyid(paymentid",{"_index":1778,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["findpaymentbyid",{"_index":1754,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["findpaymentbyid(@param('paymentid",{"_index":1764,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["findpaymentbyid(paymentid",{"_index":1757,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["findproductbyid",{"_index":1968,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findproductbyid(@param('productid",{"_index":2028,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findproductbyid(productid",{"_index":1991,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findproductvariantbyid",{"_index":1903,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["findproductvariantbyid(variantid",{"_index":1915,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["finds",{"_index":980,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["finduser",{"_index":2398,"title":{},"body":{"controllers/UsersController.html":{}}}],["finduser(@param('userid",{"_index":2421,"title":{},"body":{"controllers/UsersController.html":{}}}],["finduser(userid",{"_index":2412,"title":{},"body":{"controllers/UsersController.html":{}}}],["finduserbyotpandexpiresprovider",{"_index":2451,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyotpandexpirytime",{"_index":1234,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["finduserbyotpandexpirytime(otp",{"_index":1236,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["finduserbyotpandexpirytimeprovider",{"_index":1232,"title":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["finduserbyresetotpandexpiresprovider",{"_index":2470,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyresetotpandexpirytime",{"_index":2446,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyresetotpandexpirytime(otp",{"_index":2464,"title":{},"body":{"injectables/UsersService.html":{}}}],["fire",{"_index":504,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["first",{"_index":1605,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["firstname",{"_index":1484,"title":{},"body":{"injectables/MailService.html":{},"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["flat",{"_index":815,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["foldername",{"_index":2331,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["foldername}/${this.generatefilename(file",{"_index":2335,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["follow",{"_index":2678,"title":{},"body":{"index.html":{}}}],["forbiddenexception",{"_index":2136,"title":{},"body":{"guards/RolesGuard.html":{}}}],["forbiddenexception('user",{"_index":2144,"title":{},"body":{"guards/RolesGuard.html":{}}}],["forgotpasswordprovider",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["format",{"_index":936,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["formatting",{"_index":933,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["forwardref",{"_index":430,"title":{},"body":{"modules/AuthModule.html":{},"injectables/CreateUsersProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{},"modules/UsersModule.html":{}}}],["fot",{"_index":1279,"title":{},"body":{"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetSubscribersBaseDto.html":{},"classes/GetSubscribersDto.html":{}}}],["found",{"_index":1923,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"guards/RolesGuard.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["framework",{"_index":2627,"title":{},"body":{"index.html":{}}}],["full",{"_index":2675,"title":{},"body":{"index.html":{}}}],["fullname",{"_index":1475,"title":{},"body":{"injectables/MailService.html":{}}}],["function",{"_index":33,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/BankTransfersController.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OrdersService.html":{},"injectables/PaginationProvider.html":{},"injectables/PaymentsService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":2620,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gaurding",{"_index":2736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generate",{"_index":1267,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{},"injectables/UploadToAwsProvider.html":{}}}],["generated",{"_index":2374,"title":{},"body":{"injectables/UploadsService.html":{}}}],["generatefilename",{"_index":2317,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["generatefilename(file",{"_index":2323,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["generatetoken",{"_index":1583,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["generatetokenprovider",{"_index":1578,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["generatetokens",{"_index":1247,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["generatetokens(user",{"_index":1250,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["generatetokensprovider",{"_index":425,"title":{"injectables/GenerateTokensProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{},"coverage.html":{},"overview.html":{}}}],["generating",{"_index":1246,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/UploadToAwsProvider.html":{}}}],["get('')@roles(role.admin",{"_index":2231,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["get('/:orderid",{"_index":1531,"title":{},"body":{"controllers/OrdersController.html":{}}}],["get('/:paymentid",{"_index":1763,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["get('/:paymentid')@roles(role.admin",{"_index":1758,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["get('/:productid",{"_index":2027,"title":{},"body":{"controllers/ProductsController.html":{}}}],["get('/:state",{"_index":981,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["get('/:subscriberid",{"_index":2240,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["get('/:subscriberid')@auth(authtype.none",{"_index":2227,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["get('/:userid",{"_index":2420,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/new",{"_index":2039,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getauthheader",{"_index":1326,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["gethello",{"_index":126,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getnewarrivals",{"_index":1969,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getnewarrivals(@query",{"_index":2040,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getnewarrivals(productquery",{"_index":2001,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getone",{"_index":1938,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["getordersbasedto",{"_index":1275,"title":{"classes/GetOrdersBaseDto.html":{}},"body":{"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"coverage.html":{}}}],["getordersdto",{"_index":1097,"title":{"classes/GetOrdersDto.html":{}},"body":{"injectables/FindAllOrdersProvider.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["getpaymentsbasedto",{"_index":1286,"title":{"classes/GetPaymentsBaseDto.html":{}},"body":{"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"coverage.html":{}}}],["getpaymentsdto",{"_index":1123,"title":{"classes/GetPaymentsDto.html":{}},"body":{"injectables/FindAllPaymentsProvider.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"coverage.html":{}}}],["getproductsbasedto",{"_index":1290,"title":{"classes/GetProductsBaseDto.html":{}},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"coverage.html":{}}}],["getproductsdto",{"_index":1140,"title":{"classes/GetProductsDto.html":{}},"body":{"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["gets",{"_index":1085,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["getsubscribersbasedto",{"_index":1305,"title":{"classes/GetSubscribersBaseDto.html":{}},"body":{"classes/GetSubscribersBaseDto.html":{},"classes/GetSubscribersDto.html":{},"coverage.html":{}}}],["getsubscribersdto",{"_index":1206,"title":{"classes/GetSubscribersDto.html":{}},"body":{"injectables/FindAllSubscribersProvider.html":{},"classes/GetSubscribersBaseDto.html":{},"classes/GetSubscribersDto.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"coverage.html":{}}}],["getting",{"_index":1334,"title":{"index.html":{}},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["getusersbasedto",{"_index":1308,"title":{"classes/GetUsersBaseDto.html":{}},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"coverage.html":{}}}],["getusersdto",{"_index":1315,"title":{"classes/GetUsersDto.html":{}},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["global",{"_index":1409,"title":{},"body":{"modules/MailModule.html":{}}}],["gotten",{"_index":2082,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["grab",{"_index":71,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["graph",{"_index":2669,"title":{},"body":{"index.html":{}}}],["grow",{"_index":2688,"title":{},"body":{"index.html":{}}}],["guard",{"_index":0,"title":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["guarding",{"_index":2732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["handle",{"_index":322,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{}}}],["handlepaymentwebhook",{"_index":1784,"title":{},"body":{"controllers/PaystackController.html":{}}}],["handlepaymentwebhook(body",{"_index":1786,"title":{},"body":{"controllers/PaystackController.html":{}}}],["hands",{"_index":2662,"title":{},"body":{"index.html":{}}}],["handy",{"_index":2652,"title":{},"body":{"index.html":{}}}],["hased",{"_index":1589,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["hash",{"_index":1584,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["hashedotp",{"_index":1585,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{}}}],["hashingprovider",{"_index":913,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"injectables/SignInProvider.html":{}}}],["hasrole",{"_index":2145,"title":{},"body":{"guards/RolesGuard.html":{}}}],["hdfbwojefbnqpkfbjoqfehfewfeqwf234jr",{"_index":2072,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["hdfbwojefbnqpkfbjoqfehfewfeqwf234jr'})@isnotempty()@isstring",{"_index":2070,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["header",{"_index":76,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/InitiatePaymentProvider.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["headers",{"_index":48,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["headers('x",{"_index":1799,"title":{},"body":{"controllers/PaystackController.html":{}}}],["hello",{"_index":262,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":2673,"title":{},"body":{"index.html":{}}}],["helper",{"_index":1142,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["here",{"_index":679,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"index.html":{}}}],["hive",{"_index":1466,"title":{},"body":{"injectables/MailService.html":{}}}],["host",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["httpcode",{"_index":374,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductVariantsController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":2037,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["httpcode(httpstatus.ok",{"_index":410,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductVariantsController.html":{}}}],["httpexception",{"_index":2497,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["httpexception('invalid",{"_index":2518,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["https://nestjs.com",{"_index":2700,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":375,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductVariantsController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["httpstatus.bad_request",{"_index":2521,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["httpstatus.forbidden",{"_index":2519,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["id",{"_index":121,"title":{},"body":{"interfaces/ActiveUserData.html":{},"entities/BankTransfer.html":{},"injectables/BankTransfersService.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"entities/DeliveryState.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"injectables/PaymentsService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["id'})@apiparam({name",{"_index":1993,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["id'})@apiresponse({status",{"_index":1992,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["id.provider",{"_index":2441,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["id.provider.ts",{"_index":1215,"title":{},"body":{"injectables/FindOneByIdProvider.html":{},"coverage.html":{}}}],["id.provider.ts:14",{"_index":1218,"title":{},"body":{"injectables/FindOneByIdProvider.html":{}}}],["id.provider.ts:32",{"_index":1220,"title":{},"body":{"injectables/FindOneByIdProvider.html":{}}}],["identifier",{"_index":1995,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["iloghaluagneskc@gmail.com",{"_index":403,"title":{},"body":{"controllers/AuthController.html":{}}}],["image",{"_index":805,"title":{},"body":{"injectables/CreateProductProvider.html":{},"entities/ProductVariant.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["image.entity",{"_index":779,"title":{},"body":{"injectables/CreateProductProvider.html":{},"modules/ProductImagesModule.html":{},"entities/ProductVariant.html":{}}}],["image.entity.ts",{"_index":1851,"title":{},"body":{"entities/ProductImage.html":{},"coverage.html":{}}}],["image.entity.ts:13",{"_index":1854,"title":{},"body":{"entities/ProductImage.html":{}}}],["image.entity.ts:16",{"_index":1855,"title":{},"body":{"entities/ProductImage.html":{}}}],["image.entity.ts:19",{"_index":1853,"title":{},"body":{"entities/ProductImage.html":{}}}],["image.entity.ts:25",{"_index":1859,"title":{},"body":{"entities/ProductImage.html":{}}}],["image.productvariant",{"_index":1872,"title":{},"body":{"entities/ProductVariant.html":{}}}],["image/jpeg",{"_index":2369,"title":{},"body":{"injectables/UploadsService.html":{}}}],["image/jpg'].includes(file.mimetype",{"_index":2371,"title":{},"body":{"injectables/UploadsService.html":{}}}],["image/png",{"_index":2370,"title":{},"body":{"injectables/UploadsService.html":{}}}],["imagepath",{"_index":811,"title":{},"body":{"injectables/CreateProductProvider.html":{},"entities/ProductImage.html":{}}}],["imageproof",{"_index":515,"title":{},"body":{"entities/BankTransfer.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["images",{"_index":772,"title":{},"body":{"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"entities/ProductVariant.html":{}}}],["images.module",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["images.module.ts",{"_index":1863,"title":{},"body":{"modules/ProductImagesModule.html":{}}}],["images.service",{"_index":1865,"title":{},"body":{"modules/ProductImagesModule.html":{}}}],["images.service.ts",{"_index":1868,"title":{},"body":{"injectables/ProductImagesService.html":{},"coverage.html":{}}}],["images/product",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"injectables/CreateProductProvider.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"entities/ProductVariant.html":{},"coverage.html":{}}}],["images/providers/product",{"_index":1867,"title":{},"body":{"injectables/ProductImagesService.html":{},"coverage.html":{}}}],["imgurl",{"_index":812,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["imgurls.map((imgurl",{"_index":809,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["implements",{"_index":65,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{},"guards/RolesGuard.html":{}}}],["import",{"_index":51,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"entities/BankTransfer.html":{},"controllers/BankTransfersController.html":{},"modules/BankTransfersModule.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"classes/CreateBankTransferDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetSubscribersBaseDto.html":{},"classes/GetSubscribersDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchOrderDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"controllers/ProductVariantsController.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProductsWithVariantsDto.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["importation",{"_index":1417,"title":{},"body":{"modules/MailModule.html":{}}}],["importing",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["imports",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankTransfersModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaymentsModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["in')@auth(authtype.none)@httpcode(httpstatus.ok",{"_index":370,"title":{},"body":{"controllers/AuthController.html":{}}}],["in(productquery['category'].slice().split",{"_index":1161,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["in(productquery['clothtype'].slice().split",{"_index":1165,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["in(productquery['colors'].slice().split",{"_index":1172,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["in(productquery['dressstyle'].slice().split",{"_index":1167,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["in(productquery['sizes'].slice().split",{"_index":1174,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["in.dto",{"_index":379,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["in.dto.ts",{"_index":2175,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["in.dto.ts:19",{"_index":2176,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.dto.ts:30",{"_index":2177,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.provider",{"_index":434,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["in.provider.ts",{"_index":2180,"title":{},"body":{"injectables/SignInProvider.html":{},"coverage.html":{}}}],["in.provider.ts:17",{"_index":2182,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["in.provider.ts:42",{"_index":2183,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["indetifying",{"_index":85,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"entities/BankTransfer.html":{},"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"classes/CreateBankTransferDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchOrderDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"controllers/ProductVariantsController.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ProductsWithVariantsDto.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":2406,"title":{},"body":{"controllers/UsersController.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"entities/BankTransfer.html":{},"controllers/BankTransfersController.html":{},"modules/BankTransfersModule.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"classes/CreateBankTransferDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetSubscribersBaseDto.html":{},"classes/GetSubscribersDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchOrderDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"controllers/ProductVariantsController.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProductsWithVariantsDto.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["inherited",{"_index":697,"title":{},"body":{"classes/CreateBankTransferDto.html":{}}}],["inhjecting",{"_index":915,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["initialize",{"_index":1380,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initializepayment",{"_index":1327,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initializepayment(initiatepaymentdto",{"_index":1337,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initiate",{"_index":1819,"title":{},"body":{"injectables/PaystackService.html":{}}}],["initiatepayment",{"_index":1785,"title":{},"body":{"controllers/PaystackController.html":{},"injectables/PaystackService.html":{}}}],["initiatepayment(initiatepaymentdto",{"_index":1790,"title":{},"body":{"controllers/PaystackController.html":{},"injectables/PaystackService.html":{}}}],["initiatepaymentdto",{"_index":692,"title":{"classes/InitiatePaymentDto.html":{}},"body":{"classes/CreateBankTransferDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"classes/ProductWithVariantDto.html":{},"coverage.html":{}}}],["initiatepaymentdto.deliveryaddress",{"_index":1357,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initiatepaymentdto.deliverypicker",{"_index":1361,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initiatepaymentdto.discountid",{"_index":1354,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initiatepaymentdto.products",{"_index":1367,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initiatepaymentdto:33",{"_index":699,"title":{},"body":{"classes/CreateBankTransferDto.html":{}}}],["initiatepaymentdto:37",{"_index":698,"title":{},"body":{"classes/CreateBankTransferDto.html":{}}}],["initiatepaymentdto:41",{"_index":700,"title":{},"body":{"classes/CreateBankTransferDto.html":{}}}],["initiatepaymentdto:47",{"_index":704,"title":{},"body":{"classes/CreateBankTransferDto.html":{}}}],["initiatepaymentprovider",{"_index":1323,"title":{"injectables/InitiatePaymentProvider.html":{}},"body":{"injectables/InitiatePaymentProvider.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"coverage.html":{},"overview.html":{}}}],["inject",{"_index":52,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"injectables/CreateUsersProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["inject(forwardref",{"_index":2079,"title":{},"body":{"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["inject(jwtconfig.key",{"_index":70,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["inject(paystackconfig.key",{"_index":1349,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["inject(request",{"_index":1625,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["injectable",{"_index":53,"title":{"injectables/AppService.html":{},"injectables/ApplyForDiscountProvider.html":{},"injectables/AuthService.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/PaymentsService.html":{},"injectables/PaystackService.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}},"body":{"guards/AccessTokenGuard.html":{},"injectables/AppService.html":{},"injectables/ApplyForDiscountProvider.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/PaymentsService.html":{},"injectables/PaystackService.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["injectables",{"_index":259,"title":{},"body":{"injectables/AppService.html":{},"injectables/ApplyForDiscountProvider.html":{},"injectables/AuthService.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/PaymentsService.html":{},"injectables/PaystackService.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"overview.html":{}}}],["injecting",{"_index":299,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ProductVariantsController.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["injectrepository",{"_index":294,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/OrdersService.html":{},"injectables/PaymentsService.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["injectrepository(banktransfer",{"_index":618,"title":{},"body":{"injectables/BankTransfersService.html":{}}}],["injectrepository(deliverystate",{"_index":1004,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["injectrepository(discount",{"_index":300,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{}}}],["injectrepository(discountusage",{"_index":1084,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["injectrepository(order",{"_index":1109,"title":{},"body":{"injectables/FindAllOrdersProvider.html":{},"injectables/OrdersService.html":{}}}],["injectrepository(payment",{"_index":1129,"title":{},"body":{"injectables/FindAllPaymentsProvider.html":{},"injectables/PaymentsService.html":{}}}],["injectrepository(product",{"_index":1151,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["injectrepository(productvariant",{"_index":1921,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["injectrepository(review",{"_index":865,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/ReviewsService.html":{}}}],["injectrepository(subscriber",{"_index":1211,"title":{},"body":{"injectables/FindAllSubscribersProvider.html":{},"injectables/SubscribersService.html":{}}}],["injectrepository(user",{"_index":636,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/UsersService.html":{}}}],["inlinecssenabled",{"_index":1439,"title":{},"body":{"modules/MailModule.html":{}}}],["inner",{"_index":1369,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["inorder",{"_index":1623,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["installcompile",{"_index":2637,"title":{},"body":{"index.html":{}}}],["instance",{"_index":505,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["int",{"_index":1744,"title":{},"body":{"entities/PaymentVariant.html":{},"entities/Review.html":{}}}],["int'})@check('\"stars",{"_index":2093,"title":{},"body":{"entities/Review.html":{}}}],["interact",{"_index":2670,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":927,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["intercept(context",{"_index":930,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["interceptor",{"_index":926,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["interface",{"_index":111,"title":{"interfaces/ActiveUserData.html":{},"interfaces/Paginated.html":{}},"body":{"interfaces/ActiveUserData.html":{},"interfaces/Paginated.html":{},"coverage.html":{}}}],["interfaces",{"_index":113,"title":{},"body":{"interfaces/ActiveUserData.html":{},"interfaces/Paginated.html":{},"overview.html":{}}}],["interfaces/active",{"_index":1258,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["interfaces/paginated.interface",{"_index":1624,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["intersectiontype",{"_index":1281,"title":{},"body":{"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetSubscribersBaseDto.html":{},"classes/GetSubscribersDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["invalid",{"_index":406,"title":{},"body":{"controllers/AuthController.html":{}}}],["inversejoincolumn",{"_index":1522,"title":{},"body":{"entities/Order.html":{},"entities/Payment.html":{}}}],["isarray",{"_index":758,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/PatchProductDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"classes/ProductsWithVariantsDto.html":{}}}],["isarray()@isnotempty()@validatenested({each",{"_index":702,"title":{},"body":{"classes/CreateBankTransferDto.html":{},"classes/CreateProductDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"classes/ProductsWithVariantsDto.html":{}}}],["isarray()@isoptional",{"_index":1682,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["isboolean",{"_index":1690,"title":{},"body":{"classes/PatchProductVariantDto.html":{}}}],["isboolean()@isoptional",{"_index":1687,"title":{},"body":{"classes/PatchProductVariantDto.html":{}}}],["isconfirmed",{"_index":516,"title":{},"body":{"entities/BankTransfer.html":{}}}],["isdate",{"_index":723,"title":{},"body":{"classes/CreateDiscountDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/PatchOrderDto.html":{}}}],["isdate()@isnotempty",{"_index":721,"title":{},"body":{"classes/CreateDiscountDto.html":{}}}],["isdate()@isoptional",{"_index":1312,"title":{},"body":{"classes/GetUsersBaseDto.html":{},"classes/PatchOrderDto.html":{}}}],["isemail",{"_index":891,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["isenum",{"_index":901,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PatchOrderDto.html":{},"classes/SignInDto.html":{}}}],["isenum(orderstatus",{"_index":1668,"title":{},"body":{"classes/PatchOrderDto.html":{}}}],["isenum(orderstatus)@isoptional",{"_index":1666,"title":{},"body":{"classes/PatchOrderDto.html":{}}}],["isenum(role",{"_index":904,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["isglobal",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":716,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/OtpSigninDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchUserDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["isint()@isnotempty",{"_index":713,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["isint()@isnotempty()@min(1",{"_index":826,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{}}}],["isint()@isoptional",{"_index":1679,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["isnotempty",{"_index":271,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/OtpSigninDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"classes/ProductsWithVariantsDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{}}}],["isoptional",{"_index":829,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchOrderDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["isoptional()@isarray()@validatenested({each",{"_index":824,"title":{},"body":{"classes/CreateProductVariantDto.html":{}}}],["isoptional()@isint",{"_index":1706,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["isoptional()@ispositive",{"_index":1656,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["isoptional()@isstring",{"_index":1658,"title":{},"body":{"classes/PaginationQueryDto.html":{},"classes/PatchUserDto.html":{}}}],["ispositive",{"_index":1660,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["isstring",{"_index":272,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchOrderDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"classes/ProductsWithVariantsDto.html":{},"classes/RefreshTokenDto.html":{}}}],["isstring()@isnotempty",{"_index":269,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{}}}],["isstring()@isoptional",{"_index":696,"title":{},"body":{"classes/CreateBankTransferDto.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/PatchOrderDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{}}}],["issuer",{"_index":1262,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["item",{"_index":1977,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{}}}],["items",{"_index":1627,"title":{},"body":{"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{}}}],["itemsperpage",{"_index":1601,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["iterate",{"_index":1381,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["jbfwihfubfjkebiejhfbw",{"_index":418,"title":{},"body":{"controllers/AuthController.html":{}}}],["job",{"_index":2681,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":2683,"title":{},"body":{"index.html":{}}}],["joi",{"_index":2592,"title":{},"body":{"dependencies.html":{}}}],["join",{"_index":1170,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"modules/MailModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":1436,"title":{},"body":{"modules/MailModule.html":{}}}],["joincolumn",{"_index":539,"title":{},"body":{"entities/BankTransfer.html":{},"entities/DiscountUsage.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{}}}],["jointable",{"_index":1514,"title":{},"body":{"entities/Order.html":{},"entities/Payment.html":{}}}],["jsbfiwhvfquobdfj",{"_index":400,"title":{},"body":{"controllers/AuthController.html":{}}}],["jwt",{"_index":68,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["jwtconfig",{"_index":59,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["jwtconfiguration",{"_index":21,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["jwtmodule",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtmodule.registerasync(jwtconfig.asprovider",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtservice",{"_index":20,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["kamil",{"_index":2697,"title":{},"body":{"index.html":{}}}],["key",{"_index":781,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/FindAllProductsProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UploadToAwsProvider.html":{}}}],["keyof",{"_index":2726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keyword",{"_index":480,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["kobo",{"_index":1395,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["last",{"_index":1606,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["lastname",{"_index":2379,"title":{},"body":{"entities/User.html":{}}}],["lasttname",{"_index":1696,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["later",{"_index":320,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/BankTransfersService.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/OrdersService.html":{},"injectables/PaymentsService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["learn",{"_index":2655,"title":{},"body":{"index.html":{}}}],["legend",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankTransfersModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaymentsModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":2019,"title":{},"body":{"controllers/ProductsController.html":{},"entities/Subscriber.html":{},"entities/User.html":{}}}],["lessthanorequal",{"_index":290,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["lessthanorequal(new",{"_index":310,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["let's",{"_index":1470,"title":{},"body":{"injectables/MailService.html":{}}}],["level",{"_index":2280,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["license",{"_index":2703,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":2686,"title":{},"body":{"index.html":{}}}],["like(`%${productquery['name'].slice().split",{"_index":1169,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["limit",{"_index":1086,"title":{},"body":{"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"classes/PaginationQueryDto.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["line",{"_index":95,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/OrdersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["linkedin",{"_index":2679,"title":{},"body":{"index.html":{}}}],["links",{"_index":1596,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["list",{"_index":1148,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["literal",{"_index":773,"title":{},"body":{"injectables/CreateProductProvider.html":{},"interfaces/Paginated.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["load",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["lock",{"_index":1930,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["logged",{"_index":116,"title":{},"body":{"interfaces/ActiveUserData.html":{},"guards/AuthenticationGuard.html":{}}}],["logging",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":347,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/MailService.html":{},"injectables/UsersService.html":{}}}],["longdescription",{"_index":740,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["longer",{"_index":1243,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["looking",{"_index":2680,"title":{},"body":{"index.html":{}}}],["loop",{"_index":502,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"index.html":{}}}],["mail",{"_index":1418,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/SignInProvider.html":{},"injectables/SubscribersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["mail/mail.module",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["mailer",{"_index":1422,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["mailermodule",{"_index":1411,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":1419,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":1447,"title":{},"body":{"injectables/MailService.html":{}}}],["mailmodule",{"_index":150,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules/SubscribersModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":914,"title":{"injectables/MailService.html":{}},"body":{"injectables/CreateUsersProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/SignInProvider.html":{},"injectables/SubscribersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"overview.html":{}}}],["makes",{"_index":488,"title":{},"body":{"guards/AuthenticationGuard.html":{},"modules/MailModule.html":{}}}],["manager",{"_index":1912,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["manager.save(variant",{"_index":1954,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["manually",{"_index":2306,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["many",{"_index":305,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsService.html":{}}}],["manytomany",{"_index":1515,"title":{},"body":{"entities/Order.html":{},"entities/Payment.html":{}}}],["manytoone",{"_index":1037,"title":{},"body":{"entities/DiscountUsage.html":{},"entities/PaymentVariant.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{}}}],["manytoone(undefined",{"_index":1027,"title":{},"body":{"entities/DiscountUsage.html":{},"entities/PaymentVariant.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{}}}],["map",{"_index":483,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["map((data",{"_index":941,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["map((imgurls",{"_index":807,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["map((prd",{"_index":1368,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["map((vr",{"_index":1372,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["map(async",{"_index":2159,"title":{},"body":{"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["matching",{"_index":110,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"entities/BankTransfer.html":{},"controllers/BankTransfersController.html":{},"modules/BankTransfersModule.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"classes/CreateBankTransferDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetSubscribersBaseDto.html":{},"classes/GetSubscribersDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchOrderDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"controllers/ProductVariantsController.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProductsWithVariantsDto.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["material",{"_index":741,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["math.ceil(totalitems",{"_index":1644,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["max",{"_index":848,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["max(5",{"_index":850,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["maxcount",{"_index":2022,"title":{},"body":{"controllers/ProductsController.html":{}}}],["maxlength",{"_index":892,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["maxlength(96",{"_index":894,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["means",{"_index":476,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["meets",{"_index":2133,"title":{},"body":{"guards/RolesGuard.html":{}}}],["message",{"_index":413,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ConfirmBankTransferProvider.html":{},"classes/CreateReviewDto.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["meta",{"_index":1597,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["metadata",{"_index":490,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/InitiatePaymentProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"dependencies.html":{}}}],["method",{"_index":493,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{}}}],["method.enum",{"_index":1348,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["method.enum.ts",{"_index":2608,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["methods",{"_index":13,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ProductVariantsController.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["mimetype",{"_index":2368,"title":{},"body":{"injectables/UploadsService.html":{}}}],["min",{"_index":830,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{}}}],["min(1",{"_index":831,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{}}}],["miscellaneous",{"_index":2601,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":407,"title":{},"body":{"controllers/AuthController.html":{}}}],["mit",{"_index":2685,"title":{},"body":{"index.html":{}}}],["mode",{"_index":2640,"title":{},"body":{"index.html":{}}}],["module",{"_index":133,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankTransfersModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaymentsModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BankTransfersModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaymentsModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["modules",{"_index":135,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankTransfersModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaymentsModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":1413,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/ejs.adapter",{"_index":1416,"title":{},"body":{"modules/MailModule.html":{}}}],["moment",{"_index":318,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/BankTransfersService.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/OrdersService.html":{},"injectables/PaymentsService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["more",{"_index":2656,"title":{},"body":{"index.html":{}}}],["morethan",{"_index":1238,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["morethan(new",{"_index":1240,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["morethanorequal",{"_index":291,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["morethanorequal(new",{"_index":313,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["myśliwiec",{"_index":2698,"title":{},"body":{"index.html":{}}}],["name",{"_index":27,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PatchProductDto.html":{},"entities/Payment.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"controllers/ProductVariantsController.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["name.replace(/|s/g",{"_index":2346,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["need",{"_index":1420,"title":{},"body":{"modules/MailModule.html":{},"index.html":{}}}],["nest",{"_index":2623,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["nested",{"_index":1176,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["nestframework",{"_index":2702,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":937,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["nestjs",{"_index":1412,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/common",{"_index":55,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/BankTransfersController.html":{},"modules/BankTransfersModule.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductVariantsController.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":56,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"modules/PaystackModule.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/VerifyPaymentProvider.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/PaginationProvider.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":57,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1689,"title":{},"body":{"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/UpdateDeliveryStateDto.html":{}}}],["nestjs/platform",{"_index":573,"title":{},"body":{"controllers/BankTransfersController.html":{},"controllers/ProductsController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":392,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetSubscribersBaseDto.html":{},"classes/GetSubscribersDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/OtpSigninDto.html":{},"controllers/ProductsController.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplyForDiscountProvider.html":{},"modules/BankTransfersModule.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":79,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/OrdersService.html":{},"injectables/PaginationProvider.html":{},"injectables/PaymentsService.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["newest",{"_index":1191,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"classes/PaginationQueryDto.html":{}}}],["newreview",{"_index":868,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newreview.datecreated",{"_index":879,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newreview.id",{"_index":874,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newreview.product.id",{"_index":880,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newreview.review",{"_index":877,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newreview.reviewer",{"_index":875,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newreview.stars",{"_index":876,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newsletter",{"_index":1459,"title":{},"body":{"injectables/MailService.html":{},"injectables/SubscribersService.html":{}}}],["newurl",{"_index":1640,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?limit=${paginationquery.limit}&page=${nextpage",{"_index":1651,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?limit=${paginationquery.limit}&page=${paginationquery.page",{"_index":1650,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?limit=${paginationquery.limit}&page=${prevpage",{"_index":1652,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?limit=${paginationquery.limit}&page=${totalpages",{"_index":1649,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?limit=${paginationquery.limit}&page=1",{"_index":1648,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newuser",{"_index":916,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["newuser.email",{"_index":920,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["newuser.id",{"_index":919,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["newuser.role",{"_index":921,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["newuserobj",{"_index":637,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{}}}],["next",{"_index":94,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/OrdersService.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["next.handle().pipe",{"_index":940,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["nextpage",{"_index":1645,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["nich",{"_index":1432,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["node.js",{"_index":2626,"title":{},"body":{"index.html":{}}}],["none",{"_index":2611,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notfoundexception",{"_index":1102,"title":{},"body":{"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{}}}],["notfoundexception(`product",{"_index":2064,"title":{},"body":{"injectables/ProductsService.html":{}}}],["notfoundexception(error",{"_index":1115,"title":{},"body":{"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{}}}],["npm",{"_index":2636,"title":{},"body":{"index.html":{}}}],["null",{"_index":332,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/UsersService.html":{}}}],["nullable",{"_index":542,"title":{},"body":{"entities/BankTransfer.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Subscriber.html":{},"entities/User.html":{}}}],["number",{"_index":520,"title":{},"body":{"entities/BankTransfer.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"entities/DeliveryState.html":{},"entities/Discount.html":{},"injectables/GenerateTokensProvider.html":{},"classes/InitiatePaymentDto.html":{},"entities/Order.html":{},"classes/OtpSigninDto.html":{},"interfaces/Paginated.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"entities/Review.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["obj",{"_index":730,"title":{},"body":{"injectables/CreateDiscountProvider.html":{}}}],["object",{"_index":1066,"title":{},"body":{"injectables/DiscountsService.html":{},"injectables/GenerateTokensProvider.html":{}}}],["object.entries(conditions).filter(([_",{"_index":1182,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["object.entries(images).foreach",{"_index":787,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["object.entries(query).filter",{"_index":1200,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["object.fromentries",{"_index":1181,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["object.keys(order).length",{"_index":1198,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["object.keys(productquery).foreach((key",{"_index":1157,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["object.keys(whereoptions).length",{"_index":1186,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["objectliteral",{"_index":1622,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["observable",{"_index":471,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{}}}],["offer",{"_index":2682,"title":{},"body":{"index.html":{}}}],["official",{"_index":2664,"title":{},"body":{"index.html":{}}}],["oldest",{"_index":1193,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"classes/PaginationQueryDto.html":{}}}],["ondelete",{"_index":1857,"title":{},"body":{"entities/ProductImage.html":{},"entities/ProductVariant.html":{}}}],["one",{"_index":1214,"title":{},"body":{"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["onetomany",{"_index":1730,"title":{},"body":{"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductVariant.html":{}}}],["onetomany(undefined",{"_index":1721,"title":{},"body":{"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductVariant.html":{}}}],["onetoone",{"_index":540,"title":{},"body":{"entities/BankTransfer.html":{},"entities/DiscountUsage.html":{},"entities/Order.html":{}}}],["onetoone(undefined",{"_index":530,"title":{},"body":{"entities/BankTransfer.html":{},"entities/DiscountUsage.html":{},"entities/Order.html":{}}}],["online",{"_index":2617,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["open",{"_index":2687,"title":{},"body":{"index.html":{}}}],["optional",{"_index":29,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"classes/CreateBankTransferDto.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchOrderDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductVariant.html":{},"controllers/ProductVariantsController.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["options",{"_index":1111,"title":{},"body":{"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"modules/MailModule.html":{},"injectables/PaginationProvider.html":{}}}],["options.order",{"_index":1635,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["options.relations",{"_index":1632,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["options.select",{"_index":1633,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["options.where",{"_index":1634,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["order",{"_index":1025,"title":{"entities/Order.html":{}},"body":{"entities/DiscountUsage.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllProductsProvider.html":{},"entities/Order.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"injectables/PaginationProvider.html":{},"injectables/PaymentsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["order.discountapplied",{"_index":2169,"title":{},"body":{"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["order.discountusage",{"_index":1030,"title":{},"body":{"entities/DiscountUsage.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["order.dto",{"_index":1538,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["order.dto.ts",{"_index":1662,"title":{},"body":{"classes/PatchOrderDto.html":{},"coverage.html":{}}}],["order.dto.ts:11",{"_index":1664,"title":{},"body":{"classes/PatchOrderDto.html":{}}}],["order.dto.ts:15",{"_index":1665,"title":{},"body":{"classes/PatchOrderDto.html":{}}}],["order.dto.ts:19",{"_index":1667,"title":{},"body":{"classes/PatchOrderDto.html":{}}}],["order.dto.ts:7",{"_index":1663,"title":{},"body":{"classes/PatchOrderDto.html":{}}}],["order.entity",{"_index":1106,"title":{},"body":{"injectables/FindAllOrdersProvider.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["orderid",{"_index":1520,"title":{},"body":{"entities/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["orderquery",{"_index":1099,"title":{},"body":{"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["orderquery.userid",{"_index":1112,"title":{},"body":{"injectables/FindAllOrdersProvider.html":{}}}],["orders",{"_index":1101,"title":{},"body":{"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"injectables/PaymentsService.html":{}}}],["orders.controller",{"_index":1554,"title":{},"body":{"modules/OrdersModule.html":{}}}],["orders.dto",{"_index":1104,"title":{},"body":{"injectables/FindAllOrdersProvider.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["orders.dto.ts",{"_index":1277,"title":{},"body":{"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"coverage.html":{}}}],["orders.dto.ts:11",{"_index":1280,"title":{},"body":{"classes/GetOrdersBaseDto.html":{}}}],["orders.provider",{"_index":1556,"title":{},"body":{"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["orders.provider.ts",{"_index":1090,"title":{},"body":{"injectables/FindAllOrdersProvider.html":{},"coverage.html":{}}}],["orders.provider.ts:10",{"_index":1095,"title":{},"body":{"injectables/FindAllOrdersProvider.html":{}}}],["orders.provider.ts:29",{"_index":1098,"title":{},"body":{"injectables/FindAllOrdersProvider.html":{}}}],["orders/orders.module",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["orders_products",{"_index":1519,"title":{},"body":{"entities/Order.html":{}}}],["orderscontroller",{"_index":1523,"title":{"controllers/OrdersController.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"coverage.html":{}}}],["ordersmodule",{"_index":151,"title":{"modules/OrdersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"modules.html":{},"overview.html":{}}}],["ordersrepository",{"_index":1094,"title":{},"body":{"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/OrdersService.html":{}}}],["ordersservice",{"_index":1539,"title":{"injectables/OrdersService.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"overview.html":{}}}],["orderstatus",{"_index":1496,"title":{},"body":{"entities/Order.html":{},"classes/PatchOrderDto.html":{},"miscellaneous/enumerations.html":{}}}],["orderstatus.placed",{"_index":1518,"title":{},"body":{"entities/Order.html":{}}}],["otp",{"_index":351,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["otp'})@apiresponse({status",{"_index":345,"title":{},"body":{"controllers/AuthController.html":{}}}],["otp.tostring",{"_index":2198,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["otpexpire",{"_index":638,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/User.html":{}}}],["otpsignin",{"_index":338,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["otpsignin(@body",{"_index":416,"title":{},"body":{"controllers/AuthController.html":{}}}],["otpsignin(otpsignindto",{"_index":341,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["otpsignindto",{"_index":342,"title":{"classes/OtpSigninDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"coverage.html":{}}}],["otpsigninprovider",{"_index":426,"title":{"injectables/OtpSigninProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/OtpSigninProvider.html":{},"coverage.html":{},"overview.html":{}}}],["out",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankTransfersModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaymentsModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":2707,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":2575,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":1110,"title":{},"body":{"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"classes/PaginationQueryDto.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["pages",{"_index":1600,"title":{},"body":{"interfaces/Paginated.html":{}}}],["paginated",{"_index":1100,"title":{"interfaces/Paginated.html":{}},"body":{"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/OrdersService.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"injectables/PaymentsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["paginated'})@apiquery({name",{"_index":1982,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["paginating",{"_index":1620,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["pagination",{"_index":1108,"title":{},"body":{"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"injectables/UsersService.html":{}}}],["paginationmodule",{"_index":1552,"title":{"modules/PaginationModule.html":{}},"body":{"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaymentsModule.html":{},"modules/ProductsModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["paginationprovider",{"_index":1093,"title":{"injectables/PaginationProvider.html":{}},"body":{"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["paginationquery",{"_index":1615,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["paginationquery(paginationquery",{"_index":1618,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["paginationquery.limit",{"_index":1630,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["paginationquery.page",{"_index":1629,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["paginationquerydto",{"_index":1282,"title":{"classes/PaginationQueryDto.html":{}},"body":{"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetSubscribersBaseDto.html":{},"classes/GetSubscribersDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"coverage.html":{}}}],["param",{"_index":66,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/BankTransfersController.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/MailService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"injectables/PaginationProvider.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"miscellaneous/variables.html":{}}}],["param('orderid",{"_index":1543,"title":{},"body":{"controllers/OrdersController.html":{}}}],["param('productid",{"_index":2033,"title":{},"body":{"controllers/ProductsController.html":{}}}],["param('reviewid",{"_index":2111,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["param('stateid",{"_index":986,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ProductVariantsController.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["parsefloat(productquery['price'].slice().split",{"_index":1163,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["part",{"_index":2674,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":1684,"title":{},"body":{"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/UpdateDeliveryStateDto.html":{}}}],["partialtype(createuserdto",{"_index":1693,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["particular",{"_index":1999,"title":{},"body":{"controllers/ProductsController.html":{}}}],["pass",{"_index":1430,"title":{},"body":{"modules/MailModule.html":{}}}],["passing",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["password",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{}}}],["password'})@apiresponse({status",{"_index":368,"title":{},"body":{"controllers/AuthController.html":{}}}],["password1",{"_index":404,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch",{"_index":376,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankTransfersController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/OrdersController.html":{},"classes/ProductWithVariantDto-1.html":{},"controllers/ProductsController.html":{},"classes/ProductsWithVariantsDto.html":{},"controllers/UsersController.html":{}}}],["patch('/:orderid",{"_index":1542,"title":{},"body":{"controllers/OrdersController.html":{}}}],["patch('/:orderid')@roles(role.admin",{"_index":1535,"title":{},"body":{"controllers/OrdersController.html":{}}}],["patch('/:productid",{"_index":2032,"title":{},"body":{"controllers/ProductsController.html":{}}}],["patch('/:productid')@roles(role.admin",{"_index":2007,"title":{},"body":{"controllers/ProductsController.html":{}}}],["patch('/:stateid",{"_index":985,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["patch('/:transferid/confirm",{"_index":549,"title":{},"body":{"controllers/BankTransfersController.html":{}}}],["patch('/otp",{"_index":415,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch()@roles(role.user",{"_index":2416,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchorderdto",{"_index":1534,"title":{"classes/PatchOrderDto.html":{}},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/PatchOrderDto.html":{},"coverage.html":{}}}],["patchproduct",{"_index":1970,"title":{},"body":{"controllers/ProductsController.html":{}}}],["patchproduct(productid",{"_index":2006,"title":{},"body":{"controllers/ProductsController.html":{}}}],["patchproductdto",{"_index":1669,"title":{"classes/PatchProductDto.html":{}},"body":{"classes/PatchProductDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{},"coverage.html":{}}}],["patchproductdto.brand",{"_index":2298,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.category",{"_index":2290,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.clothtype",{"_index":2294,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.discount",{"_index":2288,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.dressstyle",{"_index":2292,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.material",{"_index":2296,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.name",{"_index":2284,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.price",{"_index":2286,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.variants",{"_index":2301,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.variants.length",{"_index":2302,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductvariantdto",{"_index":1321,"title":{"classes/PatchProductVariantDto.html":{}},"body":{"classes/InitiatePaymentDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"classes/ProductsWithVariantsDto.html":{},"coverage.html":{}}}],["patchuserdto",{"_index":1691,"title":{"classes/PatchUserDto.html":{}},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["patchusers",{"_index":2399,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchusers(patchuserdto",{"_index":2415,"title":{},"body":{"controllers/UsersController.html":{}}}],["path",{"_index":1414,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/UploadToAwsProvider.html":{}}}],["path.extname(file.originalname",{"_index":2349,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["path.join(root_path",{"_index":1473,"title":{},"body":{"injectables/MailService.html":{}}}],["payload",{"_index":83,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"injectables/GenerateTokensProvider.html":{}}}],["payment",{"_index":517,"title":{"entities/Payment.html":{}},"body":{"entities/BankTransfer.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["payment')@roles(role.user",{"_index":1792,"title":{},"body":{"controllers/PaystackController.html":{}}}],["payment.dto",{"_index":706,"title":{},"body":{"classes/CreateBankTransferDto.html":{},"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{}}}],["payment.dto.ts",{"_index":1316,"title":{},"body":{"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{},"coverage.html":{}}}],["payment.dto.ts:17",{"_index":1958,"title":{},"body":{"classes/ProductWithVariantDto.html":{}}}],["payment.dto.ts:21",{"_index":1957,"title":{},"body":{"classes/ProductWithVariantDto.html":{}}}],["payment.dto.ts:27",{"_index":1959,"title":{},"body":{"classes/ProductWithVariantDto.html":{}}}],["payment.dto.ts:33",{"_index":1318,"title":{},"body":{"classes/InitiatePaymentDto.html":{}}}],["payment.dto.ts:37",{"_index":1317,"title":{},"body":{"classes/InitiatePaymentDto.html":{}}}],["payment.dto.ts:41",{"_index":1319,"title":{},"body":{"classes/InitiatePaymentDto.html":{}}}],["payment.dto.ts:47",{"_index":1320,"title":{},"body":{"classes/InitiatePaymentDto.html":{}}}],["payment.entity",{"_index":1127,"title":{},"body":{"injectables/FindAllPaymentsProvider.html":{},"entities/PaymentVariant.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{}}}],["payment.id",{"_index":2164,"title":{},"body":{"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["payment.paymentvariants",{"_index":1741,"title":{},"body":{"entities/PaymentVariant.html":{}}}],["payment.provider",{"_index":1808,"title":{},"body":{"modules/PaystackModule.html":{},"injectables/PaystackService.html":{}}}],["payment.provider.ts",{"_index":1325,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["payment.provider.ts:22",{"_index":1331,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["payment.provider.ts:235",{"_index":2489,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["payment.provider.ts:25",{"_index":2486,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["payment.provider.ts:55",{"_index":1333,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["payment.provider.ts:58",{"_index":2487,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["payment.provider.ts:59",{"_index":1338,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["payment.provider.ts:67",{"_index":2495,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["payment.status",{"_index":666,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["payment_variants",{"_index":1735,"title":{},"body":{"entities/Payment.html":{}}}],["paymentdata",{"_index":2522,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["paymentdata.data.status",{"_index":2525,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["paymentid",{"_index":1736,"title":{},"body":{"entities/Payment.html":{},"entities/PaymentVariant.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["paymentmethod",{"_index":1346,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{},"injectables/SaveBankTransferProvider.html":{},"miscellaneous/enumerations.html":{}}}],["paymentmethod.online",{"_index":1398,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["paymentquery",{"_index":1125,"title":{},"body":{"injectables/FindAllPaymentsProvider.html":{},"injectables/PaymentsService.html":{}}}],["paymentquery.userid",{"_index":1130,"title":{},"body":{"injectables/FindAllPaymentsProvider.html":{}}}],["paymentrepository",{"_index":1121,"title":{},"body":{"injectables/FindAllPaymentsProvider.html":{},"injectables/PaymentsService.html":{}}}],["payments",{"_index":1752,"title":{},"body":{"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["payments.controller",{"_index":1772,"title":{},"body":{"modules/PaymentsModule.html":{}}}],["payments.dto",{"_index":1126,"title":{},"body":{"injectables/FindAllPaymentsProvider.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["payments.dto.ts",{"_index":1288,"title":{},"body":{"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"coverage.html":{}}}],["payments.dto.ts:11",{"_index":1289,"title":{},"body":{"classes/GetPaymentsBaseDto.html":{}}}],["payments.provider",{"_index":1773,"title":{},"body":{"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{}}}],["payments.provider.ts",{"_index":1118,"title":{},"body":{"injectables/FindAllPaymentsProvider.html":{},"coverage.html":{}}}],["payments.provider.ts:23",{"_index":1124,"title":{},"body":{"injectables/FindAllPaymentsProvider.html":{}}}],["payments.provider.ts:9",{"_index":1120,"title":{},"body":{"injectables/FindAllPaymentsProvider.html":{}}}],["payments/payments.module",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["paymentscontroller",{"_index":1750,"title":{"controllers/PaymentsController.html":{}},"body":{"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"coverage.html":{}}}],["paymentsmodule",{"_index":152,"title":{"modules/PaymentsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaymentsModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentsservice",{"_index":1760,"title":{"injectables/PaymentsService.html":{}},"body":{"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"coverage.html":{},"overview.html":{}}}],["paymentstatus",{"_index":648,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"miscellaneous/enumerations.html":{}}}],["paymentstatus.failed",{"_index":2510,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["paymentstatus.pending",{"_index":1401,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{}}}],["paymentstatus.success",{"_index":667,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["paymentvariant",{"_index":1720,"title":{"entities/PaymentVariant.html":{}},"body":{"entities/Payment.html":{},"entities/PaymentVariant.html":{},"modules/PaymentsModule.html":{},"entities/ProductVariant.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["paymentvariant.payment",{"_index":1722,"title":{},"body":{"entities/Payment.html":{}}}],["paymentvariant.variant",{"_index":1874,"title":{},"body":{"entities/ProductVariant.html":{}}}],["paymentvariants",{"_index":1709,"title":{},"body":{"entities/Payment.html":{},"entities/ProductVariant.html":{}}}],["paymentwebhook",{"_index":2485,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["paymentwebhook(body",{"_index":2488,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["paymet",{"_index":2512,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["pays",{"_index":2492,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["paystack",{"_index":1336,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["paystack.controller",{"_index":1806,"title":{},"body":{"modules/PaystackModule.html":{}}}],["paystack/paystack.module",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["paystackconfig",{"_index":1340,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"modules/PaystackModule.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["paystackconfiguration",{"_index":1332,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["paystackcontroller",{"_index":1782,"title":{"controllers/PaystackController.html":{}},"body":{"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"coverage.html":{}}}],["paystackmodule",{"_index":153,"title":{"modules/PaystackModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaystackModule.html":{},"modules.html":{},"overview.html":{}}}],["paystackservice",{"_index":1794,"title":{"injectables/PaystackService.html":{}},"body":{"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"coverage.html":{},"overview.html":{}}}],["pending",{"_index":2619,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["per",{"_index":1984,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["percentoff",{"_index":719,"title":{},"body":{"classes/CreateDiscountDto.html":{},"entities/Discount.html":{}}}],["permission",{"_index":2147,"title":{},"body":{"guards/RolesGuard.html":{}}}],["pessimistic",{"_index":1929,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["pg",{"_index":2594,"title":{},"body":{"dependencies.html":{}}}],["phonenumber",{"_index":1697,"title":{},"body":{"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["placed",{"_index":2613,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["please",{"_index":319,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/BankTransfersService.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/OrdersService.html":{},"injectables/PaymentsService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["port",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["position",{"_index":1986,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["positive",{"_index":1953,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["post",{"_index":377,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankTransfersController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductVariantsController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/SubscribersController.html":{}}}],["post('')@auth(authtype.none",{"_index":2099,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["post('/apply",{"_index":1049,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["post('/apply')@roles(role.user)@httpcode(httpstatus.ok",{"_index":1040,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["post('/check",{"_index":1887,"title":{},"body":{"controllers/ProductVariantsController.html":{}}}],["post('/initiate",{"_index":1791,"title":{},"body":{"controllers/PaystackController.html":{}}}],["post('/sign",{"_index":408,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/webhook",{"_index":1798,"title":{},"body":{"controllers/PaystackController.html":{}}}],["post('/webhook')@auth(authtype.none)@httpcode(httpstatus.ok",{"_index":1788,"title":{},"body":{"controllers/PaystackController.html":{}}}],["post('refresh",{"_index":419,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('submit",{"_index":584,"title":{},"body":{"controllers/BankTransfersController.html":{}}}],["post()@auth(authtype.none",{"_index":2224,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["post()@roles(role.admin",{"_index":961,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{}}}],["postgres",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["prd",{"_index":2276,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["prd.price",{"_index":1377,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["prd.productid",{"_index":2502,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["prd.variants",{"_index":1371,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["prdid",{"_index":2503,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["prdsdb",{"_index":2501,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["prdvariants",{"_index":2162,"title":{},"body":{"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["precision",{"_index":1710,"title":{},"body":{"entities/Payment.html":{},"entities/Product.html":{}}}],["prefix",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankTransfersController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductVariantsController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["prevent",{"_index":1931,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["previous",{"_index":1608,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["prevpage",{"_index":1646,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["price",{"_index":742,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{},"classes/ProductWithVariantDto.html":{}}}],["primarygeneratedcolumn",{"_index":541,"title":{},"body":{"entities/BankTransfer.html":{},"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":525,"title":{},"body":{"entities/BankTransfer.html":{},"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{}}}],["private",{"_index":16,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ProductVariantsController.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["process",{"_index":317,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/BankTransfersService.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/OrdersService.html":{},"injectables/PaymentsService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["process.cwd",{"_index":2737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["processed",{"_index":2527,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["processing",{"_index":2614,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["product",{"_index":197,"title":{"entities/Product.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"injectables/CreateReviewProvider.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"entities/Product.html":{},"modules/ProductImagesModule.html":{},"entities/ProductVariant.html":{},"controllers/ProductVariantsController.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProductsWithVariantsDto.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["product(s",{"_index":1480,"title":{},"body":{"injectables/MailService.html":{}}}],["product.brand",{"_index":2299,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.category",{"_index":2291,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.clothtype",{"_index":2295,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.discount",{"_index":2289,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.dressstyle",{"_index":2293,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.dto",{"_index":1149,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["product.dto.ts",{"_index":1292,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/PatchProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:11",{"_index":1678,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:14",{"_index":1302,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:15",{"_index":1680,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:19",{"_index":1674,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:21",{"_index":1295,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:23",{"_index":1672,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:27",{"_index":1675,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:28",{"_index":1296,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:31",{"_index":1673,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:35",{"_index":1303,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/PatchProductDto.html":{}}}],["product.dto.ts:39",{"_index":1671,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:42",{"_index":1298,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:43",{"_index":1681,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:47",{"_index":1677,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:49",{"_index":1304,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:51",{"_index":1683,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:56",{"_index":1299,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:7",{"_index":1676,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.entity",{"_index":775,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/FindAllProductsProvider.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["product.id",{"_index":2305,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.material",{"_index":2297,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.name",{"_index":2285,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.price",{"_index":2287,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.provider",{"_index":2048,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["product.provider.ts",{"_index":767,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/UpdateProductProvider.html":{},"coverage.html":{}}}],["product.provider.ts:13",{"_index":2274,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.provider.ts:14",{"_index":770,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["product.provider.ts:27",{"_index":2275,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.provider.ts:33",{"_index":774,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["product.reviews",{"_index":2088,"title":{},"body":{"entities/Review.html":{}}}],["product.variants",{"_index":1876,"title":{},"body":{"entities/ProductVariant.html":{}}}],["productclothtype",{"_index":1297,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["productid",{"_index":835,"title":{},"body":{"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/Order.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ProductsWithVariantsDto.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["productimage",{"_index":778,"title":{"entities/ProductImage.html":{}},"body":{"injectables/CreateProductProvider.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"entities/ProductVariant.html":{},"coverage.html":{}}}],["productimages",{"_index":806,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["productimages.map(async",{"_index":816,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["productimagesmodule",{"_index":154,"title":{"modules/ProductImagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductImagesModule.html":{},"modules.html":{},"overview.html":{}}}],["productimagesservice",{"_index":1862,"title":{"injectables/ProductImagesService.html":{}},"body":{"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"coverage.html":{},"overview.html":{}}}],["production",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["productquery",{"_index":1147,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["productquery['category",{"_index":1160,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['clothtype",{"_index":1164,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['colors",{"_index":1171,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['dressstyle",{"_index":1166,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['name",{"_index":1168,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['price",{"_index":1162,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['sizes",{"_index":1173,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery[key",{"_index":1158,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productrepository",{"_index":1138,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["products",{"_index":580,"title":{},"body":{"controllers/BankTransfersController.html":{},"classes/CreateBankTransferDto.html":{},"injectables/CreateReviewProvider.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetSubscribersBaseDto.html":{},"classes/GetSubscribersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/ProductVariantsController.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ProductsWithVariantsDto.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["products.controller",{"_index":2047,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.provider",{"_index":2049,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["products.provider.ts",{"_index":1134,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"coverage.html":{}}}],["products.provider.ts:10",{"_index":1137,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["products.provider.ts:136",{"_index":1141,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["products.provider.ts:29",{"_index":1146,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["products/products.module",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["productscontroller",{"_index":1964,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsmodule",{"_index":156,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaystackModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsservice",{"_index":856,"title":{"injectables/ProductsService.html":{}},"body":{"injectables/CreateReviewProvider.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"overview.html":{}}}],["productswithvariantsdto",{"_index":1886,"title":{"classes/ProductsWithVariantsDto.html":{}},"body":{"controllers/ProductVariantsController.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto-1.html":{},"classes/ProductsWithVariantsDto.html":{},"coverage.html":{}}}],["productswithvariantsdto.products",{"_index":1955,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["productupdated",{"_index":2283,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["productvariant",{"_index":755,"title":{"entities/ProductVariant.html":{}},"body":{"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["productvariantrepository",{"_index":1908,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["productvariantscontroller",{"_index":1882,"title":{"controllers/ProductVariantsController.html":{}},"body":{"controllers/ProductVariantsController.html":{},"modules/ProductVariantsModule.html":{},"coverage.html":{}}}],["productvariantsmodule",{"_index":155,"title":{"modules/ProductVariantsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BankTransfersModule.html":{},"modules/PaystackModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productvariantsservice",{"_index":1330,"title":{"injectables/ProductVariantsService.html":{}},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/ProductVariantsController.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"overview.html":{}}}],["productwithvariantdto",{"_index":701,"title":{"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{}},"body":{"classes/CreateBankTransferDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"classes/ProductsWithVariantsDto.html":{},"coverage.html":{}}}],["progressive",{"_index":2625,"title":{},"body":{"index.html":{}}}],["project",{"_index":2634,"title":{},"body":{"index.html":{}}}],["promise",{"_index":38,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/BankTransfersService.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DiscountsService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/MailService.html":{},"injectables/OrdersService.html":{},"injectables/PaginationProvider.html":{},"injectables/PaymentsService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["promise.all",{"_index":1266,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["promise.resolve(instance.canactivate(context",{"_index":506,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["proof",{"_index":2173,"title":{},"body":{"injectables/SaveBankTransferProvider.html":{}}}],["proofimgurl",{"_index":2157,"title":{},"body":{"injectables/SaveBankTransferProvider.html":{}}}],["properties",{"_index":117,"title":{"properties.html":{}},"body":{"interfaces/ActiveUserData.html":{},"classes/ApplyForDiscountDto.html":{},"guards/AuthenticationGuard.html":{},"entities/BankTransfer.html":{},"classes/CreateBankTransferDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/InitiatePaymentDto.html":{},"entities/Order.html":{},"classes/OtpSigninDto.html":{},"interfaces/Paginated.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchOrderDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"classes/ProductsWithVariantsDto.html":{},"classes/RefreshTokenDto.html":{},"entities/Review.html":{},"classes/SignInDto.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"properties.html":{}}}],["property",{"_index":478,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["provide",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":2282,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["provider",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BankTransfersService.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/DiscountsService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"entities/Payment.html":{},"injectables/PaymentsService.html":{},"injectables/PaystackService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}}}],["providerreference",{"_index":1399,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["providers",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankTransfersModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaymentsModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers/apply",{"_index":1057,"title":{},"body":{"modules/DiscountsModule.html":{}}}],["providers/auth.service",{"_index":381,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["providers/bank",{"_index":575,"title":{},"body":{"controllers/BankTransfersController.html":{},"modules/BankTransfersModule.html":{}}}],["providers/clear",{"_index":2442,"title":{},"body":{"modules/UsersModule.html":{}}}],["providers/confirm",{"_index":603,"title":{},"body":{"modules/BankTransfersModule.html":{}}}],["providers/create",{"_index":1059,"title":{},"body":{"modules/DiscountsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/UsersModule.html":{}}}],["providers/delivery",{"_index":973,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{}}}],["providers/discounts",{"_index":1074,"title":{},"body":{"modules/DiscountsUsageModule.html":{}}}],["providers/discounts.service",{"_index":1044,"title":{},"body":{"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{}}}],["providers/find",{"_index":1555,"title":{},"body":{"modules/OrdersModule.html":{},"modules/PaymentsModule.html":{},"modules/ProductsModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["providers/generate",{"_index":435,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/initiate",{"_index":1807,"title":{},"body":{"modules/PaystackModule.html":{}}}],["providers/mail.service",{"_index":1410,"title":{},"body":{"modules/MailModule.html":{}}}],["providers/orders.service",{"_index":1540,"title":{},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{}}}],["providers/otp",{"_index":440,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/pagination.provider",{"_index":1613,"title":{},"body":{"modules/PaginationModule.html":{}}}],["providers/payments.service",{"_index":1761,"title":{},"body":{"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{}}}],["providers/paystack.service",{"_index":1795,"title":{},"body":{"controllers/PaystackController.html":{},"modules/PaystackModule.html":{}}}],["providers/product",{"_index":1864,"title":{},"body":{"modules/ProductImagesModule.html":{},"controllers/ProductVariantsController.html":{},"modules/ProductVariantsModule.html":{}}}],["providers/products.service",{"_index":2016,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{}}}],["providers/refresh",{"_index":438,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/reviews.service",{"_index":2106,"title":{},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{}}}],["providers/save",{"_index":599,"title":{},"body":{"modules/BankTransfersModule.html":{}}}],["providers/sign",{"_index":433,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/store",{"_index":2438,"title":{},"body":{"modules/UsersModule.html":{}}}],["providers/subscribers.service",{"_index":2235,"title":{},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{}}}],["providers/update",{"_index":2050,"title":{},"body":{"modules/ProductsModule.html":{}}}],["providers/upload",{"_index":2358,"title":{},"body":{"modules/UploadsModule.html":{}}}],["providers/uploads.service",{"_index":2357,"title":{},"body":{"modules/UploadsModule.html":{}}}],["providers/users.service",{"_index":2418,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["providers/verify",{"_index":1810,"title":{},"body":{"modules/PaystackModule.html":{}}}],["prvariant",{"_index":800,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["public",{"_index":277,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ProductVariantsController.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["purchase",{"_index":1481,"title":{},"body":{"injectables/MailService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["quantity",{"_index":821,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/PaymentVariant.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queries",{"_index":1152,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["query",{"_index":652,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"controllers/OrdersController.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"controllers/PaymentsController.html":{},"controllers/ProductsController.html":{},"injectables/SaveBankTransferProvider.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["query.dto",{"_index":1284,"title":{},"body":{"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetSubscribersBaseDto.html":{},"classes/GetSubscribersDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"injectables/PaginationProvider.html":{}}}],["query.dto.ts",{"_index":1653,"title":{},"body":{"classes/PaginationQueryDto.html":{},"coverage.html":{}}}],["query.dto.ts:12",{"_index":1654,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["query.dto.ts:19",{"_index":1657,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["query.dto.ts:23",{"_index":1659,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["queryrunner",{"_index":654,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.committransaction",{"_index":676,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.connect",{"_index":657,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.manager",{"_index":1387,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.manager.create(product",{"_index":782,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.manager.create(productimage",{"_index":810,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.manager.create(productvariant",{"_index":801,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.manager.findone(banktransfer",{"_index":661,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{}}}],["queryrunner.manager.findone(discount",{"_index":1355,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["queryrunner.manager.findone(payment",{"_index":663,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.manager.findone(productvariant",{"_index":2160,"title":{},"body":{"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.manager.findone(user",{"_index":2151,"title":{},"body":{"injectables/SaveBankTransferProvider.html":{}}}],["queryrunner.manager.save(banktransfer",{"_index":2172,"title":{},"body":{"injectables/SaveBankTransferProvider.html":{}}}],["queryrunner.manager.save(discountusage",{"_index":2167,"title":{},"body":{"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.manager.save(image",{"_index":817,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.manager.save(order",{"_index":2171,"title":{},"body":{"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.manager.save(payment",{"_index":669,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.manager.save(paymentvariant",{"_index":2163,"title":{},"body":{"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.manager.save(product",{"_index":784,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.manager.save(prvariant",{"_index":803,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.manager.save(transfer",{"_index":668,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{}}}],["queryrunner.release",{"_index":688,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.rollbacktransaction",{"_index":680,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.starttransaction",{"_index":658,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["questions",{"_index":2657,"title":{},"body":{"index.html":{}}}],["randomint",{"_index":2184,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["randomint(1000",{"_index":2192,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["rating",{"_index":842,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["read",{"_index":2694,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":67,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ProductVariantsController.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["real",{"_index":2671,"title":{},"body":{"index.html":{}}}],["record",{"_index":485,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["reduce",{"_index":2158,"title":{},"body":{"injectables/SaveBankTransferProvider.html":{}}}],["reduce((acc",{"_index":1374,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["reference",{"_index":2493,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["referencedcolumnname",{"_index":1521,"title":{},"body":{"entities/Order.html":{},"entities/Payment.html":{}}}],["reflect",{"_index":2596,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":467,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["refresh",{"_index":359,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["refreshing",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":401,"title":{},"body":{"controllers/AuthController.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"classes/RefreshTokenDto.html":{}}}],["refreshtokendto",{"_index":357,"title":{"classes/RefreshTokenDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"coverage.html":{}}}],["refreshtokendto.refreshtoken",{"_index":2081,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["refreshtokenprovider",{"_index":427,"title":{"injectables/RefreshTokenProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenProvider.html":{},"coverage.html":{},"overview.html":{}}}],["refreshtokens",{"_index":339,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenProvider.html":{}}}],["refreshtokens(@body",{"_index":420,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokens(refreshtokendto",{"_index":356,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenProvider.html":{}}}],["regenerate",{"_index":2515,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["registering",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["rejectunauthorized",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["relations",{"_index":1196,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["release",{"_index":687,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["relsease",{"_index":685,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["remove",{"_index":1175,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/UploadToAwsProvider.html":{}}}],["removing",{"_index":1144,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["repository",{"_index":280,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/OrdersService.html":{},"injectables/PaginationProvider.html":{},"injectables/PaymentsService.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["repository.count",{"_index":1643,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["repository.find",{"_index":1626,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["req",{"_index":104,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["request",{"_index":45,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/BankTransfersService.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OrdersService.html":{},"injectables/PaginationProvider.html":{},"injectables/PaymentsService.html":{},"injectables/ProductVariantsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"miscellaneous/variables.html":{}}}],["request.headers.authorization?.split",{"_index":108,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["request.user",{"_index":90,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["request[request_user_key",{"_index":91,"title":{},"body":{"guards/AccessTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["request_user_key",{"_index":61,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":1944,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["requests",{"_index":1655,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["requesttimeoutexception",{"_index":289,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OrdersService.html":{},"injectables/PaymentsService.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["requesttimeoutexception('could",{"_index":659,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["requesttimeoutexception(err",{"_index":1009,"title":{},"body":{"injectables/DeliveryStatesService.html":{},"injectables/OrdersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["requesttimeoutexception(error",{"_index":640,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UsersService.html":{}}}],["required",{"_index":352,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["requiredroles",{"_index":2141,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.some((role",{"_index":2146,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requirements",{"_index":2134,"title":{},"body":{"guards/RolesGuard.html":{}}}],["reserve",{"_index":1949,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["reset",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankTransfersModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/OrdersModule.html":{},"classes/OtpSigninDto.html":{},"modules/PaginationModule.html":{},"modules/PaymentsModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["resetexpires",{"_index":2207,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["resetpassworddto",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpasswordprovider",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetting",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["resfresh",{"_index":2075,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["resource",{"_index":1005,"title":{},"body":{"injectables/DeliveryStatesService.html":{},"guards/RolesGuard.html":{}}}],["resources",{"_index":2650,"title":{},"body":{"index.html":{}}}],["response",{"_index":925,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"injectables/InitiatePaymentProvider.html":{},"interfaces/Paginated.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["response.data",{"_index":1404,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["response.data.data.authorization_url",{"_index":1403,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["response.data.data.metadata",{"_index":2500,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["response.data.data.reference",{"_index":1400,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["response.data.data.status",{"_index":2506,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["response.interceptor",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["response.interceptor.ts",{"_index":923,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"coverage.html":{}}}],["response.interceptor.ts:14",{"_index":929,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["response.interceptor.ts:32",{"_index":932,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["response/data",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataResponseInterceptor.html":{},"coverage.html":{}}}],["respository",{"_index":1128,"title":{},"body":{"injectables/FindAllPaymentsProvider.html":{}}}],["restore",{"_index":1951,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["results",{"_index":109,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"entities/BankTransfer.html":{},"controllers/BankTransfersController.html":{},"modules/BankTransfersModule.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"classes/CreateBankTransferDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetSubscribersBaseDto.html":{},"classes/GetSubscribersDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchOrderDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"controllers/ProductVariantsController.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProductsWithVariantsDto.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["return",{"_index":107,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ProductVariantsController.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":1598,"title":{},"body":{"interfaces/Paginated.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["returns",{"_index":37,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ProductVariantsController.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["review",{"_index":836,"title":{"entities/Review.html":{}},"body":{"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"entities/Product.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"coverage.html":{}}}],["review.dto",{"_index":861,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["review.dto.ts",{"_index":834,"title":{},"body":{"classes/CreateReviewDto.html":{},"coverage.html":{}}}],["review.dto.ts:12",{"_index":847,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.dto.ts:16",{"_index":840,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.dto.ts:20",{"_index":839,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.dto.ts:6",{"_index":841,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.product",{"_index":1835,"title":{},"body":{"entities/Product.html":{}}}],["review.provider",{"_index":2118,"title":{},"body":{"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{}}}],["review.provider.ts",{"_index":853,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"coverage.html":{}}}],["review.provider.ts:29",{"_index":860,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["review.provider.ts:9",{"_index":857,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["reviewer",{"_index":837,"title":{},"body":{"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"entities/Review.html":{}}}],["reviewid",{"_index":2104,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["reviews",{"_index":864,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"entities/Product.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["reviews.controller",{"_index":2117,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["reviews.entity",{"_index":862,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{}}}],["reviews/reviews.module",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["reviewscontroller",{"_index":2097,"title":{"controllers/ReviewsController.html":{}},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"coverage.html":{}}}],["reviewsmodule",{"_index":157,"title":{"modules/ReviewsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ReviewsModule.html":{},"modules.html":{},"overview.html":{}}}],["reviewsrepository",{"_index":858,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/ReviewsService.html":{}}}],["reviewsservice",{"_index":2105,"title":{"injectables/ReviewsService.html":{}},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"coverage.html":{},"overview.html":{}}}],["role",{"_index":119,"title":{},"body":{"interfaces/ActiveUserData.html":{},"controllers/BankTransfersController.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/GenerateTokensProvider.html":{},"controllers/OrdersController.html":{},"injectables/OtpSigninProvider.html":{},"controllers/PaymentsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"controllers/SubscribersController.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["role.admin",{"_index":2140,"title":{},"body":{"guards/RolesGuard.html":{},"controllers/UsersController.html":{}}}],["roles",{"_index":563,"title":{},"body":{"controllers/BankTransfersController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(role.admin",{"_index":588,"title":{},"body":{"controllers/BankTransfersController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentsController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/SubscribersController.html":{}}}],["roles(role.admin)@patch('/:stateid",{"_index":968,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["roles(role.user",{"_index":583,"title":{},"body":{"controllers/BankTransfersController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/UsersController.html":{}}}],["roles_key",{"_index":2137,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":190,"title":{"guards/RolesGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["rollback",{"_index":678,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["rollbackstock",{"_index":1904,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["rollbackstock(variantid",{"_index":1917,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["root",{"_index":2738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root_path",{"_index":1460,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["route",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["routes",{"_index":2739,"title":{"routes.html":{}},"body":{"routes.html":{}}}],["row",{"_index":1935,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["run",{"_index":2638,"title":{},"body":{"index.html":{}}}],["runner",{"_index":653,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["rxjs",{"_index":472,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{},"dependencies.html":{}}}],["s3",{"_index":2326,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["save",{"_index":617,"title":{},"body":{"injectables/BankTransfersService.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["savebanktransfer",{"_index":608,"title":{},"body":{"injectables/BankTransfersService.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["savebanktransfer(createbanktransferdto",{"_index":615,"title":{},"body":{"injectables/BankTransfersService.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["savebanktransferdetails",{"_index":547,"title":{},"body":{"controllers/BankTransfersController.html":{}}}],["savebanktransferdetails(createbanktransferdto",{"_index":553,"title":{},"body":{"controllers/BankTransfersController.html":{}}}],["savebanktransferprovider",{"_index":595,"title":{"injectables/SaveBankTransferProvider.html":{}},"body":{"modules/BankTransfersModule.html":{},"injectables/BankTransfersService.html":{},"injectables/SaveBankTransferProvider.html":{},"coverage.html":{},"overview.html":{}}}],["savedproduct",{"_index":783,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["savedvariants",{"_index":796,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["savedvariants.push(vr",{"_index":804,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["savedvariants[urlsindex",{"_index":814,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["saveproductvariant",{"_index":1905,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["saveproductvariant(variant",{"_index":1919,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["saves",{"_index":1924,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["scalable",{"_index":2630,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1712,"title":{},"body":{"entities/Payment.html":{},"entities/Product.html":{}}}],["sdk",{"_index":2327,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"dependencies.html":{}}}],["secret",{"_index":1264,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["secure",{"_index":1428,"title":{},"body":{"modules/MailModule.html":{}}}],["select",{"_index":1229,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"injectables/PaginationProvider.html":{}}}],["send",{"_index":1593,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["sending",{"_index":1451,"title":{},"body":{"injectables/MailService.html":{}}}],["sendloginotp",{"_index":1442,"title":{},"body":{"injectables/MailService.html":{}}}],["sendloginotp(user",{"_index":1449,"title":{},"body":{"injectables/MailService.html":{}}}],["sendproductpurchasemail",{"_index":1443,"title":{},"body":{"injectables/MailService.html":{}}}],["sendproductpurchasemail(user",{"_index":1452,"title":{},"body":{"injectables/MailService.html":{}}}],["sendresetotp",{"_index":1444,"title":{},"body":{"injectables/MailService.html":{}}}],["sendresetotp(user",{"_index":1454,"title":{},"body":{"injectables/MailService.html":{}}}],["sendsubscribermail",{"_index":1445,"title":{},"body":{"injectables/MailService.html":{}}}],["sendsubscribermail(subscriber",{"_index":1456,"title":{},"body":{"injectables/MailService.html":{}}}],["server",{"_index":2491,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{},"index.html":{}}}],["service",{"_index":302,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/OrdersController.html":{},"injectables/OtpSigninProvider.html":{},"controllers/PaymentsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductVariantsController.html":{},"controllers/ProductsController.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["set",{"_index":1356,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["setlock('pessimistic_write",{"_index":1934,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["setmetadata(auth_type_key",{"_index":2731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(roles_key",{"_index":2734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setting",{"_index":89,"title":{},"body":{"guards/AccessTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["setup",{"_index":2635,"title":{},"body":{"index.html":{}}}],["sevice",{"_index":578,"title":{},"body":{"controllers/BankTransfersController.html":{}}}],["shipped",{"_index":2615,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["shortdescription",{"_index":743,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["side",{"_index":2631,"title":{},"body":{"index.html":{}}}],["sigining",{"_index":2181,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["sign",{"_index":372,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GenerateTokensProvider.html":{},"classes/OtpSigninDto.html":{},"classes/SignInDto.html":{}}}],["signature",{"_index":1787,"title":{},"body":{"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["signed",{"_index":43,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{}}}],["signin",{"_index":340,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/OtpSigninDto.html":{},"injectables/SignInProvider.html":{}}}],["signin(@body",{"_index":411,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(signindto",{"_index":366,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["signin.provider",{"_index":441,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["signin.provider.ts",{"_index":1575,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"coverage.html":{}}}],["signin.provider.ts:21",{"_index":1581,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["signin.provider.ts:8",{"_index":1579,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["signindto",{"_index":367,"title":{"classes/SignInDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"coverage.html":{}}}],["signindto.email",{"_index":2190,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["signindto.role",{"_index":2191,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["signing",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["signinprovider",{"_index":428,"title":{"injectables/SignInProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{},"coverage.html":{},"overview.html":{}}}],["signinwithotp",{"_index":1576,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["signinwithotp(otpsignindto",{"_index":1580,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["signs",{"_index":344,"title":{},"body":{"controllers/AuthController.html":{},"injectables/GenerateTokensProvider.html":{}}}],["signtoken",{"_index":1248,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["signtoken(userid",{"_index":1252,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["size",{"_index":822,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"injectables/FindAllProductsProvider.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{}}}],["sizes",{"_index":1294,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["skip",{"_index":1628,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["sold",{"_index":1940,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["soldout",{"_index":1685,"title":{},"body":{"classes/PatchProductVariantDto.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{}}}],["sort",{"_index":1154,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"classes/PaginationQueryDto.html":{}}}],["sorting",{"_index":1188,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"entities/BankTransfer.html":{},"controllers/BankTransfersController.html":{},"modules/BankTransfersModule.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"classes/CreateBankTransferDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetSubscribersBaseDto.html":{},"classes/GetSubscribersDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchOrderDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"controllers/ProductVariantsController.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProductsWithVariantsDto.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"index.html":{}}}],["spaces",{"_index":2345,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["specific",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{}}}],["specified",{"_index":1928,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["sponsors",{"_index":2690,"title":{},"body":{"index.html":{}}}],["src/.../active",{"_index":2717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":2720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":2603,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../auth.constant.ts",{"_index":2719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.decorator.ts",{"_index":2718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2621,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../order",{"_index":2605,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../paths.config.ts",{"_index":2723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../payment",{"_index":2607,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../paymentstatus.enum.ts",{"_index":2609,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role",{"_index":2610,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role.constant.ts",{"_index":2722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.decorator.ts",{"_index":2721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":125,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":128,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":260,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":261,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:115",{"_index":355,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:155",{"_index":365,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:76",{"_index":371,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":2435,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/auth/auth.module.ts",{"_index":429,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/config/jwt.config",{"_index":60,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["src/auth/constants/auth.constant",{"_index":62,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["src/auth/constants/auth.constant.ts",{"_index":2536,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/constants/role.constant",{"_index":2138,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/constants/role.constant.ts",{"_index":2537,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorator/active",{"_index":570,"title":{},"body":{"controllers/BankTransfersController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorator/auth.decorator",{"_index":976,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"controllers/PaystackController.html":{},"controllers/ProductVariantsController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/SubscribersController.html":{}}}],["src/auth/decorator/auth.decorator.ts",{"_index":2539,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorator/role.decorator",{"_index":564,"title":{},"body":{"controllers/BankTransfersController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["src/auth/decorator/role.decorator.ts",{"_index":2540,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dtos/otpsignin.dto.ts",{"_index":1570,"title":{},"body":{"classes/OtpSigninDto.html":{},"coverage.html":{}}}],["src/auth/dtos/otpsignin.dto.ts:17",{"_index":1572,"title":{},"body":{"classes/OtpSigninDto.html":{}}}],["src/auth/dtos/refresh",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{},"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["src/auth/dtos/sign",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{},"classes/SignInDto.html":{},"coverage.html":{}}}],["src/auth/enums/auth",{"_index":473,"title":{},"body":{"guards/AuthenticationGuard.html":{},"controllers/DeliveryStatesController.html":{},"controllers/PaystackController.html":{},"controllers/ProductVariantsController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/SubscribersController.html":{},"miscellaneous/enumerations.html":{}}}],["src/auth/enums/role",{"_index":565,"title":{},"body":{"controllers/BankTransfersController.html":{},"classes/CreateUserDto.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"guards/RolesGuard.html":{},"controllers/SubscribersController.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{}}}],["src/auth/guards/access",{"_index":6,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{}}}],["src/auth/guards/authentication/authentication.guard.ts",{"_index":461,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/auth/guards/authentication/authentication.guard.ts:33",{"_index":468,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/authentication/authentication.guard.ts:59",{"_index":469,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/roles/roles.guard.ts",{"_index":2129,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles/roles.guard.ts:16",{"_index":2130,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/guards/roles/roles.guard.ts:31",{"_index":2131,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/interfaces/active",{"_index":114,"title":{},"body":{"interfaces/ActiveUserData.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/SaveBankTransferProvider.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts:13",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:43",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:52",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:61",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/generate",{"_index":1244,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"coverage.html":{}}}],["src/auth/providers/otp",{"_index":1574,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"coverage.html":{}}}],["src/auth/providers/refresh",{"_index":2073,"title":{},"body":{"injectables/RefreshTokenProvider.html":{},"coverage.html":{}}}],["src/auth/providers/sign",{"_index":2179,"title":{},"body":{"injectables/SignInProvider.html":{},"coverage.html":{}}}],["src/bank",{"_index":511,"title":{},"body":{"entities/BankTransfer.html":{},"controllers/BankTransfersController.html":{},"modules/BankTransfersModule.html":{},"injectables/BankTransfersService.html":{},"injectables/ConfirmBankTransferProvider.html":{},"classes/CreateBankTransferDto.html":{},"injectables/SaveBankTransferProvider.html":{},"coverage.html":{}}}],["src/common/interceptors/data",{"_index":922,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"coverage.html":{}}}],["src/common/pagination/dtos/pagination",{"_index":1283,"title":{},"body":{"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetSubscribersBaseDto.html":{},"classes/GetSubscribersDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/PaginationQueryDto.html":{},"coverage.html":{}}}],["src/common/pagination/interfaces/paginated.interface",{"_index":1105,"title":{},"body":{"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/OrdersService.html":{},"injectables/PaymentsService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["src/common/pagination/interfaces/paginated.interface.ts",{"_index":1595,"title":{},"body":{"interfaces/Paginated.html":{},"coverage.html":{}}}],["src/common/pagination/pagination.module",{"_index":1557,"title":{},"body":{"modules/OrdersModule.html":{},"modules/PaymentsModule.html":{},"modules/ProductsModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["src/common/pagination/pagination.module.ts",{"_index":1612,"title":{},"body":{"modules/PaginationModule.html":{}}}],["src/common/pagination/providers/pagination.provider",{"_index":1107,"title":{},"body":{"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/UsersService.html":{}}}],["src/common/pagination/providers/pagination.provider.ts",{"_index":1614,"title":{},"body":{"injectables/PaginationProvider.html":{},"coverage.html":{}}}],["src/common/pagination/providers/pagination.provider.ts:14",{"_index":1617,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["src/common/pagination/providers/pagination.provider.ts:34",{"_index":1619,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["src/config/paths.config.ts",{"_index":2549,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/delivery",{"_index":708,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"classes/UpdateDeliveryStateDto.html":{},"coverage.html":{}}}],["src/discounts",{"_index":296,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"entities/DiscountUsage.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"entities/Order.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["src/discounts/discounts.controller.ts",{"_index":1039,"title":{},"body":{"controllers/DiscountsController.html":{},"coverage.html":{}}}],["src/discounts/discounts.controller.ts:21",{"_index":1042,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["src/discounts/discounts.controller.ts:28",{"_index":1041,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["src/discounts/discounts.entity",{"_index":1034,"title":{},"body":{"entities/DiscountUsage.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["src/discounts/discounts.entity.ts",{"_index":1012,"title":{},"body":{"entities/Discount.html":{},"coverage.html":{}}}],["src/discounts/discounts.entity.ts:12",{"_index":1016,"title":{},"body":{"entities/Discount.html":{}}}],["src/discounts/discounts.entity.ts:15",{"_index":1018,"title":{},"body":{"entities/Discount.html":{}}}],["src/discounts/discounts.entity.ts:18",{"_index":1021,"title":{},"body":{"entities/Discount.html":{}}}],["src/discounts/discounts.entity.ts:21",{"_index":1022,"title":{},"body":{"entities/Discount.html":{}}}],["src/discounts/discounts.entity.ts:6",{"_index":1015,"title":{},"body":{"entities/Discount.html":{}}}],["src/discounts/discounts.entity.ts:9",{"_index":1014,"title":{},"body":{"entities/Discount.html":{}}}],["src/discounts/discounts.module.ts",{"_index":1055,"title":{},"body":{"modules/DiscountsModule.html":{}}}],["src/discounts/dtos/apply",{"_index":266,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"coverage.html":{}}}],["src/discounts/dtos/create",{"_index":718,"title":{},"body":{"classes/CreateDiscountDto.html":{},"coverage.html":{}}}],["src/discounts/providers/apply",{"_index":275,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"coverage.html":{}}}],["src/discounts/providers/create",{"_index":725,"title":{},"body":{"injectables/CreateDiscountProvider.html":{},"coverage.html":{}}}],["src/discounts/providers/discounts.service.ts",{"_index":1061,"title":{},"body":{"injectables/DiscountsService.html":{},"coverage.html":{}}}],["src/discounts/providers/discounts.service.ts:27",{"_index":1065,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["src/discounts/providers/discounts.service.ts:39",{"_index":1064,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["src/discounts/providers/discounts.service.ts:9",{"_index":1063,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["src/mail/mail.module",{"_index":2249,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["src/mail/mail.module.ts",{"_index":1408,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/providers/mail.service",{"_index":2185,"title":{},"body":{"injectables/SignInProvider.html":{},"injectables/SubscribersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["src/mail/providers/mail.service.ts",{"_index":1441,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/mail/providers/mail.service.ts:13",{"_index":1448,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/providers/mail.service.ts:30",{"_index":1455,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/providers/mail.service.ts:49",{"_index":1450,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/providers/mail.service.ts:62",{"_index":1453,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/providers/mail.service.ts:83",{"_index":1457,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/templates/loginotp.ejs",{"_index":1479,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/templates/productbought.ejs",{"_index":1483,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/templates/resetotp.ejs",{"_index":1474,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/templates/subscription.ejs",{"_index":1489,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":2553,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/orders/dtos/get",{"_index":1276,"title":{},"body":{"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"coverage.html":{}}}],["src/orders/dtos/patch",{"_index":1661,"title":{},"body":{"classes/PatchOrderDto.html":{},"coverage.html":{}}}],["src/orders/enums/order",{"_index":2612,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/orders/order.entity",{"_index":1035,"title":{},"body":{"entities/DiscountUsage.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["src/orders/order.entity.ts",{"_index":1491,"title":{},"body":{"entities/Order.html":{},"coverage.html":{}}}],["src/orders/order.entity.ts:20",{"_index":1507,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:23",{"_index":1499,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:26",{"_index":1512,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:34",{"_index":1509,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:37",{"_index":1497,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:40",{"_index":1498,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:43",{"_index":1500,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:46",{"_index":1501,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:49",{"_index":1506,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:52",{"_index":1513,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:55",{"_index":1503,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:58",{"_index":1505,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:61",{"_index":1511,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:73",{"_index":1510,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/orders.controller.ts",{"_index":1524,"title":{},"body":{"controllers/OrdersController.html":{},"coverage.html":{}}}],["src/orders/orders.controller.ts:19",{"_index":1536,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.controller.ts:27",{"_index":1532,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.controller.ts:32",{"_index":1529,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.module.ts",{"_index":1553,"title":{},"body":{"modules/OrdersModule.html":{}}}],["src/orders/providers/find",{"_index":1089,"title":{},"body":{"injectables/FindAllOrdersProvider.html":{},"coverage.html":{}}}],["src/orders/providers/orders.service.ts",{"_index":1559,"title":{},"body":{"injectables/OrdersService.html":{},"coverage.html":{}}}],["src/orders/providers/orders.service.ts:15",{"_index":1561,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/providers/orders.service.ts:29",{"_index":1564,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/providers/orders.service.ts:59",{"_index":1563,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/providers/orders.service.ts:88",{"_index":1562,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/payments/dtos/get",{"_index":1287,"title":{},"body":{"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"coverage.html":{}}}],["src/payments/enums/payment",{"_index":1347,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"miscellaneous/enumerations.html":{}}}],["src/payments/enums/paymentstatus.enum",{"_index":649,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["src/payments/enums/paymentstatus.enum.ts",{"_index":2618,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/payments/payment",{"_index":1737,"title":{},"body":{"entities/PaymentVariant.html":{},"entities/ProductVariant.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["src/payments/payment.entity",{"_index":537,"title":{},"body":{"entities/BankTransfer.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/Order.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["src/payments/payment.entity.ts",{"_index":1708,"title":{},"body":{"entities/Payment.html":{},"coverage.html":{}}}],["src/payments/payment.entity.ts:22",{"_index":1717,"title":{},"body":{"entities/Payment.html":{}}}],["src/payments/payment.entity.ts:29",{"_index":1727,"title":{},"body":{"entities/Payment.html":{}}}],["src/payments/payment.entity.ts:32",{"_index":1724,"title":{},"body":{"entities/Payment.html":{}}}],["src/payments/payment.entity.ts:35",{"_index":1726,"title":{},"body":{"entities/Payment.html":{}}}],["src/payments/payment.entity.ts:38",{"_index":1715,"title":{},"body":{"entities/Payment.html":{}}}],["src/payments/payment.entity.ts:41",{"_index":1714,"title":{},"body":{"entities/Payment.html":{}}}],["src/payments/payment.entity.ts:44",{"_index":1729,"title":{},"body":{"entities/Payment.html":{}}}],["src/payments/payment.entity.ts:51",{"_index":1719,"title":{},"body":{"entities/Payment.html":{}}}],["src/payments/payment.entity.ts:54",{"_index":1716,"title":{},"body":{"entities/Payment.html":{}}}],["src/payments/payment.entity.ts:57",{"_index":1728,"title":{},"body":{"entities/Payment.html":{}}}],["src/payments/payment.entity.ts:68",{"_index":1723,"title":{},"body":{"entities/Payment.html":{}}}],["src/payments/payments.controller.ts",{"_index":1751,"title":{},"body":{"controllers/PaymentsController.html":{},"coverage.html":{}}}],["src/payments/payments.controller.ts:18",{"_index":1759,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["src/payments/payments.controller.ts:23",{"_index":1756,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["src/payments/payments.module.ts",{"_index":1771,"title":{},"body":{"modules/PaymentsModule.html":{}}}],["src/payments/providers/find",{"_index":1117,"title":{},"body":{"injectables/FindAllPaymentsProvider.html":{},"coverage.html":{}}}],["src/payments/providers/payments.service.ts",{"_index":1775,"title":{},"body":{"injectables/PaymentsService.html":{},"coverage.html":{}}}],["src/payments/providers/payments.service.ts:14",{"_index":1776,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["src/payments/providers/payments.service.ts:28",{"_index":1779,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["src/payments/providers/payments.service.ts:57",{"_index":1777,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["src/paystack/dtos/initiate",{"_index":705,"title":{},"body":{"classes/CreateBankTransferDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{},"coverage.html":{}}}],["src/paystack/paystack.controller.ts",{"_index":1783,"title":{},"body":{"controllers/PaystackController.html":{},"coverage.html":{}}}],["src/paystack/paystack.controller.ts:31",{"_index":1793,"title":{},"body":{"controllers/PaystackController.html":{}}}],["src/paystack/paystack.controller.ts:41",{"_index":1789,"title":{},"body":{"controllers/PaystackController.html":{}}}],["src/paystack/paystack.module.ts",{"_index":1805,"title":{},"body":{"modules/PaystackModule.html":{}}}],["src/paystack/providers/initiate",{"_index":1324,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"coverage.html":{}}}],["src/paystack/providers/paystack.service.ts",{"_index":1812,"title":{},"body":{"injectables/PaystackService.html":{},"coverage.html":{}}}],["src/paystack/providers/paystack.service.ts:21",{"_index":1816,"title":{},"body":{"injectables/PaystackService.html":{}}}],["src/paystack/providers/paystack.service.ts:31",{"_index":1818,"title":{},"body":{"injectables/PaystackService.html":{}}}],["src/paystack/providers/paystack.service.ts:8",{"_index":1815,"title":{},"body":{"injectables/PaystackService.html":{}}}],["src/paystack/providers/verify",{"_index":2484,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["src/product",{"_index":601,"title":{},"body":{"modules/BankTransfersModule.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"modules/PaystackModule.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"controllers/ProductVariantsController.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"modules/ProductsModule.html":{},"classes/ProductsWithVariantsDto.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["src/products/dtos/createproductdto.ts",{"_index":735,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/products/dtos/createproductdto.ts:15",{"_index":752,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:19",{"_index":753,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:23",{"_index":748,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:27",{"_index":746,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:31",{"_index":749,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:35",{"_index":747,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:39",{"_index":751,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:43",{"_index":745,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:47",{"_index":754,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:51",{"_index":750,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:57",{"_index":756,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/get",{"_index":1291,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"coverage.html":{}}}],["src/products/dtos/patch",{"_index":1670,"title":{},"body":{"classes/PatchProductDto.html":{},"coverage.html":{}}}],["src/products/product.entity",{"_index":1462,"title":{},"body":{"injectables/MailService.html":{},"entities/Order.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{}}}],["src/products/product.entity.ts",{"_index":1823,"title":{},"body":{"entities/Product.html":{},"coverage.html":{}}}],["src/products/product.entity.ts:17",{"_index":1830,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:20",{"_index":1833,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:23",{"_index":1834,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:26",{"_index":1828,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:29",{"_index":1825,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:32",{"_index":1829,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:35",{"_index":1826,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:38",{"_index":1832,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:41",{"_index":1824,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:44",{"_index":1838,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:47",{"_index":1831,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:53",{"_index":1841,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:59",{"_index":1837,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:62",{"_index":1827,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:65",{"_index":1839,"title":{},"body":{"entities/Product.html":{}}}],["src/products/products.controller.ts",{"_index":1965,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/products/products.controller.ts:132",{"_index":1990,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:144",{"_index":2008,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:159",{"_index":1976,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:167",{"_index":2004,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:59",{"_index":1973,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:99",{"_index":1998,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.module",{"_index":1809,"title":{},"body":{"modules/PaystackModule.html":{},"modules/ReviewsModule.html":{}}}],["src/products/products.module.ts",{"_index":2046,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/providers/create",{"_index":766,"title":{},"body":{"injectables/CreateProductProvider.html":{},"coverage.html":{}}}],["src/products/providers/find",{"_index":1133,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"coverage.html":{}}}],["src/products/providers/products.service",{"_index":863,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["src/products/providers/products.service.ts",{"_index":2052,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/products/providers/products.service.ts:106",{"_index":2057,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:18",{"_index":2055,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:49",{"_index":2056,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:61",{"_index":2059,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:82",{"_index":2058,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:94",{"_index":2061,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/update",{"_index":2273,"title":{},"body":{"injectables/UpdateProductProvider.html":{},"coverage.html":{}}}],["src/reviews/dtos/create",{"_index":833,"title":{},"body":{"classes/CreateReviewDto.html":{},"coverage.html":{}}}],["src/reviews/providers/create",{"_index":852,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"coverage.html":{}}}],["src/reviews/providers/reviews.service.ts",{"_index":2120,"title":{},"body":{"injectables/ReviewsService.html":{},"coverage.html":{}}}],["src/reviews/providers/reviews.service.ts:29",{"_index":2124,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/providers/reviews.service.ts:45",{"_index":2126,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/providers/reviews.service.ts:9",{"_index":2123,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/reviews.controller.ts",{"_index":2098,"title":{},"body":{"controllers/ReviewsController.html":{},"coverage.html":{}}}],["src/reviews/reviews.controller.ts:33",{"_index":2100,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/reviews/reviews.controller.ts:52",{"_index":2103,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/reviews/reviews.entity",{"_index":1842,"title":{},"body":{"entities/Product.html":{}}}],["src/reviews/reviews.entity.ts",{"_index":2085,"title":{},"body":{"entities/Review.html":{},"coverage.html":{}}}],["src/reviews/reviews.entity.ts:14",{"_index":2087,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.entity.ts:17",{"_index":2092,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.entity.ts:20",{"_index":2091,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.entity.ts:24",{"_index":2094,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.entity.ts:27",{"_index":2086,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.entity.ts:30",{"_index":2089,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.module.ts",{"_index":2116,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["src/subscribers/dtos/create",{"_index":882,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/dtos/get",{"_index":1306,"title":{},"body":{"classes/GetSubscribersBaseDto.html":{},"classes/GetSubscribersDto.html":{},"coverage.html":{}}}],["src/subscribers/providers/find",{"_index":1202,"title":{},"body":{"injectables/FindAllSubscribersProvider.html":{},"coverage.html":{}}}],["src/subscribers/providers/subscribers.service.ts",{"_index":2253,"title":{},"body":{"injectables/SubscribersService.html":{},"coverage.html":{}}}],["src/subscribers/providers/subscribers.service.ts:14",{"_index":2257,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/providers/subscribers.service.ts:43",{"_index":2259,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/providers/subscribers.service.ts:62",{"_index":2264,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/providers/subscribers.service.ts:73",{"_index":2262,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscriber.entity",{"_index":1463,"title":{},"body":{"injectables/MailService.html":{}}}],["src/subscribers/subscriber.entity.ts",{"_index":2211,"title":{},"body":{"entities/Subscriber.html":{},"coverage.html":{}}}],["src/subscribers/subscriber.entity.ts:17",{"_index":2215,"title":{},"body":{"entities/Subscriber.html":{}}}],["src/subscribers/subscriber.entity.ts:9",{"_index":2216,"title":{},"body":{"entities/Subscriber.html":{}}}],["src/subscribers/subscribers.controller.ts",{"_index":2218,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.controller.ts:25",{"_index":2225,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:31",{"_index":2228,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:37",{"_index":2232,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.module.ts",{"_index":2248,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["src/uploads/providers/upload",{"_index":2314,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"coverage.html":{}}}],["src/uploads/providers/uploads.service",{"_index":777,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["src/uploads/providers/uploads.service.ts",{"_index":2360,"title":{},"body":{"injectables/UploadsService.html":{},"coverage.html":{}}}],["src/uploads/providers/uploads.service.ts:10",{"_index":2363,"title":{},"body":{"injectables/UploadsService.html":{}}}],["src/uploads/providers/uploads.service.ts:33",{"_index":2365,"title":{},"body":{"injectables/UploadsService.html":{}}}],["src/uploads/uploads.module",{"_index":602,"title":{},"body":{"modules/BankTransfersModule.html":{},"modules/ProductsModule.html":{}}}],["src/uploads/uploads.module.ts",{"_index":2356,"title":{},"body":{"modules/UploadsModule.html":{}}}],["src/users/dtos/create",{"_index":896,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/get",{"_index":1309,"title":{},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"coverage.html":{}}}],["src/users/dtos/patch",{"_index":1692,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["src/users/providers/clear",{"_index":624,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"coverage.html":{}}}],["src/users/providers/create",{"_index":906,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"coverage.html":{}}}],["src/users/providers/find",{"_index":1213,"title":{},"body":{"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"coverage.html":{}}}],["src/users/providers/store",{"_index":2200,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{},"coverage.html":{}}}],["src/users/providers/users.service",{"_index":1343,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["src/users/providers/users.service.ts",{"_index":2444,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/providers/users.service.ts:106",{"_index":2467,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:115",{"_index":2465,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:126",{"_index":2454,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:135",{"_index":2463,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:144",{"_index":2459,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:168",{"_index":2456,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:179",{"_index":2469,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:27",{"_index":2452,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:87",{"_index":2455,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:96",{"_index":2461,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/user.entity",{"_index":1036,"title":{},"body":{"entities/DiscountUsage.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["src/users/user.entity.ts",{"_index":2378,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/user.entity.ts:10",{"_index":2384,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:17",{"_index":2383,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:24",{"_index":2385,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:31",{"_index":2389,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:38",{"_index":2381,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:45",{"_index":2391,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:52",{"_index":2380,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:59",{"_index":2392,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:64",{"_index":2393,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:72",{"_index":2382,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:79",{"_index":2390,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:86",{"_index":2386,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:92",{"_index":2387,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.controller.ts",{"_index":2395,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:111",{"_index":2410,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:117",{"_index":2417,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:156",{"_index":2404,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:67",{"_index":2414,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":432,"title":{},"body":{"modules/AuthModule.html":{},"modules/PaystackModule.html":{}}}],["src/users/users.module.ts",{"_index":2433,"title":{},"body":{"modules/UsersModule.html":{}}}],["ssl",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["stamp",{"_index":2350,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["star",{"_index":849,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["star'})@max(5",{"_index":844,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["stars",{"_index":838,"title":{},"body":{"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"entities/Review.html":{}}}],["start",{"_index":650,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"index.html":{}}}],["start:dev",{"_index":2641,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":2642,"title":{},"body":{"index.html":{}}}],["startdate",{"_index":1311,"title":{},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["started",{"_index":2624,"title":{"index.html":{}},"body":{}}],["starter",{"_index":2633,"title":{},"body":{"index.html":{}}}],["state",{"_index":712,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["state.dto",{"_index":975,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"classes/UpdateDeliveryStateDto.html":{}}}],["state.dto.ts",{"_index":710,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"classes/UpdateDeliveryStateDto.html":{},"coverage.html":{}}}],["state.dto.ts:10",{"_index":714,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{}}}],["state.dto.ts:6",{"_index":715,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{}}}],["state.entity",{"_index":992,"title":{},"body":{"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{}}}],["state.entity.ts",{"_index":944,"title":{},"body":{"entities/DeliveryState.html":{},"coverage.html":{}}}],["state.entity.ts:13",{"_index":947,"title":{},"body":{"entities/DeliveryState.html":{}}}],["state.entity.ts:16",{"_index":948,"title":{},"body":{"entities/DeliveryState.html":{}}}],["state.entity.ts:19",{"_index":946,"title":{},"body":{"entities/DeliveryState.html":{}}}],["state.entity.ts:22",{"_index":945,"title":{},"body":{"entities/DeliveryState.html":{}}}],["stateid",{"_index":970,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{}}}],["statements",{"_index":2531,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":956,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{}}}],["states.controller",{"_index":991,"title":{},"body":{"modules/DeliveryStatesModule.html":{}}}],["states.controller.ts",{"_index":955,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"coverage.html":{}}}],["states.controller.ts:25",{"_index":962,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["states.controller.ts:40",{"_index":965,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["states.controller.ts:51",{"_index":969,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["states.module",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["states.module.ts",{"_index":990,"title":{},"body":{"modules/DeliveryStatesModule.html":{}}}],["states.service",{"_index":974,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{}}}],["states.service.ts",{"_index":995,"title":{},"body":{"injectables/DeliveryStatesService.html":{},"coverage.html":{}}}],["states.service.ts:13",{"_index":998,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["states.service.ts:27",{"_index":1000,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["states.service.ts:54",{"_index":1002,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["states.service.ts:84",{"_index":1003,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["states/delivery",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"coverage.html":{}}}],["states/dtos/create",{"_index":709,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"coverage.html":{}}}],["states/dtos/update",{"_index":2272,"title":{},"body":{"classes/UpdateDeliveryStateDto.html":{},"coverage.html":{}}}],["states/providers/delivery",{"_index":994,"title":{},"body":{"injectables/DeliveryStatesService.html":{},"coverage.html":{}}}],["static",{"_index":464,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["status",{"_index":397,"title":{},"body":{"controllers/AuthController.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["status.enum",{"_index":1517,"title":{},"body":{"entities/Order.html":{},"classes/PatchOrderDto.html":{}}}],["status.enum.ts",{"_index":2606,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stay",{"_index":2677,"title":{},"body":{"index.html":{}}}],["stock",{"_index":1947,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["store",{"_index":2195,"title":{},"body":{"injectables/SignInProvider.html":{},"injectables/UsersService.html":{}}}],["stored",{"_index":1233,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UsersService.html":{}}}],["storedimagesurls",{"_index":790,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["storedimagesurls.push(urls",{"_index":795,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["storeotpandexpire",{"_index":2203,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["storeotpandexpire(user",{"_index":2205,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["storeotpandexpireprovider",{"_index":2199,"title":{"injectables/StoreOtpAndExpireProvider.html":{}},"body":{"injectables/StoreOtpAndExpireProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["storeotpandexpiresprovider",{"_index":2450,"title":{},"body":{"injectables/UsersService.html":{}}}],["storetokenotpandotpexpire",{"_index":2447,"title":{},"body":{"injectables/UsersService.html":{}}}],["storetokenotpandotpexpire(user",{"_index":2466,"title":{},"body":{"injectables/UsersService.html":{}}}],["storing",{"_index":2202,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{},"injectables/UsersService.html":{}}}],["streetaddress",{"_index":1698,"title":{},"body":{"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["strict",{"_index":1440,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":49,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"entities/BankTransfer.html":{},"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"injectables/ConfirmBankTransferProvider.html":{},"classes/CreateBankTransferDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"interfaces/Paginated.html":{},"classes/PatchOrderDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ProductsWithVariantsDto.html":{},"classes/RefreshTokenDto.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/SignInDto.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"miscellaneous/variables.html":{}}}],["string(error",{"_index":683,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["style",{"_index":1301,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["sub",{"_index":120,"title":{},"body":{"interfaces/ActiveUserData.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["subject",{"_index":1469,"title":{},"body":{"injectables/MailService.html":{}}}],["submits",{"_index":579,"title":{},"body":{"controllers/BankTransfersController.html":{}}}],["submitted",{"_index":2174,"title":{},"body":{"injectables/SaveBankTransferProvider.html":{}}}],["subscribe",{"_index":1458,"title":{},"body":{"injectables/MailService.html":{}}}],["subscribed",{"_index":2261,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["subscriber",{"_index":885,"title":{"entities/Subscriber.html":{}},"body":{"classes/CreateSubscriberDto.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/MailService.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{}}}],["subscriber.dto",{"_index":2233,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["subscriber.dto.ts",{"_index":883,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"coverage.html":{}}}],["subscriber.dto.ts:18",{"_index":888,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.email",{"_index":1486,"title":{},"body":{"injectables/MailService.html":{}}}],["subscriber.entity",{"_index":1209,"title":{},"body":{"injectables/FindAllSubscribersProvider.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{}}}],["subscriber.id",{"_index":1490,"title":{},"body":{"injectables/MailService.html":{}}}],["subscriberid",{"_index":2229,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["subscriberquery",{"_index":1208,"title":{},"body":{"injectables/FindAllSubscribersProvider.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["subscriberrepository",{"_index":2258,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["subscribers",{"_index":2219,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["subscribers.controller",{"_index":2250,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["subscribers.dto",{"_index":1210,"title":{},"body":{"injectables/FindAllSubscribersProvider.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["subscribers.dto.ts",{"_index":1307,"title":{},"body":{"classes/GetSubscribersBaseDto.html":{},"classes/GetSubscribersDto.html":{},"coverage.html":{}}}],["subscribers.provider",{"_index":2251,"title":{},"body":{"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{}}}],["subscribers.provider.ts",{"_index":1203,"title":{},"body":{"injectables/FindAllSubscribersProvider.html":{},"coverage.html":{}}}],["subscribers.provider.ts:10",{"_index":1204,"title":{},"body":{"injectables/FindAllSubscribersProvider.html":{}}}],["subscribers.provider.ts:29",{"_index":1207,"title":{},"body":{"injectables/FindAllSubscribersProvider.html":{}}}],["subscribers/subscribers.module",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["subscriberscontroller",{"_index":2217,"title":{"controllers/SubscribersController.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"coverage.html":{}}}],["subscriberservice",{"_index":2237,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["subscribersmodule",{"_index":158,"title":{"modules/SubscribersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SubscribersModule.html":{},"modules.html":{},"overview.html":{}}}],["subscribersservice",{"_index":2234,"title":{"injectables/SubscribersService.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"overview.html":{}}}],["success",{"_index":2507,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{},"miscellaneous/enumerations.html":{}}}],["successful",{"_index":670,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["successfully",{"_index":348,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ConfirmBankTransferProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["summary",{"_index":396,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["support",{"_index":1467,"title":{},"body":{"injectables/MailService.html":{},"index.html":{},"modules.html":{}}}],["supported",{"_index":2373,"title":{},"body":{"injectables/UploadsService.html":{}}}],["svg",{"_index":2705,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["t",{"_index":1254,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["table",{"_index":2212,"title":{},"body":{"entities/Subscriber.html":{},"entities/User.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2574,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1631,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["team",{"_index":1468,"title":{},"body":{"injectables/MailService.html":{}}}],["template",{"_index":1434,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["templates",{"_index":1437,"title":{},"body":{"modules/MailModule.html":{}}}],["test",{"_index":2645,"title":{},"body":{"index.html":{}}}],["test:covresources",{"_index":2648,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":2647,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2643,"title":{},"body":{"index.html":{}}}],["tf",{"_index":557,"title":{},"body":{"controllers/BankTransfersController.html":{}}}],["thanks",{"_index":2689,"title":{},"body":{"index.html":{}}}],["this.accesstokenguard",{"_index":486,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.applyfordiscountprovider.applyfordiscount(user",{"_index":1069,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["this.appservice.gethello",{"_index":132,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.otpsignin(otpsignindto",{"_index":417,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.refreshtokens(refreshtokendto",{"_index":422,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signin(signindto",{"_index":412,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authtypeguardmap[type]).flat",{"_index":501,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.banktransferrepository.findone",{"_index":621,"title":{},"body":{"injectables/BankTransfersService.html":{}}}],["this.banktransfersservice.confirmbanktransfer(transferid",{"_index":590,"title":{},"body":{"controllers/BankTransfersController.html":{}}}],["this.banktransfersservice.savebanktransfer",{"_index":585,"title":{},"body":{"controllers/BankTransfersController.html":{}}}],["this.category",{"_index":1845,"title":{},"body":{"entities/Product.html":{}}}],["this.category.tolowercase",{"_index":1846,"title":{},"body":{"entities/Product.html":{}}}],["this.clearotpandexpirytimeprovider.clearotpandexpirytime(user",{"_index":2476,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.clothtype",{"_index":1849,"title":{},"body":{"entities/Product.html":{}}}],["this.clothtype.tolowercase",{"_index":1850,"title":{},"body":{"entities/Product.html":{}}}],["this.configservice.get('appconfig.apiversion",{"_index":942,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["this.configservice.get('appconfig.awsbucketname",{"_index":2338,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["this.configservice.get('appconfig.awscloudfronturl')}/${name",{"_index":2376,"title":{},"body":{"injectables/UploadsService.html":{}}}],["this.configservice.get('appconfig.host')}/collections?success=yes",{"_index":1392,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["this.confirmbanktransferprovider.confirmbanktransfer",{"_index":620,"title":{},"body":{"injectables/BankTransfersService.html":{}}}],["this.creatediscountprovider.creatediscount(creatediscountdto",{"_index":1068,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["this.createproductprovider.createproduct(createproductdto",{"_index":2062,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.createreviewprovider.createreview(createreviewdto",{"_index":2127,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.createuserprovider.createuser(createuserdto",{"_index":2472,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.datasource.createqueryrunner",{"_index":655,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["this.deliverystaterepository.create(createdeliverystatedto",{"_index":1006,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["this.deliverystaterepository.findoneby",{"_index":1008,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["this.deliverystaterepository.save(deliverystate",{"_index":1007,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["this.deliverystatesservice.createdeliverystate",{"_index":979,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["this.deliverystatesservice.finddeliverystatebyname(state",{"_index":983,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["this.deliverystatesservice.updatedeliverystate",{"_index":987,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["this.discountsrepository.create(creatediscountdto",{"_index":732,"title":{},"body":{"injectables/CreateDiscountProvider.html":{}}}],["this.discountsrepository.findone",{"_index":308,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["this.discountsrepository.save(discount",{"_index":733,"title":{},"body":{"injectables/CreateDiscountProvider.html":{}}}],["this.discountsservice.applyfordiscount",{"_index":1050,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["this.discountsservice.creatediscount(creatediscountdto",{"_index":1048,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["this.discountsusagerepository.count",{"_index":1087,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["this.discountsusageservice.countdiscountusage",{"_index":328,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["this.dressstyle",{"_index":1847,"title":{},"body":{"entities/Product.html":{}}}],["this.dressstyle.tolowercase",{"_index":1848,"title":{},"body":{"entities/Product.html":{}}}],["this.extractrequestfromheader(request",{"_index":77,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.findallordersprovider.findall(orderquery",{"_index":1569,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.findallpaymentsprovider.findall(orderquery",{"_index":1781,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["this.findallproductsprovider.findall(productquery",{"_index":2065,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.findallsubscribersproviders.findall(subscriberquery",{"_index":2271,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.findonebyidprovider.findbyid(id",{"_index":2477,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.findoneuserbyemailprovider.findonebyemail(email",{"_index":2473,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.finduserbyotpandexpiresprovider.finduserbyotpandexpirytime",{"_index":2475,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.generatetokenprovider.generatetokens(user",{"_index":1594,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["this.getauthheader",{"_index":1396,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["this.initiatepaymentprovider.initializepayment",{"_index":1821,"title":{},"body":{"injectables/PaystackService.html":{}}}],["this.jwtconfiguration",{"_index":88,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.jwtconfiguration.accesstokenttl",{"_index":1270,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.jwtconfiguration.audience",{"_index":1261,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["this.jwtconfiguration.issuer",{"_index":1263,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["this.jwtconfiguration.refreshtokenttl",{"_index":1274,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.jwtconfiguration.secret",{"_index":1265,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["this.jwtservice.signasync",{"_index":1259,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.jwtservice.verify",{"_index":87,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.jwtservice.verifyasync",{"_index":2080,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["this.mailerservice.sendmail",{"_index":1464,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailservice.sendloginotp(user",{"_index":2197,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.mailservice.sendproductpurchasemail(user",{"_index":2513,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["this.mailservice.sendsubscribermail(subscriber",{"_index":2269,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.name",{"_index":1843,"title":{},"body":{"entities/Product.html":{}}}],["this.name.tolowercase",{"_index":1844,"title":{},"body":{"entities/Product.html":{}}}],["this.ordersrepository",{"_index":1114,"title":{},"body":{"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllSubscribersProvider.html":{}}}],["this.ordersrepository.findone",{"_index":1568,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordersrepository.findoneby",{"_index":1565,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordersrepository.save(order",{"_index":1567,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordersservice.findall(orderquery",{"_index":1548,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.ordersservice.findorderbyid(orderid",{"_index":1546,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.ordersservice.updateorder(patchorderdto",{"_index":1544,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.otpsigninprovider.signinwithotp(otpsignindto",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.paginationprovider.paginationquery",{"_index":1113,"title":{},"body":{"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/UsersService.html":{}}}],["this.paymentrepository",{"_index":1131,"title":{},"body":{"injectables/FindAllPaymentsProvider.html":{}}}],["this.paymentrepository.findone",{"_index":1780,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["this.paymentsservice.findall(orderquery",{"_index":1767,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["this.paymentsservice.findorderbyid(paymentid",{"_index":1765,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["this.paystackconfiguration.baseurl}/transaction/initialize",{"_index":1389,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["this.paystackconfiguration.baseurl}/transaction/verify/${reference",{"_index":2499,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["this.paystackconfiguration.secret",{"_index":1351,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["this.paystackservice.initiatepayment(initiatepaymentdto",{"_index":1797,"title":{},"body":{"controllers/PaystackController.html":{}}}],["this.paystackservice.verifypayment(body",{"_index":1800,"title":{},"body":{"controllers/PaystackController.html":{}}}],["this.productrepository",{"_index":1199,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["this.productrepository.delete(productid",{"_index":2067,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productrepository.findone",{"_index":2277,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["this.productrepository.findoneby",{"_index":2063,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productrepository.save(product",{"_index":2300,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["this.productsservice.createproduct(createproductdto",{"_index":2023,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.deleteproduct(productid",{"_index":2038,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findall(productquery",{"_index":2031,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findproductbyid",{"_index":866,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["this.productsservice.findproductbyid(prdid",{"_index":2504,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["this.productsservice.findproductbyid(productid",{"_index":2029,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.updateproduct(productid",{"_index":2034,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productvariantrepository.findone",{"_index":1922,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["this.productvariantrepository.save(variant",{"_index":1925,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["this.productvariantsservice.checkvariantavailability",{"_index":1386,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["this.productvariantsservice.checkvvariantavailabilityfortransfers",{"_index":1893,"title":{},"body":{"controllers/ProductVariantsController.html":{}}}],["this.productvariantsservice.findproductvariantbyid",{"_index":2303,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["this.productvariantsservice.rollbackstock",{"_index":2511,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["this.productvariantsservice.saveproductvariant(variant",{"_index":2312,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["this.reflector.getallandoverride(auth_type_key",{"_index":495,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.reflector.getallandoverride(roles_key",{"_index":2142,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.refreshtokenprovider.refreshtokens(refreshtokendto",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.request.headers.host",{"_index":1639,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["this.request.protocol",{"_index":1638,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["this.reviewsrepository.create",{"_index":869,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["this.reviewsrepository.delete(reviewid",{"_index":2128,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.reviewsrepository.save(newreview",{"_index":873,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["this.reviewsservice.createreview(createreviewdto",{"_index":2109,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.reviewsservice.deletereview(reviewid",{"_index":2112,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.savebanktransferprovider.savebanktransfer",{"_index":619,"title":{},"body":{"injectables/BankTransfersService.html":{}}}],["this.signinprovider.signin(signindto",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.signtoken",{"_index":1268,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.signtoken(user.id",{"_index":1273,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.state",{"_index":952,"title":{},"body":{"entities/DeliveryState.html":{}}}],["this.state.tolowercase",{"_index":953,"title":{},"body":{"entities/DeliveryState.html":{}}}],["this.storeotpandexpiresprovider.storeotpandexpire(user",{"_index":2474,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.subscriberrepository.create(createsubscriberdto",{"_index":2267,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscriberrepository.delete(id",{"_index":2270,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscriberrepository.save(subscriber",{"_index":2268,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscriberservice.createsubscriber(createsubscriberdto",{"_index":2239,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscriberservice.findallsubscribers(subscriberquery",{"_index":2244,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscriberservice.unsubscribeemail(subscriberid",{"_index":2242,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.updateproductprovider.updateproduct(id",{"_index":2066,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.uploadsservice.uploadfile(file",{"_index":793,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["this.uploadtoawsprovider.fileupload(file",{"_index":2375,"title":{},"body":{"injectables/UploadsService.html":{}}}],["this.usersrepository",{"_index":2480,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.create",{"_index":917,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["this.usersrepository.delete(userid",{"_index":2481,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.find",{"_index":1239,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["this.usersrepository.findone",{"_index":1228,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{}}}],["this.usersrepository.findoneby",{"_index":1221,"title":{},"body":{"injectables/FindOneByIdProvider.html":{},"injectables/UsersService.html":{}}}],["this.usersrepository.save(newuser",{"_index":918,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["this.usersrepository.save(newuserobj",{"_index":639,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{}}}],["this.usersrepository.save(user",{"_index":2483,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.clearotpandexpirytime(user",{"_index":1592,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["this.usersservice.createuser",{"_index":2189,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.usersservice.deleteuser(userid",{"_index":2428,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(usersquery",{"_index":2424,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyemail(signindto.email",{"_index":2187,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.usersservice.findonebyid(sub",{"_index":2083,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["this.usersservice.findonebyid(user.sub",{"_index":1353,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["this.usersservice.findonebyid(userid",{"_index":2422,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.finduserbyresetotpandexpirytime(hashedotp",{"_index":1590,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["this.usersservice.storetokenotpandotpexpire(user",{"_index":2196,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.usersservice.updateuser(user.sub",{"_index":2425,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.verifypayment(data.reference",{"_index":2523,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["this.verifypaymentprovider.paymentwebhook",{"_index":1822,"title":{},"body":{"injectables/PaystackService.html":{}}}],["through",{"_index":503,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["throw",{"_index":78,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"guards/AuthenticationGuard.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OrdersService.html":{},"injectables/PaymentsService.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["ticket",{"_index":1465,"title":{},"body":{"injectables/MailService.html":{}}}],["time",{"_index":1190,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["time.provider",{"_index":2440,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["time.provider.ts",{"_index":626,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"coverage.html":{}}}],["time.provider.ts:14",{"_index":1235,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["time.provider.ts:25",{"_index":632,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{}}}],["time.provider.ts:32",{"_index":1237,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["time.provider.ts:7",{"_index":629,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{}}}],["times",{"_index":306,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsService.html":{}}}],["timestamp",{"_index":1020,"title":{},"body":{"entities/Discount.html":{},"injectables/OtpSigninProvider.html":{},"injectables/UploadToAwsProvider.html":{},"entities/User.html":{}}}],["tls",{"_index":1431,"title":{},"body":{"modules/MailModule.html":{}}}],["token",{"_index":11,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"controllers/ProductsController.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["token.dto",{"_index":387,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenProvider.html":{}}}],["token.dto.ts",{"_index":2069,"title":{},"body":{"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["token.dto.ts:17",{"_index":2071,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["token.guard",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{}}}],["token.guard.ts",{"_index":8,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{}}}],["token.guard.ts:18",{"_index":24,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard.ts:42",{"_index":32,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard.ts:77",{"_index":46,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.provider",{"_index":439,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["token.provider.ts",{"_index":2074,"title":{},"body":{"injectables/RefreshTokenProvider.html":{},"coverage.html":{}}}],["token.provider.ts:19",{"_index":2076,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["token.provider.ts:56",{"_index":2077,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["token/access",{"_index":7,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["tokend",{"_index":2078,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["tokens",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["tokens')@httpcode(httpstatus.ok)@auth(authtype.none",{"_index":364,"title":{},"body":{"controllers/AuthController.html":{}}}],["tokens'})@apiresponse({status",{"_index":360,"title":{},"body":{"controllers/AuthController.html":{}}}],["tokens.provider",{"_index":436,"title":{},"body":{"modules/AuthModule.html":{},"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["tokens.provider.ts",{"_index":1245,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"coverage.html":{}}}],["tokens.provider.ts:12",{"_index":1249,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["tokens.provider.ts:38",{"_index":1255,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["tokens.provider.ts:58",{"_index":1251,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["top",{"_index":2279,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["total",{"_index":1365,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["totalamount",{"_index":1366,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Order.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["totalitems",{"_index":1602,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["totalpages",{"_index":1604,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["totalqty",{"_index":1370,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["touch",{"_index":2695,"title":{},"body":{"index.html":{}}}],["track",{"_index":1472,"title":{},"body":{"injectables/MailService.html":{}}}],["transaction",{"_index":651,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["transfer",{"_index":559,"title":{},"body":{"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"miscellaneous/enumerations.html":{}}}],["transfer')@roles(role.admin",{"_index":550,"title":{},"body":{"controllers/BankTransfersController.html":{}}}],["transfer.dto",{"_index":568,"title":{},"body":{"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["transfer.dto.ts",{"_index":690,"title":{},"body":{"classes/CreateBankTransferDto.html":{},"coverage.html":{}}}],["transfer.entity",{"_index":598,"title":{},"body":{"modules/BankTransfersModule.html":{},"injectables/BankTransfersService.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["transfer.entity.ts",{"_index":512,"title":{},"body":{"entities/BankTransfer.html":{},"coverage.html":{}}}],["transfer.entity.ts:15",{"_index":526,"title":{},"body":{"entities/BankTransfer.html":{}}}],["transfer.entity.ts:18",{"_index":536,"title":{},"body":{"entities/BankTransfer.html":{}}}],["transfer.entity.ts:21",{"_index":527,"title":{},"body":{"entities/BankTransfer.html":{}}}],["transfer.entity.ts:24",{"_index":524,"title":{},"body":{"entities/BankTransfer.html":{}}}],["transfer.entity.ts:27",{"_index":535,"title":{},"body":{"entities/BankTransfer.html":{}}}],["transfer.entity.ts:30",{"_index":522,"title":{},"body":{"entities/BankTransfer.html":{}}}],["transfer.entity.ts:34",{"_index":533,"title":{},"body":{"entities/BankTransfer.html":{}}}],["transfer.entity.ts:37",{"_index":529,"title":{},"body":{"entities/BankTransfer.html":{}}}],["transfer.isconfirmed",{"_index":665,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{}}}],["transfer.payment.id",{"_index":664,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{}}}],["transfer.provider",{"_index":600,"title":{},"body":{"modules/BankTransfersModule.html":{},"injectables/BankTransfersService.html":{}}}],["transfer.provider.ts",{"_index":642,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"coverage.html":{}}}],["transfer.provider.ts:13",{"_index":645,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{}}}],["transfer.provider.ts:21",{"_index":646,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{}}}],["transfer.provider.ts:23",{"_index":2149,"title":{},"body":{"injectables/SaveBankTransferProvider.html":{}}}],["transfer.provider.ts:41",{"_index":2150,"title":{},"body":{"injectables/SaveBankTransferProvider.html":{}}}],["transferid",{"_index":552,"title":{},"body":{"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"injectables/ConfirmBankTransferProvider.html":{}}}],["transfers",{"_index":545,"title":{},"body":{"controllers/BankTransfersController.html":{}}}],["transfers.controller",{"_index":597,"title":{},"body":{"modules/BankTransfersModule.html":{}}}],["transfers.controller.ts",{"_index":544,"title":{},"body":{"controllers/BankTransfersController.html":{},"coverage.html":{}}}],["transfers.controller.ts:37",{"_index":558,"title":{},"body":{"controllers/BankTransfersController.html":{}}}],["transfers.controller.ts:52",{"_index":551,"title":{},"body":{"controllers/BankTransfersController.html":{}}}],["transfers.module",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["transfers.module.ts",{"_index":596,"title":{},"body":{"modules/BankTransfersModule.html":{}}}],["transfers.service",{"_index":576,"title":{},"body":{"controllers/BankTransfersController.html":{},"modules/BankTransfersModule.html":{}}}],["transfers.service.ts",{"_index":606,"title":{},"body":{"injectables/BankTransfersService.html":{},"coverage.html":{}}}],["transfers.service.ts:15",{"_index":611,"title":{},"body":{"injectables/BankTransfersService.html":{}}}],["transfers.service.ts:34",{"_index":616,"title":{},"body":{"injectables/BankTransfersService.html":{}}}],["transfers.service.ts:46",{"_index":612,"title":{},"body":{"injectables/BankTransfersService.html":{}}}],["transfers.service.ts:52",{"_index":614,"title":{},"body":{"injectables/BankTransfersService.html":{}}}],["transfers/${buyer.firstname",{"_index":2156,"title":{},"body":{"injectables/SaveBankTransferProvider.html":{}}}],["transfers/bank",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"entities/BankTransfer.html":{},"controllers/BankTransfersController.html":{},"modules/BankTransfersModule.html":{},"coverage.html":{}}}],["transfers/dtos/create",{"_index":689,"title":{},"body":{"classes/CreateBankTransferDto.html":{},"coverage.html":{}}}],["transfers/providers/bank",{"_index":605,"title":{},"body":{"injectables/BankTransfersService.html":{},"coverage.html":{}}}],["transfers/providers/confirm",{"_index":641,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"coverage.html":{}}}],["transfers/providers/save",{"_index":2148,"title":{},"body":{"injectables/SaveBankTransferProvider.html":{},"coverage.html":{}}}],["transformer",{"_index":757,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"classes/ProductsWithVariantsDto.html":{},"dependencies.html":{}}}],["transformtolowercase",{"_index":951,"title":{},"body":{"entities/DeliveryState.html":{},"entities/Product.html":{}}}],["transport",{"_index":1427,"title":{},"body":{"modules/MailModule.html":{}}}],["trim",{"_index":2347,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["true",{"_index":39,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"entities/BankTransfer.html":{},"injectables/ConfirmBankTransferProvider.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"classes/InitiatePaymentDto.html":{},"modules/MailModule.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"controllers/ProductsController.html":{},"classes/ProductsWithVariantsDto.html":{},"guards/RolesGuard.html":{},"entities/Subscriber.html":{},"injectables/UpdateProductProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["true})@joincolumn",{"_index":532,"title":{},"body":{"entities/BankTransfer.html":{},"entities/DiscountUsage.html":{},"entities/Order.html":{}}}],["true})@type(undefined",{"_index":703,"title":{},"body":{"classes/CreateBankTransferDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"classes/ProductsWithVariantsDto.html":{}}}],["try",{"_index":81,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"guards/AuthenticationGuard.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OrdersService.html":{},"injectables/PaymentsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["twitter",{"_index":2701,"title":{},"body":{"index.html":{}}}],["txn",{"_index":673,"title":{},"body":{"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["type",{"_index":28,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"modules/AppModule.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"entities/BankTransfer.html":{},"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"classes/CreateBankTransferDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchOrderDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"controllers/ProductVariantsController.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ProductsWithVariantsDto.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":385,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"controllers/BankTransfersController.html":{},"classes/CreateUserDto.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductVariantsController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"controllers/SubscribersController.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["type.enum.ts",{"_index":2604,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typeorm",{"_index":292,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"entities/BankTransfer.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"entities/DeliveryState.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/Order.html":{},"injectables/OrdersService.html":{},"injectables/PaginationProvider.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"injectables/PaymentsService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"entities/Review.html":{},"injectables/ReviewsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/BankTransfersModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/OrdersModule.html":{},"modules/PaymentsModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([banktransfer",{"_index":604,"title":{},"body":{"modules/BankTransfersModule.html":{}}}],["typeormmodule.forfeature([deliverystate",{"_index":993,"title":{},"body":{"modules/DeliveryStatesModule.html":{}}}],["typeormmodule.forfeature([discount",{"_index":1060,"title":{},"body":{"modules/DiscountsModule.html":{}}}],["typeormmodule.forfeature([discountusage",{"_index":1076,"title":{},"body":{"modules/DiscountsUsageModule.html":{}}}],["typeormmodule.forfeature([order",{"_index":1558,"title":{},"body":{"modules/OrdersModule.html":{}}}],["typeormmodule.forfeature([payment",{"_index":1774,"title":{},"body":{"modules/PaymentsModule.html":{}}}],["typeormmodule.forfeature([product",{"_index":2051,"title":{},"body":{"modules/ProductsModule.html":{}}}],["typeormmodule.forfeature([productimage",{"_index":1866,"title":{},"body":{"modules/ProductImagesModule.html":{}}}],["typeormmodule.forfeature([productvariant",{"_index":1899,"title":{},"body":{"modules/ProductVariantsModule.html":{}}}],["typeormmodule.forfeature([review",{"_index":2119,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["typeormmodule.forfeature([subscriber",{"_index":2252,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":2443,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":484,"title":{},"body":{"guards/AuthenticationGuard.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/UpdateDeliveryStateDto.html":{}}}],["types/multer",{"_index":2584,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":96,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/OrdersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["unable",{"_index":316,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/BankTransfersService.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/OrdersService.html":{},"injectables/PaymentsService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["unauthorizedexception",{"_index":54,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["unauthorizedexception('otp",{"_index":1242,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["unauthorizedexception('user",{"_index":1231,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{}}}],["unauthorizedexception(error",{"_index":2084,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["undefined",{"_index":50,"title":{},"body":{"guards/AccessTokenGuard.html":{},"entities/Discount.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"entities/Order.html":{},"entities/Payment.html":{},"injectables/UpdateProductProvider.html":{},"miscellaneous/variables.html":{}}}],["undefined'])@auth(authtype.none)@get('/:productid",{"_index":1997,"title":{},"body":{"controllers/ProductsController.html":{}}}],["undefined'])@delete('/:userid",{"_index":2403,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined'])@get",{"_index":2409,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined'])@get('/:userid",{"_index":2413,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined})@apibody({description",{"_index":350,"title":{},"body":{"controllers/AuthController.html":{}}}],["undefined})@httpcode(httpstatus.ok)@auth(authtype.none)@patch('/otp",{"_index":354,"title":{},"body":{"controllers/AuthController.html":{}}}],["undefined})@post('/sign",{"_index":369,"title":{},"body":{"controllers/AuthController.html":{}}}],["undefined})@post('refresh",{"_index":363,"title":{},"body":{"controllers/AuthController.html":{}}}],["unique",{"_index":1734,"title":{},"body":{"entities/Payment.html":{},"controllers/ProductsController.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["unit",{"_index":2644,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":286,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["unlicensed",{"_index":2715,"title":{},"body":{"properties.html":{}}}],["unsubscribed",{"_index":2266,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["unsubscribeemail",{"_index":2254,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["unsubscribeemail(id",{"_index":2263,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["unsubscribing",{"_index":2265,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["unsuccessful",{"_index":818,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["unsupported",{"_index":2367,"title":{},"body":{"injectables/UploadsService.html":{}}}],["unused",{"_index":98,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/OrdersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["update",{"_index":1011,"title":{},"body":{"injectables/DeliveryStatesService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["update(json.stringify(req.body",{"_index":2517,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["update(otp.tostring",{"_index":2194,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["update(otpsignindto.otp.tostring",{"_index":1587,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["updated",{"_index":971,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["updatedat",{"_index":518,"title":{},"body":{"entities/BankTransfer.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{}}}],["updatedatecolumn",{"_index":534,"title":{},"body":{"entities/BankTransfer.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{}}}],["updatedeliverystate",{"_index":959,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{}}}],["updatedeliverystate(stateid",{"_index":966,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{}}}],["updatedeliverystatedto",{"_index":967,"title":{"classes/UpdateDeliveryStateDto.html":{}},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"classes/UpdateDeliveryStateDto.html":{},"coverage.html":{}}}],["updateorder",{"_index":1527,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["updateorder(patchorderdto",{"_index":1533,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["updateproduct",{"_index":2053,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["updateproduct(id",{"_index":2060,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["updateproductprovider",{"_index":2045,"title":{"injectables/UpdateProductProvider.html":{}},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{},"coverage.html":{},"overview.html":{}}}],["updates",{"_index":984,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"index.html":{}}}],["updateuser",{"_index":2448,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuser(id",{"_index":2468,"title":{},"body":{"injectables/UsersService.html":{}}}],["upload",{"_index":785,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["uploadedfile",{"_index":561,"title":{},"body":{"controllers/BankTransfersController.html":{}}}],["uploadedfiles",{"_index":2010,"title":{},"body":{"controllers/ProductsController.html":{}}}],["uploadfile",{"_index":2361,"title":{},"body":{"injectables/UploadsService.html":{}}}],["uploadfile(file",{"_index":2364,"title":{},"body":{"injectables/UploadsService.html":{}}}],["uploading",{"_index":2321,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["uploadresult",{"_index":2336,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["uploadresult.key",{"_index":2342,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["uploads",{"_index":780,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["uploads/${filedir",{"_index":2332,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["uploads/uploads.module",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["uploads/variants/123",{"_index":2333,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["uploadsmodule",{"_index":159,"title":{"modules/UploadsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BankTransfersModule.html":{},"modules/ProductsModule.html":{},"modules/UploadsModule.html":{},"modules.html":{},"overview.html":{}}}],["uploadsservice",{"_index":769,"title":{"injectables/UploadsService.html":{}},"body":{"injectables/CreateProductProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"coverage.html":{},"overview.html":{}}}],["uploadtoawsprovider",{"_index":2313,"title":{"injectables/UploadToAwsProvider.html":{}},"body":{"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"coverage.html":{},"overview.html":{}}}],["url",{"_index":2366,"title":{},"body":{"injectables/UploadsService.html":{}}}],["url(this.request.url",{"_index":1641,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["urls",{"_index":1636,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["urlsindex",{"_index":808,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["usage",{"_index":301,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsUsageService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["usage.entity",{"_index":1075,"title":{},"body":{"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"entities/Order.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["usage.entity.ts",{"_index":1024,"title":{},"body":{"entities/DiscountUsage.html":{},"coverage.html":{}}}],["usage.entity.ts:16",{"_index":1029,"title":{},"body":{"entities/DiscountUsage.html":{}}}],["usage.entity.ts:19",{"_index":1033,"title":{},"body":{"entities/DiscountUsage.html":{}}}],["usage.entity.ts:22",{"_index":1028,"title":{},"body":{"entities/DiscountUsage.html":{}}}],["usage.entity.ts:26",{"_index":1031,"title":{},"body":{"entities/DiscountUsage.html":{}}}],["usage.entity.ts:29",{"_index":1032,"title":{},"body":{"entities/DiscountUsage.html":{}}}],["usage.module",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"modules/DiscountsModule.html":{}}}],["usage.module.ts",{"_index":1073,"title":{},"body":{"modules/DiscountsUsageModule.html":{}}}],["usage.service",{"_index":298,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"modules/DiscountsUsageModule.html":{}}}],["usage.service.ts",{"_index":1077,"title":{},"body":{"injectables/DiscountsUsageService.html":{},"coverage.html":{}}}],["usage.service.ts:22",{"_index":1083,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["usage.service.ts:7",{"_index":1080,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["usage/discounts",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"entities/DiscountUsage.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"entities/Order.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["usage/providers/discounts",{"_index":297,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsUsageService.html":{},"coverage.html":{}}}],["usagecount",{"_index":327,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsUsageService.html":{}}}],["usagelimit",{"_index":1013,"title":{},"body":{"entities/Discount.html":{}}}],["use",{"_index":477,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["useclass",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":307,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["usedat",{"_index":1026,"title":{},"body":{"entities/DiscountUsage.html":{}}}],["usefactory",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["useinterceptors",{"_index":562,"title":{},"body":{"controllers/BankTransfersController.html":{},"controllers/ProductsController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":582,"title":{},"body":{"controllers/BankTransfersController.html":{}}}],["useinterceptors(undefined)@roles(role.user)@post('submit",{"_index":556,"title":{},"body":{"controllers/BankTransfersController.html":{}}}],["user",{"_index":35,"title":{"entities/User.html":{}},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/BankTransfersController.html":{},"injectables/BankTransfersService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/ConfirmBankTransferProvider.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllSubscribersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaymentsService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/RefreshTokenProvider.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user.decorator",{"_index":571,"title":{},"body":{"controllers/BankTransfersController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/UsersController.html":{}}}],["user.decorator.ts",{"_index":2538,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":912,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":897,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/PatchUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":1703,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:14",{"_index":1314,"title":{},"body":{"classes/GetUsersBaseDto.html":{}}}],["user.dto.ts:16",{"_index":1701,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:20",{"_index":1704,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:21",{"_index":898,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUsersBaseDto.html":{}}}],["user.dto.ts:24",{"_index":1705,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:28",{"_index":1700,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:32",{"_index":900,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{}}}],["user.dto.ts:36",{"_index":1707,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:8",{"_index":1702,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.email",{"_index":1271,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{}}}],["user.entity",{"_index":634,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.firstname",{"_index":1485,"title":{},"body":{"injectables/MailService.html":{}}}],["user.fullname",{"_index":1476,"title":{},"body":{"injectables/MailService.html":{}}}],["user.id",{"_index":1269,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["user.role",{"_index":1272,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{}}}],["user.sub",{"_index":330,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["user?.[field",{"_index":2729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user[0",{"_index":1241,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["userid",{"_index":519,"title":{},"body":{"entities/BankTransfer.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllOrdersProvider.html":{},"injectables/FindAllPaymentsProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/Order.html":{},"entities/Payment.html":{},"injectables/SaveBankTransferProvider.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["username",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["userquery",{"_index":2460,"title":{},"body":{"injectables/UsersService.html":{}}}],["userquery.limit",{"_index":2478,"title":{},"body":{"injectables/UsersService.html":{}}}],["userquery.page",{"_index":2479,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":635,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OtpSigninProvider.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":2434,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.provider",{"_index":2436,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["users.provider.ts",{"_index":907,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"coverage.html":{}}}],["users.provider.ts:18",{"_index":909,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["users.provider.ts:38",{"_index":911,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["users/users.module",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":2394,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":160,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PaystackModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersquery",{"_index":2411,"title":{},"body":{"controllers/UsersController.html":{}}}],["usersrepository",{"_index":630,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/UsersService.html":{}}}],["usersservice",{"_index":1329,"title":{"injectables/UsersService.html":{}},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":475,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"index.html":{}}}],["uuid",{"_index":2330,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"dependencies.html":{}}}],["uuid4",{"_index":2329,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["uuid4()}${extension",{"_index":2352,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["v",{"_index":1183,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["v4",{"_index":2328,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["valid",{"_index":82,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["validate",{"_index":80,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["validatenested",{"_index":759,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"classes/ProductsWithVariantsDto.html":{}}}],["validating",{"_index":2132,"title":{},"body":{"guards/RolesGuard.html":{}}}],["validation",{"_index":106,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["validationschema",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":273,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/GetOrdersBaseDto.html":{},"classes/GetOrdersDto.html":{},"classes/GetPaymentsBaseDto.html":{},"classes/GetPaymentsDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/OtpSigninDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchOrderDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"classes/ProductsWithVariantsDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{},"dependencies.html":{}}}],["validfrom",{"_index":309,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"entities/Discount.html":{}}}],["validity",{"_index":304,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsService.html":{}}}],["validuntil",{"_index":312,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"classes/CreateDiscountDto.html":{},"entities/Discount.html":{}}}],["value",{"_index":398,"title":{},"body":{"controllers/AuthController.html":{},"injectables/FindAllProductsProvider.html":{},"classes/PaginationQueryDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":2213,"title":{},"body":{"entities/Subscriber.html":{},"entities/User.html":{}}}],["variable",{"_index":2533,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2716,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variant",{"_index":797,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/PaymentVariant.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"injectables/ProductVariantsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["variant.color",{"_index":1942,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["variant.dto",{"_index":762,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"classes/ProductsWithVariantsDto.html":{}}}],["variant.dto.ts",{"_index":819,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"classes/PatchProductVariantDto.html":{},"coverage.html":{}}}],["variant.dto.ts:10",{"_index":1686,"title":{},"body":{"classes/PatchProductVariantDto.html":{}}}],["variant.dto.ts:14",{"_index":1688,"title":{},"body":{"classes/PatchProductVariantDto.html":{}}}],["variant.dto.ts:15",{"_index":823,"title":{},"body":{"classes/CreateProductVariantDto.html":{}}}],["variant.dto.ts:19",{"_index":828,"title":{},"body":{"classes/CreateProductVariantDto.html":{}}}],["variant.dto.ts:24",{"_index":827,"title":{},"body":{"classes/CreateProductVariantDto.html":{}}}],["variant.dto.ts:30",{"_index":825,"title":{},"body":{"classes/CreateProductVariantDto.html":{}}}],["variant.entity",{"_index":1733,"title":{},"body":{"entities/Payment.html":{},"modules/PaymentsModule.html":{},"entities/ProductVariant.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["variant.entity.ts",{"_index":1738,"title":{},"body":{"entities/PaymentVariant.html":{},"coverage.html":{}}}],["variant.entity.ts:14",{"_index":1740,"title":{},"body":{"entities/PaymentVariant.html":{}}}],["variant.entity.ts:17",{"_index":1743,"title":{},"body":{"entities/PaymentVariant.html":{}}}],["variant.entity.ts:20",{"_index":1748,"title":{},"body":{"entities/PaymentVariant.html":{}}}],["variant.entity.ts:23",{"_index":1745,"title":{},"body":{"entities/PaymentVariant.html":{}}}],["variant.entity.ts:26",{"_index":1739,"title":{},"body":{"entities/PaymentVariant.html":{}}}],["variant.entity.ts:29",{"_index":1742,"title":{},"body":{"entities/PaymentVariant.html":{}}}],["variant.entity.ts:32",{"_index":1747,"title":{},"body":{"entities/PaymentVariant.html":{}}}],["variant.images",{"_index":1856,"title":{},"body":{"entities/ProductImage.html":{}}}],["variant.paymentvariants",{"_index":1746,"title":{},"body":{"entities/PaymentVariant.html":{}}}],["variant.product",{"_index":1840,"title":{},"body":{"entities/Product.html":{}}}],["variant.productid",{"_index":1937,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["variant.quantity",{"_index":1948,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["variant.size",{"_index":1943,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["variant.soldout",{"_index":1941,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["variant.variant.id",{"_index":2165,"title":{},"body":{"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["variantdto",{"_index":1383,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["variantdto.color",{"_index":2307,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantdto.id",{"_index":2304,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantdto.quantity",{"_index":2309,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantdto.size",{"_index":2308,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantdto.soldout",{"_index":2310,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantid",{"_index":1384,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"injectables/ProductVariantsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["variants",{"_index":744,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"injectables/FindAllProductsProvider.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"classes/PatchProductDto.html":{},"entities/Payment.html":{},"entities/Product.html":{},"controllers/ProductVariantsController.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"classes/ProductWithVariantDto-1.html":{},"classes/ProductsWithVariantsDto.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["variants.controller",{"_index":1898,"title":{},"body":{"modules/ProductVariantsModule.html":{}}}],["variants.controller.ts",{"_index":1883,"title":{},"body":{"controllers/ProductVariantsController.html":{},"coverage.html":{}}}],["variants.controller.ts:19",{"_index":1889,"title":{},"body":{"controllers/ProductVariantsController.html":{}}}],["variants.dto",{"_index":1891,"title":{},"body":{"controllers/ProductVariantsController.html":{},"injectables/ProductVariantsService.html":{}}}],["variants.dto.ts",{"_index":1961,"title":{},"body":{"classes/ProductWithVariantDto-1.html":{},"classes/ProductsWithVariantsDto.html":{},"coverage.html":{}}}],["variants.dto.ts:14",{"_index":1963,"title":{},"body":{"classes/ProductWithVariantDto-1.html":{}}}],["variants.dto.ts:22",{"_index":2068,"title":{},"body":{"classes/ProductsWithVariantsDto.html":{}}}],["variants.dto.ts:8",{"_index":1962,"title":{},"body":{"classes/ProductWithVariantDto-1.html":{}}}],["variants.entity",{"_index":763,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["variants.entity.ts",{"_index":1869,"title":{},"body":{"entities/ProductVariant.html":{},"coverage.html":{}}}],["variants.entity.ts:16",{"_index":1871,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:19",{"_index":1870,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:22",{"_index":1880,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:25",{"_index":1879,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:28",{"_index":1881,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:35",{"_index":1878,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:41",{"_index":1873,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:44",{"_index":1875,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.images",{"_index":1197,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["variants.module",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/BankTransfersModule.html":{},"modules/PaystackModule.html":{},"modules/ProductsModule.html":{}}}],["variants.module.ts",{"_index":1897,"title":{},"body":{"modules/ProductVariantsModule.html":{}}}],["variants.service",{"_index":1345,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/ProductVariantsController.html":{},"modules/ProductVariantsModule.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["variants.service.ts",{"_index":1900,"title":{},"body":{"injectables/ProductVariantsService.html":{},"coverage.html":{}}}],["variants.service.ts:111",{"_index":1918,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["variants.service.ts:12",{"_index":1907,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["variants.service.ts:135",{"_index":1914,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["variants.service.ts:27",{"_index":1916,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["variants.service.ts:49",{"_index":1920,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["variants.service.ts:61",{"_index":1911,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["variants/dto/create",{"_index":761,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"coverage.html":{}}}],["variants/dto/patch",{"_index":1322,"title":{},"body":{"classes/InitiatePaymentDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/ProductWithVariantDto.html":{},"coverage.html":{}}}],["variants/dto/products",{"_index":1960,"title":{},"body":{"classes/ProductWithVariantDto-1.html":{},"classes/ProductsWithVariantsDto.html":{},"coverage.html":{}}}],["variants/product",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"modules/BankTransfersModule.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"entities/Payment.html":{},"entities/PaymentVariant.html":{},"modules/PaystackModule.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"controllers/ProductVariantsController.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["variants/providers/product",{"_index":1344,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["variants[${i}][images",{"_index":2021,"title":{},"body":{"controllers/ProductsController.html":{}}}],["variantsimages",{"_index":786,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["variantsimages.push(filearray",{"_index":789,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["various",{"_index":1599,"title":{},"body":{"interfaces/Paginated.html":{}}}],["vars",{"_index":99,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/OrdersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["verification",{"_index":2528,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["verified",{"_index":2526,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["verify",{"_index":1820,"title":{},"body":{"injectables/PaystackService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["verifying",{"_index":2496,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["verifypayment",{"_index":1813,"title":{},"body":{"injectables/PaystackService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["verifypayment(body",{"_index":1817,"title":{},"body":{"injectables/PaystackService.html":{}}}],["verifypayment(reference",{"_index":2494,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["verifypaymentprovider",{"_index":1804,"title":{"injectables/VerifyPaymentProvider.html":{}},"body":{"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"overview.html":{}}}],["version",{"_index":2713,"title":{},"body":{"properties.html":{}}}],["video",{"_index":2665,"title":{},"body":{"index.html":{}}}],["visit",{"_index":2654,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":2667,"title":{},"body":{"index.html":{}}}],["void",{"_index":2005,"title":{},"body":{"controllers/ProductsController.html":{}}}],["vr",{"_index":802,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["vr.id",{"_index":2161,"title":{},"body":{"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["vr.quantity",{"_index":1373,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["want",{"_index":1987,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["watch",{"_index":2639,"title":{},"body":{"index.html":{}}}],["wears",{"_index":1478,"title":{},"body":{"injectables/MailService.html":{}}}],["website",{"_index":2699,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":1487,"title":{},"body":{"injectables/MailService.html":{}}}],["where('variant.id",{"_index":1936,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/SaveBankTransferProvider.html":{}}}],["whereoptions",{"_index":1156,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["whereoptions.push(filteredconditions",{"_index":1184,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["whether",{"_index":42,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/ConfirmBankTransferProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"guards/RolesGuard.html":{},"injectables/SaveBankTransferProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["white",{"_index":2344,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["without",{"_index":479,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["working",{"_index":2653,"title":{},"body":{"index.html":{}}}],["world",{"_index":263,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":2025,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["yes",{"_index":1256,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{}}}],["you'd",{"_index":2693,"title":{},"body":{"index.html":{}}}],["zipcode",{"_index":1699,"title":{},"body":{"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["zoom",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankTransfersModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaymentsModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AccessTokenGuard.html":{"url":"guards/AccessTokenGuard.html","title":"guard - AccessTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AccessTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/access-token/access-token.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    guard for access token\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractRequestFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConfiguration: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/access-token/access-token.guard.ts:18\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/access-token/access-token.guard.ts:42\n                        \n                    \n\n\n            \n                \n                        function for checking if user has access token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                true or false depending on whether user is signed in or not\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractRequestFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractRequestFromHeader(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/access-token/access-token.guard.ts:77\n                        \n                    \n\n\n            \n                \n                        function for extracting the access token from the request headers\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                access token\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ConfigType } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\nimport jwtConfig from 'src/auth/config/jwt.config';\nimport { REQUEST_USER_KEY } from 'src/auth/constants/auth.constant';\n\n/**\n * guard for access token\n */\n@Injectable()\nexport class AccessTokenGuard implements CanActivate {\n  /**\n   * constructor\n   * @param jwtService\n   * @param jwtConfiguration\n   */\n  constructor(\n    /**\n     * Inject jwtService\n     */\n    private readonly jwtService: JwtService,\n\n    /**\n     * inject jwt config\n     */\n    @Inject(jwtConfig.KEY)\n    private readonly jwtConfiguration: ConfigType,\n  ) {}\n\n  /**\n   * function for checking if user has access token\n   * @param context\n   * @returns true or false depending on whether user is signed in or not\n   */\n  async canActivate(context: ExecutionContext): Promise {\n    // we can grab the request from the excetion context\n    const request = context.switchToHttp().getRequest();\n\n    // extract the token from the header\n    const token = this.extractRequestFromHeader(request);\n\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n\n    // validate the token\n    try {\n      // if the token is valid, jwt returns the payload which contains info for indetifying the user\n      const payload = await this.jwtService.verify(\n        token,\n        this.jwtConfiguration,\n      );\n\n      // setting the request.user = payload\n      request[REQUEST_USER_KEY] = payload;\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (_) {\n      throw new UnauthorizedException();\n    }\n\n    // accept or deny req based on validation\n    return true;\n  }\n\n  /**\n   * function for extracting the access token from the request headers\n   * @param request\n   * @returns access token\n   */\n  private extractRequestFromHeader(request: Request): string | undefined {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [_, token] = request.headers.authorization?.split(' ') ?? [];\n    return token;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActiveUserData.html":{"url":"interfaces/ActiveUserData.html","title":"interface - ActiveUserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActiveUserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/active-user-data.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for a user that has logged in (payload)\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    user email\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    user role\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    id for user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ActiveUserData {\n  /**\n   * id for user\n   */\n  sub: string;\n\n  /**\n   * user email\n   */\n  email: string;\n\n  /**\n   * user role\n   */\n  role: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBankTransfersModule\n\nBankTransfersModule\n\nAppModule -->\n\nBankTransfersModule->AppModule\n\n\n\n\n\nDeliveryStatesModule\n\nDeliveryStatesModule\n\nAppModule -->\n\nDeliveryStatesModule->AppModule\n\n\n\n\n\nDiscountsModule\n\nDiscountsModule\n\nAppModule -->\n\nDiscountsModule->AppModule\n\n\n\n\n\nDiscountsUsageModule\n\nDiscountsUsageModule\n\nAppModule -->\n\nDiscountsUsageModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nPaymentsModule\n\nPaymentsModule\n\nAppModule -->\n\nPaymentsModule->AppModule\n\n\n\n\n\nPaystackModule\n\nPaystackModule\n\nAppModule -->\n\nPaystackModule->AppModule\n\n\n\n\n\nProductImagesModule\n\nProductImagesModule\n\nAppModule -->\n\nProductImagesModule->AppModule\n\n\n\n\n\nProductVariantsModule\n\nProductVariantsModule\n\nAppModule -->\n\nProductVariantsModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nReviewsModule\n\nReviewsModule\n\nAppModule -->\n\nReviewsModule->AppModule\n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUploadsModule\n\nUploadsModule\n\nAppModule -->\n\nUploadsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            BankTransfersModule\n                        \n                        \n                            DeliveryStatesModule\n                        \n                        \n                            DiscountsModule\n                        \n                        \n                            DiscountsUsageModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            OrdersModule\n                        \n                        \n                            PaymentsModule\n                        \n                        \n                            PaystackModule\n                        \n                        \n                            ProductImagesModule\n                        \n                        \n                            ProductVariantsModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            ReviewsModule\n                        \n                        \n                            SubscribersModule\n                        \n                        \n                            UploadsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport appConfig from './config/app.config';\nimport databaseConfig from './config/database.config';\nimport enviromentValidation from './config/enviroment.validation';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { MailModule } from './mail/mail.module';\nimport { SubscribersModule } from './subscribers/subscribers.module';\nimport { APP_GUARD, APP_INTERCEPTOR } from '@nestjs/core';\nimport { DataResponseInterceptor } from './common/interceptors/data-response/data-response.interceptor';\nimport { AuthenticationGuard } from './auth/guards/authentication/authentication.guard';\nimport { RolesGuard } from './auth/guards/roles/roles.guard';\nimport { AccessTokenGuard } from './auth/guards/access-token/access-token.guard';\nimport jwtConfig from './auth/config/jwt.config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ProductsModule } from './products/products.module';\nimport { ProductVariantsModule } from './product-variants/product-variants.module';\nimport { ProductImagesModule } from './product-images/product-images.module';\n\nimport { ReviewsModule } from './reviews/reviews.module';\nimport { UploadsModule } from './uploads/uploads.module';\nimport { DiscountsModule } from './discounts/discounts.module';\nimport { DiscountsUsageModule } from './discounts-usage/discounts-usage.module';\nimport { DeliveryStatesModule } from './delivery-states/delivery-states.module';\nimport { PaystackModule } from './paystack/paystack.module';\nimport { PaymentsModule } from './payments/payments.module';\nimport { OrdersModule } from './orders/orders.module';\nimport { BankTransfersModule } from './bank-transfers/bank-transfers.module';\n\n/**\n * app environment\n */\nconst ENV = process.env.NODE_ENV;\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: !ENV ? '.env' : `.env.${ENV}`,\n      load: [appConfig, databaseConfig],\n      validationSchema: enviromentValidation,\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => {\n        return {\n          type: 'postgres',\n          autoLoadEntities: configService.get('database.autoLoadEntities'),\n          synchronize: configService.get('database.synchronize'),\n          port: +configService.get('database.port'),\n          username: configService.get('database.user'),\n          password: configService.get('database.password'),\n          host: configService.get('database.host'),\n          database: configService.get('database.name'),\n          ssl:\n            process.env.NODE_ENV === 'development'\n              ? false\n              : {\n                  rejectUnauthorized: false,\n                },\n          logging: process.env.NODE_ENV !== 'production',\n        };\n      },\n    }),\n    UsersModule,\n    AuthModule,\n    MailModule,\n    SubscribersModule,\n    // Importing an enviroment config specific for this module\n    ConfigModule.forFeature(jwtConfig),\n    // for asynchrousnously registering the jwt module and passing the config to the module\n    JwtModule.registerAsync(jwtConfig.asProvider()),\n    ProductsModule,\n    ProductVariantsModule,\n    ProductImagesModule,\n    ReviewsModule,\n    UploadsModule,\n    DiscountsModule,\n    DiscountsUsageModule,\n    DeliveryStatesModule,\n    PaystackModule,\n    PaymentsModule,\n    OrdersModule,\n    BankTransfersModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: DataResponseInterceptor,\n    },\n    {\n      provide: APP_GUARD,\n      useClass: AuthenticationGuard,\n    },\n    {\n      provide: APP_GUARD,\n      useClass: RolesGuard,\n    },\n    AccessTokenGuard,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplyForDiscountDto.html":{"url":"classes/ApplyForDiscountDto.html","title":"class - ApplyForDiscountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplyForDiscountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/dtos/apply-for-discount.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/dtos/apply-for-discount.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class ApplyForDiscountDto {\n  @IsString()\n  @IsNotEmpty()\n  code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplyForDiscountProvider.html":{"url":"injectables/ApplyForDiscountProvider.html","title":"injectable - ApplyForDiscountProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApplyForDiscountProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/providers/apply-for-discount.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                applyForDiscount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(discountsRepository: Repository, discountsUsageService: DiscountsUsageService)\n                    \n                \n                        \n                            \n                                Defined in src/discounts/providers/apply-for-discount.provider.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        discountsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discountsUsageService\n                                                  \n                                                        \n                                                                        DiscountsUsageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        applyForDiscount\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyForDiscount(user: ActiveUserData, code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/discounts/providers/apply-for-discount.provider.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                discount\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { LessThanOrEqual, MoreThanOrEqual, Repository } from 'typeorm';\nimport { Discount } from '../discounts.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\nimport { DiscountsUsageService } from 'src/discounts-usage/providers/discounts-usage.service';\n\n@Injectable()\nexport class ApplyForDiscountProvider {\n  constructor(\n    /**\n     * injecting the discounts repository\n     */\n    @InjectRepository(Discount)\n    private readonly discountsRepository: Repository,\n\n    /**\n     * injecting the discounts usage service\n     */\n    private readonly discountsUsageService: DiscountsUsageService,\n  ) {}\n\n  /**\n   * @function checks the validity of the code and how many times the user has used it\n   * @param user\n   * @param code\n   * @returns discount\n   */\n  public async applyForDiscount(user: ActiveUserData, code: string) {\n    let discount: Discount;\n\n    try {\n      discount = await this.discountsRepository.findOne({\n        where: {\n          code,\n          validFrom: LessThanOrEqual(new Date()),\n          validUntil: MoreThanOrEqual(new Date()),\n        },\n      });\n    } catch (error) {\n      console.log(error);\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    //Handle the discount does not exist\n    if (!discount) {\n      throw new BadRequestException(\n        'The discount code has expired or does not exist',\n      );\n    }\n\n    // check the usage count\n    const usageCount = await this.discountsUsageService.countDiscountUsage(\n      discount.id,\n      user.sub,\n    );\n\n    if (usageCount >= discount.usageLimit) {\n      return null;\n    }\n\n    return discount;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n            \n                Description\n            \n            \n                controller for the auth route\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                otpSignin\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                refreshTokens\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        otpSignin\n                        \n                    \n                \n            \n            \n                \n                        \n                    otpSignin(otpSigninDto: OtpSigninDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It signs in the user with a valid otp'})@ApiResponse({status: 200, description: 'Login Successfully', example: undefined})@ApiBody({description: 'Contains the  otp', required: true, type: OtpSigninDto, examples: undefined})@HttpCode(HttpStatus.OK)@Auth(AuthType.None)@Patch('/otp-signin')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:115\n                        \n                    \n\n\n            \n                \n                        route for otp signin\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otpSigninDto\n                                            \n                                                            OtpSigninDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshTokens(refreshTokenDto: RefreshTokenDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It creates  new access and refresh tokens'})@ApiResponse({status: 200, description: 'Access and refresh tokens are created successfully', example: undefined})@ApiBody({description: 'Contains the refresh token', required: true, type: RefreshTokenDto, examples: undefined})@Post('refresh-tokens')@HttpCode(HttpStatus.OK)@Auth(AuthType.None)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:155\n                        \n                    \n\n\n            \n                \n                        route for refresh tokens\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshTokenDto\n                                            \n                                                            RefreshTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: SignInDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It signs in a user with valid email and password'})@ApiResponse({status: 200, description: 'User is signed in successfully', example: undefined})@ApiBody({description: 'Signs in a user', required: true, type: SignInDto, examples: undefined})@Post('/sign-in')@Auth(AuthType.None)@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:76\n                        \n                    \n\n\n            \n                \n                        route for sign in\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                access token and refresh token\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  HttpCode,\n  HttpStatus,\n  Patch,\n  Post,\n} from '@nestjs/common';\nimport { SignInDto } from './dtos/sign-in.dto';\nimport { AuthService } from './providers/auth.service';\nimport { Auth } from './decorator/auth.decorator';\nimport { AuthType } from './enums/auth-type.enum';\nimport { RefreshTokenDto } from './dtos/refresh-token.dto';\nimport { ApiBody, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { OtpSigninDto } from './dtos/otpSignin.dto';\n\n/**\n * controller for the auth route\n */\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  /**\n   * constructor\n   * @param authService\n   */\n  constructor(\n    /**\n     * injecting the auth service\n     */\n    private readonly authService: AuthService,\n  ) {}\n\n  /**\n   * route for sign in\n   * @param signInDto\n   * @returns access token and refresh token\n   */\n  @ApiOperation({\n    summary: 'It signs in a user with valid email and password',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'User is signed in successfully',\n    example: {\n      summary: 'Access and refresh token',\n      value: {\n        accessToken: 'jsbfiwhvfquobdfj',\n        refreshToken: 'jsbfiwhvfquobdfj',\n      },\n    },\n  })\n  @ApiBody({\n    description: 'Signs in a user',\n    required: true,\n    type: SignInDto,\n    examples: {\n      example1: {\n        summary: 'Valid request example',\n        value: {\n          email: 'iloghaluagneskc@gmail.com',\n          password: '@Password1',\n        },\n      },\n      example2: {\n        summary: 'Invalid request example (missing password)',\n        value: {\n          email: 'iloghaluagneskc@gmail.com',\n        },\n      },\n    },\n  })\n  @Post('/sign-in')\n  @Auth(AuthType.None)\n  @HttpCode(HttpStatus.OK)\n  public signIn(@Body() signInDto: SignInDto) {\n    return this.authService.signIn(signInDto);\n  }\n\n  /**\n   * route for otp signin\n   */\n  @ApiOperation({\n    summary: 'It signs in the user with a valid otp',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Login Successfully',\n    example: {\n      value: {\n        message: 'Login successfully',\n      },\n    },\n  })\n  @ApiBody({\n    description: 'Contains the  otp',\n    required: true,\n    type: OtpSigninDto,\n    examples: {\n      example1: {\n        summary: 'Valid request example',\n        value: {\n          otp: 2354,\n        },\n      },\n      example2: {\n        summary: 'Invalid request example (missing otp)',\n        value: {},\n      },\n    },\n  })\n  @HttpCode(HttpStatus.OK)\n  @Auth(AuthType.None)\n  @Patch('/otp-signin')\n  public otpSignin(@Body() otpSigninDto: OtpSigninDto) {\n    return this.authService.otpSignin(otpSigninDto);\n  }\n\n  /**\n   * route for refresh tokens\n   */\n  @ApiOperation({\n    summary: 'It creates  new access and refresh tokens',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Access and refresh tokens are created successfully',\n    example: {\n      value: {\n        accessToken: 'jsbfiwhvfquobdfj',\n        refreshToken: 'jsbfiwhvfquobdfj',\n      },\n    },\n  })\n  @ApiBody({\n    description: 'Contains the refresh token',\n    required: true,\n    type: RefreshTokenDto,\n    examples: {\n      example1: {\n        summary: 'Valid request example',\n        value: {\n          refreshToken: 'jbfwihfubfjkebiejhfbw',\n        },\n      },\n      example2: {\n        summary: 'Invalid request example (missing refresh token)',\n        value: {},\n      },\n    },\n  })\n  @Post('refresh-tokens')\n  @HttpCode(HttpStatus.OK)\n  @Auth(AuthType.None)\n  public async refreshTokens(@Body() refreshTokenDto: RefreshTokenDto) {\n    // console.log('re', refreshTokenDto);\n    return await this.authService.refreshTokens(refreshTokenDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nGenerateTokensProvider\n\nGenerateTokensProvider\n\nAuthModule -->\n\nGenerateTokensProvider->AuthModule\n\n\n\n\n\nOtpSigninProvider\n\nOtpSigninProvider\n\nAuthModule -->\n\nOtpSigninProvider->AuthModule\n\n\n\n\n\nRefreshTokenProvider\n\nRefreshTokenProvider\n\nAuthModule -->\n\nRefreshTokenProvider->AuthModule\n\n\n\n\n\nSignInProvider\n\nSignInProvider\n\nAuthModule -->\n\nSignInProvider->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            GenerateTokensProvider\n                        \n                        \n                            OtpSigninProvider\n                        \n                        \n                            RefreshTokenProvider\n                        \n                        \n                            SignInProvider\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { AuthService } from './providers/auth.service';\nimport { AuthController } from './auth.controller';\nimport { UsersModule } from 'src/users/users.module';\nimport { SignInProvider } from './providers/sign-in.provider';\nimport { GenerateTokensProvider } from './providers/generate-tokens.provider';\nimport { ConfigModule } from '@nestjs/config';\nimport jwtConfig from './config/jwt.config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { RefreshTokenProvider } from './providers/refresh-token.provider';\nimport { OtpSigninProvider } from './providers/otp-signin.provider';\n\n@Module({\n  providers: [\n    AuthService,\n\n    SignInProvider,\n    GenerateTokensProvider,\n\n    RefreshTokenProvider,\n    OtpSigninProvider,\n  ],\n  controllers: [AuthController],\n  imports: [\n    forwardRef(() => UsersModule),\n    ConfigModule.forFeature(jwtConfig),\n    // for asynchrousnously registering the jwt module and passing the config to the module\n    JwtModule.registerAsync(jwtConfig.asProvider()),\n  ],\n  exports: [],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                auth service for the auth module\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                otpSignin\n                            \n                            \n                                    Public\n                                    Async\n                                refreshTokens\n                            \n                            \n                                    Public\n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(signInProvider: SignInProvider, otpSigninProvider: OtpSigninProvider, refreshTokenProvider: RefreshTokenProvider)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        signInProvider\n                                                  \n                                                        \n                                                                        SignInProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        otpSigninProvider\n                                                  \n                                                        \n                                                                        OtpSigninProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        refreshTokenProvider\n                                                  \n                                                        \n                                                                        RefreshTokenProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        otpSignin\n                        \n                    \n                \n            \n            \n                \n                        \n                    otpSignin(otpSigninDto: OtpSigninDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:52\n                        \n                    \n\n\n            \n                \n                        function for resetting password\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otpSigninDto\n                                            \n                                                            OtpSigninDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshTokens(refreshTokenDto: RefreshTokenDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:61\n                        \n                    \n\n\n            \n                \n                        function for refreshing access token after it expires\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshTokenDto\n                                            \n                                                            RefreshTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                access and refresh tokens\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: SignInDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:43\n                        \n                    \n\n\n            \n                \n                        function for signing in a user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                access and refresh tokens\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SignInDto } from 'src/auth/dtos/sign-in.dto';\nimport { SignInProvider } from './sign-in.provider';\nimport { RefreshTokenDto } from 'src/auth/dtos/refresh-token.dto';\nimport { RefreshTokenProvider } from './refresh-token.provider';\nimport { OtpSigninDto } from '../dtos/otpSignin.dto';\nimport { OtpSigninProvider } from './otp-signin.provider';\n\n/**\n * auth service for the auth module\n */\n@Injectable()\nexport class AuthService {\n  /**\n   * constructor\n   * @param signInProvider\n   * @param forgotPasswordProvider\n   * @param resetPasswordProvider\n   * @param refreshTokenProvider\n   */\n  constructor(\n    /**\n     * injecting the sign in provider\n     */\n    private readonly signInProvider: SignInProvider,\n\n    /**\n     * injecting the otp sign in provider\n     */\n    private readonly otpSigninProvider: OtpSigninProvider,\n\n    /**\n     * injecting the refresh token provider\n     */\n    private readonly refreshTokenProvider: RefreshTokenProvider,\n  ) {}\n\n  /**\n   * function for signing in a user\n   * @param signInDto\n   * @returns access and refresh tokens\n   */\n  public async signIn(signInDto: SignInDto) {\n    return await this.signInProvider.signIn(signInDto);\n  }\n\n  /**\n   * function for resetting password\n   * @param resetPasswordDto\n   * @returns user\n   */\n  public async otpSignin(otpSigninDto: OtpSigninDto) {\n    return await this.otpSigninProvider.signInWithOtp(otpSigninDto);\n  }\n\n  /**\n   * function for refreshing access token after it expires\n   * @param refreshTokenDto\n   * @returns access and refresh tokens\n   */\n  public async refreshTokens(refreshTokenDto: RefreshTokenDto) {\n    return await this.refreshTokenProvider.refreshTokens(refreshTokenDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/authentication/authentication.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    guard for authentication\n\n                \n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authTypeGuardMap\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                defaultAuthType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, accessTokenGuard: AccessTokenGuard)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/authentication/authentication.guard.ts:33\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessTokenGuard\n                                                  \n                                                        \n                                                                        AccessTokenGuard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/authentication/authentication.guard.ts:59\n                        \n                    \n\n\n            \n                \n                        function for authenticating a user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                true or false based on whether user is logged in or not\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\n// import { Observable } from 'rxjs';\nimport { AccessTokenGuard } from '../access-token/access-token.guard';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\nimport { AUTH_TYPE_KEY } from 'src/auth/constants/auth.constant';\n\n/**\n * guard for authentication\n */\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  // using static means you can use the name of the property of the class without the \"this\" keyword\n  /**\n   * default auth type\n   */\n  private static readonly defaultAuthType = AuthType.Bearer;\n\n  /**\n   * map for auth types and guards they use\n   */\n  private readonly authTypeGuardMap: Record = {\n    [AuthType.Bearer]: this.accessTokenGuard,\n    [AuthType.None]: { canActivate: () => true },\n  };\n\n  /**\n   * constructor\n   * @param reflector\n   * @param accessTokenGuard\n   */\n  constructor(\n    /**\n     * injecting the reflector class\n     * The reflector class makes you access diff metadata from the execution context\n     */\n    private readonly reflector: Reflector,\n\n    /**\n     * Injecting the access token guard\n     *\n     */\n    private readonly accessTokenGuard: AccessTokenGuard,\n  ) {}\n\n  /**\n   * function for authenticating a user\n   * @param context\n   * @returns true or false based on whether user is logged in or not\n   */\n  async canActivate(context: ExecutionContext): Promise {\n    // Get all the auth types from reflector\n    // This returns an array of the auth types for a specific class or method in a class\n    const authTypes = this.reflector.getAllAndOverride(AUTH_TYPE_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]) ?? [AuthenticationGuard.defaultAuthType];\n\n    // create an array of the guards\n    const guards = authTypes.map((type) => this.authTypeGuardMap[type]).flat();\n\n    // Default error\n    const error = new UnauthorizedException();\n\n    // loop through the guards and fire the canActivate\n    for (const instance of guards) {\n      let canActivate;\n\n      try {\n        canActivate = await Promise.resolve(instance.canActivate(context));\n      } catch (err) {\n        throw err;\n      }\n\n      if (canActivate) {\n        return true;\n      }\n    }\n\n    throw error;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/BankTransfer.html":{"url":"entities/BankTransfer.html","title":"entity - BankTransfer","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  BankTransfer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bank-transfers/bank-transfer.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                imageProof\n                            \n                            \n                                    \n                                isConfirmed\n                            \n                            \n                                    \n                                    \n                                payment\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bank-transfers/bank-transfer.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bank-transfers/bank-transfer.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bank-transfers/bank-transfer.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        imageProof\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bank-transfers/bank-transfer.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isConfirmed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bank-transfers/bank-transfer.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        payment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Payment\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, {eager: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bank-transfers/bank-transfer.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bank-transfers/bank-transfer.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bank-transfers/bank-transfer.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Payment } from 'src/payments/payment.entity';\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  JoinColumn,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity()\nexport class BankTransfer {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: false })\n  userId: string;\n\n  @Column({ nullable: false })\n  imageProof: string;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @Column({ nullable: false })\n  amount: number;\n\n  @OneToOne(() => Payment, { eager: true })\n  @JoinColumn()\n  payment: Payment;\n\n  @Column({ nullable: false, default: false })\n  isConfirmed: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BankTransfersController.html":{"url":"controllers/BankTransfersController.html","title":"controller - BankTransfersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BankTransfersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bank-transfers/bank-transfers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                bank-transfers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                confirmBankTransfer\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                saveBankTransferDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        confirmBankTransfer\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmBankTransfer(transferId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:transferId/confirm-transfer')@Roles(Role.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/bank-transfers/bank-transfers.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transferId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        saveBankTransferDetails\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveBankTransferDetails(createBankTransferDto: CreateBankTransferDto, user: ActiveUserData, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(undefined)@Roles(Role.USER)@Post('submit-tf-info')\n                \n            \n\n                    \n                        \n                            Defined in src/bank-transfers/bank-transfers.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createBankTransferDto\n                                            \n                                                            CreateBankTransferDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                bank transfer details\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Param,\n  Patch,\n  Post,\n  UploadedFile,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { Role } from 'src/auth/enums/role-type.enum';\nimport { CreateBankTransferDto } from './dtos/create-brank-transfer.dto';\nimport { ActiveUser } from 'src/auth/decorator/active-user.decorator';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { BankTransfersService } from './providers/bank-transfers.service';\n\n@Controller('bank-transfers')\nexport class BankTransfersController {\n  constructor(\n    /**\n     * injecting the bank transfer sevice\n     */\n    private readonly bankTransfersService: BankTransfersService,\n  ) {}\n\n  /**\n   * @function Submits bank tf and products bought details\n   * @param createBankTransferDto\n   * @param user\n   * @param file\n   * @returns bank transfer details\n   */\n  @UseInterceptors(FileInterceptor('file'))\n  @Roles(Role.USER)\n  @Post('submit-tf-info')\n  public saveBankTransferDetails(\n    @Body() createBankTransferDto: CreateBankTransferDto,\n    @ActiveUser() user: ActiveUserData,\n    @UploadedFile() file: Express.Multer.File,\n  ) {\n    return this.bankTransfersService.saveBankTransfer(\n      createBankTransferDto,\n      user,\n      file,\n    );\n  }\n\n  // confirm bank tf: only admin\n  @Patch('/:transferId/confirm-transfer')\n  @Roles(Role.ADMIN)\n  public confirmBankTransfer(@Param('transferId') transferId: string) {\n    return this, this.bankTransfersService.confirmBankTransfer(transferId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BankTransfersModule.html":{"url":"modules/BankTransfersModule.html","title":"module - BankTransfersModule","body":"\n                   \n\n\n\n\n    Modules\n    BankTransfersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BankTransfersModule\n\n\n\ncluster_BankTransfersModule_providers\n\n\n\ncluster_BankTransfersModule_imports\n\n\n\n\nProductVariantsModule\n\nProductVariantsModule\n\n\n\nBankTransfersModule\n\nBankTransfersModule\n\nBankTransfersModule -->\n\nProductVariantsModule->BankTransfersModule\n\n\n\n\n\nUploadsModule\n\nUploadsModule\n\nBankTransfersModule -->\n\nUploadsModule->BankTransfersModule\n\n\n\n\n\nBankTransfersService\n\nBankTransfersService\n\nBankTransfersModule -->\n\nBankTransfersService->BankTransfersModule\n\n\n\n\n\nConfirmBankTransferProvider\n\nConfirmBankTransferProvider\n\nBankTransfersModule -->\n\nConfirmBankTransferProvider->BankTransfersModule\n\n\n\n\n\nSaveBankTransferProvider\n\nSaveBankTransferProvider\n\nBankTransfersModule -->\n\nSaveBankTransferProvider->BankTransfersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/bank-transfers/bank-transfers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BankTransfersService\n                        \n                        \n                            ConfirmBankTransferProvider\n                        \n                        \n                            SaveBankTransferProvider\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BankTransfersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProductVariantsModule\n                        \n                        \n                            UploadsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BankTransfersController } from './bank-transfers.controller';\nimport { BankTransfersService } from './providers/bank-transfers.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { BankTransfer } from './bank-transfer.entity';\nimport { SaveBankTransferProvider } from './providers/save-bank-transfer.provider';\nimport { ProductVariantsModule } from 'src/product-variants/product-variants.module';\nimport { UploadsModule } from 'src/uploads/uploads.module';\nimport { ConfirmBankTransferProvider } from './providers/confirm-bank-transfer.provider';\n\n@Module({\n  imports: [\n    ProductVariantsModule,\n    UploadsModule,\n    TypeOrmModule.forFeature([BankTransfer]),\n  ],\n  controllers: [BankTransfersController],\n  providers: [\n    BankTransfersService,\n    SaveBankTransferProvider,\n    ConfirmBankTransferProvider,\n  ],\n})\nexport class BankTransfersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BankTransfersService.html":{"url":"injectables/BankTransfersService.html","title":"injectable - BankTransfersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BankTransfersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bank-transfers/providers/bank-transfers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                confirmBankTransfer\n                            \n                            \n                                    Public\n                                    Async\n                                findBankTransferById\n                            \n                            \n                                    Public\n                                    Async\n                                saveBankTransfer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(saveBankTransferProvider: SaveBankTransferProvider, confirmBankTransferProvider: ConfirmBankTransferProvider, bankTransferRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/bank-transfers/providers/bank-transfers.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        saveBankTransferProvider\n                                                  \n                                                        \n                                                                        SaveBankTransferProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmBankTransferProvider\n                                                  \n                                                        \n                                                                        ConfirmBankTransferProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bankTransferRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        confirmBankTransfer\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmBankTransfer(transferId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bank-transfers/providers/bank-transfers.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transferId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findBankTransferById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findBankTransferById(transferId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bank-transfers/providers/bank-transfers.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transferId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        saveBankTransfer\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveBankTransfer(createBankTransferDto: CreateBankTransferDto, user: ActiveUserData, file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bank-transfers/providers/bank-transfers.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createBankTransferDto\n                                            \n                                                            CreateBankTransferDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { SaveBankTransferProvider } from './save-bank-transfer.provider';\nimport { CreateBankTransferDto } from '../dtos/create-brank-transfer.dto';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\nimport { ConfirmBankTransferProvider } from './confirm-bank-transfer.provider';\nimport { BankTransfer } from '../bank-transfer.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class BankTransfersService {\n  constructor(\n    /**\n     * injecting the save bank transfer provider\n     */\n    private readonly saveBankTransferProvider: SaveBankTransferProvider,\n\n    /**\n     * injecting the confirm bank transfer provider\n     */\n    private readonly confirmBankTransferProvider: ConfirmBankTransferProvider,\n\n    /**\n     * injecting the bank transfer repository\n     */\n    @InjectRepository(BankTransfer)\n    private readonly bankTransferRepository: Repository,\n  ) {}\n\n  public async saveBankTransfer(\n    createBankTransferDto: CreateBankTransferDto,\n    user: ActiveUserData,\n    file: Express.Multer.File,\n  ) {\n    return await this.saveBankTransferProvider.saveBankTransfer(\n      createBankTransferDto,\n      user,\n      file,\n    );\n  }\n\n  public async confirmBankTransfer(transferId: string) {\n    return await this.confirmBankTransferProvider.confirmBankTransfer(\n      transferId,\n    );\n  }\n\n  public async findBankTransferById(transferId: string): Promise {\n    let transfer: BankTransfer;\n\n    try {\n      transfer = await this.bankTransferRepository.findOne({\n        where: { id: transferId },\n      });\n    } catch (error) {\n      console.log(error);\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    if (!transfer) {\n      throw new BadRequestException('The bank transfer does not exist');\n    }\n\n    return transfer;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClearOtpAndExpiryTimeProvider.html":{"url":"injectables/ClearOtpAndExpiryTimeProvider.html","title":"injectable - ClearOtpAndExpiryTimeProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClearOtpAndExpiryTimeProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/clear-otp-and-expiry-time.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                clearOtpAndExpiryTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/clear-otp-and-expiry-time.provider.ts:7\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        clearOtpAndExpiryTime\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearOtpAndExpiryTime(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/clear-otp-and-expiry-time.provider.ts:25\n                        \n                    \n\n\n            \n                \n                        function for clearing otp after login\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from '../user.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class ClearOtpAndExpiryTimeProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * injecting the users repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for clearing otp after login\n   * @param user\n   * @returns user\n   */\n  public async clearOtpAndExpiryTime(user: User) {\n    const newUserObj = {\n      ...user,\n      otp: null,\n      otpExpire: null,\n    };\n\n    try {\n      return await this.usersRepository.save(newUserObj);\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfirmBankTransferProvider.html":{"url":"injectables/ConfirmBankTransferProvider.html","title":"injectable - ConfirmBankTransferProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfirmBankTransferProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bank-transfers/providers/confirm-bank-transfer.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                confirmBankTransfer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataSource: DataSource)\n                    \n                \n                        \n                            \n                                Defined in src/bank-transfers/providers/confirm-bank-transfer.provider.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        confirmBankTransfer\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmBankTransfer(transferId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bank-transfers/providers/confirm-bank-transfer.provider.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transferId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { DataSource } from 'typeorm';\nimport { BankTransfer } from '../bank-transfer.entity';\nimport { Payment } from 'src/payments/payment.entity';\nimport { paymentStatus } from 'src/payments/enums/paymentStatus.enum';\n\n@Injectable()\nexport class ConfirmBankTransferProvider {\n  constructor(\n    /**\n     * Injecting datasource\n     */\n    private readonly dataSource: DataSource,\n  ) {}\n\n  public async confirmBankTransfer(transferId: string) {\n    // start transaction\n    // create Query Runner instance\n    const queryRunner = this.dataSource.createQueryRunner();\n    try {\n      // connect query runner to datasource\n      await queryRunner.connect();\n\n      // start transaction\n      await queryRunner.startTransaction();\n    } catch (error) {\n      console.log(error);\n      throw new RequestTimeoutException('Could not connect to datasource');\n    }\n\n    try {\n      // find the bank transfer by id\n      const transfer = await queryRunner.manager.findOne(BankTransfer, {\n        where: { id: transferId },\n      });\n\n      console.log(transfer);\n\n      if (!transfer) {\n        throw new BadRequestException('The user does not exist');\n      }\n      // then find the payment\n      const payment = await queryRunner.manager.findOne(Payment, {\n        where: { id: transfer.payment.id },\n      });\n\n      // confirm bank transfer\n\n      transfer.isConfirmed = true;\n\n      payment.status = paymentStatus.SUCCESS;\n\n      await queryRunner.manager.save(transfer);\n\n      await queryRunner.manager.save(payment);\n\n      // if successful commit\n      // ensures the txn is committed to the db\n\n      await queryRunner.commitTransaction();\n\n      return {\n        message: 'Confirmed successfully',\n      };\n    } catch (error) {\n      // we rollback the txn here if it is not successful\n      await queryRunner.rollbackTransaction();\n      throw new ConflictException('Could not complete the transaction', {\n        description: String(error),\n      });\n    } finally {\n      // relsease the connection\n      // release connection whether it was successful or not\n      try {\n        await queryRunner.release();\n      } catch (error) {\n        throw new RequestTimeoutException('Could not release the connection', {\n          description: String(error),\n        });\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBankTransferDto.html":{"url":"classes/CreateBankTransferDto.html","title":"class - CreateBankTransferDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBankTransferDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bank-transfers/dtos/create-brank-transfer.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            InitiatePaymentDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                deliveryAddress\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                deliveryPicker\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                discountId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                products\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        deliveryAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         InitiatePaymentDto\n\n                            \n                        \n                    \n                        \n                                Defined in         InitiatePaymentDto:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        deliveryPicker\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         InitiatePaymentDto\n\n                            \n                        \n                    \n                        \n                                Defined in         InitiatePaymentDto:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        discountId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         InitiatePaymentDto\n\n                            \n                        \n                    \n                        \n                                Defined in         InitiatePaymentDto:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductWithVariantDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsNotEmpty()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         InitiatePaymentDto\n\n                            \n                        \n                    \n                        \n                                Defined in         InitiatePaymentDto:47\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InitiatePaymentDto } from 'src/paystack/dtos/initiate-payment.dto';\n\nexport class CreateBankTransferDto extends InitiatePaymentDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDeliveryStateDto.html":{"url":"classes/CreateDeliveryStateDto.html","title":"class - CreateDeliveryStateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDeliveryStateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery-states/dtos/create-delivery-state.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                fee\n                            \n                            \n                                    \n                                    \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        fee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery-states/dtos/create-delivery-state.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery-states/dtos/create-delivery-state.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateDeliveryStateDto {\n  @IsString()\n  @IsNotEmpty()\n  state: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  fee: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDiscountDto.html":{"url":"classes/CreateDiscountDto.html","title":"class - CreateDiscountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDiscountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/dtos/create-discount.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                percentOff\n                            \n                            \n                                    \n                                    \n                                validUntil\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/dtos/create-discount.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        percentOff\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/dtos/create-discount.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        validUntil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/dtos/create-discount.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsDate, IsInt, IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateDiscountDto {\n  @IsString()\n  @IsNotEmpty()\n  code: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  percentOff: number;\n\n  @IsDate()\n  @IsNotEmpty()\n  validUntil: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateDiscountProvider.html":{"url":"injectables/CreateDiscountProvider.html","title":"injectable - CreateDiscountProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateDiscountProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/providers/create-discount.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createDiscount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(discountsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/discounts/providers/create-discount.provider.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        discountsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createDiscount\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDiscount(createDiscountDto: CreateDiscountDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/discounts/providers/create-discount.provider.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDiscountDto\n                                            \n                                                            CreateDiscountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                discount obj\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Discount } from '../discounts.entity';\nimport { Repository } from 'typeorm';\nimport { CreateDiscountDto } from '../dtos/create-discount.dto';\n\n@Injectable()\nexport class CreateDiscountProvider {\n  constructor(\n    /**\n     * injecting the discounts repository\n     */\n    @InjectRepository(Discount)\n    private readonly discountsRepository: Repository,\n  ) {}\n\n  /**\n   * @function creates a discount\n   * @param createDiscountDto\n   * @returns discount obj\n   */\n  public async createDiscount(\n    createDiscountDto: CreateDiscountDto,\n  ): Promise {\n    let discount = this.discountsRepository.create(createDiscountDto);\n\n    // save the discount to the db\n    try {\n      discount = await this.discountsRepository.save(discount);\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    return discount;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/createProductDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                brand\n                            \n                            \n                                    \n                                    \n                                category\n                            \n                            \n                                    \n                                    \n                                clothType\n                            \n                            \n                                    \n                                    \n                                discount\n                            \n                            \n                                    \n                                    \n                                dressStyle\n                            \n                            \n                                    \n                                    \n                                longDescription\n                            \n                            \n                                    \n                                    \n                                material\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                shortDescription\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                variants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        brand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        clothType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dressStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        longDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        material\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        shortDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProductVariant[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsNotEmpty()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:57\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsInt,\n  IsNotEmpty,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { CreateProductVariantDto } from 'src/product-variants/dto/create-product-variant.dto';\nimport { ProductVariant } from 'src/product-variants/product-variants.entity';\n\nexport class CreateProductDto {\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  price: number;\n\n  @IsInt()\n  @IsNotEmpty()\n  discount: number;\n\n  @IsString()\n  @IsNotEmpty()\n  category: string;\n\n  @IsString()\n  @IsNotEmpty()\n  dressStyle: string;\n\n  @IsString()\n  @IsNotEmpty()\n  clothType: string;\n\n  @IsString()\n  @IsNotEmpty()\n  material: string;\n\n  @IsString()\n  @IsNotEmpty()\n  brand: string;\n\n  @IsString()\n  @IsNotEmpty()\n  shortDescription: string;\n\n  @IsString()\n  @IsNotEmpty()\n  longDescription: string;\n\n  @IsArray()\n  @IsNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => CreateProductVariantDto)\n  variants: ProductVariant[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateProductProvider.html":{"url":"injectables/CreateProductProvider.html","title":"injectable - CreateProductProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateProductProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/providers/create-product.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataSource: DataSource, uploadsService: UploadsService)\n                    \n                \n                        \n                            \n                                Defined in src/products/providers/create-product.provider.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uploadsService\n                                                  \n                                                        \n                                                                        UploadsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProduct(createProductDto: CreateProductDto, images: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/create-product.provider.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                images\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                a product\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { DataSource } from 'typeorm';\nimport { Product } from '../product.entity';\nimport { CreateProductDto } from '../dtos/createProductDto';\nimport { UploadsService } from 'src/uploads/providers/uploads.service';\nimport { ProductVariant } from 'src/product-variants/product-variants.entity';\nimport { ProductImage } from 'src/product-images/product-image.entity';\n\n@Injectable()\nexport class CreateProductProvider {\n  constructor(\n    /**\n     * Injecting datasource\n     */\n    private readonly dataSource: DataSource,\n\n    /**\n     * injecting uploads service\n     */\n    private readonly uploadsService: UploadsService,\n  ) {}\n\n  /**\n   * @function creates a product\n   * @param createProductDto\n   * @param images\n   * @returns a product\n   */\n  public async createProduct(\n    createProductDto: CreateProductDto,\n    images: { [key: string]: Express.Multer.File[] },\n  ) {\n    // start query transaction\n    // create Query Runner instance\n    const queryRunner = this.dataSource.createQueryRunner();\n    try {\n      // connect query runner to datasource\n      await queryRunner.connect();\n      // start transaction\n      await queryRunner.startTransaction();\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error) {\n      throw new RequestTimeoutException('Could not connect to datasource');\n    }\n\n    try {\n      // create the product\n      const product = queryRunner.manager.create(Product, {\n        ...createProductDto,\n        variants: [],\n      });\n\n      // save the product\n      const savedProduct = await queryRunner.manager.save(product);\n\n      // upload the images in the variants\n      const variantsImages = [];\n\n      Object.entries(images).forEach(\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        ([key, fileArray]) => {\n          variantsImages.push(fileArray);\n        },\n      );\n\n      const storedImagesUrls = [];\n\n      // loop through the array of files and upload them\n      for (let i = 0; i  await this.uploadsService.uploadFile(file, fileDir),\n          ),\n        );\n        storedImagesUrls.push(urls);\n      }\n\n      // loop through the product variants and create product variants\n      const savedVariants = [];\n\n      for (const variant of createProductDto.variants) {\n        /**\n         * param\n         * entity\n         * dto\n         */\n        const prVariant = queryRunner.manager.create(ProductVariant, {\n          ...variant,\n          product: savedProduct,\n        });\n\n        const vr = await queryRunner.manager.save(prVariant);\n        savedVariants.push(vr);\n      }\n\n      // loop through the images and create a product image\n      const productImages = storedImagesUrls\n        .map((imgUrls: string[], urlsIndex) =>\n          imgUrls.map((imgUrl, index) =>\n            queryRunner.manager.create(ProductImage, {\n              imagePath: imgUrl,\n              displayOrder: index,\n              productVariant: savedVariants[urlsIndex],\n            }),\n          ),\n        )\n        .flat();\n\n      productImages.map(async (image) => await queryRunner.manager.save(image));\n\n      // if successful commit\n      // ensures the txn is committed to the db\n      await queryRunner.commitTransaction();\n\n      // return product\n      return { ...savedProduct, variants: savedVariants };\n    } catch (error) {\n      // if unsuccessful rollback\n      // we rollback the txn here if it is not successful\n      await queryRunner.rollbackTransaction();\n      throw new ConflictException('Could not complete the transaction', {\n        description: String(error),\n      });\n    } finally {\n      // relsease the connection\n      // release connection whether it was successful or not\n      try {\n        await queryRunner.release();\n      } catch (error) {\n        throw new RequestTimeoutException('Could not release the connection', {\n          description: String(error),\n        });\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductVariantDto.html":{"url":"classes/CreateProductVariantDto.html","title":"class - CreateProductVariantDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductVariantDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-variants/dto/create-product-variant.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                color\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                images\n                            \n                            \n                                    \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/create-product-variant.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/create-product-variant.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/create-product-variant.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/create-product-variant.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsInt,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Min,\n  ValidateNested,\n} from 'class-validator';\n\nexport class CreateProductVariantDto {\n  @IsString()\n  @IsNotEmpty()\n  color: string;\n\n  @IsString()\n  @IsNotEmpty()\n  size: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  @Min(1)\n  quantity: number;\n\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => String)\n  images?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReviewDto.html":{"url":"classes/CreateReviewDto.html","title":"class - CreateReviewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReviewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/dtos/create-review.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                productId\n                            \n                            \n                                    \n                                    \n                                review\n                            \n                            \n                                    \n                                    \n                                reviewer\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                stars\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/create-review.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        review\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/create-review.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        reviewer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/create-review.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        stars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()@Min(1, {message: 'Rating must be at least 1 star'})@Max(5, {message: 'Rating cannot exceed 5 stars'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/create-review.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsNotEmpty, IsString, Max, Min } from 'class-validator';\n\nexport class CreateReviewDto {\n  @IsString()\n  @IsNotEmpty()\n  reviewer: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  @Min(1, { message: 'Rating must be at least 1 star' })\n  @Max(5, { message: 'Rating cannot exceed 5 stars' })\n  stars: number;\n\n  @IsString()\n  @IsNotEmpty()\n  review: string;\n\n  @IsString()\n  @IsNotEmpty()\n  productId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateReviewProvider.html":{"url":"injectables/CreateReviewProvider.html","title":"injectable - CreateReviewProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateReviewProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/providers/create-review.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createReview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reviewsRepository: Repository, productsService: ProductsService)\n                    \n                \n                        \n                            \n                                Defined in src/reviews/providers/create-review.provider.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reviewsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productsService\n                                                  \n                                                        \n                                                                        ProductsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createReview\n                        \n                    \n                \n            \n            \n                \n                        \n                    createReview(createReviewDto: CreateReviewDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/reviews/providers/create-review.provider.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createReviewDto\n                                            \n                                                            CreateReviewDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a review\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { CreateReviewDto } from '../dtos/create-review.dto';\nimport { Review } from '../reviews.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProductsService } from 'src/products/providers/products.service';\n\n@Injectable()\nexport class CreateReviewProvider {\n  constructor(\n    /**\n     * injecting the reviews repository\n     */\n    @InjectRepository(Review)\n    private readonly reviewsRepository: Repository,\n\n    /**\n     * injecting the products service\n     */\n    private readonly productsService: ProductsService,\n  ) {}\n\n  /**\n   * @function creates a review\n   * @param createReviewDto\n   * @param productId\n   * @returns  a review\n   */\n  public async createReview(createReviewDto: CreateReviewDto): Promise {\n    // find product\n    const product = await this.productsService.findProductById(\n      createReviewDto.productId,\n    );\n\n    // create a new review\n    let newReview = this.reviewsRepository.create({\n      reviewer: createReviewDto.reviewer,\n      review: createReviewDto.review,\n      stars: createReviewDto.stars,\n      product: product,\n    });\n\n    // save the review to the db\n    try {\n      newReview = await this.reviewsRepository.save(newReview);\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    return {\n      id: newReview.id,\n      reviewer: newReview.reviewer,\n      stars: newReview.stars,\n      review: newReview.review,\n      dateCreated: newReview.dateCreated,\n      product: newReview.product.id,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSubscriberDto.html":{"url":"classes/CreateSubscriberDto.html","title":"class - CreateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dtos/create-subscriber.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto for creating a subscriber\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the email of the subscriber', example: 'Favour@gmail.com'})@IsEmail()@MaxLength(96)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dtos/create-subscriber.dto.ts:18\n                        \n                    \n\n            \n                \n                    email address\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, MaxLength } from 'class-validator';\n\n/**\n * dto for creating a subscriber\n */\nexport class CreateSubscriberDto {\n  /**\n   * email address\n   */\n  @ApiProperty({\n    description: 'This is the email of the subscriber',\n    example: 'Favour@gmail.com',\n  })\n  @IsEmail()\n  @MaxLength(96)\n  @IsNotEmpty()\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto class for creating user dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the email of the user', example: 'Favour@gmail.com'})@IsEmail()@MaxLength(96)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:21\n                        \n                    \n\n            \n                \n                    user email address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the role of the user', example: 'Admin'})@IsEnum(Role)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:32\n                        \n                    \n\n            \n                \n                    user role\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsEnum, IsNotEmpty, MaxLength } from 'class-validator';\n// import { accountType } from '../enums/account-type.enum';\n// import { Role } from 'src/auth/enums/role-type.enum';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Role } from 'src/auth/enums/role-type.enum';\n\n/**\n * dto class for creating user dto\n */\nexport class CreateUserDto {\n  /**\n   * user email address\n   */\n  @ApiProperty({\n    description: 'This is the email of the user',\n    example: 'Favour@gmail.com',\n  })\n  @IsEmail()\n  @MaxLength(96)\n  @IsNotEmpty()\n  email: string;\n\n  /**\n   * user role\n   */\n  @ApiProperty({\n    description: 'This is the role of the user',\n    example: 'Admin',\n  })\n  @IsEnum(Role)\n  @IsNotEmpty()\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUsersProvider.html":{"url":"injectables/CreateUsersProvider.html","title":"injectable - CreateUsersProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateUsersProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/create-users.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider class for creating user\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/create-users.provider.ts:18\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/create-users.provider.ts:38\n                        \n                    \n\n\n            \n                \n                        function for creating user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                created user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  forwardRef,\n  Inject,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { CreateUserDto } from '../dtos/create-user.dto';\nimport { Repository } from 'typeorm';\nimport { User } from '../user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n/**\n * provider class for creating user\n */\n@Injectable()\nexport class CreateUsersProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   * @param hashingProvider\n   * @param mailService\n   */\n  constructor(\n    /**\n     * inhjecting the user repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for creating user\n   * @param createUserDto\n   * @returns created user\n   */\n  public async createUser(createUserDto: CreateUserDto) {\n    // create a new user\n    let newUser = this.usersRepository.create({\n      ...createUserDto,\n    });\n\n    // save the user to the db\n    try {\n      newUser = await this.usersRepository.save(newUser);\n    } catch (error) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    return {\n      id: newUser.id,\n      email: newUser.email,\n      role: newUser.role,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataResponseInterceptor.html":{"url":"injectables/DataResponseInterceptor.html","title":"injectable - DataResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/data-response/data-response.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for the data response interceptor\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/data-response/data-response.interceptor.ts:14\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/interceptors/data-response/data-response.interceptor.ts:32\n                        \n                    \n\n\n            \n                \n                        function for formatting the response data\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                the response in {apiVersion: \"1.0.0\", data: ...} format\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { map, Observable } from 'rxjs';\n\n/**\n * provider for the data response interceptor\n */\n@Injectable()\nexport class DataResponseInterceptor implements NestInterceptor {\n  /**\n   * constructor\n   * @param configService\n   */\n  constructor(\n    /**\n     * injecting config service\n     */\n    private readonly configService: ConfigService,\n  ) {}\n\n  /**\n   * function for formatting the response data\n   * @param context\n   * @param next\n   * @returns the response in {apiVersion: \"1.0.0\", data: ...} format\n   */\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    // console.log('Before ...');\n    // before method execution\n    return next.handle().pipe(\n      map((data) => ({\n        apiVersion: this.configService.get('appConfig.apiVersion'),\n        data: data,\n      })),\n    );\n    // After method execution\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DeliveryState.html":{"url":"entities/DeliveryState.html","title":"entity - DeliveryState","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DeliveryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery-states/delivery-state.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dateCreated\n                            \n                            \n                                    \n                                fee\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery-states/delivery-state.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery-states/delivery-state.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery-states/delivery-state.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery-states/delivery-state.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BeforeInsert,\n  BeforeUpdate,\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class DeliveryState {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  state: string;\n\n  @Column()\n  fee: number;\n\n  @CreateDateColumn()\n  dateCreated: Date;\n\n  @BeforeInsert()\n  @BeforeUpdate()\n  transformToLowercase() {\n    if (this.state) {\n      this.state = this.state.toLowerCase();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DeliveryStatesController.html":{"url":"controllers/DeliveryStatesController.html","title":"controller - DeliveryStatesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DeliveryStatesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery-states/delivery-states.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                delivery-states\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                createDeliveryState\n                            \n                            \n                                    \n                                    \n                                    Public\n                                findDeliveryStateByState\n                            \n                            \n                                    \n                                    \n                                    Public\n                                updateDeliveryState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        createDeliveryState\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDeliveryState(createDeliveryStateDto: CreateDeliveryStateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Roles(Role.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/delivery-states/delivery-states.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDeliveryStateDto\n                                            \n                                                            CreateDeliveryStateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        findDeliveryStateByState\n                        \n                    \n                \n            \n            \n                \n                        \n                    findDeliveryStateByState(state: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Auth(AuthType.None)@Get('/:state')\n                \n            \n\n                    \n                        \n                            Defined in src/delivery-states/delivery-states.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                delivery state\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        updateDeliveryState\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDeliveryState(stateId: string, updateDeliveryStateDto: UpdateDeliveryStateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.ADMIN)@Patch('/:stateId')\n                \n            \n\n                    \n                        \n                            Defined in src/delivery-states/delivery-states.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stateId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDeliveryStateDto\n                                            \n                                                            UpdateDeliveryStateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                updated delivery state\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post } from '@nestjs/common';\nimport { DeliveryStatesService } from './providers/delivery-states.service';\nimport { CreateDeliveryStateDto } from './dtos/create-delivery-state.dto';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { Role } from 'src/auth/enums/role-type.enum';\nimport { Auth } from 'src/auth/decorator/auth.decorator';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\nimport { UpdateDeliveryStateDto } from './dtos/update-delivery-state.dto';\n\n@Controller('delivery-states')\nexport class DeliveryStatesController {\n  constructor(\n    /**\n     * injecting the delivery states service\n     */\n    private readonly deliveryStatesService: DeliveryStatesService,\n  ) {}\n\n  /**\n   * @function creates a delivery state\n   * @param createDeliveryStateDto\n   */\n  @Post()\n  @Roles(Role.ADMIN)\n  public createDeliveryState(\n    @Body() createDeliveryStateDto: CreateDeliveryStateDto,\n  ) {\n    return this.deliveryStatesService.createDeliveryState(\n      createDeliveryStateDto,\n    );\n  }\n\n  /**\n   * @function finds a delivery state by name\n   * @param state\n   * @returns delivery state\n   */\n  @Auth(AuthType.None)\n  @Get('/:state')\n  public findDeliveryStateByState(@Param('state') state: string) {\n    return this.deliveryStatesService.findDeliveryStateByName(state);\n  }\n\n  /**\n   * @function updates a delivery state\n   * @param updateDeliveryStateDto\n   * @returns updated delivery state\n   */\n  @Roles(Role.ADMIN)\n  @Patch('/:stateId')\n  public updateDeliveryState(\n    @Param('stateId') stateId: string,\n    @Body() updateDeliveryStateDto: UpdateDeliveryStateDto,\n  ) {\n    return this.deliveryStatesService.updateDeliveryState(\n      stateId,\n      updateDeliveryStateDto,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DeliveryStatesModule.html":{"url":"modules/DeliveryStatesModule.html","title":"module - DeliveryStatesModule","body":"\n                   \n\n\n\n\n    Modules\n    DeliveryStatesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DeliveryStatesModule\n\n\n\ncluster_DeliveryStatesModule_providers\n\n\n\n\nDeliveryStatesService\n\nDeliveryStatesService\n\n\n\nDeliveryStatesModule\n\nDeliveryStatesModule\n\nDeliveryStatesModule -->\n\nDeliveryStatesService->DeliveryStatesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/delivery-states/delivery-states.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DeliveryStatesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DeliveryStatesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DeliveryStatesController } from './delivery-states.controller';\nimport { DeliveryStatesService } from './providers/delivery-states.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { DeliveryState } from './delivery-state.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([DeliveryState])],\n  controllers: [DeliveryStatesController],\n  providers: [DeliveryStatesService],\n})\nexport class DeliveryStatesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeliveryStatesService.html":{"url":"injectables/DeliveryStatesService.html","title":"injectable - DeliveryStatesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeliveryStatesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery-states/providers/delivery-states.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createDeliveryState\n                            \n                            \n                                    Public\n                                    Async\n                                findDeliveryStateByName\n                            \n                            \n                                    Public\n                                    Async\n                                updateDeliveryState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deliveryStateRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/delivery-states/providers/delivery-states.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deliveryStateRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createDeliveryState\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDeliveryState(createDeliveryStateDto: CreateDeliveryStateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/delivery-states/providers/delivery-states.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDeliveryStateDto\n                                            \n                                                            CreateDeliveryStateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                delivery state\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findDeliveryStateByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findDeliveryStateByName(state: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/delivery-states/providers/delivery-states.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                delivery state\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateDeliveryState\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDeliveryState(stateId: string, updateDeliveryStateDto: UpdateDeliveryStateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/delivery-states/providers/delivery-states.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stateId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDeliveryStateDto\n                                            \n                                                            UpdateDeliveryStateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                updated delivery state\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { DeliveryState } from '../delivery-state.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CreateDeliveryStateDto } from '../dtos/create-delivery-state.dto';\nimport { UpdateDeliveryStateDto } from '../dtos/update-delivery-state.dto';\n\n@Injectable()\nexport class DeliveryStatesService {\n  constructor(\n    /**\n     * injecting the delivery states repository\n     */\n    @InjectRepository(DeliveryState)\n    private readonly deliveryStateRepository: Repository,\n  ) {}\n\n  /**\n   * @function creates a delivery state resource\n   * @param createDeliveryStateDto\n   * @returns delivery state\n   */\n  public async createDeliveryState(\n    createDeliveryStateDto: CreateDeliveryStateDto,\n  ) {\n    let deliveryState: DeliveryState;\n\n    deliveryState = this.deliveryStateRepository.create(createDeliveryStateDto);\n\n    try {\n      deliveryState = await this.deliveryStateRepository.save(deliveryState);\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    return deliveryState;\n  }\n\n  /**\n   * @function finds a delivery state based on the state\n   * @param state\n   * @returns delivery state\n   */\n  public async findDeliveryStateByName(state: string) {\n    let deliveryState;\n    try {\n      deliveryState = await this.deliveryStateRepository.findOneBy({\n        state: state,\n      });\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (err: any) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    /**\n     * Handle the delivery state does not exist\n     */\n    if (!deliveryState) {\n      throw new BadRequestException('The delivery state does not exist');\n    }\n    return deliveryState;\n  }\n\n  /**\n   * @function updates a delivery state\n   * @param updateDeliveryStateDto\n   * @returns updated delivery state\n   */\n  public async updateDeliveryState(\n    stateId: string,\n    updateDeliveryStateDto: UpdateDeliveryStateDto,\n  ) {\n    let deliveryState;\n    // find the user\n    try {\n      deliveryState = await this.deliveryStateRepository.findOneBy({\n        id: stateId,\n      });\n    } catch (err) {\n      throw new RequestTimeoutException(err);\n    }\n    if (!deliveryState) {\n      throw new BadRequestException('Delivery state does not exist');\n    }\n    // update user\n    deliveryState = { ...deliveryState, ...updateDeliveryStateDto };\n\n    try {\n      await this.deliveryStateRepository.save(deliveryState);\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error: any) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n    return deliveryState;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Discount.html":{"url":"entities/Discount.html","title":"entity - Discount","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Discount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/discounts.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                percentOff\n                            \n                            \n                                    \n                                usageLimit\n                            \n                            \n                                    \n                                validFrom\n                            \n                            \n                                    \n                                validUntil\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/discounts.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/discounts.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        percentOff\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/discounts.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usageLimit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/discounts.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        validFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/discounts.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        validUntil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/discounts.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Discount {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  code: string;\n\n  @Column()\n  percentOff: number;\n\n  @Column({ default: 1 })\n  usageLimit: number;\n\n  @Column({ type: 'timestamp', default: new Date() })\n  validFrom: Date;\n\n  @Column({ type: 'timestamp', nullable: true })\n  validUntil: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DiscountUsage.html":{"url":"entities/DiscountUsage.html","title":"entity - DiscountUsage","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DiscountUsage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts-usage/discounts-usage.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                discount\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                order\n                            \n                            \n                                    \n                                usedAt\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Discount\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts-usage/discounts-usage.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts-usage/discounts-usage.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, order => order.discountUsage, {nullable: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts-usage/discounts-usage.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts-usage/discounts-usage.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts-usage/discounts-usage.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Discount } from 'src/discounts/discounts.entity';\nimport { Order } from 'src/orders/order.entity';\nimport { User } from 'src/users/user.entity';\nimport {\n  CreateDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  OneToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class DiscountUsage {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @ManyToOne(() => User)\n  user: User;\n\n  @ManyToOne(() => Discount)\n  discount: Discount;\n\n  @OneToOne(() => Order, (order) => order.discountUsage, { nullable: true })\n  @JoinColumn()\n  order: Order;\n\n  @CreateDateColumn()\n  usedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DiscountsController.html":{"url":"controllers/DiscountsController.html","title":"controller - DiscountsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DiscountsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/discounts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                discounts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                applyForDiscount\n                            \n                            \n                                    \n                                    \n                                    Public\n                                createDiscount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        applyForDiscount\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyForDiscount(user: ActiveUserData, applyForDiscountDto: ApplyForDiscountDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/apply')@Roles(Role.USER)@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in src/discounts/discounts.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                applyForDiscountDto\n                                            \n                                                            ApplyForDiscountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        createDiscount\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDiscount(createDiscountDto: CreateDiscountDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Roles(Role.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/discounts/discounts.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDiscountDto\n                                            \n                                                            CreateDiscountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post } from '@nestjs/common';\nimport { DiscountsService } from './providers/discounts.service';\nimport { CreateDiscountDto } from './dtos/create-discount.dto';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { Role } from 'src/auth/enums/role-type.enum';\nimport { ActiveUser } from 'src/auth/decorator/active-user.decorator';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\nimport { ApplyForDiscountDto } from './dtos/apply-for-discount.dto';\n\n@Controller('discounts')\nexport class DiscountsController {\n  constructor(\n    /**\n     * injecting the discounts service\n     */\n    private readonly discountsService: DiscountsService,\n  ) {}\n\n  @Post()\n  @Roles(Role.ADMIN)\n  public createDiscount(@Body() createDiscountDto: CreateDiscountDto) {\n    return this.discountsService.createDiscount(createDiscountDto);\n  }\n\n  @Post('/apply')\n  @Roles(Role.USER)\n  @HttpCode(HttpStatus.OK)\n  public applyForDiscount(\n    @ActiveUser() user: ActiveUserData,\n    @Body() applyForDiscountDto: ApplyForDiscountDto,\n  ) {\n    return this.discountsService.applyForDiscount(\n      user,\n      applyForDiscountDto.code,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DiscountsModule.html":{"url":"modules/DiscountsModule.html","title":"module - DiscountsModule","body":"\n                   \n\n\n\n\n    Modules\n    DiscountsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DiscountsModule\n\n\n\ncluster_DiscountsModule_imports\n\n\n\ncluster_DiscountsModule_providers\n\n\n\n\nDiscountsUsageModule\n\nDiscountsUsageModule\n\n\n\nDiscountsModule\n\nDiscountsModule\n\nDiscountsModule -->\n\nDiscountsUsageModule->DiscountsModule\n\n\n\n\n\nApplyForDiscountProvider\n\nApplyForDiscountProvider\n\nDiscountsModule -->\n\nApplyForDiscountProvider->DiscountsModule\n\n\n\n\n\nCreateDiscountProvider\n\nCreateDiscountProvider\n\nDiscountsModule -->\n\nCreateDiscountProvider->DiscountsModule\n\n\n\n\n\nDiscountsService\n\nDiscountsService\n\nDiscountsModule -->\n\nDiscountsService->DiscountsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/discounts/discounts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApplyForDiscountProvider\n                        \n                        \n                            CreateDiscountProvider\n                        \n                        \n                            DiscountsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DiscountsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DiscountsUsageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DiscountsController } from './discounts.controller';\nimport { DiscountsService } from './providers/discounts.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Discount } from './discounts.entity';\nimport { ApplyForDiscountProvider } from './providers/apply-for-discount.provider';\nimport { CreateDiscountProvider } from './providers/create-discount.provider';\nimport { DiscountsUsageModule } from 'src/discounts-usage/discounts-usage.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Discount]), DiscountsUsageModule],\n  controllers: [DiscountsController],\n  providers: [\n    DiscountsService,\n    ApplyForDiscountProvider,\n    CreateDiscountProvider,\n  ],\n})\nexport class DiscountsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiscountsService.html":{"url":"injectables/DiscountsService.html","title":"injectable - DiscountsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiscountsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/providers/discounts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                applyForDiscount\n                            \n                            \n                                    Public\n                                    Async\n                                createDiscount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createDiscountProvider: CreateDiscountProvider, applyForDiscountProvider: ApplyForDiscountProvider)\n                    \n                \n                        \n                            \n                                Defined in src/discounts/providers/discounts.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createDiscountProvider\n                                                  \n                                                        \n                                                                        CreateDiscountProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applyForDiscountProvider\n                                                  \n                                                        \n                                                                        ApplyForDiscountProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        applyForDiscount\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyForDiscount(user: ActiveUserData, code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/discounts/providers/discounts.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                discount\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createDiscount\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDiscount(createDiscountDto: CreateDiscountDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/discounts/providers/discounts.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDiscountDto\n                                            \n                                                            CreateDiscountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                created discount object\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateDiscountDto } from '../dtos/create-discount.dto';\nimport { CreateDiscountProvider } from './create-discount.provider';\nimport { Discount } from '../discounts.entity';\nimport { ApplyForDiscountProvider } from './apply-for-discount.provider';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\n\n@Injectable()\nexport class DiscountsService {\n  constructor(\n    /**\n     * injecting the create discount provider\n     */\n    private readonly createDiscountProvider: CreateDiscountProvider,\n\n    /**\n     * injecting the apply for discount provider\n     */\n    private readonly applyForDiscountProvider: ApplyForDiscountProvider,\n  ) {}\n\n  /**\n   * @function creates a discount\n   * @param createDiscountDto\n   * @returns created discount object\n   */\n  public async createDiscount(\n    createDiscountDto: CreateDiscountDto,\n  ): Promise {\n    return await this.createDiscountProvider.createDiscount(createDiscountDto);\n  }\n\n  /**\n   * @function checks the validity of the code and how many times the user has used it\n   * @param user\n   * @param code\n   * @returns discount\n   */\n  public async applyForDiscount(user: ActiveUserData, code: string) {\n    return await this.applyForDiscountProvider.applyForDiscount(user, code);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DiscountsUsageModule.html":{"url":"modules/DiscountsUsageModule.html","title":"module - DiscountsUsageModule","body":"\n                   \n\n\n\n\n    Modules\n    DiscountsUsageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DiscountsUsageModule\n\n\n\ncluster_DiscountsUsageModule_providers\n\n\n\ncluster_DiscountsUsageModule_exports\n\n\n\n\nDiscountsUsageService \n\nDiscountsUsageService \n\n\n\nDiscountsUsageModule\n\nDiscountsUsageModule\n\nDiscountsUsageService  -->\n\nDiscountsUsageModule->DiscountsUsageService \n\n\n\n\n\nDiscountsUsageService\n\nDiscountsUsageService\n\nDiscountsUsageModule -->\n\nDiscountsUsageService->DiscountsUsageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/discounts-usage/discounts-usage.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DiscountsUsageService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DiscountsUsageService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DiscountsUsageService } from './providers/discounts-usage.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { DiscountUsage } from './discounts-usage.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([DiscountUsage])],\n  providers: [DiscountsUsageService],\n  exports: [DiscountsUsageService],\n})\nexport class DiscountsUsageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiscountsUsageService.html":{"url":"injectables/DiscountsUsageService.html","title":"injectable - DiscountsUsageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiscountsUsageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts-usage/providers/discounts-usage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                countDiscountUsage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(discountsUsageRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/discounts-usage/providers/discounts-usage.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        discountsUsageRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        countDiscountUsage\n                        \n                    \n                \n            \n            \n                \n                        \n                    countDiscountUsage(discountId: string, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/discounts-usage/providers/discounts-usage.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                discountId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                discount usage count by a user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { DiscountUsage } from '../discounts-usage.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class DiscountsUsageService {\n  constructor(\n    /**\n     * injecting the discounts usage repository\n     */\n    @InjectRepository(DiscountUsage)\n    private readonly discountsUsageRepository: Repository,\n  ) {}\n\n  /**\n   * @function gets the discount usage count of a user\n   * @param discountId\n   * @param userId\n   * @returns discount usage count by a user\n   */\n  public async countDiscountUsage(discountId: string, userId: string) {\n    let usageCount;\n    try {\n      // Check usage limit\n      usageCount = await this.discountsUsageRepository.count({\n        where: {\n          discount: { id: discountId },\n          user: { id: userId },\n        },\n      });\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    return usageCount;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindAllOrdersProvider.html":{"url":"injectables/FindAllOrdersProvider.html","title":"injectable - FindAllOrdersProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindAllOrdersProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/providers/find-all-orders.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paginationProvider: PaginationProvider, ordersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/orders/providers/find-all-orders.provider.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paginationProvider\n                                                  \n                                                        \n                                                                        PaginationProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ordersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(orderQuery: GetOrdersDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/providers/find-all-orders.provider.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderQuery\n                                            \n                                                            GetOrdersDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                paginated orders\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { GetOrdersDto } from '../dtos/get-orders.dto';\nimport { Paginated } from 'src/common/pagination/interfaces/paginated.interface';\nimport { Order } from '../order.entity';\nimport { PaginationProvider } from 'src/common/pagination/providers/pagination.provider';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class FindAllOrdersProvider {\n  constructor(\n    /**\n     * injecting the pagination provider\n     */\n    private readonly paginationProvider: PaginationProvider,\n\n    /**\n     * injecting the orders repository\n     */\n    @InjectRepository(Order)\n    private readonly ordersRepository: Repository,\n  ) {}\n\n  /**\n   * @function get all orders or all orders from a user\n   * @param orderQuery\n   * @returns paginated orders\n   */\n  public async findAll(orderQuery: GetOrdersDto): Promise> {\n    const { limit, page } = orderQuery;\n\n    const options = {\n      where: orderQuery.userId ? [{ userId: orderQuery.userId }] : null,\n    };\n\n    try {\n      const products = await this.paginationProvider.paginationQuery(\n        {\n          limit: limit,\n          page: page,\n        },\n        this.ordersRepository,\n        options,\n      );\n\n      return products;\n    } catch (error) {\n      throw new NotFoundException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindAllPaymentsProvider.html":{"url":"injectables/FindAllPaymentsProvider.html","title":"injectable - FindAllPaymentsProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindAllPaymentsProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payments/providers/find-all-payments.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paymentRepository: Repository, paginationProvider: PaginationProvider)\n                    \n                \n                        \n                            \n                                Defined in src/payments/providers/find-all-payments.provider.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paymentRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paginationProvider\n                                                  \n                                                        \n                                                                        PaginationProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(paymentQuery: GetPaymentsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/payments/providers/find-all-payments.provider.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paymentQuery\n                                            \n                                                            GetPaymentsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { GetPaymentsDto } from '../dtos/get-payments.dto';\nimport { Repository } from 'typeorm';\nimport { Payment } from '../payment.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { PaginationProvider } from 'src/common/pagination/providers/pagination.provider';\n\n@Injectable()\nexport class FindAllPaymentsProvider {\n  constructor(\n    /**\n     * injecting the payment respository\n     */\n    @InjectRepository(Payment)\n    private readonly paymentRepository: Repository,\n\n    /**\n     * injecting the pagination provider\n     */\n    private readonly paginationProvider: PaginationProvider,\n  ) {}\n\n  public async findAll(paymentQuery: GetPaymentsDto) {\n    const { limit, page } = paymentQuery;\n\n    const options = {\n      where: paymentQuery.userId ? [{ userId: paymentQuery.userId }] : null,\n    };\n\n    try {\n      const products = await this.paginationProvider.paginationQuery(\n        {\n          limit: limit,\n          page: page,\n        },\n        this.paymentRepository,\n        options,\n      );\n\n      return products;\n    } catch (error) {\n      throw new NotFoundException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindAllProductsProvider.html":{"url":"injectables/FindAllProductsProvider.html","title":"injectable - FindAllProductsProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindAllProductsProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/providers/find-all-products.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cleanQuery\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productRepository: Repository, paginationProvider: PaginationProvider)\n                    \n                \n                        \n                            \n                                Defined in src/products/providers/find-all-products.provider.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paginationProvider\n                                                  \n                                                        \n                                                                        PaginationProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cleanQuery\n                        \n                    \n                \n            \n            \n                \n                        \n                    cleanQuery(query: GetProductsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/find-all-products.provider.ts:136\n                        \n                    \n\n\n            \n                \n                        Helper method to clean query by removing undefined parameters\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            GetProductsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GetProductsDto\n\n                        \n                            \n                                GetProductsDto\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(productQuery: GetProductsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/find-all-products.provider.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productQuery\n                                            \n                                                            GetProductsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                a paginated list of products\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { GetProductsDto } from '../dtos/get-product.dto';\nimport { Paginated } from 'src/common/pagination/interfaces/paginated.interface';\nimport { Product } from '../product.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Between, In, Like, Repository } from 'typeorm';\nimport { PaginationProvider } from 'src/common/pagination/providers/pagination.provider';\n\n@Injectable()\nexport class FindAllProductsProvider {\n  constructor(\n    /**\n     * injecting the product repository\n     */\n    @InjectRepository(Product)\n    private readonly productRepository: Repository,\n\n    /**\n     * injecting the pagination provider\n     */\n    private readonly paginationProvider: PaginationProvider,\n  ) {}\n\n  /**\n   * @function finds all products And handle queries for filtering products\n   * @param productQuery\n   * @returns  a paginated list of products\n   */\n  public async findAll(\n    productQuery: GetProductsDto,\n  ): Promise> {\n    const { limit, page, sort } = productQuery;\n\n    console.log('limit', limit);\n\n    const whereOptions = [];\n\n    Object.keys(productQuery).forEach((key) => {\n      if (\n        key === 'limit' ||\n        key === 'page' ||\n        key === 'sort' ||\n        !productQuery[key]\n      ) {\n        return;\n      }\n\n      const conditions = {\n        category: productQuery['category']\n          ? In(productQuery['category'].slice().split(','))\n          : null,\n        price: productQuery['price']\n          ? Between(\n              parseFloat(productQuery['price'].slice().split('-')[0]),\n              parseFloat(productQuery['price'].slice().split('-')[1]),\n            )\n          : null,\n        clothType: productQuery['clothType']\n          ? In(productQuery['clothType'].slice().split(','))\n          : null,\n        dressStyle: productQuery['dressStyle']\n          ? In(productQuery['dressStyle'].slice().split(','))\n          : null,\n        name: productQuery['name']\n          ? Like(`%${productQuery['name'].slice().split('-').join(' ')}%`)\n          : null,\n        variants: {\n          color: productQuery['colors']\n            ? In(productQuery['colors'].slice().split(','))\n            : null,\n          size: productQuery['sizes']\n            ? In(productQuery['sizes'].slice().split(','))\n            : null,\n        },\n      };\n\n      // Remove null nested conditions for variants\n      if (\n        conditions.variants.color === null &&\n        conditions.variants.size === null\n      ) {\n        conditions.variants = null;\n      }\n\n      // Remove undefined conditions\n      const filteredConditions = Object.fromEntries(\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        Object.entries(conditions).filter(([_, v]) => v !== undefined),\n      );\n\n      whereOptions.push(filteredConditions);\n    });\n\n    const checkWhereOptions = Object.keys(whereOptions).length;\n\n    // Define sorting options\n    let order = {};\n\n    // Handle sorting based on creation time\n    if (sort === 'newest') {\n      order = { createdAt: 'DESC' };\n    } else if (sort === 'oldest') {\n      order = { createdAt: 'ASC' };\n    }\n\n    console.log('order: ', order);\n\n    const options = {\n      where: checkWhereOptions ? whereOptions : null,\n      relations: ['variants', 'variants.images'],\n      order: Object.keys(order).length ? order : null,\n    };\n\n    try {\n      const products = await this.paginationProvider.paginationQuery(\n        {\n          limit: limit,\n          page: page,\n          sort: sort,\n        },\n        this.productRepository,\n        options,\n      );\n\n      return products;\n    } catch (error) {\n      throw new NotFoundException(error);\n    }\n  }\n\n  /**\n   * Helper method to clean query by removing undefined parameters\n   * @param query\n   * @returns GetProductsDto\n   */\n  private cleanQuery(query: GetProductsDto): GetProductsDto {\n    return Object.fromEntries(\n      Object.entries(query).filter(\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        ([_, value]) =>\n          value !== 'undefined' && value !== undefined && value !== '',\n      ),\n    ) as GetProductsDto;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindAllSubscribersProvider.html":{"url":"injectables/FindAllSubscribersProvider.html","title":"injectable - FindAllSubscribersProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindAllSubscribersProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/providers/find-all-subscribers.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paginationProvider: PaginationProvider, ordersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/subscribers/providers/find-all-subscribers.provider.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paginationProvider\n                                                  \n                                                        \n                                                                        PaginationProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ordersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(subscriberQuery: GetSubscribersDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/providers/find-all-subscribers.provider.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                subscriberQuery\n                                            \n                                                            GetSubscribersDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                paginated orders\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { PaginationProvider } from 'src/common/pagination/providers/pagination.provider';\nimport { Subscriber } from '../subscriber.entity';\nimport { Repository } from 'typeorm';\nimport { GetSubscribersDto } from '../dtos/get-subscribers.dto';\nimport { Paginated } from 'src/common/pagination/interfaces/paginated.interface';\n\n@Injectable()\nexport class FindAllSubscribersProvider {\n  constructor(\n    /**\n     * injecting the pagination provider\n     */\n    private readonly paginationProvider: PaginationProvider,\n\n    /**\n     * injecting the orders repository\n     */\n    @InjectRepository(Subscriber)\n    private readonly ordersRepository: Repository,\n  ) {}\n\n  /**\n   * @function get all orders or all orders from a user\n   * @param orderQuery\n   * @returns paginated orders\n   */\n  public async findAll(\n    subscriberQuery: GetSubscribersDto,\n  ): Promise> {\n    const { limit, page } = subscriberQuery;\n\n    const options = {};\n\n    try {\n      const products = await this.paginationProvider.paginationQuery(\n        {\n          limit: limit,\n          page: page,\n        },\n        this.ordersRepository,\n        options,\n      );\n\n      return products;\n    } catch (error) {\n      throw new NotFoundException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindOneByIdProvider.html":{"url":"injectables/FindOneByIdProvider.html","title":"injectable - FindOneByIdProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindOneByIdProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/find-one-by-id.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider class for finding one user by id\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/find-one-by-id.provider.ts:14\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/find-one-by-id.provider.ts:32\n                        \n                    \n\n\n            \n                \n                        function for finding user based on id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { User } from '../user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n/**\n * provider class for finding one user by id\n */\n@Injectable()\nexport class FindOneByIdProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * injecting user repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for finding user based on id\n   * @param id\n   * @returns user\n   */\n  public async findById(id: string) {\n    let user;\n    try {\n      user = await this.usersRepository.findOneBy({\n        id,\n      });\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (err: any) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    /**\n     * Handle the user does not exist\n     */\n    if (!user) {\n      throw new BadRequestException('The user does not exist');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindOneUserByEmailProvider.html":{"url":"injectables/FindOneUserByEmailProvider.html","title":"injectable - FindOneUserByEmailProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindOneUserByEmailProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/find-one-user-by-email.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for finding user based on email\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findOneByEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/find-one-user-by-email.provider.ts:14\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/find-one-user-by-email.provider.ts:32\n                        \n                    \n\n\n            \n                \n                        function for finding user based on email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  RequestTimeoutException,\n  // UnauthorizedException,\n} from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { User } from '../user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n/**\n * provider for finding user based on email\n */\n@Injectable()\nexport class FindOneUserByEmailProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * Injecting usersRepository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for finding user based on email\n   * @param email\n   * @returns user\n   */\n  public async findOneByEmail(email: string) {\n    let user: User | undefined = undefined;\n\n    try {\n      user = await this.usersRepository.findOne({\n        where: { email: email },\n        select: ['id', 'email', 'role'],\n      });\n    } catch (error) {\n      throw new RequestTimeoutException(error, {\n        description: 'Could not fetch the user',\n      });\n    }\n\n    // if (!user) {\n    //   throw new UnauthorizedException('User does not exist');\n    // }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{"url":"injectables/FindUserByOtpAndExpiryTimeProvider.html","title":"injectable - FindUserByOtpAndExpiryTimeProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindUserByOtpAndExpiryTimeProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/find-user-by-reset-otp-and-expiry-time.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider class for finding user based on stored reset token and expiry time\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findUserByOtpAndExpiryTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/find-user-by-reset-otp-and-expiry-time.provider.ts:14\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findUserByOtpAndExpiryTime\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserByOtpAndExpiryTime(otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/find-user-by-reset-otp-and-expiry-time.provider.ts:32\n                        \n                    \n\n\n            \n                \n                        function for finding a user based on the stored reset token and expiry time\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  RequestTimeoutException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { MoreThan, Repository } from 'typeorm';\nimport { User } from '../user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n/**\n * provider class for finding user based on stored reset token and expiry time\n */\n@Injectable()\nexport class FindUserByOtpAndExpiryTimeProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * injecting the users repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for finding a user based on the stored reset token and expiry time\n   * @param otp\n   * @returns user\n   */\n  public async findUserByOtpAndExpiryTime(otp: string) {\n    let user;\n\n    try {\n      user = await this.usersRepository.find({\n        where: {\n          otp: otp,\n          otpExpire: MoreThan(new Date()),\n        },\n      });\n    } catch (error) {\n      throw new RequestTimeoutException(error, {\n        description: 'Could not fetch the user',\n      });\n    }\n\n    if (!user[0]) {\n      throw new UnauthorizedException('Otp is no longer valid');\n    }\n\n    return user[0];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GenerateTokensProvider.html":{"url":"injectables/GenerateTokensProvider.html","title":"injectable - GenerateTokensProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GenerateTokensProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/generate-tokens.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for generating tokens\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                generateTokens\n                            \n                            \n                                    Public\n                                    Async\n                                signToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConfiguration: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/generate-tokens.provider.ts:12\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        generateTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateTokens(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/generate-tokens.provider.ts:58\n                        \n                    \n\n\n            \n                \n                        function for generating tokens\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                access and refresh tokens\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        signToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    signToken(userId: string, expiresIn: number, payload?: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/generate-tokens.provider.ts:38\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        function for using jwt to sign the user info\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                expiresIn\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                the object containing payload when a user signs in\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport jwtConfig from '../config/jwt.config';\nimport { ConfigType } from '@nestjs/config';\nimport { ActiveUserData } from '../interfaces/active-user-data.interface';\nimport { User } from 'src/users/user.entity';\n\n/**\n * provider for generating tokens\n */\n@Injectable()\nexport class GenerateTokensProvider {\n  /**\n   * constructor\n   * @param jwtService\n   * @param jwtConfiguration\n   */\n  constructor(\n    /**\n     * Injecting the jwt service\n     */\n    private readonly jwtService: JwtService,\n\n    /**\n     * Injecting the jwt config\n     */\n    @Inject(jwtConfig.KEY)\n    private readonly jwtConfiguration: ConfigType,\n  ) {}\n\n  /**\n   * function for using jwt to sign the user info\n   * @param userId\n   * @param expiresIn\n   * @param payload\n   * @returns the object containing payload when a user signs in\n   */\n  public async signToken(userId: string, expiresIn: number, payload?: T) {\n    return await this.jwtService.signAsync(\n      {\n        sub: userId,\n        ...payload,\n      },\n      {\n        audience: this.jwtConfiguration.audience,\n        issuer: this.jwtConfiguration.issuer,\n        secret: this.jwtConfiguration.secret,\n        expiresIn,\n      },\n    );\n  }\n\n  /**\n   * function for generating tokens\n   * @param user\n   * @returns access and refresh tokens\n   */\n  public async generateTokens(user: User) {\n    const [accessToken, refreshToken] = await Promise.all([\n      // Generate the access token\n      this.signToken>(\n        user.id,\n        this.jwtConfiguration.accessTokenTtl,\n        {\n          email: user.email,\n          role: user.role,\n        },\n      ),\n      // Generate the refresh token\n      this.signToken(user.id, this.jwtConfiguration.refreshTokenTtl),\n    ]);\n\n    return {\n      accessToken,\n      refreshToken,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetOrdersBaseDto.html":{"url":"classes/GetOrdersBaseDto.html","title":"class - GetOrdersBaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetOrdersBaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/dtos/get-orders.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                base dto fot products\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dtos/get-orders.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from 'class-validator';\nimport { IntersectionType } from '@nestjs/swagger';\nimport { PaginationQueryDto } from 'src/common/pagination/dtos/pagination-query.dto';\n\n/**\n * base dto fot products\n */\nclass GetOrdersBaseDto {\n  @IsString()\n  @IsOptional()\n  userId?: string;\n}\n\n/**\n * dto for get events\n */\nexport class GetOrdersDto extends IntersectionType(\n  GetOrdersBaseDto,\n  PaginationQueryDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetOrdersDto.html":{"url":"classes/GetOrdersDto.html","title":"class - GetOrdersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetOrdersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/dtos/get-orders.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto for get events\n\n            \n\n            \n                Extends\n            \n            \n                            IntersectionType(\n  GetOrdersBaseDto,\n  PaginationQueryDto,\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from 'class-validator';\nimport { IntersectionType } from '@nestjs/swagger';\nimport { PaginationQueryDto } from 'src/common/pagination/dtos/pagination-query.dto';\n\n/**\n * base dto fot products\n */\nclass GetOrdersBaseDto {\n  @IsString()\n  @IsOptional()\n  userId?: string;\n}\n\n/**\n * dto for get events\n */\nexport class GetOrdersDto extends IntersectionType(\n  GetOrdersBaseDto,\n  PaginationQueryDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetPaymentsBaseDto.html":{"url":"classes/GetPaymentsBaseDto.html","title":"class - GetPaymentsBaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetPaymentsBaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payments/dtos/get-payments.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                base dto fot products\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payments/dtos/get-payments.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from 'class-validator';\nimport { IntersectionType } from '@nestjs/swagger';\nimport { PaginationQueryDto } from 'src/common/pagination/dtos/pagination-query.dto';\n\n/**\n * base dto fot products\n */\nclass GetPaymentsBaseDto {\n  @IsString()\n  @IsOptional()\n  userId?: string;\n}\n\n/**\n * dto for get events\n */\nexport class GetPaymentsDto extends IntersectionType(\n  GetPaymentsBaseDto,\n  PaginationQueryDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetPaymentsDto.html":{"url":"classes/GetPaymentsDto.html","title":"class - GetPaymentsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetPaymentsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payments/dtos/get-payments.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto for get events\n\n            \n\n            \n                Extends\n            \n            \n                            IntersectionType(\n  GetPaymentsBaseDto,\n  PaginationQueryDto,\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from 'class-validator';\nimport { IntersectionType } from '@nestjs/swagger';\nimport { PaginationQueryDto } from 'src/common/pagination/dtos/pagination-query.dto';\n\n/**\n * base dto fot products\n */\nclass GetPaymentsBaseDto {\n  @IsString()\n  @IsOptional()\n  userId?: string;\n}\n\n/**\n * dto for get events\n */\nexport class GetPaymentsDto extends IntersectionType(\n  GetPaymentsBaseDto,\n  PaginationQueryDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProductsBaseDto.html":{"url":"classes/GetProductsBaseDto.html","title":"class - GetProductsBaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProductsBaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/get-product.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                base dto fot products\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                category\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                clothType\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                colors\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                dressStyle\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                price\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                sizes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:21\n                        \n                    \n\n            \n                \n                    product category\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        clothType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:28\n                        \n                    \n\n            \n                \n                    productClothType\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        colors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:42\n                        \n                    \n\n            \n                \n                    product colors\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        dressStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:56\n                        \n                    \n\n            \n                \n                    product dressing style\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:14\n                        \n                    \n\n            \n                \n                    product name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:35\n                        \n                    \n\n            \n                \n                    product price\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        sizes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:49\n                        \n                    \n\n            \n                \n                    product sizes\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from 'class-validator';\nimport { IntersectionType } from '@nestjs/swagger';\nimport { PaginationQueryDto } from 'src/common/pagination/dtos/pagination-query.dto';\n\n/**\n * base dto fot products\n */\nclass GetProductsBaseDto {\n  /**\n   * product name\n   */\n  @IsString()\n  @IsOptional()\n  name?: string;\n\n  /**\n   * product category\n   */\n  @IsString()\n  @IsOptional()\n  category?: string;\n\n  /**\n   * productClothType\n   */\n  @IsString()\n  @IsOptional()\n  clothType?: string;\n\n  /**\n   * product price\n   */\n  @IsString()\n  @IsOptional()\n  price?: string;\n\n  /**\n   * product colors\n   */\n  @IsString()\n  @IsOptional()\n  colors?: string;\n\n  /**\n   * product sizes\n   */\n  @IsString()\n  @IsOptional()\n  sizes?: string;\n\n  /**\n   * product dressing style\n   */\n  @IsString()\n  @IsOptional()\n  dressStyle?: string;\n}\n\n/**\n * dto for get events\n */\nexport class GetProductsDto extends IntersectionType(\n  GetProductsBaseDto,\n  PaginationQueryDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProductsDto.html":{"url":"classes/GetProductsDto.html","title":"class - GetProductsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProductsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/get-product.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto for get events\n\n            \n\n            \n                Extends\n            \n            \n                            IntersectionType(\n  GetProductsBaseDto,\n  PaginationQueryDto,\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from 'class-validator';\nimport { IntersectionType } from '@nestjs/swagger';\nimport { PaginationQueryDto } from 'src/common/pagination/dtos/pagination-query.dto';\n\n/**\n * base dto fot products\n */\nclass GetProductsBaseDto {\n  /**\n   * product name\n   */\n  @IsString()\n  @IsOptional()\n  name?: string;\n\n  /**\n   * product category\n   */\n  @IsString()\n  @IsOptional()\n  category?: string;\n\n  /**\n   * productClothType\n   */\n  @IsString()\n  @IsOptional()\n  clothType?: string;\n\n  /**\n   * product price\n   */\n  @IsString()\n  @IsOptional()\n  price?: string;\n\n  /**\n   * product colors\n   */\n  @IsString()\n  @IsOptional()\n  colors?: string;\n\n  /**\n   * product sizes\n   */\n  @IsString()\n  @IsOptional()\n  sizes?: string;\n\n  /**\n   * product dressing style\n   */\n  @IsString()\n  @IsOptional()\n  dressStyle?: string;\n}\n\n/**\n * dto for get events\n */\nexport class GetProductsDto extends IntersectionType(\n  GetProductsBaseDto,\n  PaginationQueryDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSubscribersBaseDto.html":{"url":"classes/GetSubscribersBaseDto.html","title":"class - GetSubscribersBaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSubscribersBaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dtos/get-subscribers.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                base dto fot products\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IntersectionType } from '@nestjs/swagger';\nimport { PaginationQueryDto } from 'src/common/pagination/dtos/pagination-query.dto';\n\n/**\n * base dto fot products\n */\nclass GetSubscribersBaseDto {}\n\n/**\n * dto for get events\n */\nexport class GetSubscribersDto extends IntersectionType(\n  GetSubscribersBaseDto,\n  PaginationQueryDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSubscribersDto.html":{"url":"classes/GetSubscribersDto.html","title":"class - GetSubscribersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSubscribersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dtos/get-subscribers.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto for get events\n\n            \n\n            \n                Extends\n            \n            \n                            IntersectionType(\n  GetSubscribersBaseDto,\n  PaginationQueryDto,\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IntersectionType } from '@nestjs/swagger';\nimport { PaginationQueryDto } from 'src/common/pagination/dtos/pagination-query.dto';\n\n/**\n * base dto fot products\n */\nclass GetSubscribersBaseDto {}\n\n/**\n * dto for get events\n */\nexport class GetSubscribersDto extends IntersectionType(\n  GetSubscribersBaseDto,\n  PaginationQueryDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersBaseDto.html":{"url":"classes/GetUsersBaseDto.html","title":"class - GetUsersBaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersBaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/get-user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto class for get user base\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                endDate\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/get-user.dto.ts:21\n                        \n                    \n\n            \n                \n                    end date\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/get-user.dto.ts:14\n                        \n                    \n\n            \n                \n                    start date\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IntersectionType } from '@nestjs/swagger';\nimport { IsDate, IsOptional } from 'class-validator';\nimport { PaginationQueryDto } from 'src/common/pagination/dtos/pagination-query.dto';\n\n/**\n * dto class for get user base\n */\nexport class GetUsersBaseDto {\n  /**\n   * start date\n   */\n  @IsDate()\n  @IsOptional()\n  startDate?: Date;\n\n  /**\n   * end date\n   */\n  @IsDate()\n  @IsOptional()\n  endDate?: Date;\n}\n\n/**\n * dto class for get user\n */\nexport class GetUsersDto extends IntersectionType(\n  GetUsersBaseDto,\n  PaginationQueryDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersDto.html":{"url":"classes/GetUsersDto.html","title":"class - GetUsersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/get-user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto class for get user\n\n            \n\n            \n                Extends\n            \n            \n                            IntersectionType(\n  GetUsersBaseDto,\n  PaginationQueryDto,\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IntersectionType } from '@nestjs/swagger';\nimport { IsDate, IsOptional } from 'class-validator';\nimport { PaginationQueryDto } from 'src/common/pagination/dtos/pagination-query.dto';\n\n/**\n * dto class for get user base\n */\nexport class GetUsersBaseDto {\n  /**\n   * start date\n   */\n  @IsDate()\n  @IsOptional()\n  startDate?: Date;\n\n  /**\n   * end date\n   */\n  @IsDate()\n  @IsOptional()\n  endDate?: Date;\n}\n\n/**\n * dto class for get user\n */\nexport class GetUsersDto extends IntersectionType(\n  GetUsersBaseDto,\n  PaginationQueryDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitiatePaymentDto.html":{"url":"classes/InitiatePaymentDto.html","title":"class - InitiatePaymentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitiatePaymentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/dtos/initiate-payment.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                deliveryAddress\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                deliveryPicker\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                discountId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                products\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        deliveryAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dtos/initiate-payment.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        deliveryPicker\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dtos/initiate-payment.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        discountId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dtos/initiate-payment.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductWithVariantDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsNotEmpty()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dtos/initiate-payment.dto.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsInt,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { PatchProductVariantDto } from 'src/product-variants/dto/patch-product-variant.dto';\n\nclass ProductWithVariantDto {\n  @IsString()\n  @IsNotEmpty()\n  productId: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  price: number;\n\n  @IsArray()\n  @IsNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => PatchProductVariantDto)\n  variants: PatchProductVariantDto[];\n}\n\nexport class InitiatePaymentDto {\n  @IsString()\n  @IsOptional()\n  deliveryPicker?: string;\n\n  @IsString()\n  @IsOptional()\n  deliveryAddress?: string;\n\n  @IsString()\n  @IsOptional()\n  discountId?: string;\n\n  @IsArray()\n  @IsNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => ProductWithVariantDto)\n  products: ProductWithVariantDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InitiatePaymentProvider.html":{"url":"injectables/InitiatePaymentProvider.html","title":"injectable - InitiatePaymentProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InitiatePaymentProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/providers/initiate-payment.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAuthHeader\n                            \n                            \n                                    Public\n                                    Async\n                                initializePayment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paystackConfiguration: ConfigType<>, dataSource: DataSource, usersService: UsersService, configService: ConfigService, productVariantsService: ProductVariantsService)\n                    \n                \n                        \n                            \n                                Defined in src/paystack/providers/initiate-payment.provider.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paystackConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productVariantsService\n                                                  \n                                                        \n                                                                        ProductVariantsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAuthHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAuthHeader()\n                \n            \n\n\n                    \n                        \n                            Defined in src/paystack/providers/initiate-payment.provider.ts:55\n                        \n                    \n\n\n            \n                \n                        function for getting the auth header\n\n\n                        \n                            Returns :         { Authorization: string; }\n\n                        \n                            \n                                authorization header for paystack\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        initializePayment\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializePayment(initiatePaymentDto: InitiatePaymentDto, user: ActiveUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paystack/providers/initiate-payment.provider.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                initiatePaymentDto\n                                            \n                                                            InitiatePaymentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  Inject,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { InitiatePaymentDto } from '../dtos/initiate-payment.dto';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\nimport paystackConfig from '../config/paystack.config';\nimport { ConfigService, ConfigType } from '@nestjs/config';\nimport { DataSource } from 'typeorm';\nimport axios from 'axios';\nimport { UsersService } from 'src/users/providers/users.service';\nimport { Payment } from 'src/payments/payment.entity';\nimport { paymentStatus } from 'src/payments/enums/paymentStatus.enum';\nimport { User } from 'src/users/user.entity';\nimport { ProductVariantsService } from 'src/product-variants/providers/product-variants.service';\nimport { Discount } from 'src/discounts/discounts.entity';\nimport { PaymentMethod } from 'src/payments/enums/payment-method.enum';\n\n@Injectable()\nexport class InitiatePaymentProvider {\n  constructor(\n    /**\n     * injecting the paystack config\n     */\n    @Inject(paystackConfig.KEY)\n    private readonly paystackConfiguration: ConfigType,\n\n    /**\n     * Injecting datasource\n     */\n    private readonly dataSource: DataSource,\n\n    /**\n     * injecting the users service\n     */\n    private readonly usersService: UsersService,\n\n    /**\n     * injecting config service\n     */\n    private readonly configService: ConfigService,\n\n    /**\n     * injecting the product variants service\n     */\n    private readonly productVariantsService: ProductVariantsService,\n  ) {}\n\n  /**\n   * function for getting the auth header\n   * @returns authorization header for paystack\n   */\n  private getAuthHeader() {\n    return { Authorization: `Bearer ${this.paystackConfiguration.secret}` };\n  }\n\n  public async initializePayment(\n    initiatePaymentDto: InitiatePaymentDto,\n    user: ActiveUserData,\n  ) {\n    // start transaction\n    // create Query Runner instance\n    const queryRunner = this.dataSource.createQueryRunner();\n    try {\n      // connect query runner to datasource\n      await queryRunner.connect();\n\n      // start transaction\n      await queryRunner.startTransaction();\n    } catch (error) {\n      console.log(error);\n      throw new RequestTimeoutException('Could not connect to datasource');\n    }\n\n    // find the user\n    const buyer: User = await this.usersService.findOneById(user.sub);\n\n    let discount: Discount;\n    // find the discount if there is one\n    if (initiatePaymentDto.discountId) {\n      discount = await queryRunner.manager.findOne(Discount, {\n        where: { id: initiatePaymentDto.discountId },\n      });\n    }\n\n    // user info should have details about address but if there is a set delivery address then use that\n    const deliveryAddress =\n      initiatePaymentDto.deliveryAddress ??\n      `${buyer.streetAddress}, ${buyer.city}, ${buyer.state}`;\n\n    const deliveryPicker =\n      initiatePaymentDto.deliveryPicker ??\n      `${buyer.firstName} ${buyer.lastName}`;\n\n    // calculate the total amount\n    let totalAmount = initiatePaymentDto.products\n      .map((prd) => {\n        // loop through inner variants\n        const totalQty = prd.variants\n          .map((vr) => vr.quantity)\n          .reduce((acc, cur) => cur + acc, 0);\n\n        return prd.price * totalQty;\n      })\n      .reduce((acc, cur) => acc + cur, 0);\n\n    totalAmount = initiatePaymentDto.discountId\n      ? totalAmount - (discount.percentOff / 100) * totalAmount\n      : totalAmount;\n\n    // initialize payment\n    let response;\n\n    try {\n      // Iterate through each product in the request\n      for (const product of initiatePaymentDto.products) {\n        const { productId, variants } = product;\n\n        // Iterate through each variant the user wants to buy\n        for (const variantDto of variants) {\n          const { id: variantId, quantity } = variantDto;\n\n          // check availability\n          await this.productVariantsService.checkVariantAvailability(\n            queryRunner.manager,\n            variantId,\n            productId,\n            quantity,\n          );\n        }\n      }\n\n      response = await axios.post(\n        `${this.paystackConfiguration.baseUrl}/transaction/initialize`,\n        {\n          email: buyer.email,\n          metadata: {\n            products: initiatePaymentDto.products,\n            user: buyer,\n            deliveryAddress,\n            deliveryPicker,\n            totalAmount,\n            discount: discount ?? {},\n          },\n          amount: totalAmount * 100,\n          callback_url: `${this.configService.get('appConfig.host')}/collections?success=yes`,\n        }, // Paystack accepts amounts in kobo\n        { headers: this.getAuthHeader() },\n      );\n\n      // Create payment record\n      await queryRunner.manager.save(Payment, {\n        userId: buyer.id,\n        amount: totalAmount,\n        provider: 'paystack',\n        method: PaymentMethod.ONLINE,\n        providerReference: response.data.data.reference,\n        status: paymentStatus.PENDING,\n        authorizationUrl: response.data.data.authorization_url,\n      });\n\n      // if successful commit\n      // ensures the txn is committed to the db\n      await queryRunner.commitTransaction();\n\n      return response.data;\n    } catch (error) {\n      // we rollback the txn here if it is not successful\n      await queryRunner.rollbackTransaction();\n      throw new ConflictException('Could not complete the transaction', {\n        description: String(error),\n      });\n    } finally {\n      // relsease the connection\n      // release connection whether it was successful or not\n      try {\n        await queryRunner.release();\n      } catch (error) {\n        throw new RequestTimeoutException('Could not release the connection', {\n          description: String(error),\n        });\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { MailService } from './providers/mail.service';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { ConfigService } from '@nestjs/config';\nimport { join } from 'path';\nimport { EjsAdapter } from '@nestjs-modules/mailer/dist/adapters/ejs.adapter';\n\n// makes importation of mail module to any module\n@Global()\n@Module({\n  imports: [\n    MailerModule.forRootAsync({\n      // we need the config service to configure the mailer module\n      inject: [ConfigService],\n      // we use the useFactory to inject the mailer module\n      useFactory: async (config: ConfigService) => {\n        // console.log(\n        //   config.get('appConfig.mailHost'),\n        //   config.get('appConfig.smtpUsername'),\n        //   config.get('appConfig.smtpPassword'),\n        // );\n        return {\n          transport: {\n            host: config.get('appConfig.mailHost'),\n            secure: true,\n            port: 465,\n            auth: {\n              user: config.get('appConfig.smtpUsername'),\n              pass: config.get('appConfig.smtpPassword'),\n            },\n            // tls: { rejectUnauthorized: false },\n          },\n          default: {\n            from: `Nich Fashion `,\n          },\n          template: {\n            dir: join(__dirname, 'templates'),\n            adapter: new EjsAdapter({\n              inlineCssEnabled: true,\n            }),\n            options: {\n              strict: false,\n            },\n          },\n        };\n      },\n    }),\n  ],\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/providers/mail.service.ts\n        \n\n\n            \n                Description\n            \n            \n                service for the mail module\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                sendLoginOtp\n                            \n                            \n                                    Public\n                                    Async\n                                sendProductPurchaseMail\n                            \n                            \n                                    Public\n                                    Async\n                                sendResetOtp\n                            \n                            \n                                    Public\n                                    Async\n                                sendSubscriberMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService)\n                    \n                \n                        \n                            \n                                Defined in src/mail/providers/mail.service.ts:13\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendLoginOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendLoginOtp(user: User, otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/providers/mail.service.ts:49\n                        \n                    \n\n\n            \n                \n                        function for sending reset otp mail to user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendProductPurchaseMail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendProductPurchaseMail(user: User, products: Product[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/providers/mail.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                products\n                                            \n                                                            Product[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendResetOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendResetOtp(user: User, otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/providers/mail.service.ts:30\n                        \n                    \n\n\n            \n                \n                        function for sending reset otp mail to user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendSubscriberMail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendSubscriberMail(subscriber: Subscriber)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/providers/mail.service.ts:83\n                        \n                    \n\n\n            \n                \n                        function for sending mail to user when they subscribe to the newsletter\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                subscriber\n                                            \n                                                            Subscriber\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ROOT_PATH } from '../../config/paths.config';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { Injectable } from '@nestjs/common';\nimport * as path from 'path';\nimport { Product } from 'src/products/product.entity';\nimport { Subscriber } from 'src/subscribers/subscriber.entity';\nimport { User } from 'src/users/user.entity';\n\n/**\n * service for the mail module\n */\n@Injectable()\nexport class MailService {\n  /**\n   * constructor\n   * @param mailerService\n   */\n  constructor(\n    /**\n     * injecting mailer service\n     */\n    private mailerService: MailerService,\n  ) {}\n\n  /**\n   * function for sending reset otp mail to user\n   * @param user\n   * @param otp\n   */\n  public async sendResetOtp(user: User, otp: string): Promise {\n    await this.mailerService.sendMail({\n      to: user.email,\n      from: `Ticket Hive - Support Team  `,\n      subject: `🔐 Reset Your Password – Let's Get You Back on Track!`,\n      template: path.join(ROOT_PATH, '/src/mail/templates/resetOtp.ejs'),\n      context: {\n        // fullname: user.fullname,\n        email: user.email,\n        otp: otp,\n      },\n    });\n  }\n\n  /**\n   * function for sending reset otp mail to user\n   * @param user\n   * @param otp\n   */\n  public async sendLoginOtp(user: User, otp: string): Promise {\n    await this.mailerService.sendMail({\n      to: user.email,\n      from: `Nich Fashion - Team  `,\n      subject: `🔐 Login to Nich Fashion- Get your best wears`,\n      template: path.join(ROOT_PATH, '/src/mail/templates/loginOtp.ejs'),\n      context: {\n        email: user.email,\n        otp: otp,\n      },\n    });\n  }\n\n  public async sendProductPurchaseMail(\n    user: User,\n    products: Product[],\n  ): Promise {\n    await this.mailerService.sendMail({\n      to: user.email,\n      from: `Nich Fashion - Team  `,\n      subject: `🎟️ Your Product(s) Purchase Confirmation – Nich Fashion`,\n      template: path.join(ROOT_PATH, '/src/mail/templates/productBought.ejs'),\n      context: {\n        firstName: user.firstName,\n        email: user.email,\n        products: products,\n      },\n    });\n  }\n\n  /**\n   * function for sending mail to user when they subscribe to the newsletter\n   * @param subscriber\n   */\n  public async sendSubscriberMail(subscriber: Subscriber): Promise {\n    await this.mailerService.sendMail({\n      to: subscriber.email,\n      from: `Nich Fashion - Team  `,\n      subject: `Welcome to Nich Fashion's Newsletter! 🎉`,\n      template: path.join(ROOT_PATH, '/src/mail/templates/subscription.ejs'),\n      context: {\n        email: subscriber.email,\n        id: subscriber.id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Order.html":{"url":"entities/Order.html","title":"entity - Order","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/order.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                carrier\n                            \n                            \n                                    \n                                    Optional\n                                carrierPhoneNumber\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deliveryAddress\n                            \n                            \n                                    \n                                deliveryPicker\n                            \n                            \n                                    \n                                    Optional\n                                discountApplied\n                            \n                            \n                                    \n                                discountUsage\n                            \n                            \n                                    \n                                    Optional\n                                estimatedDeliveryDate\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                orderStatus\n                            \n                            \n                                    \n                                    \n                                payment\n                            \n                            \n                                    \n                                totalAmount\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        carrier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        carrierPhoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deliveryAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deliveryPicker\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        discountApplied\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        discountUsage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DiscountUsage\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, discountUsage => discountUsage.order)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        estimatedDeliveryDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        orderStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: OrderStatus, default: undefined, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        payment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Payment\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, {eager: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:52\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  JoinColumn,\n  // JoinTable,\n  // ManyToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { OrderStatus } from './enums/order-status.enum';\n// import { Product } from 'src/products/product.entity';\nimport { DiscountUsage } from 'src/discounts-usage/discounts-usage.entity';\nimport { Payment } from 'src/payments/payment.entity';\n\n@Entity()\nexport class Order {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @Column({\n    type: 'enum',\n    enum: OrderStatus,\n    default: OrderStatus.PLACED,\n    nullable: false,\n  })\n  orderStatus: OrderStatus;\n\n  @Column({ nullable: true })\n  carrier?: string;\n\n  @Column({ nullable: true })\n  carrierPhoneNumber?: string;\n\n  @Column()\n  deliveryAddress: string;\n\n  @Column()\n  deliveryPicker: string;\n\n  @Column({ nullable: true })\n  estimatedDeliveryDate?: Date;\n\n  @Column()\n  userId: string;\n\n  @Column('decimal', { nullable: true })\n  discountApplied?: number;\n\n  @OneToOne(() => DiscountUsage, (discountUsage) => discountUsage.order)\n  discountUsage: DiscountUsage;\n\n  @Column()\n  totalAmount: number;\n\n  // @ManyToMany(() => Product)\n  // @JoinTable({\n  //   name: 'orders_products',\n  //   joinColumn: { name: 'orderId', referencedColumnName: 'id' },\n  //   inverseJoinColumn: { name: 'productId', referencedColumnName: 'id' },\n  // })\n  // products: Product[];\n\n  @OneToOne(() => Payment, { eager: true })\n  @JoinColumn()\n  payment: Payment;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrdersController.html":{"url":"controllers/OrdersController.html","title":"controller - OrdersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrdersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/orders.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                orders\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                findAllOrders\n                            \n                            \n                                    \n                                    Public\n                                findOrderById\n                            \n                            \n                                    \n                                    \n                                    Public\n                                updateOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        findAllOrders\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllOrders(orderQuery: GetOrdersDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('')\n                \n            \n\n                    \n                        \n                            Defined in src/orders/orders.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderQuery\n                                            \n                                                            GetOrdersDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        findOrderById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOrderById(orderId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:orderId')\n                \n            \n\n                    \n                        \n                            Defined in src/orders/orders.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        updateOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOrder(patchOrderDto: PatchOrderDto, orderId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:orderId')@Roles(Role.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/orders/orders.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchOrderDto\n                                            \n                                                            PatchOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                orderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Query } from '@nestjs/common';\nimport { PatchOrderDto } from './dtos/patch-order.dto';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { Role } from 'src/auth/enums/role-type.enum';\nimport { OrdersService } from './providers/orders.service';\nimport { GetOrdersDto } from './dtos/get-orders.dto';\n\n@Controller('orders')\nexport class OrdersController {\n  constructor(\n    /**\n     * injecting the orders service\n     */\n    private readonly ordersService: OrdersService,\n  ) {}\n\n  @Patch('/:orderId')\n  @Roles(Role.ADMIN)\n  public updateOrder(\n    @Body() patchOrderDto: PatchOrderDto,\n    @Param('orderId') orderId: string,\n  ) {\n    return this.ordersService.updateOrder(patchOrderDto, orderId);\n  }\n\n  @Get('/:orderId')\n  public findOrderById(@Param('orderId') orderId: string) {\n    return this.ordersService.findOrderById(orderId);\n  }\n\n  @Get('')\n  public findAllOrders(@Query() orderQuery: GetOrdersDto) {\n    return this.ordersService.findAll(orderQuery);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrdersModule.html":{"url":"modules/OrdersModule.html","title":"module - OrdersModule","body":"\n                   \n\n\n\n\n    Modules\n    OrdersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_imports\n\n\n\ncluster_OrdersModule_providers\n\n\n\n\nPaginationModule\n\nPaginationModule\n\n\n\nOrdersModule\n\nOrdersModule\n\nOrdersModule -->\n\nPaginationModule->OrdersModule\n\n\n\n\n\nFindAllOrdersProvider\n\nFindAllOrdersProvider\n\nOrdersModule -->\n\nFindAllOrdersProvider->OrdersModule\n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/orders/orders.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FindAllOrdersProvider\n                        \n                        \n                            OrdersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrdersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PaginationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrdersController } from './orders.controller';\nimport { OrdersService } from './providers/orders.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Order } from './order.entity';\nimport { FindAllOrdersProvider } from './providers/find-all-orders.provider';\nimport { PaginationModule } from 'src/common/pagination/pagination.module';\n\n@Module({\n  imports: [PaginationModule, TypeOrmModule.forFeature([Order])],\n  controllers: [OrdersController],\n  providers: [OrdersService, FindAllOrdersProvider],\n})\nexport class OrdersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrdersService.html":{"url":"injectables/OrdersService.html","title":"injectable - OrdersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrdersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/providers/orders.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOrderById\n                            \n                            \n                                    Public\n                                    Async\n                                updateOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ordersRepository: Repository, findAllOrdersProvider: FindAllOrdersProvider)\n                    \n                \n                        \n                            \n                                Defined in src/orders/providers/orders.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ordersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        findAllOrdersProvider\n                                                  \n                                                        \n                                                                        FindAllOrdersProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(orderQuery: GetOrdersDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/providers/orders.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderQuery\n                                            \n                                                            GetOrdersDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                paginated orders\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOrderById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOrderById(orderId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/providers/orders.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOrder(patchOrderDto: PatchOrderDto, orderId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/providers/orders.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchOrderDto\n                                            \n                                                            PatchOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                orderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Order } from '../order.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { PatchOrderDto } from '../dtos/patch-order.dto';\nimport { FindAllOrdersProvider } from './find-all-orders.provider';\nimport { GetOrdersDto } from '../dtos/get-orders.dto';\nimport { Paginated } from 'src/common/pagination/interfaces/paginated.interface';\n\n@Injectable()\nexport class OrdersService {\n  constructor(\n    /**\n     * injecting the orders repository\n     */\n    @InjectRepository(Order)\n    private readonly ordersRepository: Repository,\n\n    /**\n     * injecting the find all orders provider\n     */\n    private readonly findAllOrdersProvider: FindAllOrdersProvider,\n  ) {}\n\n  public async updateOrder(patchOrderDto: PatchOrderDto, orderId: string) {\n    let order;\n    // find the order\n    try {\n      order = await this.ordersRepository.findOneBy({\n        id: orderId,\n      });\n    } catch (err) {\n      throw new RequestTimeoutException(err);\n    }\n    if (!order) {\n      throw new BadRequestException('Order does not exist');\n    }\n    // update order\n    order = { ...order, ...patchOrderDto };\n\n    try {\n      await this.ordersRepository.save(order);\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error: any) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n    return order;\n  }\n\n  public async findOrderById(orderId: string) {\n    let order: Order;\n\n    try {\n      order = await this.ordersRepository.findOne({\n        where: { id: orderId },\n      });\n    } catch (error) {\n      console.log(error);\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    if (!order) {\n      throw new BadRequestException('The bank order does not exist');\n    }\n\n    return order;\n  }\n\n  /**\n   * @function get all orders or all orders from a user\n   * @param orderQuery\n   * @returns paginated orders\n   */\n  public async findAll(orderQuery: GetOrdersDto): Promise> {\n    return await this.findAllOrdersProvider.findAll(orderQuery);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OtpSigninDto.html":{"url":"classes/OtpSigninDto.html","title":"class - OtpSigninDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OtpSigninDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/otpSignin.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                otp sign in dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                otp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        otp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the reset otp', example: 2343})@IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/otpSignin.dto.ts:17\n                        \n                    \n\n            \n                \n                    otp for signin\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsInt, IsNotEmpty } from 'class-validator';\n\n/**\n * otp sign in dto\n */\nexport class OtpSigninDto {\n  /**\n   * otp for signin\n   */\n  @ApiProperty({\n    description: 'This is the reset otp',\n    example: 2343,\n  })\n  @IsInt()\n  @IsNotEmpty()\n  otp: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtpSigninProvider.html":{"url":"injectables/OtpSigninProvider.html","title":"injectable - OtpSigninProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OtpSigninProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/otp-signin.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                signInWithOtp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, generateTokenProvider: GenerateTokensProvider)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/otp-signin.provider.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        generateTokenProvider\n                                                  \n                                                        \n                                                                        GenerateTokensProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        signInWithOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signInWithOtp(otpSigninDto: OtpSigninDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/otp-signin.provider.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otpSigninDto\n                                            \n                                                            OtpSigninDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/providers/users.service';\nimport { OtpSigninDto } from '../dtos/otpSignin.dto';\nimport * as crypto from 'crypto';\nimport { GenerateTokensProvider } from './generate-tokens.provider';\n\n@Injectable()\nexport class OtpSigninProvider {\n  constructor(\n    /**\n     * injecting users service\n     */\n    private readonly usersService: UsersService,\n\n    /**\n     * injecting the generateToken Provider\n     */\n    private readonly generateTokenProvider: GenerateTokensProvider,\n  ) {}\n\n  public async signInWithOtp(otpSigninDto: OtpSigninDto) {\n    // get the otp and hash it\n    const hashedOtp = crypto\n      .createHash('sha256')\n      .update(otpSigninDto.otp.toString())\n      .digest('hex');\n\n    // find the user based on the hased otp and timestamp\n    const user =\n      await this.usersService.findUserByResetOtpAndExpiryTime(hashedOtp);\n\n    // clear the otp and expiry time\n    await this.usersService.clearOtpAndExpiryTime(user);\n\n    // send access token and refresh token\n    // // generate an access token\n    const { accessToken, refreshToken } =\n      await this.generateTokenProvider.generateTokens(user);\n\n    return {\n      accessToken,\n      refreshToken,\n      user: {\n        id: user.id,\n        email: user.email,\n        role: user.role,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paginated.html":{"url":"interfaces/Paginated.html","title":"interface - Paginated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Paginated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pagination/interfaces/paginated.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for the response on paginated queries\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            links\n                                        \n                                \n                                \n                                        \n                                            meta\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the data to be returned\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        links:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    various links for the pages of the data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the metadata for the data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Paginated {\n  /**\n   * the data to be returned\n   */\n  data: T[];\n\n  /**\n   * the metadata for the data\n   */\n  meta: {\n    itemsPerPage: number;\n    totalItems: number;\n    currentPage: number;\n    totalPages: number;\n  };\n\n  /**\n   * various links for the pages of the data\n   */\n  links: {\n    first: string;\n    last: string;\n    current: string;\n    next: string;\n    previous: string;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaginationModule.html":{"url":"modules/PaginationModule.html","title":"module - PaginationModule","body":"\n                   \n\n\n\n\n    Modules\n    PaginationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaginationModule\n\n\n\ncluster_PaginationModule_exports\n\n\n\ncluster_PaginationModule_providers\n\n\n\n\nPaginationProvider \n\nPaginationProvider \n\n\n\nPaginationModule\n\nPaginationModule\n\nPaginationProvider  -->\n\nPaginationModule->PaginationProvider \n\n\n\n\n\nPaginationProvider\n\nPaginationProvider\n\nPaginationModule -->\n\nPaginationProvider->PaginationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/pagination/pagination.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaginationProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PaginationProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PaginationProvider } from './providers/pagination.provider';\n\n@Module({\n  providers: [PaginationProvider],\n  exports: [PaginationProvider],\n})\nexport class PaginationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaginationProvider.html":{"url":"injectables/PaginationProvider.html","title":"injectable - PaginationProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaginationProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pagination/providers/pagination.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for pagination\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                paginationQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in src/common/pagination/providers/pagination.provider.ts:14\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        paginationQuery\n                        \n                    \n                \n            \n            \n                \n                        \n                    paginationQuery(paginationQuery: PaginationQueryDto, repository: Repository, options?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/pagination/providers/pagination.provider.ts:34\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        function for paginating find all queries\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paginationQuery\n                                            \n                                                            PaginationQueryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                repository\n                                            \n                                                        Repository\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                data, metadata and links for the findAll queries\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { PaginationQueryDto } from '../dtos/pagination-query.dto';\nimport { ObjectLiteral, Repository } from 'typeorm';\n\n// inorder to inject a request to a provider\nimport { Request } from 'express';\nimport { REQUEST } from '@nestjs/core';\nimport { Paginated } from '../interfaces/paginated.interface';\n\n/**\n * provider for pagination\n */\n@Injectable()\nexport class PaginationProvider {\n  /**\n   * constructor\n   * @param request\n   */\n  constructor(\n    /**\n     * Injecting request\n     */\n    @Inject(REQUEST)\n    private readonly request: Request,\n  ) {}\n\n  /**\n   * function for paginating find all queries\n   * @param paginationQuery\n   * @param repository\n   * @param options\n   * @returns data, metadata and links for the findAll queries\n   */\n  public async paginationQuery(\n    paginationQuery: PaginationQueryDto,\n    repository: Repository,\n    options?: any,\n  ): Promise> {\n    const results = await repository.find({\n      // no of items to skip in one query\n      skip: (paginationQuery.page - 1) * paginationQuery.limit,\n      // the no items to take in one query\n      take: paginationQuery.limit,\n      relations: options.relations,\n      select: options.select,\n      where: options.where,\n      order: options.order,\n    });\n\n    /**\n     * Create the request URLS\n     */\n    const baseURL =\n      this.request.protocol + '://' + this.request.headers.host + '/';\n\n    const newUrl = new URL(this.request.url, baseURL);\n\n    // console.log(newUrl);\n\n    const totalItems = await repository.count();\n    const totalPages = Math.ceil(totalItems / paginationQuery.limit);\n    const nextPage =\n      paginationQuery.page === totalPages\n        ? paginationQuery.page\n        : paginationQuery.page + 1;\n    const prevPage =\n      paginationQuery.page === 1\n        ? paginationQuery.page\n        : paginationQuery.page - 1;\n\n    const finalResponse: Paginated = {\n      data: results,\n      meta: {\n        itemsPerPage: paginationQuery.limit,\n        totalItems: totalItems,\n        currentPage: paginationQuery.page,\n        totalPages: totalPages,\n      },\n      links: {\n        first: `${newUrl.origin}${newUrl.pathname}?limit=${paginationQuery.limit}&page=1`,\n        last: `${newUrl.origin}${newUrl.pathname}?limit=${paginationQuery.limit}&page=${totalPages}`,\n        current: `${newUrl.origin}${newUrl.pathname}?limit=${paginationQuery.limit}&page=${paginationQuery.page}`,\n        next: `${newUrl.origin}${newUrl.pathname}?limit=${paginationQuery.limit}&page=${nextPage}`,\n        previous: `${newUrl.origin}${newUrl.pathname}?limit=${paginationQuery.limit}&page=${prevPage}`,\n      },\n    };\n\n    return finalResponse;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQueryDto.html":{"url":"classes/PaginationQueryDto.html","title":"class - PaginationQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pagination/dtos/pagination-query.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto for the pagination query\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                page\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/pagination/dtos/pagination-query.dto.ts:12\n                        \n                    \n\n            \n                \n                    limit for the number of items in the get all requests\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/pagination/dtos/pagination-query.dto.ts:19\n                        \n                    \n\n            \n                \n                    page number for the get all requests\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"newest\" | \"oldest\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/pagination/dtos/pagination-query.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsPositive, IsString } from 'class-validator';\n\n/**\n * dto for the pagination query\n */\nexport class PaginationQueryDto {\n  /**\n   * limit for the number of items in the get all requests\n   */\n  @IsOptional()\n  limit?: number = 0;\n\n  /**\n   * page number for the get all requests\n   */\n  @IsOptional()\n  @IsPositive()\n  page?: number = 1;\n\n  @IsOptional()\n  @IsString()\n  sort?: 'newest' | 'oldest';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchOrderDto.html":{"url":"classes/PatchOrderDto.html","title":"class - PatchOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/dtos/patch-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                carrier\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                carrierPhoneNumber\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                estimatedDeliveryDate\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                orderStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        carrier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dtos/patch-order.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        carrierPhoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dtos/patch-order.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        estimatedDeliveryDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dtos/patch-order.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        orderStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(OrderStatus)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dtos/patch-order.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsDate, IsEnum, IsOptional, IsString } from 'class-validator';\nimport { OrderStatus } from '../enums/order-status.enum';\n\nexport class PatchOrderDto {\n  @IsString()\n  @IsOptional()\n  carrier?: string;\n\n  @IsString()\n  @IsOptional()\n  carrierPhoneNumber?: string;\n\n  @IsDate()\n  @IsOptional()\n  estimatedDeliveryDate?: Date;\n\n  @IsEnum(OrderStatus)\n  @IsOptional()\n  orderStatus?: OrderStatus;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchProductDto.html":{"url":"classes/PatchProductDto.html","title":"class - PatchProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/patch-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                brand\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                category\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                clothType\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                discount\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                dressStyle\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    \n                                longDescription\n                            \n                            \n                                    \n                                    \n                                material\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                price\n                            \n                            \n                                    \n                                    \n                                shortDescription\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                variants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        brand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        clothType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        dressStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        longDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        material\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        shortDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PatchProductVariantDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsInt, IsOptional, IsString } from 'class-validator';\nimport { PatchProductVariantDto } from 'src/product-variants/dto/patch-product-variant.dto';\n\nexport class PatchProductDto {\n  @IsString()\n  @IsOptional()\n  id?: string;\n\n  @IsString()\n  @IsOptional()\n  name?: string;\n\n  @IsInt()\n  @IsOptional()\n  price?: number;\n\n  @IsString()\n  @IsOptional()\n  discount?: string;\n\n  @IsString()\n  @IsOptional()\n  category?: string;\n\n  @IsString()\n  @IsOptional()\n  dressStyle?: string;\n\n  @IsString()\n  @IsOptional()\n  clothType?: string;\n\n  @IsString()\n  @IsOptional()\n  material: string;\n\n  @IsString()\n  @IsOptional()\n  brand: string;\n\n  @IsString()\n  @IsOptional()\n  shortDescription: string;\n\n  @IsString()\n  @IsOptional()\n  longDescription: string;\n\n  @IsArray()\n  @IsOptional()\n  variants?: PatchProductVariantDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchProductVariantDto.html":{"url":"classes/PatchProductVariantDto.html","title":"class - PatchProductVariantDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchProductVariantDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-variants/dto/patch-product-variant.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(\n  CreateProductVariantDto,\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                soldOut\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/patch-product-variant.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        soldOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/patch-product-variant.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateProductVariantDto } from './create-product-variant.dto';\nimport { IsBoolean, IsOptional, IsString } from 'class-validator';\n\nexport class PatchProductVariantDto extends PartialType(\n  CreateProductVariantDto,\n) {\n  @IsString()\n  @IsOptional()\n  id?: string;\n\n  @IsBoolean()\n  @IsOptional()\n  soldOut?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUserDto.html":{"url":"classes/PatchUserDto.html","title":"class - PatchUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/patch-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                country\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lasttName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                state\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                streetAddress\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lasttName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        streetAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\nimport { IsInt, IsOptional, IsString } from 'class-validator';\n\nexport class PatchUserDto extends PartialType(CreateUserDto) {\n  @IsOptional()\n  @IsString()\n  firstName?: string;\n\n  @IsOptional()\n  @IsString()\n  lasttName?: string;\n\n  @IsOptional()\n  @IsString()\n  country?: string;\n\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @IsOptional()\n  @IsString()\n  state?: string;\n\n  @IsOptional()\n  @IsString()\n  city?: string;\n\n  @IsOptional()\n  @IsString()\n  streetAddress?: string;\n\n  @IsOptional()\n  @IsInt()\n  zipCode?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Payment.html":{"url":"entities/Payment.html","title":"entity - Payment","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Payment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payments/payment.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                payment entity\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                    Optional\n                                authorizationUrl\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                method\n                            \n                            \n                                    \n                                paymentVariants\n                            \n                            \n                                    \n                                    Optional\n                                provider\n                            \n                            \n                                    \n                                    Optional\n                                providerReference\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {precision: 10, scale: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payments/payment.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        authorizationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payments/payment.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payments/payment.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payments/payment.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaymentMethod\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({enum: PaymentMethod, nullable: true, type: 'enum'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payments/payment.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        paymentVariants\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PaymentVariant[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, paymentVariant => paymentVariant.payment)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payments/payment.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payments/payment.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        providerReference\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payments/payment.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         paymentStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: paymentStatus, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payments/payment.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payments/payment.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payments/payment.entity.ts:44\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  // JoinTable,\n  // ManyToMany,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { paymentStatus } from './enums/paymentStatus.enum';\n// import { ProductVariant } from 'src/product-variants/product-variants.entity';\nimport { PaymentMethod } from './enums/payment-method.enum';\nimport { PaymentVariant } from './payment-variant.entity';\n\n/**\n * payment entity\n */\n@Entity()\nexport class Payment {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({\n    type: 'enum',\n    enum: paymentStatus,\n    default: paymentStatus.PENDING,\n  })\n  status: paymentStatus;\n\n  @Column({ nullable: true })\n  provider?: string;\n\n  @Column({ unique: true, nullable: true })\n  providerReference?: string;\n\n  @Column({ nullable: true })\n  authorizationUrl?: string;\n\n  @Column('decimal', { precision: 10, scale: 2 })\n  amount: number;\n\n  @Column({ nullable: false })\n  userId: string;\n\n  @Column({\n    enum: PaymentMethod,\n    nullable: true,\n    type: 'enum',\n  })\n  method?: PaymentMethod;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  // @ManyToMany(() => ProductVariant)\n  // @JoinTable({\n  //   name: 'payment_variants',\n  //   joinColumn: { name: 'paymentId', referencedColumnName: 'id' },\n  //   inverseJoinColumn: { name: 'variantId', referencedColumnName: 'id' },\n  // })\n  // variants: ProductVariant[];\n\n  @OneToMany(() => PaymentVariant, (paymentVariant) => paymentVariant.payment)\n  paymentVariants: PaymentVariant[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/PaymentVariant.html":{"url":"entities/PaymentVariant.html","title":"entity - PaymentVariant","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  PaymentVariant\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payments/payment-variant.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                payment\n                            \n                            \n                                    \n                                paymentId\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                variant\n                            \n                            \n                                    \n                                variantId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payments/payment-variant.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payments/payment-variant.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        payment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Payment\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, payment => payment.paymentVariants)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payments/payment-variant.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        paymentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payments/payment-variant.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payments/payment-variant.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        variant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductVariant\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, variant => variant.paymentVariants)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payments/payment-variant.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        variantId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payments/payment-variant.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  CreateDateColumn,\n} from 'typeorm';\nimport { Payment } from './payment.entity';\nimport { ProductVariant } from 'src/product-variants/product-variants.entity';\n\n@Entity('payment_variants')\nexport class PaymentVariant {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  paymentId: string;\n\n  @Column()\n  variantId: string;\n\n  @Column({ type: 'int' })\n  quantity: number;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @ManyToOne(() => Payment, (payment) => payment.paymentVariants)\n  payment: Payment;\n\n  @ManyToOne(() => ProductVariant, (variant) => variant.paymentVariants)\n  variant: ProductVariant;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaymentsController.html":{"url":"controllers/PaymentsController.html","title":"controller - PaymentsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaymentsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payments/payments.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                payments\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                findAllPayments\n                            \n                            \n                                    \n                                    \n                                    Public\n                                findPaymentById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        findAllPayments\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllPayments(orderQuery: GetPaymentsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('')\n                \n            \n\n                    \n                        \n                            Defined in src/payments/payments.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderQuery\n                                            \n                                                            GetPaymentsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        findPaymentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPaymentById(paymentId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:paymentId')@Roles(Role.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/payments/payments.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paymentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Query } from '@nestjs/common';\nimport { PaymentsService } from './providers/payments.service';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { Role } from 'src/auth/enums/role-type.enum';\nimport { GetPaymentsDto } from './dtos/get-payments.dto';\n\n@Controller('payments')\nexport class PaymentsController {\n  constructor(\n    /**\n     * injecting the payments service\n     */\n    private readonly paymentsService: PaymentsService,\n  ) {}\n\n  @Get('/:paymentId')\n  @Roles(Role.ADMIN)\n  public findPaymentById(@Param('paymentId') paymentId: string) {\n    return this.paymentsService.findOrderById(paymentId);\n  }\n\n  @Get('')\n  public findAllPayments(@Query() orderQuery: GetPaymentsDto) {\n    return this.paymentsService.findAll(orderQuery);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentsModule.html":{"url":"modules/PaymentsModule.html","title":"module - PaymentsModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaymentsModule\n\n\n\ncluster_PaymentsModule_providers\n\n\n\ncluster_PaymentsModule_imports\n\n\n\n\nPaginationModule\n\nPaginationModule\n\n\n\nPaymentsModule\n\nPaymentsModule\n\nPaymentsModule -->\n\nPaginationModule->PaymentsModule\n\n\n\n\n\nFindAllPaymentsProvider\n\nFindAllPaymentsProvider\n\nPaymentsModule -->\n\nFindAllPaymentsProvider->PaymentsModule\n\n\n\n\n\nPaymentsService\n\nPaymentsService\n\nPaymentsModule -->\n\nPaymentsService->PaymentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/payments/payments.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FindAllPaymentsProvider\n                        \n                        \n                            PaymentsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaymentsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PaginationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Payment } from './payment.entity';\nimport { PaymentsController } from './payments.controller';\nimport { PaymentVariant } from './payment-variant.entity';\nimport { PaymentsService } from './providers/payments.service';\nimport { FindAllPaymentsProvider } from './providers/find-all-payments.provider';\nimport { PaginationModule } from 'src/common/pagination/pagination.module';\n\n@Module({\n  imports: [\n    PaginationModule,\n    TypeOrmModule.forFeature([Payment, PaymentVariant]),\n  ],\n  controllers: [PaymentsController],\n  providers: [PaymentsService, FindAllPaymentsProvider],\n})\nexport class PaymentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentsService.html":{"url":"injectables/PaymentsService.html","title":"injectable - PaymentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payments/providers/payments.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOrderById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paymentRepository: Repository, findAllPaymentsProvider: FindAllPaymentsProvider)\n                    \n                \n                        \n                            \n                                Defined in src/payments/providers/payments.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paymentRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        findAllPaymentsProvider\n                                                  \n                                                        \n                                                                        FindAllPaymentsProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(orderQuery: GetPaymentsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/payments/providers/payments.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderQuery\n                                            \n                                                            GetPaymentsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                paginated payments\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOrderById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOrderById(paymentId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/payments/providers/payments.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paymentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { Payment } from '../payment.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { GetPaymentsDto } from '../dtos/get-payments.dto';\nimport { Paginated } from 'src/common/pagination/interfaces/paginated.interface';\nimport { FindAllPaymentsProvider } from './find-all-payments.provider';\n\n@Injectable()\nexport class PaymentsService {\n  constructor(\n    /**\n     * injecting the payment repository\n     */\n    @InjectRepository(Payment)\n    private readonly paymentRepository: Repository,\n\n    /**\n     * injecting the find all payments provider\n     */\n    private readonly findAllPaymentsProvider: FindAllPaymentsProvider,\n  ) {}\n\n  public async findOrderById(paymentId: string) {\n    let payment: Payment;\n\n    try {\n      payment = await this.paymentRepository.findOne({\n        where: { id: paymentId },\n      });\n    } catch (error) {\n      console.log(error);\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    if (!payment) {\n      throw new BadRequestException('The bank order does not exist');\n    }\n\n    return payment;\n  }\n\n  /**\n   * @function get all payments or all orders from a user\n   * @param paymentQuery\n   * @returns paginated payments\n   */\n  public async findAll(\n    orderQuery: GetPaymentsDto,\n  ): Promise> {\n    return await this.findAllPaymentsProvider.findAll(orderQuery);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaystackController.html":{"url":"controllers/PaystackController.html","title":"controller - PaystackController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaystackController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/paystack.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                paystack\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                handlePaymentWebhook\n                            \n                            \n                                    \n                                    \n                                    Public\n                                initiatePayment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        handlePaymentWebhook\n                        \n                    \n                \n            \n            \n                \n                        \n                    handlePaymentWebhook(body: any, signature: string, req: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/webhook')@Auth(AuthType.None)@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in src/paystack/paystack.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                signature\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        initiatePayment\n                        \n                    \n                \n            \n            \n                \n                        \n                    initiatePayment(initiatePaymentDto: InitiatePaymentDto, user: ActiveUserData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/initiate-payment')@Roles(Role.USER)\n                \n            \n\n                    \n                        \n                            Defined in src/paystack/paystack.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                initiatePaymentDto\n                                            \n                                                            InitiatePaymentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Headers,\n  HttpCode,\n  HttpStatus,\n  Post,\n  Req,\n} from '@nestjs/common';\nimport { PaystackService } from './providers/paystack.service';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { Role } from 'src/auth/enums/role-type.enum';\nimport { InitiatePaymentDto } from './dtos/initiate-payment.dto';\nimport { ActiveUser } from 'src/auth/decorator/active-user.decorator';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\nimport { Auth } from 'src/auth/decorator/auth.decorator';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\n\n@Controller('paystack')\nexport class PaystackController {\n  constructor(\n    /**\n     * injecting the paystack service\n     */\n    private readonly paystackService: PaystackService,\n  ) {}\n\n  @Post('/initiate-payment')\n  @Roles(Role.USER)\n  //   @Auth(AuthType.None)\n  public initiatePayment(\n    @Body() initiatePaymentDto: InitiatePaymentDto,\n    @ActiveUser() user: ActiveUserData,\n  ) {\n    return this.paystackService.initiatePayment(initiatePaymentDto, user);\n  }\n\n  @Post('/webhook')\n  @Auth(AuthType.None)\n  @HttpCode(HttpStatus.OK)\n  async handlePaymentWebhook(\n    @Body() body: any,\n    @Headers('x-paystack-signature') signature: string,\n    @Req() req: any,\n  ) {\n    return this.paystackService.verifyPayment(body, signature, req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaystackModule.html":{"url":"modules/PaystackModule.html","title":"module - PaystackModule","body":"\n                   \n\n\n\n\n    Modules\n    PaystackModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaystackModule\n\n\n\ncluster_PaystackModule_imports\n\n\n\ncluster_PaystackModule_providers\n\n\n\n\nProductVariantsModule\n\nProductVariantsModule\n\n\n\nPaystackModule\n\nPaystackModule\n\nPaystackModule -->\n\nProductVariantsModule->PaystackModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nPaystackModule -->\n\nProductsModule->PaystackModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nPaystackModule -->\n\nUsersModule->PaystackModule\n\n\n\n\n\nInitiatePaymentProvider\n\nInitiatePaymentProvider\n\nPaystackModule -->\n\nInitiatePaymentProvider->PaystackModule\n\n\n\n\n\nPaystackService\n\nPaystackService\n\nPaystackModule -->\n\nPaystackService->PaystackModule\n\n\n\n\n\nVerifyPaymentProvider\n\nVerifyPaymentProvider\n\nPaystackModule -->\n\nVerifyPaymentProvider->PaystackModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/paystack/paystack.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            InitiatePaymentProvider\n                        \n                        \n                            PaystackService\n                        \n                        \n                            VerifyPaymentProvider\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaystackController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProductVariantsModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { PaystackController } from './paystack.controller';\nimport { PaystackService } from './providers/paystack.service';\nimport { InitiatePaymentProvider } from './providers/initiate-payment.provider';\nimport paystackConfig from './config/paystack.config';\nimport { UsersModule } from 'src/users/users.module';\nimport { ProductsModule } from 'src/products/products.module';\nimport { ProductVariantsModule } from 'src/product-variants/product-variants.module';\nimport { VerifyPaymentProvider } from './providers/verify-payment.provider';\n\n@Module({\n  imports: [\n    UsersModule,\n    ProductsModule,\n    ProductVariantsModule,\n    ConfigModule.forFeature(paystackConfig),\n  ],\n  controllers: [PaystackController],\n  providers: [PaystackService, InitiatePaymentProvider, VerifyPaymentProvider],\n})\nexport class PaystackModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaystackService.html":{"url":"injectables/PaystackService.html","title":"injectable - PaystackService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaystackService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/providers/paystack.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                initiatePayment\n                            \n                            \n                                    Public\n                                    Async\n                                verifyPayment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(initiatePaymentProvider: InitiatePaymentProvider, verifyPaymentProvider: VerifyPaymentProvider)\n                    \n                \n                        \n                            \n                                Defined in src/paystack/providers/paystack.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initiatePaymentProvider\n                                                  \n                                                        \n                                                                        InitiatePaymentProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        verifyPaymentProvider\n                                                  \n                                                        \n                                                                        VerifyPaymentProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        initiatePayment\n                        \n                    \n                \n            \n            \n                \n                        \n                    initiatePayment(initiatePaymentDto: InitiatePaymentDto, user: ActiveUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paystack/providers/paystack.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                initiatePaymentDto\n                                            \n                                                            InitiatePaymentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        verifyPayment\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyPayment(body: any, signature: string, req: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paystack/providers/paystack.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                signature\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InitiatePaymentProvider } from './initiate-payment.provider';\nimport { InitiatePaymentDto } from '../dtos/initiate-payment.dto';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\nimport { VerifyPaymentProvider } from './verify-payment.provider';\n\n@Injectable()\nexport class PaystackService {\n  constructor(\n    /**\n     * injecting the initiate payment provider\n     */\n    private readonly initiatePaymentProvider: InitiatePaymentProvider,\n\n    /**\n     * injecting the verify payment provider\n     */\n    private readonly verifyPaymentProvider: VerifyPaymentProvider,\n  ) {}\n\n  public async initiatePayment(\n    initiatePaymentDto: InitiatePaymentDto,\n    user: ActiveUserData,\n  ) {\n    return await this.initiatePaymentProvider.initializePayment(\n      initiatePaymentDto,\n      user,\n    );\n  }\n\n  public async verifyPayment(body: any, signature: string, req: any) {\n    return await this.verifyPaymentProvider.paymentWebhook(\n      body,\n      signature,\n      req,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Product.html":{"url":"entities/Product.html","title":"entity - Product","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/product.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                brand\n                            \n                            \n                                    \n                                category\n                            \n                            \n                                    \n                                clothType\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                discount\n                            \n                            \n                                    \n                                dressStyle\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                longDescription\n                            \n                            \n                                    \n                                material\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                    Optional\n                                reviews\n                            \n                            \n                                    \n                                shortDescription\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    Optional\n                                variants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        brand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        clothType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {precision: 5, scale: 2, default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dressStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        longDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        material\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {precision: 10, scale: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        reviews\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Review[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, review => review.product, {cascade: true, eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        shortDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProductVariant[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, variant => variant.product, {cascade: true, eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:53\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ProductVariant } from 'src/product-variants/product-variants.entity';\nimport { Review } from 'src/reviews/reviews.entity';\nimport {\n  BeforeInsert,\n  BeforeUpdate,\n  Column,\n  CreateDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Product {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column('decimal', { precision: 10, scale: 2 })\n  price: number;\n\n  @Column('decimal', { precision: 5, scale: 2, default: 0 })\n  discount: number;\n\n  @Column()\n  category: string;\n\n  @Column()\n  dressStyle: string;\n\n  @Column()\n  clothType: string;\n\n  @Column()\n  material: string;\n\n  @Column()\n  brand: string;\n\n  @Column()\n  shortDescription: string;\n\n  @Column()\n  longDescription: string;\n\n  @OneToMany(() => ProductVariant, (variant) => variant.product, {\n    cascade: true,\n    eager: true,\n  })\n  variants?: ProductVariant[];\n\n  @OneToMany(() => Review, (review) => review.product, {\n    cascade: true,\n    eager: true,\n  })\n  reviews?: Review[];\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @BeforeInsert()\n  @BeforeUpdate()\n  transformToLowercase() {\n    if (this.name) {\n      this.name = this.name.toLowerCase();\n    }\n    if (this.category) {\n      this.category = this.category.toLowerCase();\n    }\n    if (this.dressStyle) {\n      this.dressStyle = this.dressStyle.toLowerCase();\n    }\n    if (this.clothType) {\n      this.clothType = this.clothType.toLowerCase();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProductImage.html":{"url":"entities/ProductImage.html","title":"entity - ProductImage","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProductImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-images/product-image.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                displayOrder\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                imagePath\n                            \n                            \n                                    \n                                    \n                                productVariant\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        displayOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int', {default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-images/product-image.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-images/product-image.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        imagePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-images/product-image.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        productVariant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductVariant\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, variant => variant.images, {onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-images/product-image.entity.ts:25\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ProductVariant } from 'src/product-variants/product-variants.entity';\nimport {\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class ProductImage {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  imagePath: string;\n\n  @Column('int', { default: 0 })\n  displayOrder: number;\n\n  @ManyToOne(() => ProductVariant, (variant) => variant.images, {\n    onDelete: 'CASCADE',\n  })\n  @JoinColumn()\n  productVariant: ProductVariant;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductImagesModule.html":{"url":"modules/ProductImagesModule.html","title":"module - ProductImagesModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductImagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductImagesModule\n\n\n\ncluster_ProductImagesModule_providers\n\n\n\n\nProductImagesService\n\nProductImagesService\n\n\n\nProductImagesModule\n\nProductImagesModule\n\nProductImagesModule -->\n\nProductImagesService->ProductImagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product-images/product-images.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductImagesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductImagesService } from './providers/product-images.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProductImage } from './product-image.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ProductImage])],\n  providers: [ProductImagesService],\n})\nexport class ProductImagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductImagesService.html":{"url":"injectables/ProductImagesService.html","title":"injectable - ProductImagesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductImagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-images/providers/product-images.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ProductImagesService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProductVariant.html":{"url":"entities/ProductVariant.html","title":"entity - ProductVariant","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProductVariant\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-variants/product-variants.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                color\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                images\n                            \n                            \n                                    \n                                paymentVariants\n                            \n                            \n                                    \n                                    \n                                product\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                soldOut\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProductImage[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, image => image.productVariant, {cascade: true, eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        paymentVariants\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PaymentVariant[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, paymentVariant => paymentVariant.variant)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, product => product.variants, {onDelete: 'CASCADE', eager: false})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        soldOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { PaymentVariant } from 'src/payments/payment-variant.entity';\nimport { ProductImage } from 'src/product-images/product-image.entity';\nimport { Product } from 'src/products/product.entity';\nimport {\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  OneToMany,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class ProductVariant {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  color: string;\n\n  @Column()\n  size: string;\n\n  @Column('int')\n  quantity: number;\n\n  @Column({ default: false })\n  soldOut: boolean;\n\n  @ManyToOne(() => Product, (product) => product.variants, {\n    onDelete: 'CASCADE',\n    eager: false,\n  })\n  @JoinColumn()\n  product: Product;\n\n  @OneToMany(() => ProductImage, (image) => image.productVariant, {\n    cascade: true,\n    eager: true,\n  })\n  images?: ProductImage[];\n\n  @OneToMany(() => PaymentVariant, (paymentVariant) => paymentVariant.variant)\n  paymentVariants: PaymentVariant[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductVariantsController.html":{"url":"controllers/ProductVariantsController.html","title":"controller - ProductVariantsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductVariantsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-variants/product-variants.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product-variants\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                checkProductVariantAvailability\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        checkProductVariantAvailability\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkProductVariantAvailability(productsWithVariantsDto: ProductsWithVariantsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/check-availability')@Auth(AuthType.None)@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in src/product-variants/product-variants.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productsWithVariantsDto\n                                            \n                                                            ProductsWithVariantsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post } from '@nestjs/common';\nimport { Auth } from 'src/auth/decorator/auth.decorator';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\nimport { ProductsWithVariantsDto } from './dto/products-with-variants.dto';\nimport { ProductVariantsService } from './providers/product-variants.service';\n\n@Controller('product-variants')\nexport class ProductVariantsController {\n  constructor(\n    /**\n     * injecting the products variants service\n     */\n    private readonly productVariantsService: ProductVariantsService,\n  ) {}\n\n  @Post('/check-availability')\n  @Auth(AuthType.None)\n  @HttpCode(HttpStatus.OK)\n  public checkProductVariantAvailability(\n    @Body() productsWithVariantsDto: ProductsWithVariantsDto,\n  ) {\n    return this.productVariantsService.checkvVariantAvailabilityForTransfers(\n      productsWithVariantsDto,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductVariantsModule.html":{"url":"modules/ProductVariantsModule.html","title":"module - ProductVariantsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductVariantsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductVariantsModule\n\n\n\ncluster_ProductVariantsModule_exports\n\n\n\ncluster_ProductVariantsModule_providers\n\n\n\n\nProductVariantsService \n\nProductVariantsService \n\n\n\nProductVariantsModule\n\nProductVariantsModule\n\nProductVariantsService  -->\n\nProductVariantsModule->ProductVariantsService \n\n\n\n\n\nProductVariantsService\n\nProductVariantsService\n\nProductVariantsModule -->\n\nProductVariantsService->ProductVariantsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product-variants/product-variants.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductVariantsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductVariantsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProductVariantsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductVariantsService } from './providers/product-variants.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProductVariant } from './product-variants.entity';\nimport { ProductVariantsController } from './product-variants.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ProductVariant])],\n  providers: [ProductVariantsService],\n  exports: [ProductVariantsService],\n  controllers: [ProductVariantsController],\n})\nexport class ProductVariantsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductVariantsService.html":{"url":"injectables/ProductVariantsService.html","title":"injectable - ProductVariantsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductVariantsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-variants/providers/product-variants.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                checkVariantAvailability\n                            \n                            \n                                    Public\n                                    Async\n                                checkvVariantAvailabilityForTransfers\n                            \n                            \n                                    Public\n                                    Async\n                                findProductVariantById\n                            \n                            \n                                    Async\n                                rollbackStock\n                            \n                            \n                                    Public\n                                    Async\n                                saveProductVariant\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productVariantRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/product-variants/providers/product-variants.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productVariantRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        checkVariantAvailability\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkVariantAvailability(manager: EntityManager, variantId: string, productId: string, quantity: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product-variants/providers/product-variants.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                manager\n                                            \n                                                        EntityManager\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                variantId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                quantity\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        checkvVariantAvailabilityForTransfers\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkvVariantAvailabilityForTransfers(productsWithVariantsDto: ProductsWithVariantsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product-variants/providers/product-variants.service.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productsWithVariantsDto\n                                            \n                                                            ProductsWithVariantsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findProductVariantById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductVariantById(variantId: string, productId?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product-variants/providers/product-variants.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                variantId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a product variant\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        rollbackStock\n                        \n                    \n                \n            \n            \n                \n                        \n                    rollbackStock(variantId: string, productId: string, quantity: number, manager: EntityManager)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product-variants/providers/product-variants.service.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                variantId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                quantity\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                manager\n                                            \n                                                        EntityManager\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        saveProductVariant\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveProductVariant(variant: ProductVariant)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product-variants/providers/product-variants.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                variant\n                                            \n                                                            ProductVariant\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a product variant\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { EntityManager, Repository } from 'typeorm';\nimport { ProductVariant } from '../product-variants.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProductsWithVariantsDto } from '../dto/products-with-variants.dto';\n\n@Injectable()\nexport class ProductVariantsService {\n  constructor(\n    /**\n     * injecting the product variant repository\n     */\n    @InjectRepository(ProductVariant)\n    private readonly productVariantRepository: Repository,\n  ) {}\n\n  /**\n   * @function finds a product variant by id\n   * @param variantId\n   * @param productId\n   * @returns a product variant\n   */\n  public async findProductVariantById(\n    variantId: string,\n    productId?: string,\n  ): Promise {\n    const variant = await this.productVariantRepository.findOne({\n      where: { id: variantId, product: productId ? { id: productId } : null },\n    });\n\n    if (!variant) {\n      throw new NotFoundException(\n        `Variant with ID ${variantId} not found for product ${productId}`,\n      );\n    }\n\n    return variant;\n  }\n\n  /**\n   * @function saves a variant\n   * @param variant\n   * @returns  a product variant\n   */\n  public async saveProductVariant(\n    variant: ProductVariant,\n  ): Promise {\n    return await this.productVariantRepository.save(variant);\n  }\n  /**\n   * @function checks variant availability\n   * @param manager\n   * @param variantId\n   * @param productId\n   * @param quantity\n   */\n  public async checkVariantAvailability(\n    manager: EntityManager,\n    variantId: string,\n    productId: string,\n    quantity: number,\n  ) {\n    // Fetch the variant from the database, ensuring it belongs to the specified product\n    // Fetch the variant with a pessimistic lock to prevent concurrent access\n    const variant = await manager\n      .createQueryBuilder(ProductVariant, 'variant')\n      .setLock('pessimistic_write') // Lock the row\n      .where('variant.id = :id AND variant.productId = :productId', {\n        id: variantId,\n        productId,\n      })\n      .getOne();\n\n    // Check if the variant exists\n    if (!variant) {\n      throw new BadRequestException(\n        `Variant with ID ${variantId} not found for product ${productId}`,\n      );\n    }\n\n    // Check if the variant is sold out\n    if (variant.soldOut) {\n      throw new BadRequestException(\n        `Variant ${variantId} (color: ${variant.color}, size: ${variant.size}) is sold out`,\n      );\n    }\n\n    // Optional: Check if the requested quantity exceeds available stock\n    if (quantity > variant.quantity) {\n      throw new BadRequestException(\n        `Requested quantity (${quantity}) for variant ${variantId} exceeds available stock (${variant.quantity})`,\n      );\n    }\n\n    // Reserve the stock by decrementing the quantity\n    variant.quantity -= quantity;\n\n    if (variant.quantity  {\n    // Fetch the variant with a lock\n    const variant = await manager\n      .createQueryBuilder(ProductVariant, 'variant')\n      .setLock('pessimistic_write')\n      .where('variant.id = :id AND variant.productId = :productId', {\n        id: variantId,\n        productId,\n      })\n      .getOne();\n\n    if (variant) {\n      // Restore the quantity\n      variant.quantity += quantity;\n      variant.soldOut = false; // Reset soldOut if quantity becomes positive\n      await manager.save(variant);\n    }\n  }\n\n  public async checkvVariantAvailabilityForTransfers(\n    productsWithVariantsDto: ProductsWithVariantsDto,\n  ) {\n    // Iterate through each product in the request\n    for (const product of productsWithVariantsDto.products) {\n      const { productId, variants } = product;\n\n      // Iterate through each variant the user wants to buy\n      for (const variantDto of variants) {\n        const { id: variantId, quantity } = variantDto;\n\n        const variant = await this.productVariantRepository.findOne({\n          where: { id: variantId },\n        });\n\n        // Check if the variant exists\n        if (!variant) {\n          throw new BadRequestException(\n            `Variant with ID ${variantId} not found for product ${productId}`,\n          );\n        }\n\n        // Check if the variant is sold out\n        if (variant.soldOut) {\n          throw new BadRequestException(\n            `Variant ${variantId} (color: ${variant.color}, size: ${variant.size}) is sold out`,\n          );\n        }\n\n        // Optional: Check if the requested quantity exceeds available stock\n        if (quantity > variant.quantity) {\n          throw new BadRequestException(\n            `Requested quantity (${quantity}) for variant ${variantId} exceeds available stock (${variant.quantity})`,\n          );\n        }\n\n        return {\n          allAvailable: true,\n          message: 'variants are available',\n        };\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductWithVariantDto.html":{"url":"classes/ProductWithVariantDto.html","title":"class - ProductWithVariantDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductWithVariantDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/dtos/initiate-payment.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                productId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                variants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dtos/initiate-payment.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dtos/initiate-payment.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PatchProductVariantDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsNotEmpty()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dtos/initiate-payment.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsInt,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { PatchProductVariantDto } from 'src/product-variants/dto/patch-product-variant.dto';\n\nclass ProductWithVariantDto {\n  @IsString()\n  @IsNotEmpty()\n  productId: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  price: number;\n\n  @IsArray()\n  @IsNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => PatchProductVariantDto)\n  variants: PatchProductVariantDto[];\n}\n\nexport class InitiatePaymentDto {\n  @IsString()\n  @IsOptional()\n  deliveryPicker?: string;\n\n  @IsString()\n  @IsOptional()\n  deliveryAddress?: string;\n\n  @IsString()\n  @IsOptional()\n  discountId?: string;\n\n  @IsArray()\n  @IsNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => ProductWithVariantDto)\n  products: ProductWithVariantDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductWithVariantDto-1.html":{"url":"classes/ProductWithVariantDto-1.html","title":"class - ProductWithVariantDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductWithVariantDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-variants/dto/products-with-variants.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                productId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                variants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/products-with-variants.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PatchProductVariantDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsNotEmpty()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/products-with-variants.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport { IsArray, IsNotEmpty, IsString, ValidateNested } from 'class-validator';\nimport { PatchProductVariantDto } from './patch-product-variant.dto';\n\nclass ProductWithVariantDto {\n  @IsString()\n  @IsNotEmpty()\n  productId: string;\n\n  @IsArray()\n  @IsNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => PatchProductVariantDto)\n  variants: PatchProductVariantDto[];\n}\n\nexport class ProductsWithVariantsDto {\n  @IsArray()\n  @IsNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => ProductWithVariantDto)\n  products: ProductWithVariantDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                createProduct\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                deleteProduct\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                findAllProducts\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                findProductById\n                            \n                            \n                                    \n                                    \n                                    Public\n                                getNewArrivals\n                            \n                            \n                                    \n                                    \n                                    Public\n                                patchProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProduct(createProductDto: CreateProductDto, files: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiConsumes('multipart/form-data')@UseInterceptors(undefined)@Roles(Role.ADMIN)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                files\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProduct(productId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:productId')@Roles(Role.ADMIN)@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a message that the item was successfully deleted\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        findAllProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllProducts(productQuery: GetProductsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It finds all products '})@ApiResponse({status: 200, description: 'All products are fetched and paginated'})@ApiQuery({name: 'limit', type: 'number', required: false, description: 'The number of entries returned per query', example: 10})@ApiQuery({name: 'page', type: 'number', required: false, description: 'The position of the page number that you want the api to return', example: 1})@Auth(AuthType.None)@Get('')\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:132\n                        \n                    \n\n\n            \n                \n                        route for getting all products\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productQuery\n                                            \n                                                            GetProductsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                all products\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        findProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductById(productId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It finds a product based on its id'})@ApiResponse({status: 200, description: 'Product is fetched successfully based on its id'})@ApiParam({name: 'eventId', required: true, type: String, description: 'The unique identifier of the product', example: '12345'})@ApiHeaders(['undefined', 'undefined'])@Auth(AuthType.None)@Get('/:productId')\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:99\n                        \n                    \n\n\n            \n                \n                        route for getting a product by the product id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                a particular event\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        getNewArrivals\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNewArrivals(productQuery: GetProductsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Auth(AuthType.None)@Get('/new-arrivals')\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productQuery\n                                            \n                                                            GetProductsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        patchProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchProduct(productId: string, patchProductDto: PatchProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:productId')@Roles(Role.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:144\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patchProductDto\n                                            \n                                                            PatchProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                updated product\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  Query,\n  UploadedFiles,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { CreateProductDto } from './dtos/createProductDto';\nimport {\n  ApiConsumes,\n  ApiHeaders,\n  ApiOperation,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n} from '@nestjs/swagger';\nimport { FileFieldsInterceptor } from '@nestjs/platform-express';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { Role } from 'src/auth/enums/role-type.enum';\nimport { ProductsService } from './providers/products.service';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\nimport { Auth } from 'src/auth/decorator/auth.decorator';\nimport { GetProductsDto } from './dtos/get-product.dto';\nimport { PatchProductDto } from './dtos/patch-product.dto';\n\n@Controller('products')\nexport class ProductsController {\n  constructor(\n    /**\n     * injecting the products service\n     */\n    private readonly productsService: ProductsService,\n  ) {}\n\n  /**\n   * @function createProduct\n   * @param createProductDto\n   * @param user\n   * @param files\n   */\n  @ApiConsumes('multipart/form-data')\n  @UseInterceptors(\n    FileFieldsInterceptor(\n      Array.from({ length: 30 }, (_, i) => ({\n        name: `variants[${i}][images]`,\n        maxCount: 30,\n      })),\n    ),\n  )\n  @Roles(Role.ADMIN)\n  @Post()\n  public createProduct(\n    @Body() createProductDto: CreateProductDto,\n    @UploadedFiles() files: { [key: string]: Express.Multer.File[] },\n  ) {\n    return this.productsService.createProduct(createProductDto, files);\n  }\n\n  /**\n   * route for getting a product by the product id\n   * @param eventId\n   * @returns a particular event\n   */\n  @ApiOperation({\n    summary: 'It finds a product based on its id',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Product is fetched successfully based on its id',\n  })\n  @ApiParam({\n    name: 'eventId',\n    required: true,\n    type: String,\n    description: 'The unique identifier of the product',\n    example: '12345',\n  })\n  @ApiHeaders([\n    {\n      name: 'Authorization',\n      required: true,\n      description: 'Bearer token for authorization',\n    },\n    {\n      name: 'X-Custom-Header',\n      required: false,\n      description: 'A custom optional header',\n    },\n  ])\n  @Auth(AuthType.None)\n  @Get('/:productId')\n  public findProductById(@Param('productId') productId: string) {\n    return this.productsService.findProductById(productId);\n  }\n\n  /**\n   * route for getting all products\n   * @param productQuery\n   * @returns all products\n   */\n  @ApiOperation({\n    summary: 'It finds all products ',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'All products are fetched and paginated',\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: 'number',\n    required: false,\n    description: 'The number of entries returned per query',\n    example: 10,\n  })\n  @ApiQuery({\n    name: 'page',\n    type: 'number',\n    required: false,\n    description:\n      'The position of the page number that you want the api to return',\n    example: 1,\n  })\n  @Auth(AuthType.None)\n  @Get('')\n  public findAllProducts(@Query() productQuery: GetProductsDto) {\n    return this.productsService.findAll(productQuery);\n  }\n\n  /**\n   * @function updates a product\n   * @param productId\n   * @param patchProductDto\n   * @returns updated product\n   */\n  @Patch('/:productId')\n  @Roles(Role.ADMIN)\n  public patchProduct(\n    @Param('productId') productId: string,\n    @Body() patchProductDto: PatchProductDto,\n  ) {\n    return this.productsService.updateProduct(productId, patchProductDto);\n  }\n\n  /**\n   * @function deletes a product\n   * @param productId\n   * @returns a message that the item was successfully deleted\n   */\n  @Delete('/:productId')\n  @Roles(Role.ADMIN)\n  @HttpCode(HttpStatus.NO_CONTENT) // This set\n  public deleteProduct(\n    @Param('productId') productId: string,\n  ): Promise {\n    return this.productsService.deleteProduct(productId);\n  }\n\n  @Auth(AuthType.None)\n  @Get('/new-arrivals')\n  public getNewArrivals(@Query() productQuery: GetProductsDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_ProductsModule_imports\n\n\n\ncluster_ProductsModule_exports\n\n\n\n\nPaginationModule\n\nPaginationModule\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nPaginationModule->ProductsModule\n\n\n\n\n\nProductVariantsModule\n\nProductVariantsModule\n\nProductsModule -->\n\nProductVariantsModule->ProductsModule\n\n\n\n\n\nUploadsModule\n\nUploadsModule\n\nProductsModule -->\n\nUploadsModule->ProductsModule\n\n\n\n\n\nProductsService \n\nProductsService \n\nProductsService  -->\n\nProductsModule->ProductsService \n\n\n\n\n\nCreateProductProvider\n\nCreateProductProvider\n\nProductsModule -->\n\nCreateProductProvider->ProductsModule\n\n\n\n\n\nFindAllProductsProvider\n\nFindAllProductsProvider\n\nProductsModule -->\n\nFindAllProductsProvider->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nUpdateProductProvider\n\nUpdateProductProvider\n\nProductsModule -->\n\nUpdateProductProvider->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateProductProvider\n                        \n                        \n                            FindAllProductsProvider\n                        \n                        \n                            ProductsService\n                        \n                        \n                            UpdateProductProvider\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PaginationModule\n                        \n                        \n                            ProductVariantsModule\n                        \n                        \n                            UploadsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductsController } from './products.controller';\nimport { ProductsService } from './providers/products.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Product } from './product.entity';\nimport { CreateProductProvider } from './providers/create-product.provider';\nimport { UploadsModule } from 'src/uploads/uploads.module';\nimport { PaginationModule } from 'src/common/pagination/pagination.module';\nimport { ProductVariantsModule } from 'src/product-variants/product-variants.module';\nimport { FindAllProductsProvider } from './providers/find-all-products.provider';\nimport { UpdateProductProvider } from './providers/update-product.provider';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Product]),\n    UploadsModule,\n    PaginationModule,\n    ProductVariantsModule,\n  ],\n  controllers: [ProductsController],\n  providers: [\n    ProductsService,\n    CreateProductProvider,\n    FindAllProductsProvider,\n    UpdateProductProvider,\n  ],\n  exports: [ProductsService],\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/providers/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createProduct\n                            \n                            \n                                    Public\n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findProductById\n                            \n                            \n                                    Public\n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createProductProvider: CreateProductProvider, productRepository: Repository, findAllProductsProvider: FindAllProductsProvider, updateProductProvider: UpdateProductProvider)\n                    \n                \n                        \n                            \n                                Defined in src/products/providers/products.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createProductProvider\n                                                  \n                                                        \n                                                                        CreateProductProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        findAllProductsProvider\n                                                  \n                                                        \n                                                                        FindAllProductsProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateProductProvider\n                                                  \n                                                        \n                                                                        UpdateProductProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProduct(createProductDto: CreateProductDto, files: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                files\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                the created product\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProduct(productId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a message that the item was successfully deleted\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(productQuery: GetProductsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productQuery\n                                            \n                                                            GetProductsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                all products\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductById(productId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                product by id\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProduct(id: string, patchProductDto: PatchProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patchProductDto\n                                            \n                                                            PatchProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                updated product\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { CreateProductProvider } from './create-product.provider';\nimport { CreateProductDto } from '../dtos/createProductDto';\nimport { Repository } from 'typeorm';\nimport { Product } from '../product.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { GetProductsDto } from '../dtos/get-product.dto';\nimport { Paginated } from 'src/common/pagination/interfaces/paginated.interface';\nimport { PatchProductDto } from '../dtos/patch-product.dto';\nimport { FindAllProductsProvider } from './find-all-products.provider';\nimport { UpdateProductProvider } from './update-product.provider';\n\n@Injectable()\nexport class ProductsService {\n  constructor(\n    /**\n     * injecting the create product provider\n     */\n\n    private readonly createProductProvider: CreateProductProvider,\n\n    /**\n     * injecting the product repository\n     */\n    @InjectRepository(Product)\n    private readonly productRepository: Repository,\n\n    /**\n     * injecting the find all products provider\n     */\n    private readonly findAllProductsProvider: FindAllProductsProvider,\n\n    /**\n     * injecting the update product provider\n     */\n    private readonly updateProductProvider: UpdateProductProvider,\n  ) {}\n\n  /**\n   * @function creates a product\n   * @param createProductDto\n   * @param files\n   * @returns the created product\n   */\n  public async createProduct(\n    createProductDto: CreateProductDto,\n    files: { [key: string]: Express.Multer.File[] },\n  ) {\n    return this.createProductProvider.createProduct(createProductDto, files);\n  }\n\n  /**\n   * @function to get product by id\n   * @param productId\n   * @returns product by id\n   */\n  public async findProductById(productId: string): Promise {\n    try {\n      const product = await this.productRepository.findOneBy({\n        id: productId,\n      });\n\n      if (!product) {\n        throw new NotFoundException(`product with ${productId}  not found`);\n      }\n\n      return product;\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n\n  /**\n   * @function for getting all products\n   * @param productQuery\n   * @returns all products\n   */\n  public async findAll(\n    productQuery: GetProductsDto,\n  ): Promise> {\n    return await this.findAllProductsProvider.findAll(productQuery);\n  }\n\n  /**\n   * @function updates a product\n   * @param id\n   * @param patchProductDto\n   * @returns updated product\n   */\n  public async updateProduct(\n    id: string,\n    patchProductDto: PatchProductDto,\n  ): Promise {\n    return await this.updateProductProvider.updateProduct(id, patchProductDto);\n  }\n\n  /**\n   * @function deletes a product\n   * @param productId\n   * @returns a message that the item was successfully deleted\n   */\n  public async deleteProduct(productId: string): Promise {\n    try {\n      await this.productRepository.delete(productId);\n      return {\n        message: `Product ${productId}, was successfully deleted`,\n      };\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductsWithVariantsDto.html":{"url":"classes/ProductsWithVariantsDto.html","title":"class - ProductsWithVariantsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductsWithVariantsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-variants/dto/products-with-variants.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                products\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductWithVariantDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsNotEmpty()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/products-with-variants.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport { IsArray, IsNotEmpty, IsString, ValidateNested } from 'class-validator';\nimport { PatchProductVariantDto } from './patch-product-variant.dto';\n\nclass ProductWithVariantDto {\n  @IsString()\n  @IsNotEmpty()\n  productId: string;\n\n  @IsArray()\n  @IsNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => PatchProductVariantDto)\n  variants: PatchProductVariantDto[];\n}\n\nexport class ProductsWithVariantsDto {\n  @IsArray()\n  @IsNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => ProductWithVariantDto)\n  products: ProductWithVariantDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenDto.html":{"url":"classes/RefreshTokenDto.html","title":"class - RefreshTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/refresh-token.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                refresh token dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the refresh token', example: 'hdfbwojefbnqpkfbjoqfehfewfeqwf234jr'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/refresh-token.dto.ts:17\n                        \n                    \n\n            \n                \n                    refresh token\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\n/**\n * refresh token dto\n */\nexport class RefreshTokenDto {\n  /**\n   * refresh token\n   */\n  @ApiProperty({\n    description: 'This is the refresh token',\n    example: 'hdfbwojefbnqpkfbjoqfehfewfeqwf234jr',\n  })\n  @IsNotEmpty()\n  @IsString()\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RefreshTokenProvider.html":{"url":"injectables/RefreshTokenProvider.html","title":"injectable - RefreshTokenProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RefreshTokenProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/refresh-token.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for resfresh token\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                refreshTokens\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConfiguration: ConfigType<>, generateTokenProvider: GenerateTokensProvider, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/refresh-token.provider.ts:19\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        generateTokenProvider\n                                                  \n                                                        \n                                                                        GenerateTokensProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshTokens(refreshTokenDto: RefreshTokenDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/refresh-token.provider.ts:56\n                        \n                    \n\n\n            \n                \n                        function for using the refresh token to generate a new access and refresh token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshTokenDto\n                                            \n                                                            RefreshTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                access and refresh tokend\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  forwardRef,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { RefreshTokenDto } from '../dtos/refresh-token.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport jwtConfig from '../config/jwt.config';\nimport { ConfigType } from '@nestjs/config';\nimport { GenerateTokensProvider } from './generate-tokens.provider';\nimport { UsersService } from 'src/users/providers/users.service';\nimport { ActiveUserData } from '../interfaces/active-user-data.interface';\n\n/**\n * provider for resfresh token\n */\n@Injectable()\nexport class RefreshTokenProvider {\n  /**\n   * constructor\n   * @param jwtService\n   * @param jwtConfiguration\n   * @param generateTokenProvider\n   * @param usersService\n   */\n  constructor(\n    /**\n     * Injecting the jwt service\n     */\n    private readonly jwtService: JwtService,\n\n    /**\n     * Injecting the jwt config\n     */\n    @Inject(jwtConfig.KEY)\n    private readonly jwtConfiguration: ConfigType,\n\n    /**\n     * injecting the generate token provider\n     */\n    private readonly generateTokenProvider: GenerateTokensProvider,\n\n    /**\n     * Injecting the usersService\n     */\n    @Inject(forwardRef(() => UsersService))\n    private readonly usersService: UsersService,\n  ) {}\n\n  /**\n   * function for using the refresh token to generate a new access and refresh token\n   * @param refreshTokenDto\n   * @returns access and refresh tokend\n   */\n  public async refreshTokens(refreshTokenDto: RefreshTokenDto) {\n    try {\n      // verify the refresh token using the jwtService\n      const { sub } = await this.jwtService.verifyAsync\n      >(refreshTokenDto.refreshToken, {\n        secret: this.jwtConfiguration.secret,\n        audience: this.jwtConfiguration.audience,\n        issuer: this.jwtConfiguration.issuer,\n      });\n\n      // based on the id gotten, fetch the user from the db\n      const user = await this.usersService.findOneById(sub);\n\n      // generate the tokens\n      return await this.generateTokenProvider.generateTokens(user);\n    } catch (error) {\n      throw new UnauthorizedException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Review.html":{"url":"entities/Review.html","title":"entity - Review","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Review\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/reviews.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dateCreated\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                product\n                            \n                            \n                                    \n                                review\n                            \n                            \n                                    \n                                reviewer\n                            \n                            \n                                    \n                                    \n                                stars\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, product => product.reviews)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        review\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reviewer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        stars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})@Check('\"stars\" BETWEEN 1 AND 5')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Product } from 'src/products/product.entity';\nimport {\n  Check,\n  Column,\n  CreateDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Review {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  reviewer: string;\n\n  @Column('text')\n  review: string;\n\n  @Column({ type: 'int' })\n  @Check('\"stars\" BETWEEN 1 AND 5') // This ad\n  stars: number;\n\n  @CreateDateColumn()\n  dateCreated: Date;\n\n  @ManyToOne(() => Product, (product) => product.reviews)\n  product: Product;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ReviewsController.html":{"url":"controllers/ReviewsController.html","title":"controller - ReviewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ReviewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/reviews.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                reviews\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                createReview\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                deleteProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        createReview\n                        \n                    \n                \n            \n            \n                \n                        \n                    createReview(createReviewDto: CreateReviewDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('')@Auth(AuthType.None)\n                \n            \n\n                    \n                        \n                            Defined in src/reviews/reviews.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createReviewDto\n                                            \n                                                            CreateReviewDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                review\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProduct(reviewId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:reviewId')@Roles(Role.ADMIN)@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in src/reviews/reviews.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reviewId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a message that the item was successfully deleted\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Post,\n} from '@nestjs/common';\nimport { ReviewsService } from './providers/reviews.service';\nimport { CreateReviewDto } from './dtos/create-review.dto';\nimport { Auth } from 'src/auth/decorator/auth.decorator';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { Role } from 'src/auth/enums/role-type.enum';\n\n@Controller('reviews')\nexport class ReviewsController {\n  constructor(\n    /**\n     * injecting the reviews service\n     */\n    private readonly reviewsService: ReviewsService,\n  ) {}\n\n  /**\n   * @function creates a review\n   * @param createReviewDto\n   * @returns review\n   */\n  @Post('')\n  @Auth(AuthType.None)\n  public createReview(@Body() createReviewDto: CreateReviewDto): Promise {\n    return this.reviewsService.createReview(createReviewDto);\n  }\n\n  /**\n   * @function deletes a product\n   * @param productId\n   * @returns a message that the item was successfully deleted\n   */\n  @Delete('/:reviewId')\n  @Roles(Role.ADMIN)\n  @HttpCode(HttpStatus.NO_CONTENT) // This set\n  public deleteProduct(\n    @Param('reviewId') reviewId: string,\n  ): Promise {\n    return this.reviewsService.deleteReview(reviewId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReviewsModule.html":{"url":"modules/ReviewsModule.html","title":"module - ReviewsModule","body":"\n                   \n\n\n\n\n    Modules\n    ReviewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReviewsModule\n\n\n\ncluster_ReviewsModule_providers\n\n\n\ncluster_ReviewsModule_imports\n\n\n\n\nProductsModule\n\nProductsModule\n\n\n\nReviewsModule\n\nReviewsModule\n\nReviewsModule -->\n\nProductsModule->ReviewsModule\n\n\n\n\n\nCreateReviewProvider\n\nCreateReviewProvider\n\nReviewsModule -->\n\nCreateReviewProvider->ReviewsModule\n\n\n\n\n\nReviewsService\n\nReviewsService\n\nReviewsModule -->\n\nReviewsService->ReviewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/reviews/reviews.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateReviewProvider\n                        \n                        \n                            ReviewsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ReviewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProductsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ReviewsController } from './reviews.controller';\nimport { ReviewsService } from './providers/reviews.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Review } from './reviews.entity';\nimport { CreateReviewProvider } from './providers/create-review.provider';\nimport { ProductsModule } from 'src/products/products.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Review]), ProductsModule],\n  controllers: [ReviewsController],\n  providers: [ReviewsService, CreateReviewProvider],\n})\nexport class ReviewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReviewsService.html":{"url":"injectables/ReviewsService.html","title":"injectable - ReviewsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReviewsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/providers/reviews.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createReview\n                            \n                            \n                                    Public\n                                    Async\n                                deleteReview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createReviewProvider: CreateReviewProvider, reviewsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/reviews/providers/reviews.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createReviewProvider\n                                                  \n                                                        \n                                                                        CreateReviewProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reviewsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createReview\n                        \n                    \n                \n            \n            \n                \n                        \n                    createReview(createReviewDto: CreateReviewDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/reviews/providers/reviews.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createReviewDto\n                                            \n                                                            CreateReviewDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a review\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteReview\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteReview(reviewId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/reviews/providers/reviews.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reviewId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a message that the review was successfully deleted\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { CreateReviewProvider } from './create-review.provider';\nimport { CreateReviewDto } from '../dtos/create-review.dto';\nimport { Repository } from 'typeorm';\nimport { Review } from '../reviews.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class ReviewsService {\n  constructor(\n    /**\n     * injecting the create review provider\n     */\n    private readonly createReviewProvider: CreateReviewProvider,\n\n    /**\n     * injecting the reviews repository\n     */\n    @InjectRepository(Review)\n    private readonly reviewsRepository: Repository,\n  ) {}\n\n  /**\n   * @function creates a review\n   * @param createReviewDto\n   * @param productId\n   * @returns a review\n   */\n  public async createReview(createReviewDto: CreateReviewDto): Promise {\n    return this.createReviewProvider.createReview(createReviewDto);\n  }\n\n  /**\n   * @function deletes a review\n   * @param reviewId\n   * @returns a message that the review was successfully deleted\n   */\n  public async deleteReview(reviewId: string): Promise {\n    try {\n      await this.reviewsRepository.delete(reviewId);\n      return {\n        message: `Product ${reviewId}, was successfully deleted`,\n      };\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/roles/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    role guard\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/roles/roles.guard.ts:16\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/roles/roles.guard.ts:31\n                        \n                    \n\n\n            \n                \n                        function for validating role of user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true or false depending whether the users role meets the role requirements in the role decorator\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  ForbiddenException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { ROLES_KEY } from 'src/auth/constants/role.constant';\nimport { Role } from 'src/auth/enums/role-type.enum';\n\n/**\n * role guard\n */\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  // using static means you can use the name of the property of the class without the \"this\" keyword\n  //   private static readonly defaultRoleType: Role = Role.ADMIN;\n\n  /**\n   * constructor\n   * @param reflector\n   */\n  constructor(private reflector: Reflector) {}\n\n  /**\n   * function for validating role of user\n   * @param context\n   * @returns true or false depending whether the users role meets the role requirements in the role decorator\n   */\n  canActivate(context: ExecutionContext): boolean {\n    const requiredRoles = this.reflector.getAllAndOverride(ROLES_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    if (!requiredRoles) {\n      return true; //  allow access.\n    }\n\n    const { user } = context.switchToHttp().getRequest();\n\n    if (!user) {\n      throw new ForbiddenException('User not found.');\n    }\n\n    const hasRole = requiredRoles.some((role) => user.role === role);\n\n    if (!hasRole) {\n      throw new ForbiddenException(\n        'You do not have permission to access this resource.',\n      );\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SaveBankTransferProvider.html":{"url":"injectables/SaveBankTransferProvider.html","title":"injectable - SaveBankTransferProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SaveBankTransferProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bank-transfers/providers/save-bank-transfer.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                saveBankTransfer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataSource: DataSource, productVariantsService: ProductVariantsService, uploadsService: UploadsService)\n                    \n                \n                        \n                            \n                                Defined in src/bank-transfers/providers/save-bank-transfer.provider.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productVariantsService\n                                                  \n                                                        \n                                                                        ProductVariantsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uploadsService\n                                                  \n                                                        \n                                                                        UploadsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        saveBankTransfer\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveBankTransfer(createBankTransferDto: CreateBankTransferDto, user: ActiveUserData, file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bank-transfers/providers/save-bank-transfer.provider.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createBankTransferDto\n                                            \n                                                            CreateBankTransferDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { CreateBankTransferDto } from '../dtos/create-brank-transfer.dto';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\nimport { DataSource } from 'typeorm';\nimport { Discount } from 'src/discounts/discounts.entity';\nimport { User } from 'src/users/user.entity';\nimport { ProductVariantsService } from 'src/product-variants/providers/product-variants.service';\nimport { UploadsService } from 'src/uploads/providers/uploads.service';\nimport { PaymentMethod } from 'src/payments/enums/payment-method.enum';\nimport { paymentStatus } from 'src/payments/enums/paymentStatus.enum';\nimport { Payment } from 'src/payments/payment.entity';\nimport { Order } from 'src/orders/order.entity';\nimport { PaymentVariant } from 'src/payments/payment-variant.entity';\nimport { ProductVariant } from 'src/product-variants/product-variants.entity';\nimport { DiscountUsage } from 'src/discounts-usage/discounts-usage.entity';\nimport { BankTransfer } from '../bank-transfer.entity';\n\n@Injectable()\nexport class SaveBankTransferProvider {\n  constructor(\n    /**\n     * Injecting datasource\n     */\n    private readonly dataSource: DataSource,\n\n    /**\n     * injecting the product variants service\n     */\n    private readonly productVariantsService: ProductVariantsService,\n\n    /**\n     * injecting the uploads service\n     */\n    private readonly uploadsService: UploadsService,\n  ) {}\n\n  public async saveBankTransfer(\n    createBankTransferDto: CreateBankTransferDto,\n    user: ActiveUserData,\n    file: Express.Multer.File,\n  ) {\n    // start transaction\n    // create Query Runner instance\n    const queryRunner = this.dataSource.createQueryRunner();\n    try {\n      // connect query runner to datasource\n      await queryRunner.connect();\n\n      // start transaction\n      await queryRunner.startTransaction();\n    } catch (error) {\n      console.log(error);\n      throw new RequestTimeoutException('Could not connect to datasource');\n    }\n\n    // find the user\n    const buyer: User = await queryRunner.manager.findOne(User, {\n      where: { id: user.sub },\n    });\n\n    let discount: Discount;\n    // find the discount if there is one\n    if (createBankTransferDto.discountId) {\n      discount = await queryRunner.manager.findOne(Discount, {\n        where: { id: createBankTransferDto.discountId },\n      });\n    }\n\n    // user info should have details about address but if there is a set delivery address then use that\n    const deliveryAddress =\n      createBankTransferDto.deliveryAddress ??\n      `${buyer.streetAddress}, ${buyer.city}, ${buyer.state}`;\n\n    const deliveryPicker =\n      createBankTransferDto.deliveryPicker ??\n      `${buyer.firstName} ${buyer.lastName}`;\n\n    // calculate the total amount\n    let totalAmount = createBankTransferDto.products\n      .map((prd) => {\n        // loop through inner variants\n        const totalQty = prd.variants\n          .map((vr) => vr.quantity)\n          .reduce((acc, cur) => cur + acc, 0);\n\n        return prd.price * totalQty;\n      })\n      .reduce((acc, cur) => acc + cur, 0);\n\n    totalAmount = createBankTransferDto.discountId\n      ? totalAmount - (discount.percentOff / 100) * totalAmount\n      : totalAmount;\n\n    try {\n      const fileDir = `bank-transfers/${buyer.firstName}-${buyer.id}`;\n      const proofImgUrl = await this.uploadsService.uploadFile(file, fileDir);\n\n      // Iterate through each product in the request\n      for (const product of createBankTransferDto.products) {\n        const { productId, variants } = product;\n\n        // Iterate through each variant the user wants to buy\n        for (const variantDto of variants) {\n          const { id: variantId, quantity } = variantDto;\n\n          // reduce quantity in db\n          const variant = await queryRunner.manager\n            .createQueryBuilder(ProductVariant, 'variant')\n            .where('variant.id = :id AND variant.productId = :productId', {\n              id: variantId,\n              productId,\n            })\n            .getOne();\n\n          // Reserve the stock by decrementing the quantity\n          variant.quantity -= quantity;\n\n          if (variant.quantity  prd.variants)\n          .flat()\n          .map(async (vr) => {\n            const variant = await queryRunner.manager.findOne(ProductVariant, {\n              where: { id: vr.id },\n            });\n\n            return {\n              variant,\n              quantity: vr.quantity,\n            };\n          }),\n      );\n\n      // create payment variants from the product variants\n      for (const variant of prdVariants) {\n        // create payment variant\n        await queryRunner.manager.save(PaymentVariant, {\n          paymentId: payment.id,\n          variantId: variant.variant.id,\n          quantity: variant.quantity,\n        });\n      }\n\n      // if user used discount then add it to the discount usage\n      if (discount.id) {\n        // create the discount usage\n        const discountUsage = await queryRunner.manager.save(DiscountUsage, {\n          user: buyer,\n          discount: discount,\n          order: order,\n        });\n\n        // add the discount applied to the order\n        order.discountApplied = discount.percentOff;\n\n        // add the discount usage to the order\n        order.discountUsage = discountUsage;\n\n        // save both the discount usage and order\n        await queryRunner.manager.save(Order, order);\n        await queryRunner.manager.save(DiscountUsage, discountUsage);\n      }\n\n      //   create bank transfer row\n\n      const bankTransfer = await queryRunner.manager.save(BankTransfer, {\n        userId: buyer.id,\n        imageProof: proofImgUrl,\n        amount: totalAmount,\n        payment: payment,\n      });\n\n      // if successful commit\n      // ensures the txn is committed to the db\n\n      await queryRunner.commitTransaction();\n\n      return {\n        message: 'Proof submitted successfully',\n        info: bankTransfer,\n      };\n    } catch (error) {\n      // we rollback the txn here if it is not successful\n      await queryRunner.rollbackTransaction();\n      throw new ConflictException('Could not complete the transaction', {\n        description: String(error),\n      });\n    } finally {\n      // relsease the connection\n      // release connection whether it was successful or not\n      try {\n        await queryRunner.release();\n      } catch (error) {\n        throw new RequestTimeoutException('Could not release the connection', {\n          description: String(error),\n        });\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/sign-in.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                sign in dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the email of the user', example: 'Favour@gmail.com'})@IsEmail()@MaxLength(96)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/sign-in.dto.ts:19\n                        \n                    \n\n            \n                \n                    user email address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the role of the user', example: 'Admin'})@IsEnum(Role)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/sign-in.dto.ts:30\n                        \n                    \n\n            \n                \n                    user role\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsEnum, IsNotEmpty, MaxLength } from 'class-validator';\nimport { Role } from '../enums/role-type.enum';\n\n/**\n * sign in dto\n */\nexport class SignInDto {\n  /**\n   * user email address\n   */\n  @ApiProperty({\n    description: 'This is the email of the user',\n    example: 'Favour@gmail.com',\n  })\n  @IsEmail()\n  @MaxLength(96)\n  @IsNotEmpty()\n  email: string;\n\n  /**\n   * user role\n   */\n  @ApiProperty({\n    description: 'This is the role of the user',\n    example: 'Admin',\n  })\n  @IsEnum(Role)\n  @IsNotEmpty()\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SignInProvider.html":{"url":"injectables/SignInProvider.html","title":"injectable - SignInProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SignInProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/sign-in.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for sigining in users\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, mailService: MailService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/sign-in.provider.ts:17\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: SignInDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/sign-in.provider.ts:42\n                        \n                    \n\n\n            \n                \n                        function for signing in users\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                access and refresh tokens\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  forwardRef,\n  Inject,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { SignInDto } from '../dtos/sign-in.dto';\nimport { UsersService } from 'src/users/providers/users.service';\nimport { randomInt } from 'crypto';\nimport * as crypto from 'crypto';\nimport { MailService } from 'src/mail/providers/mail.service';\n\n/**\n * provider for sigining in users\n */\n@Injectable()\nexport class SignInProvider {\n  /**\n   * constructor\n   * @param usersService\n   * @param hashingProvider\n   * @param generateTokenProvider\n   */\n  constructor(\n    /**\n     * injecting the user service\n     */\n    @Inject(forwardRef(() => UsersService))\n    private readonly usersService: UsersService,\n\n    /**\n     * injecting the mail service\n     */\n    private readonly mailService: MailService,\n  ) {}\n\n  /**\n   * function for signing in users\n   * @param signInDto\n   * @returns access and refresh tokens\n   */\n  public async signIn(signInDto: SignInDto) {\n    // find  the user using the email ID\n    // throw an exception if the user does not exist\n\n    let user: any;\n    user = await this.usersService.findOneByEmail(signInDto.email);\n\n    // if user does not exist already, create user\n    if (!user) {\n      user = await this.usersService.createUser({\n        email: signInDto.email,\n        role: signInDto.role,\n      });\n    }\n\n    // generate otp\n    const otp = randomInt(1000, 1000000);\n\n    const hashedOtp = crypto\n      .createHash('sha256')\n      .update(otp.toString())\n      .digest('hex');\n\n    // store the otp in the db\n    await this.usersService.storeTokenOtpAndOtpExpire(user, hashedOtp);\n\n    try {\n      await this.mailService.sendLoginOtp(user, otp.toString());\n    } catch (error) {\n      console.log(error);\n      throw new RequestTimeoutException(error);\n    }\n\n    return {\n      user: {\n        id: user.id,\n        role: user.role,\n        email: user.email,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StoreOtpAndExpireProvider.html":{"url":"injectables/StoreOtpAndExpireProvider.html","title":"injectable - StoreOtpAndExpireProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StoreOtpAndExpireProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/store-otp-and-expire.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider class for storing otp and expiry date\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                storeOtpAndExpire\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/store-otp-and-expire.provider.ts:10\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        storeOtpAndExpire\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeOtpAndExpire(user: User, otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/store-otp-and-expire.provider.ts:29\n                        \n                    \n\n\n            \n                \n                        function for storing otp and expiry date\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '../user.entity';\n\n/**\n * provider class for storing otp and expiry date\n */\n@Injectable()\nexport class StoreOtpAndExpireProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * Injecting the users repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for storing otp and expiry date\n   * @param user\n   * @param otp\n   * @returns user\n   */\n  public async storeOtpAndExpire(user: User, otp: string) {\n    const resetExpires = new Date(Date.now() + 5 * 60 * 1000);\n    const newUserObj = { ...user, otp: otp, otpExpire: resetExpires };\n    try {\n      return await this.usersRepository.save(newUserObj);\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Subscriber.html":{"url":"entities/Subscriber.html","title":"entity - Subscriber","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Subscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscriber.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                subscriber entity for the table in the database\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/subscriber.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/subscriber.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * subscriber entity for the table in the database\n */\n@Entity()\nexport class Subscriber {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: false,\n    unique: true,\n  })\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SubscribersController.html":{"url":"controllers/SubscribersController.html","title":"controller - SubscribersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SubscribersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                subscribers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                createSubscriber\n                            \n                            \n                                    \n                                    \n                                    Public\n                                deleteSubscriber\n                            \n                            \n                                    \n                                    \n                                    Public\n                                findAllSubscribers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        createSubscriber\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSubscriber(createSubscriberDto: CreateSubscriberDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Auth(AuthType.None)\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        deleteSubscriber\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteSubscriber(subscriberId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:subscriberId')@Auth(AuthType.None)\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                subscriberId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        findAllSubscribers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllSubscribers(subscriberQuery: GetSubscribersDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('')@Roles(Role.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                subscriberQuery\n                                            \n                                                            GetSubscribersDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, Query } from '@nestjs/common';\nimport { Auth } from 'src/auth/decorator/auth.decorator';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\nimport { CreateSubscriberDto } from './dtos/create-subscriber.dto';\nimport { SubscribersService } from './providers/subscribers.service';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { Role } from 'src/auth/enums/role-type.enum';\nimport { GetSubscribersDto } from './dtos/get-subscribers.dto';\n\n@Controller('subscribers')\nexport class SubscribersController {\n  /**\n   * constructor\n   * @param subscriberService\n   */\n  constructor(\n    /**\n     * injecting the subscriber service\n     */\n    private readonly subscriberService: SubscribersService,\n  ) {}\n\n  @Post()\n  @Auth(AuthType.None)\n  public createSubscriber(@Body() createSubscriberDto: CreateSubscriberDto) {\n    return this.subscriberService.createSubscriber(createSubscriberDto);\n  }\n\n  @Get('/:subscriberId')\n  @Auth(AuthType.None)\n  public deleteSubscriber(@Param('subscriberId') subscriberId: string) {\n    return this.subscriberService.unsubscribeEmail(subscriberId);\n  }\n\n  @Get('')\n  @Roles(Role.ADMIN)\n  public findAllSubscribers(@Query() subscriberQuery: GetSubscribersDto) {\n    return this.subscriberService.findAllSubscribers(subscriberQuery);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubscribersModule.html":{"url":"modules/SubscribersModule.html","title":"module - SubscribersModule","body":"\n                   \n\n\n\n\n    Modules\n    SubscribersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_imports\n\n\n\ncluster_SubscribersModule_providers\n\n\n\n\nMailModule\n\nMailModule\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nSubscribersModule -->\n\nMailModule->SubscribersModule\n\n\n\n\n\nPaginationModule\n\nPaginationModule\n\nSubscribersModule -->\n\nPaginationModule->SubscribersModule\n\n\n\n\n\nFindAllSubscribersProvider\n\nFindAllSubscribersProvider\n\nSubscribersModule -->\n\nFindAllSubscribersProvider->SubscribersModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/subscribers/subscribers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FindAllSubscribersProvider\n                        \n                        \n                            SubscribersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SubscribersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MailModule\n                        \n                        \n                            PaginationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SubscribersService } from './providers/subscribers.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Subscriber } from './subscriber.entity';\nimport { MailModule } from 'src/mail/mail.module';\nimport { SubscribersController } from './subscribers.controller';\nimport { FindAllSubscribersProvider } from './providers/find-all-subscribers.provider';\nimport { PaginationModule } from 'src/common/pagination/pagination.module';\n\n@Module({\n  controllers: [SubscribersController],\n  providers: [SubscribersService, FindAllSubscribersProvider],\n  imports: [\n    PaginationModule,\n    TypeOrmModule.forFeature([Subscriber]),\n    MailModule,\n  ],\n})\nexport class SubscribersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubscribersService.html":{"url":"injectables/SubscribersService.html","title":"injectable - SubscribersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubscribersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/providers/subscribers.service.ts\n        \n\n\n            \n                Description\n            \n            \n                service for the subscriber module\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createSubscriber\n                            \n                            \n                                    Public\n                                    Async\n                                findAllSubscribers\n                            \n                            \n                                    Public\n                                    Async\n                                unsubscribeEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subscriberRepository: Repository, mailService: MailService, findAllSubscribersProviders: FindAllSubscribersProvider)\n                    \n                \n                        \n                            \n                                Defined in src/subscribers/providers/subscribers.service.ts:14\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subscriberRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        findAllSubscribersProviders\n                                                  \n                                                        \n                                                                        FindAllSubscribersProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createSubscriber\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSubscriber(createSubscriberDto: CreateSubscriberDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/providers/subscribers.service.ts:43\n                        \n                    \n\n\n            \n                \n                        function for creatng a subscriber\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                message that subscriber has successfully subscribed to the newsletter\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAllSubscribers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllSubscribers(subscriberQuery: GetSubscribersDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/providers/subscribers.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                subscriberQuery\n                                            \n                                                            GetSubscribersDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        unsubscribeEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    unsubscribeEmail(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/providers/subscribers.service.ts:62\n                        \n                    \n\n\n            \n                \n                        function for unsubscribing from newsletter\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                message that subscriber has unsubscribed from the newsletter\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { CreateSubscriberDto } from '../dtos/create-subscriber.dto';\nimport { Repository } from 'typeorm';\nimport { Subscriber } from '../subscriber.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { MailService } from 'src/mail/providers/mail.service';\nimport { FindAllSubscribersProvider } from './find-all-subscribers.provider';\nimport { GetSubscribersDto } from '../dtos/get-subscribers.dto';\n\n/**\n * service for the subscriber module\n */\n@Injectable()\nexport class SubscribersService {\n  /**\n   * constructor\n   * @param subscriberRepository\n   * @param mailService\n   */\n  constructor(\n    /**\n     * injecting the subscriber repository\n     */\n    @InjectRepository(Subscriber)\n    private readonly subscriberRepository: Repository,\n\n    /**\n     * injecting the mail service\n     */\n    private readonly mailService: MailService,\n\n    /**\n     * injecting the find all subscribers provider\n     */\n    private readonly findAllSubscribersProviders: FindAllSubscribersProvider,\n  ) {}\n\n  /**\n   * function for creatng a subscriber\n   * @param createSubscriberDto\n   * @returns message that subscriber has successfully subscribed to the newsletter\n   */\n  public async createSubscriber(createSubscriberDto: CreateSubscriberDto) {\n    const subscriber = this.subscriberRepository.create(createSubscriberDto);\n\n    try {\n      await this.subscriberRepository.save(subscriber);\n      await this.mailService.sendSubscriberMail(subscriber);\n      return {\n        message: 'Subscribed to newsletter successfully',\n      };\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n\n  /**\n   * function for unsubscribing from newsletter\n   * @param id\n   * @returns message that subscriber has unsubscribed from the newsletter\n   */\n  public async unsubscribeEmail(id: string) {\n    try {\n      await this.subscriberRepository.delete(id);\n      return {\n        message: 'Unsubscribed from newsletter successfully',\n      };\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n\n  public async findAllSubscribers(subscriberQuery: GetSubscribersDto) {\n    return await this.findAllSubscribersProviders.findAll(subscriberQuery);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDeliveryStateDto.html":{"url":"classes/UpdateDeliveryStateDto.html","title":"class - UpdateDeliveryStateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDeliveryStateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery-states/dtos/update-delivery-state.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(\n  CreateDeliveryStateDto,\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateDeliveryStateDto } from './create-delivery-state.dto';\nimport { PartialType } from '@nestjs/mapped-types';\n\nexport class UpdateDeliveryStateDto extends PartialType(\n  CreateDeliveryStateDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateProductProvider.html":{"url":"injectables/UpdateProductProvider.html","title":"injectable - UpdateProductProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateProductProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/providers/update-product.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productRepository: Repository, productVariantsService: ProductVariantsService)\n                    \n                \n                        \n                            \n                                Defined in src/products/providers/update-product.provider.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productVariantsService\n                                                  \n                                                        \n                                                                        ProductVariantsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProduct(id: string, patchProductDto: PatchProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/update-product.provider.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patchProductDto\n                                            \n                                                            PatchProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { PatchProductDto } from '../dtos/patch-product.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Product } from '../product.entity';\nimport { ProductVariantsService } from 'src/product-variants/providers/product-variants.service';\n\n@Injectable()\nexport class UpdateProductProvider {\n  constructor(\n    /**\n     * injecting the product repository\n     */\n    @InjectRepository(Product)\n    private readonly productRepository: Repository,\n\n    /**\n     * injecting the product variant service\n     */\n    private readonly productVariantsService: ProductVariantsService,\n  ) {}\n\n  public async updateProduct(id: string, patchProductDto: PatchProductDto) {\n    let product;\n    // find the prd\n    try {\n      product = await this.productRepository.findOne({\n        where: { id },\n      });\n    } catch (err) {\n      throw new RequestTimeoutException(err);\n    }\n    if (!product) {\n      throw new BadRequestException('Product does not exist');\n    }\n    // update product\n    // Update top-level product fields (if provided)\n    let productUpdated = false;\n    if (patchProductDto.name !== undefined) {\n      product.name = patchProductDto.name;\n      productUpdated = true;\n    }\n    if (patchProductDto.price !== undefined) {\n      product.price = patchProductDto.price;\n      productUpdated = true;\n    }\n    if (patchProductDto.discount !== undefined) {\n      product.discount = patchProductDto.discount;\n      productUpdated = true;\n    }\n\n    if (patchProductDto.category !== undefined) {\n      product.category = patchProductDto.category;\n      productUpdated = true;\n    }\n\n    if (patchProductDto.dressStyle !== undefined) {\n      product.dressStyle = patchProductDto.dressStyle;\n      productUpdated = true;\n    }\n\n    if (patchProductDto.clothType !== undefined) {\n      product.clothType = patchProductDto.clothType;\n      productUpdated = true;\n    }\n\n    if (patchProductDto.material !== undefined) {\n      product.material = patchProductDto.material;\n      productUpdated = true;\n    }\n\n    if (patchProductDto.brand !== undefined) {\n      product.brand = patchProductDto.brand;\n      productUpdated = true;\n    }\n\n    try {\n      // Save product only if top-level fields were updated\n      if (productUpdated) {\n        await this.productRepository.save(product);\n      }\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error: any) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    // Update only the specified variants\n    if (patchProductDto.variants && patchProductDto.variants.length > 0) {\n      for (const variantDto of patchProductDto.variants) {\n        const variant =\n          await this.productVariantsService.findProductVariantById(\n            variantDto.id,\n            product.id,\n          );\n        // Manually update only the provided fields\n        if (variantDto.color !== undefined) variant.color = variantDto.color;\n        if (variantDto.size !== undefined) variant.size = variantDto.size;\n        if (variantDto.quantity !== undefined)\n          variant.quantity = variantDto.quantity;\n        if (variantDto.soldOut !== undefined)\n          variant.soldOut = variantDto.soldOut;\n\n        // Save the variant directly\n        await this.productVariantsService.saveProductVariant(variant);\n      }\n    }\n\n    // Return the updated product with its variants (for response)\n    return this.productRepository.findOne({\n      where: { id },\n      relations: ['variants'],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadToAwsProvider.html":{"url":"injectables/UploadToAwsProvider.html","title":"injectable - UploadToAwsProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadToAwsProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/uploads/providers/upload-to-aws.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                fileUpload\n                            \n                            \n                                    Private\n                                generateFileName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/uploads/providers/upload-to-aws.provider.ts:8\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        fileUpload\n                        \n                    \n                \n            \n            \n                \n                        \n                    fileUpload(file: Express.Multer.File, fileDir: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/uploads/providers/upload-to-aws.provider.ts:25\n                        \n                    \n\n\n            \n                \n                        function for uploading image file to aws\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fileDir\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                stored file\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateFileName\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateFileName(file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/uploads/providers/upload-to-aws.provider.ts:52\n                        \n                    \n\n\n            \n                \n                        function for generating the image filename\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    function for generating the image file name\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                the image file name\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { S3 } from 'aws-sdk';\nimport * as path from 'path';\nimport { v4 as uuid4 } from 'uuid';\n\n@Injectable()\nexport class UploadToAwsProvider {\n  /**\n   * constructor\n   * @param configService\n   */\n  constructor(\n    /**\n     * injecting the config service\n     */\n    private readonly configService: ConfigService,\n  ) {}\n\n  /**\n   * function for uploading image file to aws\n   * @param file\n   * @returns stored file\n   */\n  public async fileUpload(file: Express.Multer.File, fileDir: string) {\n    const s3 = new S3();\n\n    const folderName = `uploads/${fileDir}`; // Example: uploads/variants/123\n    const fileKey = `${folderName}/${this.generateFileName(file)}`;\n\n    try {\n      const uploadResult = await s3\n        .upload({\n          Bucket: this.configService.get('appConfig.awsBucketName'),\n          Body: file.buffer,\n          Key: fileKey,\n          ContentType: file.mimetype,\n        })\n        .promise();\n\n      return uploadResult.Key;\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n\n  /**\n   *function for generating the image filename\n   * @param file function for generating the image file name\n   * @returns the image file name\n   */\n  private generateFileName(file: Express.Multer.File) {\n    // extract file name\n    const name = file.originalname.split('.')[0];\n\n    // Remove white spaces\n    name.replace(/|s/g, '').trim();\n\n    // extract the extension\n    const extension = path.extname(file.originalname);\n\n    // generate time stamp\n    const timestamp = new Date().getTime().toString().trim();\n\n    // return file uuid\n    return `${name}-${timestamp}-${uuid4()}${extension}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UploadsModule.html":{"url":"modules/UploadsModule.html","title":"module - UploadsModule","body":"\n                   \n\n\n\n\n    Modules\n    UploadsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UploadsModule\n\n\n\ncluster_UploadsModule_exports\n\n\n\ncluster_UploadsModule_providers\n\n\n\n\nUploadsService \n\nUploadsService \n\n\n\nUploadsModule\n\nUploadsModule\n\nUploadsService  -->\n\nUploadsModule->UploadsService \n\n\n\n\n\nUploadToAwsProvider\n\nUploadToAwsProvider\n\nUploadsModule -->\n\nUploadToAwsProvider->UploadsModule\n\n\n\n\n\nUploadsService\n\nUploadsService\n\nUploadsModule -->\n\nUploadsService->UploadsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/uploads/uploads.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UploadToAwsProvider\n                        \n                        \n                            UploadsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UploadsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UploadsService } from './providers/uploads.service';\nimport { UploadToAwsProvider } from './providers/upload-to-aws.provider';\n\n@Module({\n  providers: [UploadsService, UploadToAwsProvider],\n  exports: [UploadsService],\n})\nexport class UploadsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadsService.html":{"url":"injectables/UploadsService.html","title":"injectable - UploadsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/uploads/providers/uploads.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uploadToAwsProvider: UploadToAwsProvider, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/uploads/providers/uploads.service.ts:10\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uploadToAwsProvider\n                                                  \n                                                        \n                                                                        UploadToAwsProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File, fileDir: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/uploads/providers/uploads.service.ts:33\n                        \n                    \n\n\n            \n                \n                        function for uploading image file\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fileDir\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                url for image file\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  Injectable,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { UploadToAwsProvider } from './upload-to-aws.provider';\n\n@Injectable()\nexport class UploadsService {\n  /**\n   * constructor\n   * @param uploadToAwsProvider\n   * @param configService\n   */\n  constructor(\n    /**\n     * injecting the upload to aws provider\n     */\n    private readonly uploadToAwsProvider: UploadToAwsProvider,\n\n    /**\n     * injecting config service\n     */\n    private readonly configService: ConfigService,\n  ) {}\n\n  /**\n   * function for uploading image file\n   * @param file\n   * @returns url for image file\n   */\n  public async uploadFile(file: Express.Multer.File, fileDir: string) {\n    // throw error for unsupported mimetype\n    if (!['image/jpeg', 'image/png', 'image/jpg'].includes(file.mimetype)) {\n      throw new BadRequestException('mime type not supported');\n    }\n\n    try {\n      // upload the file to the aws s3 bucket and a url has been generated\n      const name = await this.uploadToAwsProvider.fileUpload(file, fileDir);\n\n      return `${this.configService.get('appConfig.awsCloudFrontUrl')}/${name}`;\n    } catch (error) {\n      throw new ConflictException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                user entity for user table in the database\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    Optional\n                                country\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    Optional\n                                otp\n                            \n                            \n                                    \n                                    Optional\n                                otpExpire\n                            \n                            \n                                    \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                    Optional\n                                state\n                            \n                            \n                                    \n                                    Optional\n                                streetAddress\n                            \n                            \n                                    \n                                    Optional\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        otp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        otpExpire\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 20, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: Role, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        streetAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:64\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Role } from 'src/auth/enums/role-type.enum';\nimport { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * user entity for user table in the database\n */\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  firstName?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  lastName?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 20,\n    nullable: true,\n  })\n  phoneNumber?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  country?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  state?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  city?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  streetAddress?: string;\n\n  @Column({\n    nullable: true,\n  })\n  zipCode?: number;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: false,\n    unique: true,\n  })\n  email: string;\n\n  @Column({\n    type: 'enum',\n    enum: Role,\n    nullable: false,\n  })\n  role: Role;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  otp?: string;\n\n  @Column({\n    type: 'timestamp',\n    nullable: true,\n  })\n  otpExpire?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                findAllUsers\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                findUser\n                            \n                            \n                                    \n                                    \n                                    Public\n                                patchUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It deletes a user based on their id'})@ApiResponse({status: 204, description: 'User successfully deleted'})@ApiParam({name: 'userId', required: true, type: String, description: 'The unique identifier of the user', example: '12345'})@ApiHeaders(['undefined', 'undefined'])@Delete('/:userId')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:156\n                        \n                    \n\n\n            \n                \n                        route for deleting a user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                a message indicating user was deleted\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        findAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllUsers(usersQuery: GetUsersDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It finds all users '})@ApiResponse({status: 200, description: 'All users are fetched and paginated'})@ApiQuery({name: 'limit', type: 'number', required: false, description: 'The number of entries returned per query', example: 10})@ApiQuery({name: 'page', type: 'number', required: false, description: 'The position of the page number that you want the api to return', example: 1})@ApiHeaders(['undefined', 'undefined'])@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:111\n                        \n                    \n\n\n            \n                \n                        route for getting all users\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                usersQuery\n                                            \n                                                            GetUsersDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                all users\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        findUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUser(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It finds a user based on their id'})@ApiResponse({status: 200, description: 'User is fetched successfully based on user id'})@ApiParam({name: 'userId', required: true, type: String, description: 'The unique identifier of the user', example: '12345'})@ApiHeaders(['undefined', 'undefined'])@Get('/:userId')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:67\n                        \n                    \n\n\n            \n                \n                        route for getting a user by user id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                a user\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        patchUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchUsers(patchUserDto: PatchUserDto, user: ActiveUserData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@Roles(Role.USER, Role.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Query,\n} from '@nestjs/common';\n\nimport { UsersService } from './providers/users.service';\nimport { PatchUserDto } from './dtos/patch-user.dto';\nimport { Role } from 'src/auth/enums/role-type.enum';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { ActiveUser } from 'src/auth/decorator/active-user.decorator';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\nimport {\n  ApiHeaders,\n  ApiOperation,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n} from '@nestjs/swagger';\nimport { GetUsersDto } from './dtos/get-user.dto';\n\n@Controller('users')\nexport class UsersController {\n  constructor(\n    /**\n     * injecting the usersService\n     */\n    private readonly usersService: UsersService,\n  ) {}\n\n  /**\n   * route for getting a user by user id\n   * @param userId\n   * @returns a user\n   */\n  @ApiOperation({\n    summary: 'It finds a user based on their id',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'User is fetched successfully based on user id',\n  })\n  @ApiParam({\n    name: 'userId',\n    required: true,\n    type: String,\n    description: 'The unique identifier of the user',\n    example: '12345',\n  })\n  @ApiHeaders([\n    {\n      name: 'Authorization',\n      required: true,\n      description: 'Bearer token for authorization',\n    },\n    {\n      name: 'X-Custom-Header',\n      required: false,\n      description: 'A custom optional header',\n    },\n  ])\n  @Get('/:userId')\n  public findUser(@Param('userId') userId: string) {\n    return this.usersService.findOneById(userId);\n  }\n\n  /**\n   * route for getting all users\n   * @param usersQuery\n   * @returns all users\n   */\n  @ApiOperation({\n    summary: 'It finds all users ',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'All users are fetched and paginated',\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: 'number',\n    required: false,\n    description: 'The number of entries returned per query',\n    example: 10,\n  })\n  @ApiQuery({\n    name: 'page',\n    type: 'number',\n    required: false,\n    description:\n      'The position of the page number that you want the api to return',\n    example: 1,\n  })\n  @ApiHeaders([\n    {\n      name: 'Authorization',\n      required: true,\n      description: 'Bearer token for authorization',\n    },\n    {\n      name: 'X-Custom-Header',\n      required: false,\n      description: 'A custom optional header',\n    },\n  ])\n  @Get()\n  public findAllUsers(@Query() usersQuery: GetUsersDto) {\n    return this.usersService.findAll(usersQuery);\n  }\n\n  @Patch()\n  @Roles(Role.USER, Role.ADMIN)\n  public patchUsers(\n    @Body() patchUserDto: PatchUserDto,\n    @ActiveUser() user: ActiveUserData,\n  ) {\n    return this.usersService.updateUser(user.sub, patchUserDto);\n  }\n\n  /**\n   * route for deleting a user\n   * @param userId\n   * @returns a message indicating user was deleted\n   */\n  @ApiOperation({\n    summary: 'It deletes a user based on their id',\n  })\n  @ApiResponse({\n    status: 204,\n    description: 'User successfully deleted',\n  })\n  @ApiParam({\n    name: 'userId',\n    required: true,\n    type: String,\n    description: 'The unique identifier of the user',\n    example: '12345',\n  })\n  @ApiHeaders([\n    {\n      name: 'Authorization',\n      required: true,\n      description: 'Bearer token for authorization',\n    },\n    {\n      name: 'X-Custom-Header',\n      required: false,\n      description: 'A custom optional header',\n    },\n  ])\n  @Delete('/:userId')\n  public deleteUser(@Param('userId') userId: string) {\n    return this.usersService.deleteUser(userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nPaginationModule\n\nPaginationModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPaginationModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nClearOtpAndExpiryTimeProvider\n\nClearOtpAndExpiryTimeProvider\n\nUsersModule -->\n\nClearOtpAndExpiryTimeProvider->UsersModule\n\n\n\n\n\nCreateUsersProvider\n\nCreateUsersProvider\n\nUsersModule -->\n\nCreateUsersProvider->UsersModule\n\n\n\n\n\nFindOneByIdProvider\n\nFindOneByIdProvider\n\nUsersModule -->\n\nFindOneByIdProvider->UsersModule\n\n\n\n\n\nFindOneUserByEmailProvider\n\nFindOneUserByEmailProvider\n\nUsersModule -->\n\nFindOneUserByEmailProvider->UsersModule\n\n\n\n\n\nFindUserByOtpAndExpiryTimeProvider\n\nFindUserByOtpAndExpiryTimeProvider\n\nUsersModule -->\n\nFindUserByOtpAndExpiryTimeProvider->UsersModule\n\n\n\n\n\nStoreOtpAndExpireProvider\n\nStoreOtpAndExpireProvider\n\nUsersModule -->\n\nStoreOtpAndExpireProvider->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClearOtpAndExpiryTimeProvider\n                        \n                        \n                            CreateUsersProvider\n                        \n                        \n                            FindOneByIdProvider\n                        \n                        \n                            FindOneUserByEmailProvider\n                        \n                        \n                            FindUserByOtpAndExpiryTimeProvider\n                        \n                        \n                            StoreOtpAndExpireProvider\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PaginationModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { UsersService } from './providers/users.service';\nimport { UsersController } from './users.controller';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { CreateUsersProvider } from './providers/create-users.provider';\nimport { User } from './user.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { FindOneUserByEmailProvider } from './providers/find-one-user-by-email.provider';\nimport { StoreOtpAndExpireProvider } from './providers/store-otp-and-expire.provider';\nimport { FindUserByOtpAndExpiryTimeProvider } from './providers/find-user-by-reset-otp-and-expiry-time.provider';\nimport { FindOneByIdProvider } from './providers/find-one-by-id.provider';\nimport { PaginationModule } from 'src/common/pagination/pagination.module';\nimport { ClearOtpAndExpiryTimeProvider } from './providers/clear-otp-and-expiry-time.provider';\n\n@Module({\n  providers: [\n    UsersService,\n    CreateUsersProvider,\n    FindOneUserByEmailProvider,\n    StoreOtpAndExpireProvider,\n    FindUserByOtpAndExpiryTimeProvider,\n    FindOneByIdProvider,\n    ClearOtpAndExpiryTimeProvider,\n  ],\n  controllers: [UsersController],\n  imports: [\n    forwardRef(() => AuthModule),\n    TypeOrmModule.forFeature([User]),\n    PaginationModule,\n  ],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/users.service.ts\n        \n\n\n            \n                Description\n            \n            \n                service provider for the user module\ninjectable\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                clearOtpAndExpiryTime\n                            \n                            \n                                    Public\n                                    Async\n                                createUser\n                            \n                            \n                                    Public\n                                    Async\n                                deleteUser\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOneByEmail\n                            \n                            \n                                    Public\n                                    Async\n                                findOneById\n                            \n                            \n                                    Public\n                                    Async\n                                findUserByResetOtpAndExpiryTime\n                            \n                            \n                                    Public\n                                    Async\n                                storeTokenOtpAndOtpExpire\n                            \n                            \n                                    Public\n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createUserProvider: CreateUsersProvider, findOneUserByEmailProvider: FindOneUserByEmailProvider, storeOtpAndExpiresProvider: StoreOtpAndExpireProvider, findUserByOtpAndExpiresProvider: FindUserByOtpAndExpiryTimeProvider, findOneByIdProvider: FindOneByIdProvider, paginationprovider: PaginationProvider, usersRepository: Repository, clearOtpAndExpiryTimeProvider: ClearOtpAndExpiryTimeProvider)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/users.service.ts:27\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createUserProvider\n                                                  \n                                                        \n                                                                        CreateUsersProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        findOneUserByEmailProvider\n                                                  \n                                                        \n                                                                        FindOneUserByEmailProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storeOtpAndExpiresProvider\n                                                  \n                                                        \n                                                                        StoreOtpAndExpireProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        findUserByOtpAndExpiresProvider\n                                                  \n                                                        \n                                                                        FindUserByOtpAndExpiryTimeProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        findOneByIdProvider\n                                                  \n                                                        \n                                                                        FindOneByIdProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paginationprovider\n                                                  \n                                                        \n                                                                        PaginationProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clearOtpAndExpiryTimeProvider\n                                                  \n                                                        \n                                                                        ClearOtpAndExpiryTimeProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        clearOtpAndExpiryTime\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearOtpAndExpiryTime(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:126\n                        \n                    \n\n\n            \n                \n                        function for clearing otp after login\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:87\n                        \n                    \n\n\n            \n                \n                        function for creating a new user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                the create user\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:168\n                        \n                    \n\n\n            \n                \n                        a function for deleting a user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                a message on successful deletion\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(userQuery: GetUsersDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:144\n                        \n                    \n\n\n            \n                \n                        function for getting all users\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userQuery\n                                            \n                                                            GetUsersDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                all users\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:96\n                        \n                    \n\n\n            \n                \n                        function for getting the user based on the email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                a user based on the email\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:135\n                        \n                    \n\n\n            \n                \n                        function for getting the user based on id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user based on the user id\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findUserByResetOtpAndExpiryTime\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserByResetOtpAndExpiryTime(otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:115\n                        \n                    \n\n\n            \n                \n                        function for getting the user based on the stored reset token and expiry date\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                the user based on the stored reset token and expiry date\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        storeTokenOtpAndOtpExpire\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeTokenOtpAndOtpExpire(user: User, token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:106\n                        \n                    \n\n\n            \n                \n                        function for storing the reset token and expiry date of the token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                a user with stored reset token and expiry date\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(id: string, patchUserDto: PatchUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:179\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patchUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { CreateUsersProvider } from './create-users.provider';\nimport { CreateUserDto } from '../dtos/create-user.dto';\nimport { FindOneUserByEmailProvider } from './find-one-user-by-email.provider';\nimport { StoreOtpAndExpireProvider } from './store-otp-and-expire.provider';\nimport { User } from '../user.entity';\nimport { FindUserByOtpAndExpiryTimeProvider } from './find-user-by-reset-otp-and-expiry-time.provider';\n\nimport { FindOneByIdProvider } from './find-one-by-id.provider';\nimport { GetUsersDto } from '../dtos/get-user.dto';\nimport { Paginated } from 'src/common/pagination/interfaces/paginated.interface';\nimport { PaginationProvider } from 'src/common/pagination/providers/pagination.provider';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ClearOtpAndExpiryTimeProvider } from './clear-otp-and-expiry-time.provider';\nimport { PatchUserDto } from '../dtos/patch-user.dto';\n\n/**\n * service provider for the user module\n * injectable\n */\n@Injectable()\nexport class UsersService {\n  /**\n   * constructor\n   * @param createUserProvider\n   * @param findOneUserByEmailProvider\n   * @param storeOtpAndExpiresProvider\n   * @param findUserByResetOtpAndExpiresProvider\n   * @param changeUserPasswordProvider\n   * @param findOneByIdProvider\n   * @param paginationprovider\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * injecting the create user provider\n     */\n    private readonly createUserProvider: CreateUsersProvider,\n\n    /**\n     * Injecting the findOneUserByEmailProvider\n     */\n    private readonly findOneUserByEmailProvider: FindOneUserByEmailProvider,\n\n    /**\n     * injecting the store otp and expires provider\n     */\n    private readonly storeOtpAndExpiresProvider: StoreOtpAndExpireProvider,\n\n    /**\n     * injecting the find user by reset otp and expires provider\n     */\n    private readonly findUserByOtpAndExpiresProvider: FindUserByOtpAndExpiryTimeProvider,\n\n    /**\n     * injecting the find one by id provider\n     */\n    private readonly findOneByIdProvider: FindOneByIdProvider,\n\n    /**\n     * injecting the pagination provider\n     */\n    private readonly paginationprovider: PaginationProvider,\n\n    /**\n     * injecting the user repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n\n    /**\n     * injecting the clear otp and expiry time provider\n     */\n    private readonly clearOtpAndExpiryTimeProvider: ClearOtpAndExpiryTimeProvider,\n  ) {}\n\n  /**\n   * function for creating a new user\n   * @param createUserDto\n   * @returns the create user\n   */\n  public async createUser(createUserDto: CreateUserDto) {\n    return await this.createUserProvider.createUser(createUserDto);\n  }\n\n  /**\n   * function for getting the user based on the email\n   * @param email\n   * @returns a user based on the email\n   */\n  public async findOneByEmail(email: string) {\n    return this.findOneUserByEmailProvider.findOneByEmail(email);\n  }\n\n  /**\n   * function for storing the reset token and expiry date of the token\n   * @param user\n   * @param token\n   * @returns a user with stored reset token and expiry date\n   */\n  public async storeTokenOtpAndOtpExpire(user: User, token: string) {\n    return await this.storeOtpAndExpiresProvider.storeOtpAndExpire(user, token);\n  }\n\n  /**\n   * function for getting the user based on the stored reset token and expiry date\n   * @param otp\n   * @returns the user based on the stored reset token and expiry date\n   */\n  public async findUserByResetOtpAndExpiryTime(otp: string) {\n    return await this.findUserByOtpAndExpiresProvider.findUserByOtpAndExpiryTime(\n      otp,\n    );\n  }\n\n  /**\n   * function for clearing otp after login\n   * @param user\n   * @returns user\n   */\n  public async clearOtpAndExpiryTime(user: User) {\n    return await this.clearOtpAndExpiryTimeProvider.clearOtpAndExpiryTime(user);\n  }\n\n  /**\n   * function for getting the user based on id\n   * @param id\n   * @returns user based on the user id\n   */\n  public async findOneById(id: string) {\n    return await this.findOneByIdProvider.findById(id);\n  }\n\n  /**\n   * function for getting all users\n   * @param userQuery\n   * @returns all users\n   */\n  public async findAll(userQuery: GetUsersDto): Promise> {\n    try {\n      const user = this.paginationprovider.paginationQuery(\n        {\n          limit: userQuery.limit,\n          page: userQuery.page,\n        },\n        this.usersRepository,\n        {\n          relations: null,\n        },\n      );\n\n      return user;\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n\n  /**\n   * a function for deleting a user\n   * @param userId\n   * @returns a message on successful deletion\n   */\n  public async deleteUser(userId: string) {\n    try {\n      await this.usersRepository.delete(userId);\n      return {\n        message: `User ${userId}, was successfully deleted`,\n      };\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n\n  public async updateUser(id: string, patchUserDto: PatchUserDto) {\n    let user;\n    // find the user\n    try {\n      user = await this.usersRepository.findOneBy({\n        id: id,\n      });\n    } catch (err) {\n      throw new RequestTimeoutException(err);\n    }\n    if (!user) {\n      throw new BadRequestException('User does not exist');\n    }\n    // update user\n    user = { ...user, ...patchUserDto };\n\n    try {\n      await this.usersRepository.save(user);\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error: any) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VerifyPaymentProvider.html":{"url":"injectables/VerifyPaymentProvider.html","title":"injectable - VerifyPaymentProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VerifyPaymentProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/providers/verify-payment.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAuthHeader\n                            \n                            \n                                    Public\n                                    Async\n                                paymentWebhook\n                            \n                            \n                                    Private\n                                    Async\n                                verifyPayment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paystackConfiguration: ConfigType<>, dataSource: DataSource, productVariantsService: ProductVariantsService, productsService: ProductsService, mailService: MailService)\n                    \n                \n                        \n                            \n                                Defined in src/paystack/providers/verify-payment.provider.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paystackConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productVariantsService\n                                                  \n                                                        \n                                                                        ProductVariantsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productsService\n                                                  \n                                                        \n                                                                        ProductsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAuthHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAuthHeader()\n                \n            \n\n\n                    \n                        \n                            Defined in src/paystack/providers/verify-payment.provider.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         { Authorization: string; }\n\n                        \n                            \n                                authorization header for paystack\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        paymentWebhook\n                        \n                    \n                \n            \n            \n                \n                        \n                    paymentWebhook(body: any, signature: string, req: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paystack/providers/verify-payment.provider.ts:235\n                        \n                    \n\n\n            \n                \n                        function called by paystack server after user pays\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                signature\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                reference for payment\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        verifyPayment\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyPayment(reference: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paystack/providers/verify-payment.provider.ts:67\n                        \n                    \n\n\n            \n                \n                        function for verifying the payment\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reference\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                data after payment\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  HttpException,\n  HttpStatus,\n  Inject,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport paystackConfig from '../config/paystack.config';\nimport { ConfigType } from '@nestjs/config';\nimport { DataSource } from 'typeorm';\nimport * as crypto from 'crypto';\nimport axios from 'axios';\nimport { Payment } from 'src/payments/payment.entity';\nimport { paymentStatus } from 'src/payments/enums/paymentStatus.enum';\nimport { ProductVariantsService } from 'src/product-variants/providers/product-variants.service';\nimport { Order } from 'src/orders/order.entity';\nimport { ProductsService } from 'src/products/providers/products.service';\nimport { DiscountUsage } from 'src/discounts-usage/discounts-usage.entity';\nimport { MailService } from 'src/mail/providers/mail.service';\nimport { ProductVariant } from 'src/product-variants/product-variants.entity';\nimport { PaymentVariant } from 'src/payments/payment-variant.entity';\n\n@Injectable()\nexport class VerifyPaymentProvider {\n  constructor(\n    /**\n     * injecting the paystack config\n     */\n    @Inject(paystackConfig.KEY)\n    private readonly paystackConfiguration: ConfigType,\n\n    /**\n     * Injecting datasource\n     */\n    private readonly dataSource: DataSource,\n\n    /**\n     * injecting the product variants service\n     */\n    private readonly productVariantsService: ProductVariantsService,\n\n    /**\n     * injecting the products service\n     */\n    private readonly productsService: ProductsService,\n\n    /**\n     * injecting the mail service\n     */\n    private readonly mailService: MailService,\n  ) {}\n\n  /**\n   * @function for getting the auth header\n   * @returns authorization header for paystack\n   */\n  private getAuthHeader() {\n    return { Authorization: `Bearer ${this.paystackConfiguration.secret}` };\n  }\n\n  /**\n   * function for verifying the payment\n   * @param reference\n   * @returns data after payment\n   */\n  private async verifyPayment(reference: string): Promise {\n    // create Query Runner instance\n    const queryRunner = this.dataSource.createQueryRunner();\n\n    try {\n      // connect query runner to datasource\n      await queryRunner.connect();\n\n      // start transaction\n      await queryRunner.startTransaction();\n    } catch (error) {\n      console.log(error);\n      throw new RequestTimeoutException('Could not connect to datasource');\n    }\n    try {\n      // send request to verify payment\n      const response = await axios.get(\n        `${this.paystackConfiguration.baseUrl}/transaction/verify/${reference}`,\n        { headers: this.getAuthHeader() },\n      );\n\n      const {\n        products,\n        user,\n        deliveryAddress,\n        deliveryPicker,\n        totalAmount,\n        discount,\n      } = response.data.data.metadata;\n\n      // get all product variants\n      const prdVariants = await Promise.all(\n        products\n          .map((prd) => prd.variants)\n          .flat()\n          .map(async (vr) => {\n            const variant = await queryRunner.manager.findOne(ProductVariant, {\n              where: { id: vr.id },\n            });\n\n            return {\n              variant,\n              quantity: vr.quantity,\n            };\n          }),\n      );\n\n      const prdsDb = await Promise.all(\n        products\n          .map((prd) => prd.productId)\n          .map(\n            async (prdId) => await this.productsService.findProductById(prdId),\n          ),\n      );\n\n      // Get purchase by payment reference\n      const payment = await queryRunner.manager.findOne(Payment, {\n        where: { providerReference: reference },\n      });\n\n      if (!payment) {\n        throw new Error('Purchase not found');\n      }\n\n      if (response.data.data.status === 'success') {\n        // Update payment status\n        payment.status = paymentStatus.SUCCESS;\n\n        // create order\n        const order = await queryRunner.manager.save(Order, {\n          userId: user.id,\n          deliveryAddress: deliveryAddress,\n          totalAmount: totalAmount,\n          deliveryPicker: deliveryPicker,\n          payment: payment,\n        });\n\n        // create payment variants from the product variants\n        for (const variant of prdVariants) {\n          console.log('variantId: ', variant.variant.id);\n          // create payment variant\n          await queryRunner.manager.save(PaymentVariant, {\n            paymentId: payment.id,\n            variantId: variant.variant.id,\n            quantity: variant.quantity,\n          });\n        }\n\n        // if user used discount then add it to the discount usage\n        if (discount.id) {\n          // create the discount usage\n          const discountUsage = await queryRunner.manager.save(DiscountUsage, {\n            user: user,\n            discount: discount,\n            order: order,\n          });\n\n          // add the discount applied to the order\n          order.discountApplied = discount.percentOff;\n\n          // add the discount usage to the order\n          order.discountUsage = discountUsage;\n\n          // save both the discount usage and order\n          await queryRunner.manager.save(Order, order);\n          await queryRunner.manager.save(DiscountUsage, discountUsage);\n        }\n      } else {\n        // Payment failed\n        payment.status = paymentStatus.FAILED;\n\n        // rollback\n        for (const product of products) {\n          const { productId, variants } = product;\n\n          // Iterate through each variant the user wants to buy\n          for (const variantDto of variants) {\n            const { id: variantId, quantity } = variantDto;\n\n            // check availability\n            await this.productVariantsService.rollbackStock(\n              variantId,\n              productId,\n              quantity,\n              queryRunner.manager,\n            );\n          }\n        }\n      }\n\n      // Save updated paymet\n      await queryRunner.manager.save(Payment, payment);\n\n      await queryRunner.commitTransaction();\n\n      // send a mail to the user\n      try {\n        await this.mailService.sendProductPurchaseMail(user, prdsDb);\n      } catch (err) {\n        throw new ConflictException(err);\n      }\n\n      return response.data;\n    } catch (error) {\n      await queryRunner.rollbackTransaction();\n      throw new ConflictException('Could not complete the transaction', {\n        description: String(error),\n      });\n    } finally {\n      // relsease the connection\n      // release connection whether it was successful or not\n      try {\n        await queryRunner.release();\n      } catch (error) {\n        throw new RequestTimeoutException('Could not release the connection', {\n          description: String(error),\n        });\n      }\n    }\n  }\n\n  /**\n   * function called by paystack server after user pays\n   * @param body\n   * @param signature\n   * @param req\n   * @returns reference for payment\n   */\n  public async paymentWebhook(body: any, signature: string, req: any) {\n    // regenerate the signature\n    const hash = crypto\n      .createHmac('sha512', this.paystackConfiguration.secret)\n      .update(JSON.stringify(req.body))\n      .digest('hex');\n\n    if (hash !== signature) {\n      throw new HttpException('Invalid signature', HttpStatus.FORBIDDEN);\n    }\n\n    const { data, event } = body;\n\n    if (event !== 'charge.success') {\n      throw new HttpException('Invalid event type', HttpStatus.BAD_REQUEST);\n    }\n\n    // verify payment\n    const paymentData = await this.verifyPayment(data.reference);\n\n    // console.log('Payment successful:', paymentData);\n\n    if (paymentData.data.status === 'success') {\n      return { message: 'Payment verified and processed successfully' };\n    } else {\n      throw new HttpException(\n        'Payment verification failed',\n        HttpStatus.BAD_REQUEST,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app.module.ts\n            \n            variable\n            ENV\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/auth/constants/auth.constant.ts\n            \n            variable\n            AUTH_TYPE_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/constants/auth.constant.ts\n            \n            variable\n            REQUEST_USER_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/constants/role.constant.ts\n            \n            variable\n            ROLES_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/decorator/active-user.decorator.ts\n            \n            variable\n            ActiveUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/decorator/auth.decorator.ts\n            \n            variable\n            Auth\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/decorator/role.decorator.ts\n            \n            variable\n            Roles\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/auth/dtos/otpSignin.dto.ts\n            \n            class\n            OtpSigninDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/auth/dtos/refresh-token.dto.ts\n            \n            class\n            RefreshTokenDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/auth/dtos/sign-in.dto.ts\n            \n            class\n            SignInDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/guards/access-token/access-token.guard.ts\n            \n            guard\n            AccessTokenGuard\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/guards/authentication/authentication.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/auth/guards/roles/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/interfaces/active-user-data.interface.ts\n            \n            interface\n            ActiveUserData\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/providers/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/auth/providers/generate-tokens.provider.ts\n            \n            injectable\n            GenerateTokensProvider\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/providers/otp-signin.provider.ts\n            \n            injectable\n            OtpSigninProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/providers/refresh-token.provider.ts\n            \n            injectable\n            RefreshTokenProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/providers/sign-in.provider.ts\n            \n            injectable\n            SignInProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/bank-transfers/bank-transfer.entity.ts\n            \n            entity\n            BankTransfer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/bank-transfers/bank-transfers.controller.ts\n            \n            controller\n            BankTransfersController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/bank-transfers/dtos/create-brank-transfer.dto.ts\n            \n            class\n            CreateBankTransferDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/bank-transfers/providers/bank-transfers.service.ts\n            \n            injectable\n            BankTransfersService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/bank-transfers/providers/confirm-bank-transfer.provider.ts\n            \n            injectable\n            ConfirmBankTransferProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/bank-transfers/providers/save-bank-transfer.provider.ts\n            \n            injectable\n            SaveBankTransferProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interceptors/data-response/data-response.interceptor.ts\n            \n            injectable\n            DataResponseInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/common/pagination/dtos/pagination-query.dto.ts\n            \n            class\n            PaginationQueryDto\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/common/pagination/interfaces/paginated.interface.ts\n            \n            interface\n            Paginated\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/common/pagination/providers/pagination.provider.ts\n            \n            injectable\n            PaginationProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/config/paths.config.ts\n            \n            variable\n            ROOT_PATH\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/delivery-states/delivery-state.entity.ts\n            \n            entity\n            DeliveryState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/delivery-states/delivery-states.controller.ts\n            \n            controller\n            DeliveryStatesController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/delivery-states/dtos/create-delivery-state.dto.ts\n            \n            class\n            CreateDeliveryStateDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/delivery-states/dtos/update-delivery-state.dto.ts\n            \n            class\n            UpdateDeliveryStateDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/delivery-states/providers/delivery-states.service.ts\n            \n            injectable\n            DeliveryStatesService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/discounts-usage/discounts-usage.entity.ts\n            \n            entity\n            DiscountUsage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/discounts-usage/providers/discounts-usage.service.ts\n            \n            injectable\n            DiscountsUsageService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/discounts/discounts.controller.ts\n            \n            controller\n            DiscountsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/discounts/discounts.entity.ts\n            \n            entity\n            Discount\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/discounts/dtos/apply-for-discount.dto.ts\n            \n            class\n            ApplyForDiscountDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/discounts/dtos/create-discount.dto.ts\n            \n            class\n            CreateDiscountDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/discounts/providers/apply-for-discount.provider.ts\n            \n            injectable\n            ApplyForDiscountProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/discounts/providers/create-discount.provider.ts\n            \n            injectable\n            CreateDiscountProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/discounts/providers/discounts.service.ts\n            \n            injectable\n            DiscountsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/mail/providers/mail.service.ts\n            \n            injectable\n            MailService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/orders/dtos/get-orders.dto.ts\n            \n            class\n            GetOrdersBaseDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/orders/dtos/get-orders.dto.ts\n            \n            class\n            GetOrdersDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/orders/dtos/patch-order.dto.ts\n            \n            class\n            PatchOrderDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/orders/order.entity.ts\n            \n            entity\n            Order\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/orders/orders.controller.ts\n            \n            controller\n            OrdersController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/orders/providers/find-all-orders.provider.ts\n            \n            injectable\n            FindAllOrdersProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/orders/providers/orders.service.ts\n            \n            injectable\n            OrdersService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/payments/dtos/get-payments.dto.ts\n            \n            class\n            GetPaymentsBaseDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/payments/dtos/get-payments.dto.ts\n            \n            class\n            GetPaymentsDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/payments/payment-variant.entity.ts\n            \n            entity\n            PaymentVariant\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/payments/payment.entity.ts\n            \n            entity\n            Payment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/payments/payments.controller.ts\n            \n            controller\n            PaymentsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/payments/providers/find-all-payments.provider.ts\n            \n            injectable\n            FindAllPaymentsProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/payments/providers/payments.service.ts\n            \n            injectable\n            PaymentsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/paystack/dtos/initiate-payment.dto.ts\n            \n            class\n            InitiatePaymentDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/paystack/dtos/initiate-payment.dto.ts\n            \n            class\n            ProductWithVariantDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/paystack/paystack.controller.ts\n            \n            controller\n            PaystackController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/paystack/providers/initiate-payment.provider.ts\n            \n            injectable\n            InitiatePaymentProvider\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/paystack/providers/paystack.service.ts\n            \n            injectable\n            PaystackService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/paystack/providers/verify-payment.provider.ts\n            \n            injectable\n            VerifyPaymentProvider\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/product-images/product-image.entity.ts\n            \n            entity\n            ProductImage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product-images/providers/product-images.service.ts\n            \n            injectable\n            ProductImagesService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product-variants/dto/create-product-variant.dto.ts\n            \n            class\n            CreateProductVariantDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/product-variants/dto/patch-product-variant.dto.ts\n            \n            class\n            PatchProductVariantDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/product-variants/dto/products-with-variants.dto.ts\n            \n            class\n            ProductsWithVariantsDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/product-variants/dto/products-with-variants.dto.ts\n            \n            class\n            ProductWithVariantDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/product-variants/product-variants.controller.ts\n            \n            controller\n            ProductVariantsController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/product-variants/product-variants.entity.ts\n            \n            entity\n            ProductVariant\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product-variants/providers/product-variants.service.ts\n            \n            injectable\n            ProductVariantsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/products/dtos/createProductDto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/products/dtos/get-product.dto.ts\n            \n            class\n            GetProductsBaseDto\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/products/dtos/get-product.dto.ts\n            \n            class\n            GetProductsDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/products/dtos/patch-product.dto.ts\n            \n            class\n            PatchProductDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/products/product.entity.ts\n            \n            entity\n            Product\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/products/providers/create-product.provider.ts\n            \n            injectable\n            CreateProductProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/providers/find-all-products.provider.ts\n            \n            injectable\n            FindAllProductsProvider\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/products/providers/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/products/providers/update-product.provider.ts\n            \n            injectable\n            UpdateProductProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/reviews/dtos/create-review.dto.ts\n            \n            class\n            CreateReviewDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/reviews/providers/create-review.provider.ts\n            \n            injectable\n            CreateReviewProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/reviews/providers/reviews.service.ts\n            \n            injectable\n            ReviewsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/reviews/reviews.controller.ts\n            \n            controller\n            ReviewsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/reviews/reviews.entity.ts\n            \n            entity\n            Review\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/dtos/create-subscriber.dto.ts\n            \n            class\n            CreateSubscriberDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/subscribers/dtos/get-subscribers.dto.ts\n            \n            class\n            GetSubscribersBaseDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/subscribers/dtos/get-subscribers.dto.ts\n            \n            class\n            GetSubscribersDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/subscribers/providers/find-all-subscribers.provider.ts\n            \n            injectable\n            FindAllSubscribersProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/subscribers/providers/subscribers.service.ts\n            \n            injectable\n            SubscribersService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/subscribers/subscriber.entity.ts\n            \n            entity\n            Subscriber\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.controller.ts\n            \n            controller\n            SubscribersController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/uploads/providers/upload-to-aws.provider.ts\n            \n            injectable\n            UploadToAwsProvider\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/uploads/providers/uploads.service.ts\n            \n            injectable\n            UploadsService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/dtos/get-user.dto.ts\n            \n            class\n            GetUsersBaseDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/dtos/get-user.dto.ts\n            \n            class\n            GetUsersDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/users/dtos/patch-user.dto.ts\n            \n            class\n            PatchUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/providers/clear-otp-and-expiry-time.provider.ts\n            \n            injectable\n            ClearOtpAndExpiryTimeProvider\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/users/providers/create-users.provider.ts\n            \n            injectable\n            CreateUsersProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/providers/find-one-by-id.provider.ts\n            \n            injectable\n            FindOneByIdProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/providers/find-one-user-by-email.provider.ts\n            \n            injectable\n            FindOneUserByEmailProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/providers/find-user-by-reset-otp-and-expiry-time.provider.ts\n            \n            injectable\n            FindUserByOtpAndExpiryTimeProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/providers/store-otp-and-expire.provider.ts\n            \n            injectable\n            StoreOtpAndExpireProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/providers/users.service.ts\n            \n            injectable\n            UsersService\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/users/user.entity.ts\n            \n            entity\n            User\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                60 %\n                (3/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.26\n        \n            @nestjs-modules/mailer : ^2.0.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^4.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/platform-express : ^10.4.15\n        \n            @nestjs/swagger : ^11.0.6\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            @types/multer : ^1.4.12\n        \n            aws-sdk : ^2.1692.0\n        \n            axios : ^1.8.4\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            joi : ^17.13.3\n        \n            pg : ^8.13.3\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n        \n            uuid : ^11.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthType   (src/.../auth-type.enum.ts)\n                        \n                        \n                            OrderStatus   (src/.../order-status.enum.ts)\n                        \n                        \n                            PaymentMethod   (src/.../payment-method.enum.ts)\n                        \n                        \n                            paymentStatus   (src/.../paymentStatus.enum.ts)\n                        \n                        \n                            Role   (src/.../role-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/enums/auth-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthType\n                    \n                \n                        \n                            \n                                 Bearer\n                            \n                        \n                        \n                            \n                                 None\n                            \n                        \n            \n        \n\n    src/orders/enums/order-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderStatus\n                    \n                \n                        \n                            \n                                 PLACED\n                            \n                        \n                        \n                            \n                                Value : placed\n                            \n                        \n                        \n                            \n                                 PROCESSING\n                            \n                        \n                        \n                            \n                                Value : processing\n                            \n                        \n                        \n                            \n                                 SHIPPED\n                            \n                        \n                        \n                            \n                                Value : shipped\n                            \n                        \n                        \n                            \n                                 DELIVERY\n                            \n                        \n                        \n                            \n                                Value : delivery\n                            \n                        \n                        \n                            \n                                 DELIVERED\n                            \n                        \n                        \n                            \n                                Value : delivered\n                            \n                        \n            \n        \n\n    src/payments/enums/payment-method.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PaymentMethod\n                    \n                \n                        \n                            \n                                 ONLINE\n                            \n                        \n                        \n                            \n                                Value : online\n                            \n                        \n                        \n                            \n                                 TRANSFER\n                            \n                        \n                        \n                            \n                                Value : transfer\n                            \n                        \n            \n        \n\n    src/payments/enums/paymentStatus.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        paymentStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n                        \n                            \n                                Value : failed\n                            \n                        \n            \n        \n\n    src/auth/enums/role-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                        the boostrap nest function\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BankTransfersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DeliveryStatesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DiscountsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DiscountsUsageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrdersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaginationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaystackModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductImagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductVariantsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReviewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubscribersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UploadsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BankTransfersModule\n\n\n\ncluster_BankTransfersModule_providers\n\n\n\ncluster_DeliveryStatesModule\n\n\n\ncluster_DeliveryStatesModule_providers\n\n\n\ncluster_DiscountsModule\n\n\n\ncluster_DiscountsModule_providers\n\n\n\ncluster_DiscountsUsageModule\n\n\n\ncluster_DiscountsUsageModule_exports\n\n\n\ncluster_DiscountsUsageModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_imports\n\n\n\ncluster_OrdersModule_providers\n\n\n\ncluster_PaginationModule\n\n\n\ncluster_PaginationModule_exports\n\n\n\ncluster_PaginationModule_providers\n\n\n\ncluster_PaymentsModule\n\n\n\ncluster_PaymentsModule_providers\n\n\n\ncluster_PaystackModule\n\n\n\ncluster_PaystackModule_providers\n\n\n\ncluster_ProductImagesModule\n\n\n\ncluster_ProductImagesModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_exports\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_ProductVariantsModule\n\n\n\ncluster_ProductVariantsModule_exports\n\n\n\ncluster_ProductVariantsModule_providers\n\n\n\ncluster_ReviewsModule\n\n\n\ncluster_ReviewsModule_providers\n\n\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\ncluster_UploadsModule\n\n\n\ncluster_UploadsModule_exports\n\n\n\ncluster_UploadsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBankTransfersModule\n\nBankTransfersModule\n\nAppModule -->\n\nBankTransfersModule->AppModule\n\n\n\n\n\nDeliveryStatesModule\n\nDeliveryStatesModule\n\nAppModule -->\n\nDeliveryStatesModule->AppModule\n\n\n\n\n\nDiscountsModule\n\nDiscountsModule\n\nAppModule -->\n\nDiscountsModule->AppModule\n\n\n\n\n\nDiscountsUsageModule\n\nDiscountsUsageModule\n\nDiscountsModule -->\n\nDiscountsUsageModule->DiscountsModule\n\n\n\nAppModule -->\n\nDiscountsUsageModule->AppModule\n\n\n\n\n\nDiscountsUsageService \n\nDiscountsUsageService \n\nDiscountsUsageService  -->\n\nDiscountsUsageModule->DiscountsUsageService \n\n\n\n\n\nMailModule\n\nMailModule\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nSubscribersModule -->\n\nMailModule->SubscribersModule\n\n\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nPaymentsModule\n\nPaymentsModule\n\nAppModule -->\n\nPaymentsModule->AppModule\n\n\n\n\n\nPaystackModule\n\nPaystackModule\n\nAppModule -->\n\nPaystackModule->AppModule\n\n\n\n\n\nProductImagesModule\n\nProductImagesModule\n\nAppModule -->\n\nProductImagesModule->AppModule\n\n\n\n\n\nProductVariantsModule\n\nProductVariantsModule\n\nBankTransfersModule -->\n\nProductVariantsModule->BankTransfersModule\n\n\n\nPaystackModule -->\n\nProductVariantsModule->PaystackModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nProductVariantsModule->ProductsModule\n\n\n\nAppModule -->\n\nProductVariantsModule->AppModule\n\n\n\n\n\nProductVariantsService \n\nProductVariantsService \n\nProductVariantsService  -->\n\nProductVariantsModule->ProductVariantsService \n\n\n\nPaystackModule -->\n\nProductsModule->PaystackModule\n\n\n\n\n\nReviewsModule\n\nReviewsModule\n\nReviewsModule -->\n\nProductsModule->ReviewsModule\n\n\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nProductsService \n\nProductsService \n\nProductsService  -->\n\nProductsModule->ProductsService \n\n\n\nAppModule -->\n\nReviewsModule->AppModule\n\n\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUploadsModule\n\nUploadsModule\n\nBankTransfersModule -->\n\nUploadsModule->BankTransfersModule\n\n\n\nProductsModule -->\n\nUploadsModule->ProductsModule\n\n\n\nAppModule -->\n\nUploadsModule->AppModule\n\n\n\n\n\nUploadsService \n\nUploadsService \n\nUploadsService  -->\n\nUploadsModule->UploadsService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nPaystackModule -->\n\nUsersModule->PaystackModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nGenerateTokensProvider\n\nGenerateTokensProvider\n\nAuthModule -->\n\nGenerateTokensProvider->AuthModule\n\n\n\n\n\nOtpSigninProvider\n\nOtpSigninProvider\n\nAuthModule -->\n\nOtpSigninProvider->AuthModule\n\n\n\n\n\nRefreshTokenProvider\n\nRefreshTokenProvider\n\nAuthModule -->\n\nRefreshTokenProvider->AuthModule\n\n\n\n\n\nSignInProvider\n\nSignInProvider\n\nAuthModule -->\n\nSignInProvider->AuthModule\n\n\n\n\n\nBankTransfersService\n\nBankTransfersService\n\nBankTransfersModule -->\n\nBankTransfersService->BankTransfersModule\n\n\n\n\n\nConfirmBankTransferProvider\n\nConfirmBankTransferProvider\n\nBankTransfersModule -->\n\nConfirmBankTransferProvider->BankTransfersModule\n\n\n\n\n\nSaveBankTransferProvider\n\nSaveBankTransferProvider\n\nBankTransfersModule -->\n\nSaveBankTransferProvider->BankTransfersModule\n\n\n\n\n\nDeliveryStatesService\n\nDeliveryStatesService\n\nDeliveryStatesModule -->\n\nDeliveryStatesService->DeliveryStatesModule\n\n\n\n\n\nApplyForDiscountProvider\n\nApplyForDiscountProvider\n\nDiscountsModule -->\n\nApplyForDiscountProvider->DiscountsModule\n\n\n\n\n\nCreateDiscountProvider\n\nCreateDiscountProvider\n\nDiscountsModule -->\n\nCreateDiscountProvider->DiscountsModule\n\n\n\n\n\nDiscountsService\n\nDiscountsService\n\nDiscountsModule -->\n\nDiscountsService->DiscountsModule\n\n\n\n\n\nDiscountsUsageService\n\nDiscountsUsageService\n\nDiscountsUsageModule -->\n\nDiscountsUsageService->DiscountsUsageModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nPaginationModule\n\nPaginationModule\n\nOrdersModule -->\n\nPaginationModule->OrdersModule\n\n\n\nPaymentsModule -->\n\nPaginationModule->PaymentsModule\n\n\n\nProductsModule -->\n\nPaginationModule->ProductsModule\n\n\n\nSubscribersModule -->\n\nPaginationModule->SubscribersModule\n\n\n\nUsersModule -->\n\nPaginationModule->UsersModule\n\n\n\n\n\nPaginationProvider \n\nPaginationProvider \n\nPaginationProvider  -->\n\nPaginationModule->PaginationProvider \n\n\n\n\n\nFindAllOrdersProvider\n\nFindAllOrdersProvider\n\nOrdersModule -->\n\nFindAllOrdersProvider->OrdersModule\n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\nPaginationProvider\n\nPaginationProvider\n\nPaginationModule -->\n\nPaginationProvider->PaginationModule\n\n\n\n\n\nFindAllPaymentsProvider\n\nFindAllPaymentsProvider\n\nPaymentsModule -->\n\nFindAllPaymentsProvider->PaymentsModule\n\n\n\n\n\nPaymentsService\n\nPaymentsService\n\nPaymentsModule -->\n\nPaymentsService->PaymentsModule\n\n\n\n\n\nInitiatePaymentProvider\n\nInitiatePaymentProvider\n\nPaystackModule -->\n\nInitiatePaymentProvider->PaystackModule\n\n\n\n\n\nPaystackService\n\nPaystackService\n\nPaystackModule -->\n\nPaystackService->PaystackModule\n\n\n\n\n\nVerifyPaymentProvider\n\nVerifyPaymentProvider\n\nPaystackModule -->\n\nVerifyPaymentProvider->PaystackModule\n\n\n\n\n\nProductImagesService\n\nProductImagesService\n\nProductImagesModule -->\n\nProductImagesService->ProductImagesModule\n\n\n\n\n\nCreateProductProvider\n\nCreateProductProvider\n\nProductsModule -->\n\nCreateProductProvider->ProductsModule\n\n\n\n\n\nFindAllProductsProvider\n\nFindAllProductsProvider\n\nProductsModule -->\n\nFindAllProductsProvider->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nUpdateProductProvider\n\nUpdateProductProvider\n\nProductsModule -->\n\nUpdateProductProvider->ProductsModule\n\n\n\n\n\nProductVariantsService\n\nProductVariantsService\n\nProductVariantsModule -->\n\nProductVariantsService->ProductVariantsModule\n\n\n\n\n\nCreateReviewProvider\n\nCreateReviewProvider\n\nReviewsModule -->\n\nCreateReviewProvider->ReviewsModule\n\n\n\n\n\nReviewsService\n\nReviewsService\n\nReviewsModule -->\n\nReviewsService->ReviewsModule\n\n\n\n\n\nFindAllSubscribersProvider\n\nFindAllSubscribersProvider\n\nSubscribersModule -->\n\nFindAllSubscribersProvider->SubscribersModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\nUploadToAwsProvider\n\nUploadToAwsProvider\n\nUploadsModule -->\n\nUploadToAwsProvider->UploadsModule\n\n\n\n\n\nUploadsService\n\nUploadsService\n\nUploadsModule -->\n\nUploadsService->UploadsModule\n\n\n\n\n\nClearOtpAndExpiryTimeProvider\n\nClearOtpAndExpiryTimeProvider\n\nUsersModule -->\n\nClearOtpAndExpiryTimeProvider->UsersModule\n\n\n\n\n\nCreateUsersProvider\n\nCreateUsersProvider\n\nUsersModule -->\n\nCreateUsersProvider->UsersModule\n\n\n\n\n\nFindOneByIdProvider\n\nFindOneByIdProvider\n\nUsersModule -->\n\nFindOneByIdProvider->UsersModule\n\n\n\n\n\nFindOneUserByEmailProvider\n\nFindOneUserByEmailProvider\n\nUsersModule -->\n\nFindOneUserByEmailProvider->UsersModule\n\n\n\n\n\nFindUserByOtpAndExpiryTimeProvider\n\nFindUserByOtpAndExpiryTimeProvider\n\nUsersModule -->\n\nFindUserByOtpAndExpiryTimeProvider->UsersModule\n\n\n\n\n\nStoreOtpAndExpireProvider\n\nStoreOtpAndExpireProvider\n\nUsersModule -->\n\nStoreOtpAndExpireProvider->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        18 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    13 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    43 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    32 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActiveUser   (src/.../active-user.decorator.ts)\n                        \n                        \n                            Auth   (src/.../auth.decorator.ts)\n                        \n                        \n                            AUTH_TYPE_KEY   (src/.../auth.constant.ts)\n                        \n                        \n                            ENV   (src/.../app.module.ts)\n                        \n                        \n                            REQUEST_USER_KEY   (src/.../auth.constant.ts)\n                        \n                        \n                            Roles   (src/.../role.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../role.constant.ts)\n                        \n                        \n                            ROOT_PATH   (src/.../paths.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/decorator/active-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ActiveUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (field: keyof ActiveUserData | undefined, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user: ActiveUserData = request[REQUEST_USER_KEY];\n\n    return field ? user?.[field] : user;\n  },\n)\n                    \n                \n\n            \n                \n                    Custom param decorator for the active user\n\n                \n            \n\n        \n    \n\n    src/auth/decorator/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...authTypes: AuthType[]) =>\n  SetMetadata(AUTH_TYPE_KEY, authTypes)\n                    \n                \n\n            \n                \n                    decorator for guarding user authentication\n\n                \n            \n\n        \n    \n\n    src/auth/constants/auth.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_TYPE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'authType'\n                    \n                \n\n            \n                \n                    constant for auth type\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REQUEST_USER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n\n            \n                \n                    constant for request user\n\n                \n            \n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENV\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV\n                    \n                \n\n            \n                \n                    app environment\n\n                \n            \n\n        \n    \n\n    src/auth/decorator/role.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Role[]) => SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n            \n                \n                    decoraror for gaurding the user roles\n\n                \n            \n\n        \n    \n\n    src/auth/constants/role.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roles'\n                    \n                \n\n            \n                \n                    constant for the roles\n\n                \n            \n\n        \n    \n\n    src/config/paths.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROOT_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.cwd()\n                    \n                \n\n            \n                \n                    setting the default root\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
