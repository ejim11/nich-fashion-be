var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AccessTokenGuard.html",[0,2.688,1,3.002]],["body/guards/AccessTokenGuard.html",[0,3.054,1,3.411,2,2.464,3,0.119,4,0.072,5,0.072,6,5.671,7,4.784,8,2.921,9,0.665,10,4.336,11,4.239,12,0.231,13,1.008,14,1.508,15,5.163,16,1.487,17,4.904,18,1.394,19,2.66,20,6.124,21,5.163,22,4.784,23,0.513,24,3.319,25,1.262,26,0.01,27,1.081,28,0.459,29,0.922,30,3.93,31,4.481,32,3.319,33,1.583,34,4.904,35,1.565,36,4.057,37,1.413,38,2.148,39,2.327,40,2.467,41,4.317,42,3.641,43,4.317,44,4.904,45,3.85,46,3.319,47,4.904,48,4.317,49,0.754,50,3.054,51,0.209,52,3.31,53,0.447,54,4.057,55,0.406,56,1.67,57,2.178,58,2.464,59,2.308,60,3.319,61,2.66,62,2.921,63,0.08,64,0.072,65,2.464,66,1.583,67,1.061,68,3.411,69,1.805,70,2.66,71,3.319,72,3.319,73,2.226,74,2.921,75,2.921,76,2.464,77,3.319,78,1.561,79,1.369,80,3.319,81,1.115,82,2.66,83,5.163,84,2.921,85,3.319,86,0.88,87,3.319,88,3.319,89,2.921,90,3.319,91,2.921,92,2.668,93,2.668,94,2.379,95,2.668,96,2.563,97,2.668,98,2.668,99,2.668,100,1.115,101,4.317,102,3.319,103,3.319,104,3.319,105,1.735,106,3.319,107,0.958,108,3.319,109,0.005,110,0.005]],["title/interfaces/ActiveUserData.html",[111,3.002,112,2.094]],["body/interfaces/ActiveUserData.html",[3,0.138,4,0.124,5,0.124,9,1.14,12,0.396,26,0.01,28,0.607,35,1.977,49,1.347,63,0.138,83,4.558,109,0.008,110,0.008,111,4.927,112,3.436,113,4.558,114,3.227,115,5.007,116,5.007,117,1.879,118,3.835,119,3.483,120,6.471,121,2.083]],["title/controllers/AppController.html",[122,1.722,123,3.205]],["body/controllers/AppController.html",[3,0.147,4,0.133,5,0.133,12,0.424,13,1.518,23,0.535,26,0.01,37,1.251,49,1.136,51,0.215,55,0.744,63,0.147,64,0.132,67,1.316,107,1.188,109,0.008,110,0.008,122,2.945,123,5.482,124,2.427,125,5.356,126,7.276,127,1.495,128,6.084,129,5.218,130,5.356,131,5.356,132,6.084]],["title/modules/AppModule.html",[133,1.06,134,3.205]],["body/modules/AppModule.html",[1,3.056,3,0.069,4,0.062,5,0.062,7,2.13,26,0.01,28,0.226,39,1.144,40,2.211,51,0.253,52,1.628,55,0.351,56,1.443,57,1.883,59,1.995,63,0.069,64,0.062,68,1.995,69,2.39,73,0.991,107,0.56,109,0.005,110,0.005,123,3.966,124,1.753,129,4.469,130,2.525,133,1.673,134,6.534,135,1.144,136,1.18,137,1.257,138,1.257,139,1.18,140,2.34,141,1.257,142,2.525,143,2.525,144,2.525,145,4.469,146,4.736,147,4.736,148,4.469,149,4.469,150,4.736,151,4.736,152,4.736,153,4.469,154,4.241,155,4.736,156,4.736,157,4.469,158,4.241,159,1.925,160,1.079,161,1.217,162,2.299,163,2.591,164,2.868,165,3.522,166,3.929,167,4.394,168,2.868,169,4.394,170,2.868,171,4.394,172,2.868,173,1.56,174,0.866,175,2.868,176,2.868,177,2.868,178,2.868,179,5.341,180,4.394,181,1.995,182,3.263,183,2.868,184,2.299,185,2.868,186,3.263,187,2.868,188,3.263,189,2.868,190,2.868,191,2.525,192,2.868,193,2.525,194,2.868,195,1.399,196,1.56,197,2.525,198,1.883,199,2.868,200,2.868,201,2.868,202,2.868,203,1.883,204,1.995,205,2.525,206,1.702,207,1.995,208,2.868,209,2.868,210,2.868,211,2.525,212,2.525,213,4.281,214,4.702,215,2.868,216,2.868,217,2.868,218,2.868,219,2.868,220,2.868,221,2.868,222,2.525,223,2.868,224,2.868,225,2.868,226,2.868,227,2.868,228,2.525,229,2.868,230,2.868,231,2.868,232,2.13,233,2.868,234,2.525,235,2.868,236,1.443,237,2.868,238,2.868,239,2.525,240,2.525,241,2.868,242,2.525,243,2.868,244,2.868,245,2.525,246,2.525,247,2.525,248,2.525,249,2.525,250,2.525,251,5.341,252,5.341]],["title/injectables/AppService.html",[53,0.394,129,2.833]],["body/injectables/AppService.html",[3,0.152,4,0.137,5,0.137,12,0.438,13,1.549,23,0.554,26,0.01,37,1.294,49,1.159,51,0.183,53,0.687,55,0.77,63,0.152,64,0.137,107,1.229,109,0.008,110,0.008,126,7.36,129,4.946,253,1.627,254,5.54,255,6.294,256,6.294,257,6.294]],["title/classes/ApplyForDiscountDto.html",[64,0.094,258,3.205]],["body/classes/ApplyForDiscountDto.html",[3,0.151,4,0.136,5,0.136,12,0.435,23,0.55,26,0.01,28,0.492,49,1.155,51,0.182,63,0.151,64,0.163,109,0.008,110,0.008,117,1.991,127,1.537,258,5.575,259,2.222,260,6.609,261,5.013,262,5.595,263,3.896,264,5.506,265,3.642,266,3.516,267,2.285]],["title/injectables/ApplyForDiscountProvider.html",[53,0.394,268,2.833]],["body/injectables/ApplyForDiscountProvider.html",[3,0.095,4,0.086,5,0.086,9,0.787,12,0.274,13,1.139,14,1.659,16,1.199,18,1.199,23,0.488,25,1.199,26,0.01,27,1.027,28,0.436,29,0.876,33,0.965,35,1.586,37,1.139,45,1.906,49,0.987,51,0.222,53,0.505,55,0.48,63,0.095,64,0.085,66,1.361,67,1.199,73,1.357,78,1.764,79,1.547,81,1.862,86,1.469,100,1.32,107,1.082,109,0.006,110,0.006,112,3.38,114,2.23,174,1.186,203,3.636,236,1.977,253,1.016,262,5.448,268,3.636,269,5.648,270,3.149,271,1.537,272,4.44,273,3.459,274,2.845,275,5.142,276,3.929,277,4.877,278,4.44,279,3.929,280,1.436,281,3.732,282,3.45,283,2.145,284,3.929,285,3.929,286,1.097,287,2.918,288,1.616,289,2.23,290,2.579,291,3.149,292,3.459,293,1.294,294,3.459,295,4.877,296,1.396,297,3.459,298,3.459,299,3.459,300,3.459,301,3.459,302,3.929,303,3.459,304,3.929,305,2.595,306,3.149,307,3.929,308,1.914,309,3.149,310,2.23,311,2.23,312,2.23,313,2.137,314,2.23,315,2.23,316,2.918,317,3.45,318,3.929,319,2.918,320,3.459,321,4.877,322,3.929,323,3.929,324,3.929,325,3.929,326,3.929,327,2.918]],["title/controllers/AuthController.html",[122,1.722,328,3.205]],["body/controllers/AuthController.html",[3,0.062,4,0.056,5,0.056,9,1.487,10,3.864,11,3.548,12,0.179,13,0.83,14,1.288,16,0.556,18,0.873,23,0.439,25,1.078,26,0.01,27,0.924,28,0.57,29,0.788,35,1.605,37,1.161,39,2.597,43,3.553,45,3.158,51,0.205,55,0.314,63,0.062,64,0.056,66,0.992,67,0.556,79,1.127,82,5.457,84,4.97,86,0.682,107,0.973,109,0.004,110,0.004,118,2.556,122,1.988,124,1.026,127,1.224,232,3.7,271,1.737,280,0.939,293,0.6,296,0.913,328,2.997,329,2.263,330,1.526,331,3.207,332,5.651,333,3.553,334,3.235,335,4.835,336,2.263,337,4.628,338,3.994,339,5.731,340,2.571,341,5.218,342,3.7,343,4.041,344,4.363,345,4.983,346,3.303,347,5.218,348,6.511,349,2.571,350,2.571,351,2.06,352,4.76,353,2.196,354,4.789,355,2.571,356,4.528,357,2.997,358,2.571,359,2.571,360,2.571,361,2.06,362,4.76,363,2.571,364,2.571,365,2.571,366,2.571,367,2.807,368,1.526,369,1.909,370,1.909,371,1.909,372,1.688,373,2.263,374,2.06,375,3.706,376,2.263,377,2.571,378,1.526,379,2.571,380,1.294,381,2.263,382,2.06,383,5.646,384,4.525,385,4.525,386,2.571,387,1.247,388,2.06,389,2.571,390,2.571,391,5.947,392,3.466,393,5.385,394,3.235,395,5.646,396,3.7,397,4.983,398,4.036,399,2.571,400,4.983,401,4.983,402,4.983,403,2.571,404,3.466,405,4.387,406,2.571,407,2.571,408,1.459,409,2.571,410,2.571,411,2.571,412,2.571,413,2.571,414,2.571,415,2.571,416,2.571,417,2.571]],["title/modules/AuthModule.html",[133,1.06,145,2.833]],["body/modules/AuthModule.html",[3,0.112,4,0.101,5,0.101,26,0.01,51,0.25,55,0.564,56,2.322,57,3.03,59,3.21,63,0.112,64,0.1,68,3.21,69,2.511,109,0.007,110,0.007,124,2.469,133,1.911,135,1.841,136,1.898,137,2.022,138,2.022,139,1.898,140,3.059,141,2.711,145,5.738,158,3.855,159,2.711,160,1.736,161,1.958,163,2.239,165,3.699,193,4.063,246,4.063,247,4.063,248,4.063,249,4.063,250,4.063,328,5.184,375,5.256,376,4.063,418,4.063,419,4.063,420,4.988,421,5.256,422,5.256,423,5.256,424,4.616,425,4.304,426,4.616,427,4.063,428,4.616,429,4.063,430,4.616,431,3.699,432,3.699,433,4.616,434,4.063,435,4.616,436,4.063]],["title/injectables/AuthService.html",[53,0.394,375,2.833]],["body/injectables/AuthService.html",[3,0.085,4,0.077,5,0.077,9,0.706,10,4.17,11,3.038,12,0.245,13,1.053,14,2.048,16,1.306,18,1.434,23,0.583,25,1.434,26,0.01,27,1.229,28,0.521,29,1.048,33,1.806,35,1.509,37,1.511,51,0.221,53,0.467,55,0.431,63,0.085,64,0.076,66,1.863,67,1.306,86,1.601,107,1.179,109,0.006,110,0.006,133,1.259,232,3.804,253,0.911,271,1.898,280,2.206,293,1.41,296,1.82,331,3.465,333,4.51,334,4.106,335,3.804,336,4.51,337,4.623,346,2.485,351,4.106,352,4.824,354,4.577,356,4.61,361,4.106,362,4.824,367,4.199,374,2.823,375,3.363,382,2.823,388,2.823,421,4.978,422,5.101,423,4.978,429,3.101,434,3.101,436,3.101,437,3.101,438,3.523,439,3.523,440,3.523,441,5.123,442,3.523,443,5.123,444,4.51,445,3.523,446,4.51,447,2.823,448,2.823,449,3.523,450,3.523,451,2.27,452,3.523,453,3.523,454,3.523,455,3.523]],["title/guards/AuthenticationGuard.html",[0,2.688,186,3.205]],["body/guards/AuthenticationGuard.html",[0,3.708,1,5.368,2,5.411,3,0.083,4,0.075,5,0.075,7,2.553,9,0.689,10,3.378,11,1.73,12,0.239,13,1.035,14,1.539,15,6.311,16,1.577,18,1.418,23,0.443,25,1.089,26,0.01,27,1.104,28,0.468,29,0.796,30,4.034,31,4.558,33,1.237,35,1.492,36,4.141,37,1.224,38,2.205,39,2.614,40,2.532,42,3.737,51,0.212,53,0.459,54,3.501,55,0.42,62,3.027,63,0.083,64,0.158,65,2.553,66,1.463,67,1.577,73,2.264,78,1.602,79,0.96,81,1.155,86,0.912,100,1.155,105,2.631,107,0.671,109,0.006,110,0.006,116,4.431,117,0.912,181,2.391,186,3.737,191,3.027,245,3.027,293,1.175,308,2.057,331,3.425,378,2.041,380,1.73,456,3.027,457,4.431,458,5.033,459,5.241,460,5.033,461,3.027,462,7.045,463,3.438,464,3.438,465,5.033,466,3.027,467,2.755,468,2.257,469,2.755,470,2.257,471,3.027,472,3.737,473,3.027,474,3.027,475,3.027,476,2.856,477,5.033,478,3.027,479,4.421,480,3.027,481,3.438,482,3.438,483,3.027,484,3.438,485,2.391,486,3.027,487,4.431,488,3.027,489,3.027,490,3.438,491,3.027,492,3.027,493,3.438,494,1.61,495,3.438,496,3.438,497,2.553,498,2.755,499,3.438,500,2.755,501,3.438,502,3.501]],["title/injectables/ClearOtpAndExpiryTimeProvider.html",[53,0.394,503,2.833]],["body/injectables/ClearOtpAndExpiryTimeProvider.html",[3,0.113,4,0.102,5,0.102,12,0.325,13,1.282,14,1.816,16,1.01,18,1.622,23,0.549,25,1.349,26,0.01,27,1.156,28,0.49,29,0.986,33,1.532,35,1.922,37,1.282,51,0.218,53,0.569,55,0.571,63,0.113,64,0.101,66,1.532,67,1.01,73,1.613,78,1.487,79,1.304,81,1.569,86,1.238,100,1.569,107,0.912,109,0.007,110,0.007,174,1.41,253,1.207,271,1.682,274,3.024,280,1.706,283,1.808,286,1.304,288,1.92,293,1.09,308,1.613,327,4.631,342,4.631,346,3.898,503,4.094,504,6.182,505,4.374,506,3.742,507,5.49,508,3.065,509,4.669,510,4.374,511,5.49,512,4.669,513,5.49,514,2.771,515,2.65,516,2.908,517,4.11,518,3.467,519,4.11,520,2.54]],["title/classes/CreateDeliveryStateDto.html",[64,0.094,521,2.833]],["body/classes/CreateDeliveryStateDto.html",[3,0.142,4,0.128,5,0.128,12,0.407,23,0.635,26,0.01,28,0.567,49,1.109,51,0.17,63,0.142,64,0.157,109,0.008,110,0.008,117,1.913,127,1.772,206,4.638,259,2.079,263,3.646,265,3.791,266,3.377,267,2.139,521,4.733,522,4.868,523,6.88,524,4.691,525,6.88,526,5.13,527,2.423,528,4.346,529,5.853,530,5.853,531,3.923]],["title/classes/CreateDiscountDto.html",[64,0.094,532,2.833]],["body/classes/CreateDiscountDto.html",[3,0.138,4,0.124,5,0.124,12,0.396,23,0.679,26,0.01,28,0.607,49,1.09,51,0.166,63,0.138,64,0.154,109,0.008,110,0.008,117,1.879,127,1.896,259,2.02,261,4.558,262,5.366,263,3.543,264,5.007,265,3.917,266,3.318,267,2.078,305,3.318,306,6.183,527,2.381,528,4.223,531,3.854,532,4.65,533,7.108,534,6.791,535,5.688,536,5.688,537,5.688,538,5.677]],["title/injectables/CreateDiscountProvider.html",[53,0.394,539,2.833]],["body/injectables/CreateDiscountProvider.html",[3,0.109,4,0.098,5,0.098,9,0.904,12,0.314,13,1.253,14,1.784,16,0.976,18,1.319,23,0.536,25,1.319,26,0.01,27,1.13,28,0.479,29,0.964,33,1.109,37,1.253,38,2.67,45,2.189,51,0.225,53,0.556,55,0.552,63,0.109,64,0.098,66,1.109,67,0.976,78,1.436,79,1.26,81,2.048,86,1.197,92,2.454,93,2.454,94,2.189,95,2.454,96,2.358,97,2.454,98,2.454,99,2.454,100,1.516,107,0.881,109,0.007,110,0.007,174,1.362,203,2.962,236,2.27,253,1.167,270,3.616,271,1.653,273,3.972,274,2.989,277,5.365,281,3.745,283,2.36,286,1.26,287,3.35,288,1.856,293,1.054,294,3.972,308,2.105,310,2.56,311,2.56,312,2.56,313,2.454,314,2.56,315,2.56,353,2.454,532,5.338,539,4,540,6.076,541,5.531,542,4.512,543,3.616,544,4.512,545,6.095,546,2.358,547,3.616,548,4.512,549,3.138,550,2.962,551,4.512]],["title/classes/CreateProductDto.html",[64,0.094,552,2.833]],["body/classes/CreateProductDto.html",[3,0.099,4,0.089,5,0.089,12,0.285,23,0.739,26,0.01,27,1.216,28,0.671,39,1.631,49,1.336,51,0.206,63,0.099,64,0.142,109,0.006,110,0.006,117,1.511,127,2.064,195,1.302,196,2.225,259,1.453,263,5.032,265,4.11,266,3.844,267,1.494,281,2.968,527,2.383,528,4.23,531,3.567,552,3.739,553,3.6,554,5.254,555,4.303,556,4.303,557,4.303,558,5.254,559,5.254,560,3.891,561,5.254,562,3.567,563,4.089,564,4.089,565,4.089,566,4.089,567,4.089,568,4.089,569,4.089,570,4.089,571,4.089,572,4.089,573,3.567,574,3.277,575,3.036,576,4.089,577,2.844,578,3.962,579,4.23,580,3.962,581,2.343,582,3.277,583,2.844,584,2.547,585,3.036]],["title/injectables/CreateProductProvider.html",[53,0.394,586,2.833]],["body/injectables/CreateProductProvider.html",[3,0.07,4,0.063,5,0.063,9,0.888,12,0.374,13,0.911,14,1.391,16,0.959,18,0.959,23,0.39,25,0.959,26,0.01,27,0.822,28,0.474,29,0.701,33,0.713,37,0.911,38,1.942,42,2.155,49,0.682,51,0.207,53,0.404,55,0.355,63,0.07,64,0.063,66,1.322,67,0.959,73,2.651,78,1.713,79,1.502,81,1.808,86,1.995,92,2.412,93,2.412,94,2.15,95,2.412,96,2.317,97,2.412,98,2.412,99,2.412,100,1.808,107,0.866,109,0.005,110,0.005,195,2.52,196,1.578,198,1.905,253,0.75,271,1.289,283,1.124,286,0.81,293,1.035,296,1.031,308,1.858,353,1.578,487,2.554,494,2.821,497,3.995,498,4.311,500,2.325,549,2.018,550,1.905,552,4.816,562,3.276,573,2.412,581,1.823,584,1.807,586,2.91,587,4.736,588,2.325,589,4.311,590,2.902,591,6.62,592,4.671,593,2.902,594,2.325,595,5.482,596,3.292,597,2.902,598,2.325,599,2.018,600,2.325,601,2.902,602,1.905,603,2.325,604,2.902,605,3.083,606,2.018,607,3.083,608,3.531,609,4.736,610,3.902,611,2.554,612,2.554,613,3.902,614,2.554,615,2.554,616,3.902,617,2.902,618,5.379,619,2.902,620,3.553,621,2.902,622,2.902,623,2.902,624,2.902,625,4.433,626,2.325,627,1.722,628,2.902,629,2.902,630,2.902,631,3.083,632,2.902,633,1.06,634,1.517,635,2.902,636,2.902,637,2.902,638,2.902,639,2.902,640,3.292,641,2.902,642,2.902,643,2.902,644,2.902,645,2.902,646,2.554,647,2.902,648,2.554,649,2.902,650,2.902,651,2.902,652,2.902,653,4.736,654,2.902,655,2.902,656,4.433,657,2.902,658,2.902,659,2.902,660,4.433,661,2.554,662,2.902,663,2.902,664,2.902,665,4.433,666,2.902,667,2.902,668,5.379,669,4.433,670,2.902]],["title/classes/CreateProductVariantDto.html",[64,0.094,580,3.002]],["body/classes/CreateProductVariantDto.html",[3,0.122,4,0.11,5,0.11,12,0.351,23,0.68,26,0.01,28,0.646,29,1.038,39,2.012,49,1.286,51,0.191,63,0.122,64,0.158,109,0.007,110,0.007,117,1.741,127,1.898,195,2.55,259,1.792,263,4.088,265,3.748,266,3.417,267,1.843,527,2.206,531,3.57,575,3.746,577,3.509,578,4.565,579,4.873,580,4.565,581,3.294,582,6.419,585,3.746,595,5.846,671,4.043,672,5.846,673,6.421,674,5.846,675,5.045,676,5.045,677,5.045,678,4.441,679,5.045,680,5.045,681,3.43,682,4.441,683,4.441]],["title/classes/CreateReviewDto.html",[64,0.094,684,2.833]],["body/classes/CreateReviewDto.html",[3,0.124,4,0.111,5,0.111,12,0.356,23,0.683,26,0.01,28,0.61,49,1.267,51,0.149,63,0.124,64,0.144,109,0.007,110,0.007,117,1.755,127,1.907,259,1.815,263,4.571,265,3.901,266,3.636,267,1.867,408,4.405,527,2.224,531,3.6,678,4.497,682,4.497,683,4.497,684,4.343,685,7.079,686,4.497,687,4.165,688,4.165,689,5.882,690,6.444,691,5.109,692,5.109,693,5.109,694,7.763,695,3.927,696,5.109,697,6.617,698,4.913,699,5.109,700,5.109,701,5.109,702,5.109]],["title/injectables/CreateReviewProvider.html",[53,0.394,703,2.833]],["body/injectables/CreateReviewProvider.html",[3,0.097,4,0.088,5,0.088,9,0.806,12,0.28,13,1.158,14,1.68,16,1.219,18,1.219,23,0.496,25,1.219,26,0.01,27,1.044,28,0.443,29,0.891,33,0.989,37,1.158,38,2.468,45,1.952,51,0.224,53,0.514,55,0.492,63,0.097,64,0.087,66,1.384,67,1.219,73,1.39,78,1.281,79,1.573,81,1.893,86,1.494,92,2.189,93,2.189,94,1.952,95,2.189,96,2.103,97,2.189,98,2.189,99,2.189,100,1.352,107,0.786,109,0.006,110,0.006,121,1.183,174,1.215,195,2.36,236,2.024,253,1.04,271,1.557,274,2.87,283,2.181,286,1.124,288,1.655,293,1.315,296,1.429,308,1.946,310,2.283,311,2.283,312,2.283,313,2.189,314,2.283,315,2.283,353,2.189,494,1.885,546,2.103,549,2.799,550,2.641,684,5.042,687,2.283,688,4.566,689,4.515,690,4.515,703,3.697,704,5.722,705,3.542,706,4.515,707,4.024,708,4.681,709,4.024,710,4.959,711,4.515,712,4.024,713,3.225,714,3.225,715,3.542,716,2.988,717,3.542,718,2.506,719,2.283,720,4.024,721,4.024,722,5.633,723,4.024,724,4.024,725,4.024,726,4.024,727,4.024,728,4.024,729,4.024,730,4.024,731,4.024,732,3.225,733,4.024,734,4.024]],["title/classes/CreateSubscriberDto.html",[64,0.094,735,3.205]],["body/classes/CreateSubscriberDto.html",[3,0.137,4,0.123,5,0.123,9,1.412,12,0.393,23,0.496,26,0.01,28,0.443,49,1.084,51,0.205,63,0.137,64,0.153,109,0.008,110,0.008,117,1.869,118,3.882,127,1.386,259,2.003,265,3.418,267,2.061,344,3.999,387,2.736,634,3.683,735,5.232,736,6.203,737,4.965,738,5.232,739,5.014,740,3.923,741,4.52,742,5.64,743,5.232,744,4.901,745,5.647,746,4.52,747,4.52,748,4.52]],["title/classes/CreateUserDto.html",[64,0.094,749,2.833]],["body/classes/CreateUserDto.html",[3,0.117,4,0.105,5,0.105,9,1.431,12,0.336,23,0.561,26,0.01,28,0.501,35,1.953,49,0.981,51,0.23,63,0.117,64,0.165,109,0.007,110,0.007,117,1.691,118,3.745,119,3.556,127,1.566,259,1.714,265,3.463,267,1.764,344,4.309,380,3.592,387,2.341,634,3.969,738,4.734,740,4.434,741,3.868,743,4.734,744,4.965,745,5.109,746,3.868,747,3.868,748,3.868,749,4.185,750,6.284,751,3.357,752,4.249,753,4.249,754,4.249,755,4.249,756,4.249,757,4.249,758,3.468,759,3.868,760,4.249]],["title/injectables/CreateUsersProvider.html",[53,0.394,761,2.833]],["body/injectables/CreateUsersProvider.html",[3,0.102,4,0.092,5,0.092,9,1.163,12,0.292,13,1.193,14,1.719,16,0.909,18,1.552,23,0.511,25,1.256,26,0.01,27,1.076,28,0.456,29,0.918,33,1.426,35,1.902,37,1.193,45,2.038,51,0.219,52,2.384,53,0.529,55,0.514,63,0.102,64,0.144,66,1.762,67,0.909,78,1.337,79,1.621,81,1.951,86,1.114,100,1.412,107,0.82,109,0.006,110,0.006,118,1.902,119,1.728,121,1.235,174,1.268,236,2.113,253,1.086,271,1.593,274,2.915,280,1.535,282,2.616,283,2.247,286,1.173,288,1.728,308,2.005,310,2.384,311,2.384,312,2.384,313,2.285,314,2.384,315,2.384,357,4.31,425,2.922,451,2.183,494,1.967,508,2.757,510,4.142,514,2.493,516,2.616,546,2.195,549,2.922,550,2.757,738,5.327,749,5.238,761,3.81,762,5.854,763,3.698,764,5.109,765,4.2,766,5.109,767,4.2,768,3.119,769,3.698,770,2.493,771,4.2,772,5.804,773,4.2,774,4.2,775,4.2,776,4.2,777,4.2]],["title/injectables/DataResponseInterceptor.html",[53,0.394,182,3.205]],["body/injectables/DataResponseInterceptor.html",[3,0.108,4,0.097,5,0.097,9,0.894,12,0.311,13,1.244,16,0.965,18,1.592,23,0.532,25,1.309,26,0.01,27,1.122,28,0.476,29,0.956,31,5.117,33,1.486,36,4.207,37,1.244,51,0.2,53,0.552,55,0.546,56,2.245,63,0.108,64,0.097,65,3.313,66,1.686,67,0.965,69,2.427,94,3.569,107,0.871,109,0.007,110,0.007,166,5.323,182,4.492,184,5.5,253,1.154,293,1.042,296,1.585,451,2.275,466,6.041,467,3.576,478,3.928,486,5.325,488,5.325,778,6.041,779,3.928,780,6.126,781,5.888,782,5.325,783,6.049,784,3.928,785,4.462,786,6.049,787,7.357,788,4.462,789,6.049,790,6.862,791,6.049,792,6.049,793,6.049,794,4.462,795,4.462,796,4.462,797,4.462,798,4.462]],["title/entities/DeliveryState.html",[633,1.577,799,3.002]],["body/entities/DeliveryState.html",[3,0.127,4,0.115,5,0.115,12,0.366,23,0.69,26,0.01,28,0.617,49,1.207,51,0.153,63,0.127,64,0.114,109,0.007,110,0.007,117,1.787,121,2.188,127,1.928,207,5.643,286,1.468,305,3.156,522,5.053,525,6.548,526,4.883,527,2.265,633,2.462,732,5.962,799,4.687,800,2.747,801,4.627,802,5.174,803,5.256,804,4.603,805,5.256,806,3.824,807,5.256,808,5.256,809,5.932,810,5.932,811,2.859,812,4.627,813,6.739,814,5.256]],["title/controllers/DeliveryStatesController.html",[122,1.722,815,3.205]],["body/controllers/DeliveryStatesController.html",[3,0.092,4,0.083,5,0.083,12,0.265,13,1.114,16,0.824,18,0.824,23,0.555,25,1.365,26,0.01,27,1.274,28,0.496,29,0.997,33,1.55,37,1.493,49,1.161,51,0.231,55,0.466,63,0.092,64,0.083,66,1.689,67,0.824,107,1.232,109,0.006,110,0.006,119,1.567,122,1.52,124,1.52,127,1.55,206,4.918,207,4.78,271,1.934,293,0.89,296,1.353,330,2.261,331,1.991,353,2.073,368,3.745,371,2.829,372,3.558,378,2.261,380,2.727,404,2.65,468,2.501,521,5.209,522,4.281,526,5.375,546,1.991,758,2.073,815,4.025,816,3.354,817,5.554,818,5.554,819,5.42,820,5.554,821,3.354,822,3.354,823,3.81,824,3.81,825,3.81,826,3.81,827,3.354,828,5.616,829,3.81,830,3.81,831,5.554,832,3.77,833,4.141,834,3.354,835,3.354,836,4.344,837,2.261,838,2.501,839,2.829,840,3.354,841,3.81,842,4.025,843,3.81,844,2.501,845,3.81,846,3.81,847,3.81,848,2.65,849,3.81,850,3.81,851,3.81]],["title/modules/DeliveryStatesModule.html",[133,1.06,146,3.002]],["body/modules/DeliveryStatesModule.html",[3,0.136,4,0.123,5,0.123,26,0.01,51,0.241,55,0.688,63,0.136,64,0.122,109,0.008,110,0.008,124,2.806,133,1.886,135,2.244,136,2.313,137,2.464,138,2.464,139,2.313,140,3.363,141,2.464,146,5.874,159,3.082,160,2.115,161,2.386,163,2.728,173,3.059,174,1.698,206,4.175,207,3.912,522,3.503,799,3.912,815,5.7,833,5.544,834,4.951,835,4.951,852,4.951,853,4.951,854,5.624,855,5.624,856,4.951,857,5.624]],["title/injectables/DeliveryStatesService.html",[53,0.394,833,2.833]],["body/injectables/DeliveryStatesService.html",[3,0.07,4,0.063,5,0.063,9,1.078,12,0.202,13,0.911,14,1.944,16,0.628,18,0.959,23,0.53,25,1.303,26,0.01,27,1.117,28,0.474,29,0.952,33,1.322,35,1.009,37,1.406,45,2.61,49,1.052,51,0.199,53,0.404,55,0.355,63,0.07,64,0.063,66,1.322,67,0.628,78,2.178,79,1.91,81,2.391,86,1.597,92,2.926,93,2.926,94,2.61,95,2.926,96,2.812,97,2.926,98,2.926,99,2.926,100,2.024,105,1.517,107,1.051,109,0.005,110,0.005,121,0.853,174,0.876,206,4.849,236,2.707,253,0.75,271,1.801,274,2.512,280,1.966,282,1.807,283,2.332,286,0.81,288,1.193,293,0.678,308,2.241,310,3.053,311,3.053,312,3.053,313,2.926,314,3.053,315,3.053,316,2.155,317,3.351,353,1.578,502,3.083,521,4.671,522,4.041,526,5.446,546,1.517,719,1.646,799,5.729,817,2.554,818,4.736,820,4.736,821,2.554,827,2.554,828,5.231,831,4.736,832,3.083,833,2.91,836,3.553,840,2.554,844,1.905,848,2.018,856,2.554,858,5.711,859,2.554,860,4.433,861,2.902,862,2.902,863,4.433,864,2.902,865,4.433,866,2.902,867,2.902,868,2.902,869,2.554,870,2.902,871,4.433,872,4.433,873,2.554,874,2.325,875,2.902,876,2.018]],["title/entities/Discount.html",[281,1.954,633,1.577]],["body/entities/Discount.html",[3,0.12,4,0.108,5,0.108,12,0.345,23,0.719,26,0.01,28,0.664,39,2.589,49,1.18,50,3.088,51,0.144,63,0.12,64,0.108,79,1.384,109,0.007,110,0.007,117,1.721,121,2.127,127,2.008,262,5.031,281,2.938,286,1.384,303,6.367,305,3.73,306,5.797,476,4.105,527,2.579,534,6.367,633,2.371,695,3.851,800,2.591,804,4.792,806,3.682,811,2.697,877,4.364,878,7.233,879,4.957,880,4.957,881,4.957,882,4.364,883,4.957,884,4.513,885,5.698,886,4.957,887,4.818,888,4.957]],["title/entities/DiscountUsage.html",[633,1.577,889,3.002]],["body/entities/DiscountUsage.html",[3,0.125,4,0.112,5,0.112,12,0.358,23,0.685,26,0.01,28,0.612,35,1.912,49,1.023,51,0.214,63,0.125,64,0.112,109,0.007,110,0.007,117,1.764,121,2.166,127,1.913,204,5.606,281,3.803,286,1.438,290,5.291,305,3.114,633,2.43,800,2.691,802,5.123,806,3.773,811,2.801,889,4.625,890,4.532,891,7.366,892,4.938,893,5.148,894,5.148,895,5.148,896,5.148,897,4.126,898,3.823,899,5.781,900,7.366]],["title/controllers/DiscountsController.html",[122,1.722,901,3.205]],["body/controllers/DiscountsController.html",[3,0.111,4,0.1,5,0.1,12,0.32,13,1.268,16,0.994,18,0.994,23,0.543,25,1.335,26,0.01,27,1.144,28,0.485,29,0.975,35,1.695,37,1.268,51,0.242,55,0.562,63,0.111,64,0.1,67,0.994,107,1.205,109,0.007,110,0.007,112,3.612,114,2.607,119,1.89,122,1.833,124,1.833,127,1.516,203,4.05,258,6.067,271,1.916,272,5.583,278,3.682,289,2.607,293,1.073,296,1.632,330,2.727,368,3.662,369,3.412,370,3.412,372,4.05,380,2.312,405,4.044,532,5.249,541,4.945,543,3.682,546,2.401,547,4.945,758,2.499,822,4.044,837,2.727,838,3.016,842,3.412,901,4.581,902,4.044,903,4.594,904,4.594,905,4.594,906,4.572,907,4.044,908,4.291,909,3.196,910,3.682,911,4.594,912,4.594,913,4.594,914,4.594,915,4.594,916,3.682,917,4.594,918,4.594]],["title/modules/DiscountsModule.html",[133,1.06,147,3.002]],["body/modules/DiscountsModule.html",[3,0.122,4,0.11,5,0.11,26,0.01,51,0.247,55,0.615,63,0.122,64,0.109,109,0.007,110,0.007,124,2.614,133,1.79,135,2.007,136,2.07,137,2.204,138,2.204,139,2.07,140,3.192,141,2.204,147,6.09,148,5.385,159,2.87,160,1.892,161,2.135,163,3.178,173,2.737,174,1.519,204,3.5,205,4.43,268,5.385,281,2.278,287,3.737,290,3.303,539,5.385,901,5.41,906,5.385,907,4.43,919,4.43,920,5.032,921,4.43,922,5.032,923,5.032,924,5.032,925,5.768,926,3.737,927,5.032]],["title/injectables/DiscountsService.html",[53,0.394,906,2.833]],["body/injectables/DiscountsService.html",[3,0.101,4,0.091,5,0.091,12,0.291,13,1.188,14,2.009,16,1.25,18,1.25,23,0.583,25,1.434,26,0.01,27,1.229,28,0.521,29,1.048,33,1.42,35,1.629,37,1.471,38,2.532,49,1.02,51,0.226,53,0.527,55,0.51,63,0.101,64,0.091,66,1.629,67,1.25,86,1.533,107,1.129,109,0.006,110,0.006,112,3.471,114,2.369,253,1.079,262,5.405,268,5.229,271,1.861,272,4.632,278,4.632,280,1.525,281,3.676,287,3.1,289,2.369,293,1.35,297,3.675,298,3.675,299,3.675,300,3.675,301,3.675,353,2.271,357,4.291,451,2.173,494,2.707,532,5.229,539,5.1,541,5.312,543,3.345,546,2.182,547,3.345,906,3.793,925,5.087,928,3.675,929,4.174,930,4.174,931,4.174,932,4.174,933,5.087,934,5.779,935,4.174,936,4.174]],["title/modules/DiscountsUsageModule.html",[133,1.06,148,2.833]],["body/modules/DiscountsUsageModule.html",[3,0.136,4,0.122,5,0.122,26,0.01,51,0.234,55,0.686,63,0.136,64,0.122,109,0.008,110,0.008,133,1.883,135,2.237,136,2.306,137,2.457,138,2.457,139,2.306,140,3.358,141,3.358,148,5.621,159,3.076,160,2.109,161,2.38,163,2.721,173,3.051,174,1.693,203,3.681,204,3.901,275,5.835,290,3.681,292,4.937,889,3.901,937,4.937,938,4.937,939,4.937,940,5.608,941,5.608,942,4.937,943,5.608]],["title/injectables/DiscountsUsageService.html",[53,0.394,275,2.833]],["body/injectables/DiscountsUsageService.html",[3,0.104,4,0.093,5,0.093,9,0.86,12,0.299,13,1.211,14,1.739,16,0.928,18,1.274,23,0.518,25,1.274,26,0.01,27,1.092,28,0.463,29,0.931,33,1.054,35,1.648,37,1.211,45,2.081,49,1.205,51,0.211,53,0.537,55,0.525,63,0.104,64,0.093,66,1.447,67,0.928,78,1.366,79,1.198,81,1.979,86,1.138,92,2.334,93,2.334,94,2.081,95,2.334,96,2.242,97,2.334,98,2.334,99,2.334,100,1.442,107,0.838,109,0.006,110,0.006,121,1.732,174,1.295,203,3.866,236,2.159,253,1.109,271,1.611,274,2.937,275,3.866,280,1.568,281,3.277,283,2.28,286,1.198,288,1.764,290,4.414,291,5.389,293,1.002,295,6.677,308,2.034,310,2.434,311,2.434,312,2.434,313,2.334,314,2.434,315,2.434,319,3.186,320,5.92,321,5.92,889,2.984,942,3.777,944,3.777,945,5.889,946,4.29,947,4.29,948,5.889,949,5.889,950,4.979,951,4.29,952,6.725,953,4.29,954,4.29,955,2.816,956,4.29]],["title/injectables/FindAllProductsProvider.html",[53,0.394,957,2.833]],["body/injectables/FindAllProductsProvider.html",[3,0.081,4,0.073,5,0.073,12,0.232,13,1.012,14,1.512,16,1.065,18,1.065,23,0.433,25,1.065,26,0.01,27,1.085,28,0.387,29,0.778,33,0.819,37,1.012,38,2.156,50,5.131,51,0.217,53,0.449,55,0.408,63,0.081,64,0.072,66,0.819,67,1.065,73,2.575,78,1.062,79,0.931,81,1.121,86,0.885,92,1.814,93,1.814,94,1.618,95,1.814,96,1.743,97,1.814,98,1.814,99,1.814,100,1.121,107,0.961,109,0.005,110,0.005,174,1.007,195,1.567,253,0.862,271,1.401,274,2.667,286,0.931,288,1.372,293,1.149,308,1.152,316,2.477,327,2.477,451,1.254,555,2.189,556,2.189,557,2.189,560,1.98,562,3.182,599,2.32,605,3.423,627,1.98,672,2.673,674,2.673,695,1.98,718,4.49,844,2.189,955,4.239,957,3.231,958,5.149,959,2.936,960,4.344,961,2.936,962,4.644,963,3.335,964,3.945,965,2.936,966,4.022,967,3.335,968,5.176,969,3.319,970,4.922,971,2.673,972,2.32,973,2.477,974,2.673,975,4.333,976,2.936,977,2.673,978,2.477,979,2.673,980,3.335,981,4.492,982,4.922,983,3.335,984,3.335,985,5.85,986,3.335,987,3.335,988,3.335,989,4.922,990,3.335,991,3.335,992,3.335,993,3.335,994,3.335,995,3.335,996,2.673,997,3.335,998,3.335,999,3.335,1000,3.335,1001,4.333,1002,3.335,1003,3.335,1004,3.335,1005,3.335,1006,3.335,1007,3.335,1008,3.335,1009,4.922,1010,3.335,1011,4.922,1012,3.335,1013,3.945,1014,2.477,1015,3.335,1016,2.936,1017,3.335,1018,3.335]],["title/injectables/FindOneByIdProvider.html",[53,0.394,1019,2.833]],["body/injectables/FindOneByIdProvider.html",[3,0.101,4,0.091,5,0.091,9,1.161,12,0.292,13,1.192,14,1.718,16,0.907,18,1.551,23,0.51,25,1.254,26,0.01,27,1.075,28,0.456,29,0.916,33,1.424,35,1.963,37,1.192,45,2.033,49,1.022,51,0.209,53,0.529,55,0.513,63,0.101,64,0.144,66,1.424,67,0.907,78,1.845,79,1.618,81,1.948,86,1.112,92,2.28,93,2.28,94,2.033,95,2.28,96,2.191,97,2.28,98,2.28,99,2.28,100,1.409,105,3.029,107,0.819,109,0.006,110,0.006,121,2.346,174,1.266,236,2.109,253,1.084,271,1.591,274,2.913,280,1.532,282,2.611,283,2.244,286,1.17,288,1.724,293,0.979,308,1.448,310,2.379,311,2.379,312,2.379,313,2.28,314,2.379,315,2.379,316,3.113,317,3.61,451,2.18,502,2.915,508,2.751,510,4.138,514,2.488,516,2.611,873,3.69,1019,3.804,1020,4.933,1021,4.938,1022,3.69,1023,5.744,1024,5.796,1025,4.192,1026,5.796,1027,4.192,1028,3.69]],["title/injectables/FindOneUserByEmailProvider.html",[53,0.394,1029,2.833]],["body/injectables/FindOneUserByEmailProvider.html",[3,0.103,4,0.093,5,0.093,9,1.177,12,0.297,13,1.207,14,1.735,16,0.924,18,1.563,23,0.517,25,1.27,26,0.01,27,1.089,28,0.462,29,0.928,33,1.443,35,1.989,37,1.207,49,1.032,50,3.657,51,0.21,53,0.536,54,2.971,55,0.522,63,0.103,64,0.093,66,1.443,67,0.924,78,1.869,79,1.64,81,1.436,86,1.133,100,1.436,105,3.776,107,0.834,109,0.006,110,0.006,118,3.751,119,1.757,121,1.256,174,1.29,253,1.104,271,1.607,274,2.798,280,1.561,283,1.654,286,1.193,288,1.757,293,0.998,308,1.476,317,2.661,451,2.208,508,2.804,510,4.5,514,2.535,516,2.661,520,2.324,1020,4.982,1021,4.404,1023,5.79,1029,3.854,1030,3.761,1031,5.169,1032,4.272,1033,5.169,1034,4.272,1035,4.272,1036,3.761,1037,3.424,1038,4.272]],["title/injectables/FindUserByOtpAndExpiryTimeProvider.html",[53,0.394,1039,2.833]],["body/injectables/FindUserByOtpAndExpiryTimeProvider.html",[3,0.1,4,0.09,5,0.09,9,1.148,11,3.58,12,0.287,13,1.178,14,1.702,16,0.892,18,1.54,23,0.504,25,1.24,26,0.01,27,1.062,28,0.451,29,0.906,33,1.408,35,1.946,37,1.178,49,1.013,51,0.207,53,0.523,54,2.868,55,0.504,63,0.1,64,0.143,66,1.408,67,0.892,78,1.824,79,1.6,81,1.386,82,3.304,86,1.094,100,1.386,105,3.719,107,0.805,109,0.006,110,0.006,160,2.986,174,1.245,253,1.066,271,1.577,274,2.896,280,1.506,283,1.596,286,1.151,288,1.696,293,0.963,305,1.931,308,1.424,346,3.852,451,2.155,505,4.945,506,3.304,508,2.706,510,4.101,514,2.447,515,2.34,516,2.568,518,3.061,520,2.243,1020,4.89,1023,5.703,1037,3.304,1039,3.761,1040,5.703,1041,4.949,1042,5.73,1043,4.123,1044,5.73,1045,4.123,1046,4.123,1047,4.123,1048,4.123,1049,5.73,1050,4.123,1051,4.123]],["title/injectables/GenerateTokensProvider.html",[53,0.394,420,2.688]],["body/injectables/GenerateTokensProvider.html",[3,0.146,4,0.077,5,0.077,9,0.706,10,3.426,11,2.578,12,0.245,13,1.053,14,1.9,16,1.108,18,1.434,19,2.823,20,6.078,21,5.313,22,4.922,23,0.531,25,1.434,26,0.01,27,1.119,28,0.521,29,0.954,33,1.629,35,1.856,37,1.363,49,0.929,51,0.214,52,1.999,53,0.467,55,0.431,56,1.772,57,2.312,59,2.45,63,0.085,64,0.076,66,1.806,67,1.108,68,4.61,69,1.916,70,2.823,73,1.217,83,6.078,86,1.359,107,1,109,0.006,110,0.006,112,1.709,118,1.595,119,1.449,120,2.823,253,0.911,271,1.76,280,1.872,289,1.999,293,1.196,296,1.251,339,4.51,354,3.76,356,5.111,367,3.563,394,4.106,396,3.804,420,3.191,432,2.823,451,1.927,470,3.363,527,2.029,898,2.616,933,4.51,950,3.963,1052,5.835,1053,3.101,1054,5.835,1055,5.123,1056,5.123,1057,3.523,1058,5.123,1059,3.523,1060,5.123,1061,7.043,1062,5.313,1063,3.523,1064,3.101,1065,5.123,1066,3.101,1067,3.523,1068,3.101,1069,3.101,1070,3.101,1071,3.101,1072,3.101,1073,3.101,1074,3.523,1075,3.363,1076,3.523,1077,2.823,1078,3.523,1079,2.616,1080,2.616,1081,3.523,1082,3.523]],["title/classes/GetProductsBaseDto.html",[64,0.094,1083,3.205]],["body/classes/GetProductsBaseDto.html",[3,0.095,4,0.086,5,0.086,9,0.789,12,0.274,23,0.69,26,0.01,27,1.363,28,0.616,29,1.351,49,1.314,51,0.187,63,0.095,64,0.139,109,0.006,110,0.006,117,1.471,127,1.926,195,2.68,259,1.398,266,3.748,267,1.439,387,1.91,555,4.826,556,4.216,557,4.216,560,4.364,634,3.357,681,4.183,718,3.455,966,2.452,1083,4.77,1084,6.414,1085,2.923,1086,4.119,1087,4.883,1088,6.472,1089,6.472,1090,5.82,1091,3.937,1092,3.937,1093,4.883,1094,3.937,1095,3.937,1096,4.883,1097,4.883,1098,3.937,1099,3.466,1100,3.937,1101,4.119,1102,3.293,1103,2.584,1104,2.738,1105,3.155,1106,2.452]],["title/classes/GetProductsDto.html",[64,0.094,966,2.688]],["body/classes/GetProductsDto.html",[3,0.12,4,0.108,5,0.108,9,0.993,26,0.01,27,1.203,49,1.281,51,0.211,63,0.12,64,0.157,109,0.007,110,0.007,195,2.601,259,1.761,266,3.955,267,1.811,387,2.405,555,4.259,556,3.254,557,3.254,560,3.851,634,3.781,681,4.414,718,3.088,966,4.041,1083,5.371,1084,3.973,1085,3.681,1086,3.681,1087,4.364,1088,5.712,1089,5.712,1093,4.364,1096,4.364,1097,4.364,1101,5.371,1102,4.293,1103,3.254,1104,3.448,1105,5.2,1106,4.041]],["title/classes/GetUsersBaseDto.html",[64,0.094,1107,3.205]],["body/classes/GetUsersBaseDto.html",[3,0.124,4,0.112,5,0.112,9,1.026,12,0.357,23,0.583,26,0.01,28,0.521,29,1.228,35,1.673,51,0.214,63,0.16,64,0.179,109,0.007,110,0.007,117,1.758,127,1.628,259,1.819,267,1.872,305,3.982,387,2.485,538,5.889,607,4.61,634,3.841,681,3.841,751,3.562,752,4.509,1086,4.921,1101,4.921,1102,3.934,1103,3.362,1104,3.562,1106,3.19,1107,5.456,1108,5.889,1109,6.468,1110,6.468,1111,6.628,1112,5.834,1113,5.122,1114,3.362]],["title/classes/GetUsersDto.html",[64,0.094,1114,2.833]],["body/classes/GetUsersDto.html",[3,0.134,4,0.121,5,0.121,9,1.108,26,0.01,35,1.734,51,0.222,63,0.168,64,0.183,109,0.008,110,0.008,259,1.965,267,2.021,305,3.744,387,2.683,538,6.105,607,3.847,634,3.981,681,3.981,751,3.847,1086,4.107,1101,5.656,1102,4.521,1103,3.63,1104,3.847,1106,4.336,1107,5.656,1108,4.433,1109,4.869,1110,4.869,1112,4.869,1114,4.569]],["title/classes/InitiatePaymentDto.html",[64,0.094,1115,2.688]],["body/classes/InitiatePaymentDto.html",[3,0.114,4,0.103,5,0.103,12,0.328,23,0.662,26,0.01,28,0.647,29,1.274,39,2.504,49,1.205,51,0.219,63,0.114,64,0.163,109,0.007,110,0.007,117,1.665,127,1.848,195,1.501,259,1.674,265,3.8,266,3.669,267,1.722,281,3.647,527,1.584,531,3.414,560,2.797,562,4.092,574,3.777,575,3.5,577,3.278,578,4.907,579,5.239,581,1.938,583,3.278,585,4.66,681,3.932,687,2.674,897,3.777,1090,5.239,1115,3.909,1116,6.279,1117,3.777,1118,5.654,1119,5.654,1120,4.713,1121,4.713,1122,4.713,1123,5.586,1124,4.713,1125,4.631,1126,3.278]],["title/injectables/InitiatePaymentProvider.html",[53,0.394,1127,2.833]],["body/injectables/InitiatePaymentProvider.html",[3,0.151,4,0.058,5,0.058,12,0.186,13,0.855,14,1.32,16,1.545,18,0.9,22,4.279,23,0.449,25,0.9,26,0.01,27,0.771,28,0.327,29,0.657,33,1.022,35,1.708,37,1.05,48,2.35,49,0.411,51,0.229,52,1.515,53,0.379,55,0.326,56,1.343,63,0.065,64,0.058,67,1.351,69,2.262,73,2.157,76,4.279,78,1.324,79,1.161,81,1.397,86,1.754,100,1.397,107,0.812,109,0.005,110,0.005,112,2.796,114,1.515,118,1.209,166,4.533,195,1.324,206,2.468,253,0.69,271,1.223,281,2.312,283,1.034,286,0.746,289,1.515,293,1.458,296,1.814,308,1.436,309,2.14,331,2.173,392,2.892,451,1.004,472,1.983,480,2.35,485,1.857,494,1.947,497,1.983,498,2.14,500,2.14,515,1.515,562,2.778,591,6.603,598,2.14,607,2.892,608,2.729,609,3.66,610,3.66,611,2.35,612,2.35,613,3.66,614,2.35,615,2.35,616,2.35,627,2.468,708,4.099,715,2.35,718,1.663,719,2.359,743,3.791,781,3.087,876,1.857,898,1.983,950,1.753,1115,4.12,1118,3.332,1119,3.332,1127,2.729,1128,5.073,1129,2.35,1130,5.763,1131,5.106,1132,2.67,1133,3.757,1134,2.67,1135,4.158,1136,2.67,1137,2.729,1138,4.619,1139,5.498,1140,2.67,1141,2.67,1142,2.14,1143,2.14,1144,2.35,1145,2.35,1146,3.66,1147,1.983,1148,3.351,1149,2.67,1150,2.14,1151,2.67,1152,2.14,1153,2.67,1154,1.983,1155,2.67,1156,4.158,1157,2.67,1158,2.67,1159,2.14,1160,2.67,1161,2.67,1162,2.67,1163,2.67,1164,2.67,1165,2.67,1166,2.67,1167,6.906,1168,4.158,1169,2.67,1170,2.67,1171,4.158,1172,2.67,1173,2.67,1174,2.67,1175,4.158,1176,5.763,1177,4.158,1178,2.67,1179,4.158,1180,2.67,1181,3.66,1182,2.67,1183,2.67,1184,2.67,1185,2.67,1186,2.67,1187,3.66,1188,2.67,1189,2.67,1190,2.67,1191,2.67,1192,2.67,1193,2.67,1194,2.67,1195,2.67,1196,2.35,1197,2.67,1198,2.35,1199,2.35,1200,2.67,1201,2.67,1202,2.67,1203,2.67,1204,2.67,1205,2.67,1206,2.67,1207,2.67,1208,2.35]],["title/modules/MailModule.html",[133,1.06,149,2.833]],["body/modules/MailModule.html",[3,0.106,4,0.096,5,0.096,14,1.136,26,0.01,35,1,39,2.388,40,3.012,51,0.23,52,3.397,55,0.537,56,2.211,63,0.106,64,0.095,69,3.256,79,1.227,107,0.858,109,0.007,110,0.007,133,1.984,135,1.753,136,1.807,137,1.925,138,1.925,139,1.807,140,2.983,141,2.983,149,5.301,159,2.622,160,1.652,161,1.864,163,2.131,166,4.469,222,5.269,228,3.867,234,3.867,240,3.867,296,1.561,331,2.296,472,3.262,476,2.493,483,3.867,770,5.09,996,3.521,1013,3.521,1209,3.867,1210,3.867,1211,3.867,1212,4.393,1213,5.986,1214,4.393,1215,4.393,1216,4.445,1217,3.521,1218,3.521,1219,5.986,1220,4.393,1221,4.393,1222,3.262,1223,4.393,1224,3.867,1225,4.393,1226,5.269,1227,4.393,1228,5.986,1229,5.986,1230,5.986,1231,4.393,1232,4.393,1233,4.393,1234,4.393,1235,4.393,1236,3.867,1237,3.867,1238,3.867,1239,4.393,1240,4.393,1241,4.393,1242,4.393,1243,4.393,1244,4.393]],["title/injectables/MailService.html",[53,0.394,770,2.562]],["body/injectables/MailService.html",[3,0.081,4,0.073,5,0.073,9,0.667,12,0.232,13,1.011,14,2.019,16,0.72,18,1.396,23,0.568,25,1.396,26,0.01,27,1.197,28,0.507,29,1.02,33,1.77,35,1.931,36,4.065,37,1.201,38,3.156,49,1.108,51,0.21,53,0.448,55,0.407,63,0.081,64,0.072,66,1.77,86,1.55,109,0.005,110,0.005,118,2.646,121,0.979,133,1.208,160,2.589,232,2.473,253,0.861,271,1.871,293,0.778,296,2.076,342,2.473,346,4.089,739,4.487,770,2.918,898,2.473,1079,4.792,1216,2.473,1217,2.669,1218,3.94,1222,5.68,1226,2.931,1236,4.327,1237,4.327,1238,5.144,1245,2.931,1246,4.916,1247,4.916,1248,4.916,1249,3.33,1250,7.451,1251,3.33,1252,4.916,1253,3.33,1254,7.204,1255,4.916,1256,3.33,1257,4.916,1258,3.33,1259,4.916,1260,5.144,1261,2.669,1262,3.33,1263,3.33,1264,5.844,1265,5.844,1266,4.916,1267,2.669,1268,5.844,1269,5.844,1270,3.33,1271,3.33,1272,3.33,1273,5.844,1274,3.33,1275,3.33,1276,3.33,1277,3.33,1278,3.33,1279,3.33,1280,4.916,1281,3.33,1282,3.33,1283,3.33,1284,3.33]],["title/classes/OtpSigninDto.html",[64,0.094,337,2.833]],["body/classes/OtpSigninDto.html",[3,0.138,4,0.124,5,0.124,9,1.422,12,0.397,23,0.502,26,0.01,28,0.448,51,0.207,63,0.138,64,0.154,109,0.008,110,0.008,117,1.882,127,1.401,160,2.669,259,2.026,265,3.442,267,2.084,335,5.269,337,4.658,344,4.027,346,4.249,367,4.936,387,2.767,527,2.385,531,3.86,634,3.709,740,3.967,744,4.936,1285,5.021,1286,5.704,1287,5.704,1288,5.704]],["title/injectables/OtpSigninProvider.html",[53,0.394,421,2.833]],["body/injectables/OtpSigninProvider.html",[3,0.107,4,0.096,5,0.096,10,3.412,11,3.437,12,0.308,13,1.236,14,1.766,16,1.301,18,1.301,23,0.529,25,1.301,26,0.01,27,1.115,28,0.473,29,0.951,35,1.555,37,0.909,51,0.223,53,0.548,55,0.541,63,0.107,64,0.096,67,1.301,73,2.36,86,1.812,105,2.312,107,0.864,109,0.007,110,0.007,118,2.002,119,1.819,121,1.301,253,1.143,271,1.636,280,1.616,293,1.404,296,1.571,337,5.032,346,3.314,354,2.755,388,3.544,394,4.819,396,4.465,420,4.566,421,3.947,431,3.544,451,1.663,505,2.755,515,2.51,719,2.51,885,3.284,1041,3.076,1075,3.947,1077,3.544,1079,3.284,1080,3.284,1133,4.302,1147,3.284,1289,6.014,1290,3.893,1291,6.013,1292,3.893,1293,5.475,1294,4.422,1295,6.013,1296,4.422,1297,6.014,1298,4.422,1299,4.422,1300,3.893,1301,3.893,1302,4.422,1303,3.893,1304,4.422,1305,4.422,1306,3.893,1307,4.422,1308,4.422,1309,3.893]],["title/interfaces/Paginated.html",[111,3.002,969,2.449]],["body/interfaces/Paginated.html",[3,0.128,4,0.115,5,0.115,9,1.062,12,0.369,26,0.01,28,0.665,49,1.251,63,0.128,94,2.57,109,0.007,110,0.007,111,4.711,113,4.246,117,1.796,485,4.711,527,2.645,596,5.843,780,6.472,781,3.934,969,4.237,979,4.246,1062,5.984,1310,4.663,1311,7.322,1312,6.927,1313,5.428,1314,6.773,1315,6.773,1316,4.663,1317,4.663,1318,4.663,1319,4.663,1320,4.663,1321,4.663,1322,4.663,1323,4.663]],["title/modules/PaginationModule.html",[133,1.06,1324,2.833]],["body/modules/PaginationModule.html",[3,0.142,4,0.128,5,0.128,26,0.01,51,0.21,55,0.718,63,0.142,64,0.127,109,0.008,110,0.008,133,1.923,135,2.342,136,2.414,137,2.572,138,2.572,139,2.414,140,3.428,141,3.428,159,3.165,160,2.208,161,2.491,962,5.569,1324,5.676,1325,5.168,1326,5.168,1327,5.168,1328,5.87,1329,5.87]],["title/injectables/PaginationProvider.html",[53,0.394,962,2.688]],["body/injectables/PaginationProvider.html",[3,0.085,4,0.076,5,0.076,9,0.702,12,0.244,13,1.049,14,1.556,16,0.758,18,1.431,23,0.449,25,1.302,26,0.01,27,0.946,28,0.473,29,0.807,33,1.254,37,1.049,38,2.236,45,3.951,51,0.214,52,2.896,53,0.465,55,0.428,58,2.602,63,0.085,64,0.076,66,1.625,67,0.758,73,2.68,79,0.978,86,1.354,94,1.7,107,0.684,109,0.007,110,0.006,181,2.437,253,0.906,271,1.442,274,3.005,286,0.978,293,0.818,451,2.264,485,3.55,494,1.641,608,3.35,695,3.925,719,2.896,780,4.469,960,3.79,962,3.179,969,2.896,978,3.79,979,5.299,1013,5.299,1014,2.602,1021,3.35,1036,3.085,1062,2.808,1064,3.085,1102,3.925,1104,2.437,1311,5.299,1312,3.085,1316,3.085,1317,5.299,1318,3.085,1319,5.821,1320,3.085,1321,3.085,1322,3.085,1323,3.085,1330,3.085,1331,7.335,1332,3.504,1333,3.504,1334,3.504,1335,3.504,1336,5.103,1337,3.504,1338,3.504,1339,3.504,1340,3.504,1341,3.504,1342,3.504,1343,4.492,1344,5.103,1345,7.759,1346,6.612,1347,5.103,1348,3.504,1349,3.504,1350,3.504,1351,3.504,1352,5.103,1353,3.504,1354,3.504,1355,3.504,1356,3.504,1357,3.504,1358,3.504,1359,3.504,1360,3.504,1361,3.504,1362,5.103,1363,3.504,1364,3.504,1365,3.504,1366,3.504,1367,3.504]],["title/classes/PaginationQueryDto.html",[64,0.094,1102,2.562]],["body/classes/PaginationQueryDto.html",[3,0.128,4,0.115,5,0.115,9,1.056,12,0.367,23,0.594,26,0.01,28,0.531,29,1.242,51,0.153,63,0.128,64,0.147,109,0.007,110,0.007,117,1.79,127,1.659,259,1.872,267,1.926,393,5.012,476,3.831,527,2.874,608,4.431,627,4.006,634,3.528,681,4.105,695,4.006,955,5.329,978,5.012,981,5.647,1102,4.006,1103,4.889,1343,5.942,1368,4.639,1369,5.27,1370,7.854,1371,5.27,1372,5.27,1373,6.75]],["title/classes/PatchProductDto.html",[64,0.094,1374,2.833]],["body/classes/PatchProductDto.html",[3,0.095,4,0.085,5,0.085,12,0.273,23,0.74,26,0.01,27,1.189,28,0.661,29,1.365,49,1.35,51,0.161,63,0.095,64,0.12,109,0.006,110,0.006,117,1.467,121,1.885,127,2.067,195,1.249,259,1.393,266,3.903,267,1.433,281,2.902,527,1.859,531,3.01,554,5.137,555,4.207,556,4.207,557,4.207,558,5.137,559,5.137,560,3.804,561,5.137,562,3.487,578,3.848,581,1.613,583,2.728,681,4.432,1085,2.912,1090,6.118,1099,3.452,1125,4.207,1126,2.728,1374,3.631,1375,7.464,1376,3.922,1377,3.922,1378,3.922,1379,3.922,1380,3.922,1381,3.922,1382,3.922,1383,3.922,1384,3.922,1385,3.922,1386,3.922,1387,3.922,1388,3.922]],["title/classes/PatchProductVariantDto.html",[64,0.094,1125,2.833]],["body/classes/PatchProductVariantDto.html",[3,0.132,4,0.119,5,0.119,12,0.38,23,0.607,26,0.01,28,0.543,29,1.258,49,1.062,51,0.22,63,0.132,64,0.15,109,0.008,110,0.008,117,1.83,121,2.226,127,1.696,195,2.533,259,1.938,266,3.232,267,1.994,479,4.051,494,2.555,580,5.265,581,3.113,583,3.795,671,4.373,681,3.956,1090,4.051,1106,4.298,1125,4.53,1126,5.265,1389,6.067,1390,6.663,1391,5.456,1392,5.531,1393,5.456,1394,5.456,1395,4.373,1396,6.901]],["title/classes/PatchUserDto.html",[64,0.094,1397,3.002]],["body/classes/PatchUserDto.html",[3,0.106,4,0.095,5,0.095,12,0.305,23,0.723,26,0.01,28,0.646,29,1.385,49,1.335,51,0.198,63,0.106,64,0.13,109,0.007,110,0.007,117,1.583,127,2.018,259,1.554,266,3.846,267,1.598,479,3.248,494,2.049,526,4.459,527,2.006,531,3.247,681,4.353,749,2.871,751,3.042,754,3.851,768,3.248,1106,3.717,1389,3.506,1395,3.506,1397,4.151,1398,7.331,1399,5.968,1400,5.98,1401,5.98,1402,5.98,1403,6.793,1404,5.98,1405,5.98,1406,5.98,1407,8.067,1408,4.374,1409,4.374,1410,4.374,1411,4.374,1412,4.374,1413,4.374,1414,4.374,1415,4.374]],["title/entities/Payment.html",[633,1.577,1148,2.833]],["body/entities/Payment.html",[3,0.093,4,0.084,5,0.084,9,0.772,12,0.268,23,0.722,26,0.01,27,1.177,28,0.653,29,0.864,39,2.756,40,2.749,49,1.263,50,3.954,51,0.185,63,0.093,64,0.084,109,0.006,110,0.006,117,1.449,121,2.145,127,2.017,196,2.096,286,1.076,305,3.235,392,4.416,451,2.388,476,3.101,527,1.836,562,3.454,573,3.758,581,1.585,584,2.4,633,2.524,800,2.014,802,4.416,804,4.42,806,3.101,811,2.096,884,2.68,887,4.058,950,4.167,1148,4.534,1150,5.845,1187,5.589,1196,5.589,1198,3.392,1199,5.589,1416,3.392,1417,5.589,1418,5.589,1419,4.81,1420,4.81,1421,3.801,1422,4.81,1423,4.379,1424,3.854,1425,4.81,1426,3.854,1427,3.854,1428,3.854,1429,3.854,1430,3.854,1431,3.854,1432,6.081,1433,3.854,1434,5.589,1435,3.854,1436,3.854,1437,3.854,1438,5.464,1439,4.379,1440,5.464,1441,3.854,1442,5.464,1443,5.464,1444,3.854,1445,2.68,1446,3.854,1447,5.464,1448,3.392]],["title/modules/PaymentModule.html",[133,1.06,150,3.002]],["body/modules/PaymentModule.html",[3,0.162,4,0.146,5,0.146,26,0.01,51,0.195,55,0.818,63,0.162,64,0.145,109,0.009,110,0.009,133,1.92,135,2.67,150,5.435,1449,6.692]],["title/controllers/PaystackController.html",[122,1.722,1450,3.205]],["body/controllers/PaystackController.html",[3,0.118,4,0.106,5,0.106,12,0.34,13,1.321,16,1.057,18,1.057,23,0.43,25,1.057,26,0.01,27,0.906,28,0.384,29,0.772,35,1.805,37,1.004,51,0.248,55,0.597,63,0.118,64,0.106,67,1.057,107,0.954,109,0.007,110,0.007,112,3.701,114,2.772,119,2.009,122,1.949,124,1.949,127,1.2,271,1.72,289,2.772,293,1.141,296,1.735,330,2.899,331,2.553,368,3.814,372,3.206,378,2.899,380,3.233,404,3.398,468,3.206,758,2.657,837,2.899,838,3.206,839,3.627,908,4.47,909,3.398,910,3.915,916,3.915,1115,5.069,1139,5.657,1142,3.915,1143,3.915,1148,3.206,1450,4.772,1451,4.3,1452,6.322,1453,4.3,1454,6.426,1455,4.885,1456,4.885,1457,4.714,1458,4.3,1459,4.885,1460,4.885]],["title/modules/PaystackModule.html",[133,1.06,151,3.002]],["body/modules/PaystackModule.html",[3,0.123,4,0.111,5,0.111,26,0.01,51,0.247,55,0.623,56,2.564,63,0.123,64,0.111,109,0.007,110,0.007,124,2.635,133,1.801,135,2.033,136,2.096,137,2.232,138,2.232,139,2.096,140,3.211,141,2.232,151,6.101,154,5.128,158,5.128,159,2.894,160,1.916,161,2.162,163,3.205,165,4.084,427,4.486,1127,5.404,1144,4.486,1145,4.486,1450,5.443,1457,5.404,1458,4.486,1461,4.486,1462,5.096,1463,4.486,1464,5.096,1465,5.096,1466,5.096,1467,4.486,1468,4.486,1469,5.096]],["title/injectables/PaystackService.html",[53,0.394,1457,2.833]],["body/injectables/PaystackService.html",[3,0.125,4,0.112,5,0.112,12,0.359,13,1.369,14,1.907,16,1.117,18,1.441,23,0.586,25,1.441,26,0.01,27,1.235,28,0.524,29,1.053,35,1.837,37,1.061,51,0.227,53,0.608,55,0.631,63,0.125,64,0.112,67,1.117,86,1.369,107,1.008,109,0.007,110,0.007,112,3.78,114,2.929,253,1.334,271,1.767,280,1.886,289,2.929,293,1.205,451,1.941,1115,5.235,1127,5.422,1142,4.137,1143,4.137,1148,3.388,1452,6.492,1453,4.543,1457,4.372,1467,4.543,1470,4.543,1471,5.161,1472,5.161,1473,5.161,1474,6.661,1475,5.161]],["title/entities/Product.html",[195,1.374,633,1.577]],["body/entities/Product.html",[3,0.08,4,0.072,5,0.072,12,0.229,23,0.735,26,0.01,27,1.075,28,0.657,29,1.014,39,3.04,49,1.309,51,0.169,63,0.08,64,0.071,109,0.005,110,0.005,117,1.291,121,1.706,127,2.053,195,1.55,196,1.788,281,2.625,286,0.918,305,3.003,476,2.763,527,2.155,554,4.648,555,3.806,556,3.806,557,3.806,558,4.648,559,4.648,560,3.442,561,4.648,562,3.155,573,3.488,581,1.352,584,2.047,627,2.889,631,3.386,633,1.779,688,4.068,698,3.615,716,4.306,800,1.718,802,4.033,804,4.803,806,2.763,809,4.286,810,4.286,811,1.788,812,2.893,1417,5.105,1418,5.105,1419,5.644,1420,5.644,1421,3.386,1422,5.644,1423,5.139,1434,5.105,1476,2.893,1477,3.286,1478,3.286,1479,3.286,1480,3.286,1481,3.286,1482,3.286,1483,3.286,1484,3.286,1485,3.286,1486,3.286,1487,3.286,1488,4.286,1489,4.868,1490,5.139,1491,5.644,1492,3.286,1493,3.286,1494,3.286,1495,4.868,1496,3.286,1497,3.286,1498,4.648,1499,4.868,1500,3.286,1501,4.868,1502,3.286,1503,4.868,1504,3.286,1505,4.868,1506,3.286]],["title/entities/ProductImage.html",[602,2.833,633,1.577]],["body/entities/ProductImage.html",[3,0.122,4,0.11,5,0.11,12,0.351,23,0.68,26,0.01,28,0.607,49,1.188,51,0.191,63,0.122,64,0.109,109,0.007,110,0.007,117,1.741,121,2.145,127,1.898,196,2.744,198,5.257,286,1.409,476,3.724,527,2.206,573,4.548,581,3.377,584,3.142,602,4.308,627,3.895,631,4.565,633,2.398,646,6.421,648,6.421,800,2.637,804,4.139,806,3.724,811,2.744,892,3.746,899,4.873,1439,5.26,1490,4.043,1507,4.441,1508,5.777,1509,5.045,1510,5.045,1511,5.045,1512,6.563,1513,5.777,1514,4.441,1515,5.045]],["title/modules/ProductImagesModule.html",[133,1.06,152,3.002]],["body/modules/ProductImagesModule.html",[3,0.14,4,0.126,5,0.126,26,0.01,51,0.236,55,0.707,63,0.14,64,0.126,109,0.008,110,0.008,133,1.91,135,2.308,136,2.38,137,2.535,138,2.535,139,2.38,140,3.406,141,2.535,152,5.916,159,3.136,160,2.176,161,2.455,163,2.807,173,3.148,174,1.747,195,1.842,198,3.798,581,2.38,602,3.798,603,4.637,1516,5.093,1517,5.093,1518,5.916,1519,5.786,1520,5.093,1521,5.786,1522,5.786]],["title/injectables/ProductImagesService.html",[53,0.394,1518,3.002]],["body/injectables/ProductImagesService.html",[3,0.161,4,0.145,5,0.145,26,0.01,51,0.194,53,0.71,55,0.813,63,0.161,64,0.144,109,0.009,110,0.009,253,1.719,581,2.734,1518,5.414,1523,5.852,1524,5.852]],["title/entities/ProductVariant.html",[573,2.348,633,1.577]],["body/entities/ProductVariant.html",[3,0.104,4,0.094,5,0.094,12,0.299,23,0.707,26,0.01,28,0.631,29,0.932,39,2.89,40,2.967,49,1.206,51,0.196,63,0.104,64,0.093,109,0.006,110,0.006,117,1.564,121,1.98,127,1.973,195,2.642,196,4.449,198,2.822,286,1.201,476,2.44,527,1.982,573,3.208,581,3.412,595,5.395,602,4.755,603,3.446,633,2.155,640,4.379,672,5.395,673,5.926,674,5.395,800,2.247,804,4.45,806,3.347,811,2.339,882,3.785,892,3.192,899,4.379,1152,3.446,1390,5.926,1392,4.727,1439,4.727,1488,3.785,1490,5.395,1491,5.192,1498,4.727,1508,5.192,1513,5.192,1514,3.785,1525,3.785,1526,4.299,1527,4.299,1528,5.898,1529,4.299,1530,5.898,1531,4.299,1532,4.299,1533,4.299,1534,4.299]],["title/modules/ProductVariantsModule.html",[133,1.06,153,2.833]],["body/modules/ProductVariantsModule.html",[3,0.136,4,0.122,5,0.122,26,0.01,51,0.234,55,0.686,63,0.136,64,0.122,109,0.008,110,0.008,133,1.883,135,2.237,136,2.306,137,2.457,138,2.457,139,2.306,140,3.358,141,3.358,153,5.621,159,3.076,160,2.109,161,2.38,163,2.721,173,3.051,174,1.693,195,1.786,196,3.051,573,3.051,581,2.306,584,3.493,1520,4.937,1535,4.937,1536,4.937,1537,4.937,1538,5.835,1539,5.608,1540,4.937,1541,5.608]],["title/injectables/ProductVariantsService.html",[53,0.394,1538,2.833]],["body/injectables/ProductVariantsService.html",[3,0.1,4,0.09,5,0.09,12,0.286,13,1.176,14,2,16,0.89,18,1.238,23,0.579,25,1.423,26,0.01,27,1.22,28,0.517,29,1.04,33,1.406,37,1.462,38,3.115,49,1.19,51,0.207,53,0.522,55,0.503,63,0.1,64,0.089,66,1.616,67,0.89,73,1.421,78,1.31,79,1.149,86,1.518,107,1.117,109,0.006,110,0.006,121,2.091,174,1.242,195,2.616,253,1.064,271,1.853,274,2.894,286,1.149,288,1.692,293,0.961,573,3.868,581,2.924,584,2.563,631,5.982,687,4.39,844,2.701,971,4.585,1448,6.578,1538,3.755,1542,5.698,1543,3.622,1544,6.578,1545,6.578,1546,4.114,1547,4.114,1548,5.721,1549,4.114,1550,4.114,1551,4.114,1552,4.114,1553,4.114,1554,4.114,1555,3.297,1556,4.114,1557,4.114]],["title/classes/ProductWithVariantDto.html",[64,0.094,1123,3.205]],["body/classes/ProductWithVariantDto.html",[3,0.119,4,0.107,5,0.107,12,0.342,23,0.634,26,0.01,28,0.641,39,2.572,49,1.176,51,0.223,63,0.119,64,0.166,109,0.007,110,0.007,117,1.71,127,1.769,195,1.563,259,1.744,263,3.058,265,3.851,266,3.718,267,1.794,281,3.259,527,2.167,528,3.645,531,3.507,560,4.273,562,4.159,574,3.934,575,3.645,577,3.414,578,5.007,579,5.345,581,2.019,583,3.414,585,4.787,681,3.996,687,4.085,897,3.934,1115,3.058,1116,6.127,1117,3.934,1118,3.934,1119,3.934,1123,5.676,1125,5.018,1126,3.414,1558,4.909,1559,4.909,1560,4.909]],["title/controllers/ProductsController.html",[122,1.722,1561,3.205]],["body/controllers/ProductsController.html",[3,0.058,4,0.052,5,0.052,9,1.51,11,1.197,12,0.166,13,0.78,16,0.515,18,0.515,23,0.52,25,1.278,26,0.01,27,1.373,28,0.602,29,0.995,33,1.164,35,0.542,37,1.454,38,1.663,39,1.89,40,2.972,49,1.16,51,0.216,55,0.291,58,1.767,63,0.058,64,0.052,66,1.738,67,0.515,76,2.819,101,2.094,105,2.826,107,1.29,109,0.004,110,0.004,119,0.978,121,1.59,122,0.949,124,0.949,127,1.451,195,2.469,271,1.88,293,0.556,296,0.845,330,1.412,331,1.243,332,4.333,338,3.042,341,4.333,343,3.209,344,3.573,347,5.499,368,2.811,369,1.767,370,1.767,371,1.767,372,2.492,378,1.412,380,1.91,384,3.796,385,3.796,387,1.154,391,3.042,392,2.64,404,2.64,408,2.154,468,1.562,527,2.306,552,4.337,589,4.333,594,1.907,596,2.819,600,1.907,605,1.655,606,1.655,608,3.109,626,4.734,687,3.893,695,1.412,708,2.811,718,4.517,758,1.294,780,1.767,782,2.094,832,2.64,837,1.412,838,1.562,839,1.767,842,3.517,844,3.549,848,1.655,955,2.492,966,3.367,968,3.796,969,1.35,972,1.655,973,2.819,981,3.76,1075,1.562,1137,3.549,1138,3.042,1154,1.767,1159,1.907,1313,3.042,1374,4.642,1421,2.64,1445,2.64,1561,2.819,1562,2.094,1563,3.796,1564,3.796,1565,3.342,1566,4.737,1567,3.796,1568,2.379,1569,2.379,1570,2.094,1571,2.379,1572,2.379,1573,3.042,1574,2.492,1575,2.379,1576,2.094,1577,4.759,1578,2.094,1579,3.342,1580,3.342,1581,2.094,1582,3.342,1583,3.342,1584,3.342,1585,2.379,1586,2.379,1587,2.094,1588,2.094,1589,2.094,1590,4.737,1591,3.042,1592,2.094,1593,2.379,1594,2.379,1595,3.796,1596,3.342,1597,2.379,1598,2.379,1599,2.379,1600,1.907,1601,3.796,1602,3.796,1603,2.379,1604,3.342,1605,3.342,1606,4.17,1607,3.796,1608,2.094,1609,2.094,1610,1.655,1611,2.379,1612,2.379,1613,2.094,1614,2.379,1615,1.907,1616,2.379,1617,2.379,1618,2.379,1619,2.379,1620,2.094,1621,1.907,1622,3.042,1623,2.379,1624,2.379,1625,2.379,1626,2.379,1627,2.379,1628,2.379,1629,3.796,1630,2.379,1631,1.655,1632,2.379,1633,2.094,1634,2.379]],["title/modules/ProductsModule.html",[133,1.06,154,2.688]],["body/modules/ProductsModule.html",[3,0.108,4,0.097,5,0.097,26,0.01,51,0.248,55,0.543,63,0.108,64,0.096,109,0.007,110,0.007,124,2.406,133,1.682,135,1.772,136,1.827,137,1.946,138,1.946,139,1.827,140,3,141,3,153,5.198,154,5.524,157,5.198,159,2.642,160,1.67,161,1.885,163,2.926,173,2.416,174,1.341,195,1.414,196,2.416,197,3.91,581,1.827,586,5.198,599,3.09,708,5.099,926,3.298,957,5.198,1324,5.198,1561,5.084,1609,3.91,1635,3.91,1636,3.91,1637,4.442,1638,3.91,1639,5.198,1640,4.442,1641,4.442,1642,5.309,1643,4.442,1644,3.91,1645,3.91,1646,3.91,1647,4.442,1648,4.442]],["title/injectables/ProductsService.html",[53,0.394,708,2.562]],["body/injectables/ProductsService.html",[3,0.066,4,0.06,5,0.06,12,0.191,13,0.873,14,2.09,16,1.265,18,0.919,23,0.589,25,1.447,26,0.01,27,1.24,28,0.567,29,1.057,33,1.554,37,1.554,38,3.311,49,1.163,51,0.224,53,0.387,55,0.335,63,0.066,64,0.06,66,1.714,67,1.265,73,0.948,78,1.654,79,1.45,81,1.427,86,1.551,100,1.427,107,1.235,109,0.005,110,0.005,121,2.051,174,0.828,195,2.634,253,0.709,271,1.936,274,2.449,283,1.062,286,0.766,288,1.128,293,1.365,308,1.467,343,3.083,353,1.492,357,3.153,408,2.947,451,1.953,494,1.988,520,2.31,552,4.578,586,4.39,589,4.163,594,2.198,596,3.153,599,1.908,600,2.198,605,1.908,606,1.908,626,5.068,687,3.958,708,2.52,718,3.642,719,2.409,832,2.953,848,1.908,876,2.953,957,4.578,960,3.857,964,4.163,965,2.415,966,3.642,968,4.163,969,1.557,971,2.198,972,1.908,973,3.153,974,2.198,977,2.198,1137,1.8,1374,4.855,1555,2.198,1563,3.403,1565,3.737,1570,3.737,1573,3.403,1574,3.409,1587,3.737,1610,1.908,1631,1.908,1639,4.578,1642,3.737,1646,2.415,1649,2.415,1650,4.572,1651,2.743,1652,2.743,1653,2.743,1654,2.743,1655,2.743,1656,2.743,1657,2.415,1658,2.743,1659,2.743,1660,2.743,1661,2.743,1662,2.743,1663,2.743,1664,2.743]],["title/classes/RefreshTokenDto.html",[64,0.094,352,2.833]],["body/classes/RefreshTokenDto.html",[3,0.137,4,0.124,5,0.124,9,1.417,11,4.259,12,0.395,23,0.499,26,0.01,28,0.446,49,1.088,51,0.206,63,0.137,64,0.153,109,0.008,110,0.008,117,1.876,127,1.393,259,2.015,265,3.43,266,3.312,267,2.072,344,4.013,352,4.641,354,5.272,387,2.751,396,5.721,448,5.667,634,3.696,740,3.945,744,4.918,1665,4.993,1666,5.672,1667,5.672,1668,5.672]],["title/injectables/RefreshTokenProvider.html",[53,0.394,422,2.833]],["body/injectables/RefreshTokenProvider.html",[3,0.088,4,0.079,5,0.079,9,0.728,10,3.815,11,3.942,12,0.253,13,1.077,14,1.588,16,1.455,18,1.455,19,2.91,20,6.279,21,5.388,22,4.992,23,0.461,25,1.133,26,0.01,27,0.971,28,0.412,29,0.828,33,1.287,35,1.398,37,1.077,51,0.228,52,2.06,53,0.478,54,2.525,55,0.444,56,1.827,57,2.383,59,2.525,63,0.088,64,0.079,66,1.751,67,1.455,68,3.642,69,1.975,70,2.91,73,1.809,78,1.156,79,1.715,81,1.22,86,1.629,100,1.22,105,1.898,107,0.709,109,0.006,110,0.006,112,1.761,120,2.91,121,1.068,253,0.939,271,1.471,280,1.327,289,2.06,293,1.57,296,1.29,308,1.254,334,4.197,351,4.197,352,4.874,354,4.767,356,2.525,381,3.196,382,2.91,420,4.187,422,3.437,425,2.525,431,2.91,432,2.91,451,2.31,470,4.031,550,2.383,1037,2.91,1066,3.196,1068,3.196,1069,3.196,1070,3.196,1071,3.196,1072,3.196,1073,3.196,1075,4.679,1133,4.408,1147,2.696,1293,5.388,1309,3.196,1669,5.407,1670,3.196,1671,5.236,1672,3.631,1673,3.631,1674,5.236,1675,3.196,1676,3.631,1677,3.631,1678,3.631,1679,3.631,1680,3.631,1681,3.631]],["title/entities/Review.html",[633,1.577,688,2.449]],["body/entities/Review.html",[3,0.118,4,0.106,5,0.106,12,0.338,23,0.715,26,0.01,28,0.652,49,1.25,51,0.186,63,0.118,64,0.106,109,0.007,110,0.007,117,1.699,121,2.107,127,1.997,195,2.709,286,1.357,305,3,319,3.61,527,2.153,633,2.341,688,4.491,689,5.742,690,5.742,695,3.802,698,4.757,732,5.742,800,2.541,802,4.983,804,4.321,806,3.635,811,2.645,884,3.381,892,3.61,899,4.757,975,5.639,1152,3.896,1682,4.279,1683,4.861,1684,4.861,1685,6.406,1686,4.861,1687,6.406,1688,4.861,1689,4.861,1690,4.861,1691,4.861,1692,4.861,1693,4.861,1694,4.861]],["title/controllers/ReviewsController.html",[122,1.722,1695,3.205]],["body/controllers/ReviewsController.html",[3,0.106,4,0.095,5,0.095,12,0.305,13,1.227,16,0.946,18,0.946,23,0.525,25,1.291,26,0.01,27,1.107,28,0.469,29,0.943,33,1.466,37,1.5,38,3.197,49,1.045,51,0.235,55,0.535,63,0.106,64,0.095,66,1.669,67,0.946,107,1.165,109,0.007,110,0.007,119,1.799,122,1.745,124,1.745,127,1.466,195,1.393,271,1.888,293,1.021,296,1.554,330,2.596,331,2.286,343,3.542,353,2.38,368,2.596,369,3.248,370,3.248,372,3.917,378,2.596,380,3.003,404,3.042,408,3.387,468,2.871,546,2.286,684,5.295,687,2.482,688,3.855,706,4.783,711,3.506,713,3.506,716,4.431,758,2.38,837,2.596,838,2.871,839,3.248,842,3.248,1159,3.506,1563,5.444,1573,4.783,1574,3.917,1600,3.506,1631,3.042,1633,3.851,1695,4.431,1696,3.851,1697,4.374,1698,4.374,1699,4.374,1700,4.374,1701,4.374,1702,5.254,1703,4.459,1704,3.851,1705,4.374,1706,4.374,1707,4.374,1708,4.374,1709,4.374,1710,4.374]],["title/modules/ReviewsModule.html",[133,1.06,155,3.002]],["body/modules/ReviewsModule.html",[3,0.128,4,0.115,5,0.115,26,0.01,51,0.246,55,0.644,63,0.128,64,0.114,109,0.007,110,0.007,124,2.693,133,1.83,135,2.102,136,2.167,137,2.309,138,2.309,139,2.167,140,3.263,141,2.309,154,5.174,155,6.056,159,2.957,160,1.982,161,2.236,163,3.275,173,2.867,174,1.591,688,2.99,703,5.452,714,4.223,926,3.913,1468,4.639,1695,5.53,1703,5.452,1704,4.639,1711,4.639,1712,5.27,1713,4.639,1714,5.27,1715,5.27,1716,4.639,1717,5.27]],["title/injectables/ReviewsService.html",[53,0.394,1703,2.833]],["body/injectables/ReviewsService.html",[3,0.1,4,0.09,5,0.09,12,0.289,13,1.183,14,2.005,16,1.245,18,1.245,23,0.581,25,1.429,26,0.01,27,1.225,28,0.519,29,1.044,33,1.414,37,1.467,38,3.126,49,1.016,51,0.226,53,0.525,55,0.507,63,0.1,64,0.09,66,1.623,67,1.245,78,1.321,79,1.158,81,1.394,86,1.1,100,1.394,107,1.124,109,0.006,110,0.006,174,1.253,195,1.321,253,1.073,271,1.858,274,2.902,283,1.606,286,1.158,288,1.706,293,1.344,308,1.433,343,3.921,353,2.257,408,3.749,451,1.56,494,2.695,520,2.257,546,2.168,684,5.091,687,2.354,688,4.601,703,5.091,706,4.612,710,5.816,711,4.612,713,3.325,714,3.325,716,3.08,717,3.652,1574,4.336,1631,2.885,1702,5.816,1703,3.777,1716,3.652,1718,3.652,1719,5.754,1720,4.148,1721,4.148,1722,4.148,1723,5.754,1724,4.148,1725,4.148,1726,4.148]],["title/guards/RolesGuard.html",[0,2.688,188,3.205]],["body/guards/RolesGuard.html",[0,3.589,2,3.087,3,0.101,4,0.091,5,0.091,9,0.833,10,3.27,12,0.289,13,1.185,15,5.723,16,0.899,18,1.431,23,0.507,25,1.247,26,0.01,27,1.226,28,0.453,29,0.911,30,4.618,31,4.967,33,1.416,35,1.626,36,4.008,37,1.185,39,2.849,40,2.899,41,5.073,42,4.279,51,0.208,53,0.526,55,0.508,63,0.101,64,0.125,65,3.087,66,1.416,67,0.899,73,2.285,74,3.659,78,1.835,79,1.609,107,1.125,109,0.006,110,0.006,119,3.52,131,3.659,181,2.891,188,4.279,380,2.092,459,5.073,461,3.659,462,7.005,470,2.729,471,3.659,472,3.087,473,3.659,474,3.659,475,3.659,491,3.659,492,3.659,515,3.27,758,2.261,869,3.659,1080,3.087,1392,4.618,1555,3.332,1727,3.659,1728,4.157,1729,4.157,1730,5.762,1731,5.762,1732,5.762,1733,5.073,1734,5.762,1735,3.332,1736,4.157,1737,4.157,1738,3.659,1739,5.762,1740,4.157,1741,4.157,1742,4.157,1743,5.762,1744,4.157,1745,4.157]],["title/classes/SignInDto.html",[64,0.094,362,2.833]],["body/classes/SignInDto.html",[3,0.123,4,0.11,5,0.11,9,1.465,12,0.353,23,0.579,26,0.01,28,0.518,35,1.932,49,1.013,51,0.213,63,0.123,64,0.143,109,0.007,110,0.007,117,1.746,118,3.789,119,3.558,127,1.618,259,1.801,265,3.547,267,1.853,344,4.392,362,4.322,367,4.58,380,2.551,387,2.46,447,5.86,634,3.442,740,4.58,741,4.063,743,4.889,744,5.086,745,5.277,746,4.063,747,4.063,748,4.063,753,4.463,755,4.463,759,4.063,760,4.463,1746,4.463,1747,5.07,1748,5.07,1749,5.07]],["title/injectables/SignInProvider.html",[53,0.394,423,2.833]],["body/injectables/SignInProvider.html",[3,0.092,4,0.083,5,0.083,9,0.761,10,3.067,12,0.264,13,1.111,14,1.628,16,1.17,18,1.484,23,0.476,25,1.17,26,0.01,27,1.002,28,0.425,29,0.855,33,1.328,35,1.863,37,1.111,51,0.219,52,2.154,53,0.493,55,0.464,63,0.092,64,0.082,66,1.686,67,1.17,73,1.867,78,1.721,79,1.06,81,1.276,86,1.82,100,1.276,107,0.741,109,0.006,110,0.006,118,2.85,119,2.223,121,1.59,253,0.981,271,1.508,280,1.387,283,1.47,293,1.262,296,1.92,308,1.311,309,3.042,317,3.367,335,4.014,346,3.054,354,3.367,356,3.76,361,4.332,362,4.947,373,3.341,374,3.042,423,3.548,425,2.64,446,4.759,451,2.033,470,2.491,494,1.778,515,3.893,520,2.065,550,2.491,719,2.154,769,3.341,770,4.603,1075,2.491,1077,3.042,1079,2.818,1080,2.818,1133,4.313,1147,2.818,1222,2.818,1292,3.341,1293,3.042,1297,6.04,1300,4.759,1301,3.341,1303,3.341,1675,3.341,1750,5.542,1751,3.341,1752,5.406,1753,3.796,1754,3.796,1755,3.796,1756,3.341,1757,3.796,1758,3.796,1759,3.796,1760,3.796,1761,3.796,1762,3.796,1763,3.796,1764,3.796,1765,3.796,1766,3.341,1767,3.796,1768,3.796,1769,3.796]],["title/injectables/StoreOtpAndExpireProvider.html",[53,0.394,1770,2.833]],["body/injectables/StoreOtpAndExpireProvider.html",[3,0.105,4,0.094,5,0.094,9,0.865,12,0.301,13,1.216,14,1.744,16,0.934,18,1.57,23,0.521,25,1.28,26,0.01,27,1.097,28,0.465,29,0.935,33,1.453,35,1.891,37,1.216,49,1.038,51,0.211,53,0.54,55,0.528,63,0.105,64,0.146,66,1.658,67,0.934,73,2.043,78,1.375,79,1.652,81,1.451,86,1.145,100,1.451,107,0.843,109,0.006,110,0.006,174,1.304,253,1.116,271,1.616,274,2.944,280,1.578,283,1.672,286,1.206,288,1.776,293,1.008,305,3.399,308,1.492,346,4.177,451,2.224,505,4.52,508,2.834,510,4.202,514,2.563,515,2.45,516,2.689,517,3.801,518,3.206,519,3.801,520,2.349,698,3.206,1770,3.883,1771,5.939,1772,3.801,1773,6.389,1774,5.915,1775,4.318,1776,5.915,1777,4.318,1778,5.915,1779,4.318,1780,3.801,1781,4.318]],["title/entities/Subscriber.html",[633,1.577,739,2.688]],["body/entities/Subscriber.html",[3,0.135,4,0.122,5,0.122,9,1.118,12,0.388,23,0.616,26,0.01,28,0.601,39,2.791,40,3.521,49,1.076,51,0.162,63,0.135,64,0.121,109,0.008,110,0.008,117,1.856,118,3.462,121,2.249,127,1.719,236,3.521,286,1.557,527,2.352,633,2.93,739,4.994,800,2.915,804,3.971,811,4.16,884,3.879,887,5.196,1445,4.867,1615,5.608,1782,4.909,1783,5.608,1784,6.16,1785,6.16,1786,5.577,1787,5.577]],["title/controllers/SubscribersController.html",[122,1.722,1788,3.205]],["body/controllers/SubscribersController.html",[3,0.161,4,0.145,5,0.145,26,0.01,51,0.194,55,0.813,63,0.161,64,0.144,109,0.009,110,0.009,122,2.652,124,2.652,330,3.946,1788,5.78,1789,5.852,1790,6.648,1791,6.648]],["title/modules/SubscribersModule.html",[133,1.06,156,3.002]],["body/modules/SubscribersModule.html",[3,0.132,4,0.119,5,0.119,26,0.01,51,0.244,55,0.669,63,0.132,64,0.119,109,0.008,110,0.008,124,2.758,133,1.862,135,2.182,136,2.25,137,2.397,138,2.397,139,2.25,140,3.32,141,2.397,149,5.505,156,5.993,159,3.028,160,2.057,161,2.321,163,3.354,173,2.976,174,1.652,739,3.407,1788,5.628,1792,4.816,1793,5.471,1794,4.816,1795,5.834,1796,5.471,1797,5.471,1798,4.816,1799,5.471,1800,5.471,1801,5.471]],["title/injectables/SubscribersService.html",[53,0.394,1795,3.002]],["body/injectables/SubscribersService.html",[3,0.091,4,0.082,5,0.082,9,0.753,12,0.262,13,1.104,14,1.943,16,1.162,18,1.478,23,0.551,25,1.355,26,0.01,27,1.161,28,0.492,29,0.99,33,1.679,37,1.405,51,0.219,53,0.49,55,0.46,63,0.091,64,0.082,66,1.679,67,1.162,73,1.299,78,1.71,79,1.499,81,1.805,86,1.661,100,1.805,107,1.049,109,0.006,110,0.006,121,1.579,133,1.319,174,1.135,253,0.972,271,1.8,274,2.798,280,1.962,283,1.456,286,1.05,288,1.546,293,1.254,296,2.225,308,1.855,343,4.055,408,4.264,520,2.921,527,2.105,546,1.965,735,5.579,739,5.147,770,4.694,1222,2.792,1260,6.962,1756,3.31,1795,3.735,1798,3.31,1802,3.31,1803,5.369,1804,5.369,1805,3.76,1806,3.76,1807,6.263,1808,5.369,1809,3.76,1810,5.369,1811,6.263,1812,5.369,1813,3.76,1814,5.369,1815,6.263,1816,3.76,1817,3.76,1818,3.76,1819,3.76,1820,3.76,1821,3.76]],["title/classes/UpdateDeliveryStateDto.html",[64,0.094,828,3.002]],["body/classes/UpdateDeliveryStateDto.html",[3,0.153,4,0.138,5,0.138,26,0.01,51,0.22,63,0.153,64,0.137,109,0.008,110,0.008,206,4.481,259,2.243,479,4.688,494,2.957,521,5.302,522,3.932,524,5.06,828,5.251,836,5.06,1106,4.702,1389,6.473,1395,5.06,1822,5.558]],["title/injectables/UpdateProductProvider.html",[53,0.394,1639,2.833]],["body/injectables/UpdateProductProvider.html",[3,0.074,4,0.066,5,0.066,9,0.611,12,0.212,13,0.947,14,1.434,16,0.997,18,0.997,23,0.405,25,0.997,26,0.01,27,0.854,28,0.362,29,0.728,37,0.627,39,2.973,40,1.535,45,1.48,49,0.853,50,4.985,51,0.203,53,0.42,55,0.373,63,0.074,64,0.066,67,0.997,73,1.591,78,1.766,79,1.549,81,1.865,86,1.639,92,1.66,93,1.66,94,1.48,95,1.66,96,1.595,97,1.66,98,1.66,99,1.66,100,1.548,107,0.899,109,0.005,110,0.005,121,1.632,174,0.921,195,2.475,236,1.535,253,0.789,271,1.329,274,2.569,280,1.115,282,1.901,283,1.783,286,0.852,288,1.255,293,1.076,296,1.084,308,1.591,310,1.732,311,1.732,312,1.732,313,1.66,314,1.732,315,1.732,317,1.901,502,2.122,549,3.204,562,3.018,581,1.255,588,2.446,599,2.122,627,1.811,631,3.859,719,1.732,781,2.266,832,3.204,874,2.446,876,4.298,961,2.686,964,3.691,973,2.266,977,2.446,1014,2.266,1374,4.752,1538,4.752,1540,2.686,1542,2.446,1610,2.122,1613,4.884,1639,3.023,1650,4.055,1657,4.055,1823,4.884,1824,3.051,1825,3.051,1826,3.051,1827,4.606,1828,3.051,1829,4.606,1830,4.606,1831,4.606,1832,7.774,1833,4.606,1834,3.051,1835,4.606,1836,3.051,1837,4.606,1838,3.051,1839,4.606,1840,3.051,1841,4.606,1842,3.051,1843,4.606,1844,3.051,1845,4.606,1846,3.051,1847,4.606,1848,3.051,1849,3.051,1850,3.051,1851,4.606,1852,3.051,1853,3.051,1854,3.051,1855,3.051,1856,3.051,1857,3.051,1858,4.606,1859,3.051,1860,4.606,1861,3.051,1862,4.606,1863,3.051,1864,4.606,1865,3.051,1866,3.051,1867,3.051]],["title/injectables/UploadToAwsProvider.html",[53,0.394,1868,2.833]],["body/injectables/UploadToAwsProvider.html",[3,0.09,4,0.081,5,0.186,9,0.749,12,0.26,13,1.1,14,1.614,16,1.474,18,1.474,23,0.549,25,1.351,26,0.01,27,1.512,28,0.491,29,0.987,33,1.843,37,1.401,38,1.638,49,0.575,51,0.21,53,0.488,55,0.457,56,1.881,63,0.09,64,0.081,66,1.534,67,0.809,69,2.034,73,2.491,75,4.708,78,1.19,79,1.743,81,1.257,86,0.992,100,1.257,107,1.219,109,0.006,110,0.006,166,5.068,253,0.967,271,1.496,280,1.366,283,1.448,293,0.873,296,1.328,308,1.292,368,2.219,520,2.034,605,2.601,606,5.216,620,2.997,640,5.864,784,3.291,885,3.971,1001,3.291,1040,4.286,1041,2.601,1054,5.999,1075,2.454,1218,4.286,1868,3.51,1869,5.999,1870,3.291,1871,5.348,1872,5.348,1873,3.739,1874,5.348,1875,3.739,1876,4.708,1877,5.004,1878,5.348,1879,3.739,1880,5.348,1881,5.999,1882,3.291,1883,3.739,1884,3.739,1885,4.708,1886,3.739,1887,3.291,1888,3.739,1889,3.739,1890,3.739,1891,3.739,1892,3.739,1893,3.739,1894,3.739,1895,3.739,1896,3.739,1897,3.739,1898,3.739,1899,5.348,1900,3.739,1901,3.739,1902,3.739,1903,3.739]],["title/modules/UploadsModule.html",[133,1.06,157,2.833]],["body/modules/UploadsModule.html",[3,0.137,4,0.123,5,0.123,26,0.01,51,0.224,55,0.69,63,0.137,64,0.122,109,0.008,110,0.008,133,1.888,135,2.25,136,2.319,137,2.471,138,2.471,139,2.319,140,3.367,141,3.367,157,5.738,159,3.087,160,2.121,161,2.393,592,5.839,1868,5.548,1904,4.965,1905,4.965,1906,4.965,1907,5.64,1908,5.64,1909,5.64,1910,4.965]],["title/injectables/UploadsService.html",[53,0.394,592,2.833]],["body/injectables/UploadsService.html",[3,0.107,4,0.096,5,0.179,12,0.307,13,1.232,14,1.762,16,1.297,18,1.583,23,0.528,25,1.297,26,0.01,27,1.264,28,0.536,29,0.948,33,1.473,37,1.232,51,0.198,53,0.547,55,0.538,56,2.215,63,0.107,64,0.096,66,1.675,67,1.297,69,2.395,73,1.521,78,2.17,79,1.674,81,1.48,86,1.168,100,1.48,107,0.86,109,0.007,110,0.007,166,5.398,253,1.138,271,1.633,280,1.609,282,2.742,293,1.4,296,1.564,308,2.071,451,1.656,592,3.935,598,3.529,606,4.741,620,5.463,640,5.433,1208,3.876,1868,5.304,1876,5.277,1877,4.804,1881,3.876,1887,3.876,1910,3.876,1911,3.876,1912,5.995,1913,4.403,1914,4.403,1915,5.995,1916,4.403,1917,6.816,1918,4.403,1919,4.403,1920,4.403,1921,4.403,1922,4.403,1923,4.403,1924,4.403,1925,4.403,1926,4.403,1927,4.403]],["title/entities/User.html",[35,0.983,633,1.577]],["body/entities/User.html",[3,0.071,4,0.064,5,0.064,9,0.591,12,0.205,23,0.707,26,0.01,28,0.677,29,1.338,35,1.567,39,3.407,40,3.055,49,1.302,51,0.19,63,0.071,64,0.064,109,0.005,110,0.005,117,1.19,118,2.46,119,3.107,121,1.598,127,1.975,236,2.258,286,0.823,305,2.102,346,2.636,380,2.733,518,4.034,526,3.566,527,1.508,633,2.219,756,2.595,757,2.595,758,2.441,800,1.541,804,4.561,806,2.546,811,1.604,884,5.448,885,3.332,887,6.367,1105,2.363,1400,4.782,1401,4.782,1402,4.782,1404,4.782,1405,4.782,1406,4.782,1425,2.595,1432,5.346,1445,3.121,1498,2.363,1596,5.346,1615,6.71,1783,3.596,1784,7.37,1785,7.272,1928,2.595,1929,5.433,1930,2.948,1931,2.948,1932,2.948,1933,2.948,1934,2.948,1935,2.948,1936,2.948,1937,2.948,1938,4.488,1939,2.948,1940,2.948,1941,2.948,1942,2.948,1943,2.948,1944,2.948,1945,2.948]],["title/controllers/UsersController.html",[122,1.722,1946,3.205]],["body/controllers/UsersController.html",[3,0.059,4,0.053,5,0.053,9,1.648,11,2.429,12,0.17,13,0.799,16,0.53,18,0.53,23,0.484,25,1.189,26,0.01,27,1.448,28,0.597,29,1.056,35,1.941,37,1.374,39,2.666,40,3.362,49,1.125,51,0.208,55,0.299,63,0.059,64,0.053,66,1.35,67,0.53,76,4.735,105,3.333,107,1.245,109,0.004,110,0.004,112,2.666,114,1.39,119,1.007,121,1.762,122,0.977,124,0.977,127,1.35,271,1.819,289,1.39,293,0.572,330,1.453,332,5.11,338,3.869,341,4.404,343,3.261,344,3.934,347,6.257,368,2.305,371,2.884,380,1.232,384,4.404,385,4.404,387,1.188,391,3.869,392,3.358,408,2.204,515,4.052,527,2.33,608,3.169,695,1.453,758,1.332,768,2.884,837,1.453,838,1.607,844,3.607,908,2.702,909,1.703,910,1.962,916,1.962,950,4.802,955,2.55,969,1.39,972,1.703,981,3.822,1114,3.607,1133,2.989,1137,3.607,1138,5.11,1154,3.585,1313,3.113,1397,4.648,1421,1.703,1445,3.822,1574,3.169,1576,2.156,1577,4.837,1578,2.156,1579,3.419,1580,3.419,1581,2.156,1582,3.419,1583,3.419,1584,3.419,1588,3.419,1589,2.156,1591,4.404,1592,3.419,1600,1.962,1604,4.837,1605,4.25,1606,4.25,1610,1.703,1620,3.419,1621,3.869,1622,5.11,1631,2.702,1738,3.419,1946,2.884,1947,2.156,1948,3.419,1949,3.884,1950,3.884,1951,4.828,1952,2.156,1953,3.884,1954,2.449,1955,2.449,1956,2.449,1957,3.419,1958,3.884,1959,2.449,1960,2.449,1961,2.449,1962,2.449,1963,4.828,1964,2.449,1965,2.449,1966,2.449,1967,2.449,1968,2.449,1969,2.449,1970,2.156,1971,2.449,1972,2.449,1973,2.449,1974,2.449,1975,2.449,1976,2.449,1977,2.449,1978,2.449,1979,2.449,1980,2.449]],["title/modules/UsersModule.html",[133,1.06,158,2.688]],["body/modules/UsersModule.html",[3,0.1,4,0.09,5,0.09,26,0.01,35,1.502,51,0.249,55,0.506,63,0.1,64,0.09,109,0.006,110,0.006,124,2.292,133,1.621,135,1.652,136,1.703,137,1.814,138,1.814,139,1.703,140,2.891,141,2.891,145,3.772,158,5.515,159,2.517,160,2.161,161,1.757,163,2.787,173,2.252,174,1.25,346,3.201,425,3.996,503,5.087,505,3.579,514,2.457,761,5.087,926,3.074,1019,5.087,1021,3.772,1029,5.087,1039,5.087,1133,4.619,1324,5.087,1644,3.644,1645,5.809,1770,5.087,1946,4.9,1970,3.644,1981,3.644,1982,4.14,1983,3.644,1984,3.644,1985,4.14,1986,4.14,1987,4.14,1988,3.644,1989,3.644,1990,4.14,1991,3.644,1992,5.058,1993,3.644,1994,4.14,1995,4.14]],["title/injectables/UsersService.html",[53,0.394,1133,2.348]],["body/injectables/UsersService.html",[3,0.042,4,0.038,5,0.038,9,0.584,11,3.644,12,0.12,13,0.599,14,2.084,16,1.306,18,0.962,23,0.572,25,1.406,26,0.01,27,1.205,28,0.511,29,1.028,33,1.805,35,1.972,37,1.53,38,1.277,45,0.837,49,1.158,51,0.211,53,0.406,55,0.211,63,0.042,64,0.037,66,1.829,67,1.306,73,0.596,78,1.583,79,1.604,81,1.671,86,1.601,92,0.938,93,0.938,94,0.837,95,0.938,96,0.902,97,0.938,98,0.938,99,0.938,100,1.495,105,3.581,107,1.228,109,0.003,110,0.003,118,2.442,121,1.912,133,0.716,160,2.445,174,0.521,236,0.868,253,0.446,271,1.931,274,1.925,280,2.206,282,1.074,283,1.129,286,0.482,288,0.709,293,1.41,296,1.035,305,2.827,308,1.537,310,0.979,311,0.979,312,0.979,313,0.938,314,0.979,315,0.979,317,1.074,327,1.281,342,2.164,343,1.024,346,3.244,408,2.147,444,2.566,451,2.27,494,2.083,502,1.2,503,3.77,505,4.165,507,2.566,510,2.771,511,2.566,513,2.566,514,1.024,515,2.524,516,1.074,520,1.586,546,0.902,653,2.566,719,3.061,738,2.164,749,3.541,761,2.92,764,2.566,766,2.566,768,2.81,874,1.383,876,1.2,950,2.484,955,1.132,960,2.164,962,3.76,969,0.979,972,1.2,974,1.383,976,1.519,978,1.281,981,1.2,1014,1.281,1016,1.519,1019,3.962,1021,2.484,1028,1.519,1029,4.126,1031,2.566,1033,2.566,1039,2.92,1040,4.323,1041,1.2,1114,2.92,1133,1.586,1137,3.962,1306,2.566,1397,4.198,1574,1.132,1610,1.2,1766,2.566,1770,2.92,1773,2.566,1948,2.566,1952,2.566,1957,2.566,1988,1.519,1989,1.519,1991,1.519,1992,2.566,1993,1.519,1996,1.519,1997,2.915,1998,2.915,1999,2.915,2000,2.915,2001,1.725,2002,4.448,2003,3.784,2004,1.725,2005,3.784,2006,1.725,2007,1.725,2008,1.725,2009,2.915,2010,2.915,2011,1.725,2012,2.915,2013,1.725,2014,2.915,2015,1.725,2016,2.915,2017,1.725,2018,2.915,2019,1.725,2020,2.915,2021,1.725,2022,1.725,2023,1.725,2024,1.725,2025,1.725,2026,1.725,2027,1.725,2028,1.725,2029,1.725,2030,1.725,2031,1.725,2032,1.725,2033,1.725,2034,1.725,2035,1.725]],["title/coverage.html",[2036,4.739]],["body/coverage.html",[0,2.809,1,1.538,5,0.048,6,1.947,7,1.642,8,1.947,26,0.01,28,0.174,33,0.543,35,1.18,53,0.782,61,1.772,64,0.178,79,0.617,109,0.004,110,0.004,111,2.49,112,1.073,114,1.255,115,1.947,122,2.753,123,1.642,125,1.947,129,1.451,139,0.909,160,0.832,162,1.772,182,1.642,184,1.772,186,1.642,188,1.642,195,1.436,196,1.203,198,1.451,204,1.538,206,2.125,207,2.49,213,1.772,254,1.947,258,1.642,260,1.947,261,2.869,268,1.451,269,1.947,270,2.869,275,1.451,281,1.001,290,2.35,291,1.772,328,1.642,329,1.947,331,1.156,337,1.451,346,2.188,352,1.451,362,1.451,375,1.451,420,1.377,421,1.451,422,1.451,423,1.451,437,1.947,447,1.772,448,1.772,456,1.947,469,1.772,503,1.451,504,1.947,505,2.23,506,2.869,521,1.451,522,3.546,523,1.947,524,2.869,532,1.451,533,1.947,539,1.451,540,1.947,552,1.451,553,1.947,573,1.203,580,1.538,581,2.506,582,1.772,586,1.451,587,1.947,588,2.869,592,1.451,602,1.451,627,5.163,633,2.59,671,2.869,684,1.451,685,1.947,686,1.947,688,1.255,703,1.451,704,1.947,705,1.947,708,1.312,735,1.642,736,1.947,737,1.947,739,1.377,749,1.451,750,1.947,751,3.605,761,1.451,762,1.947,763,1.947,770,1.312,778,1.947,779,1.947,799,1.538,801,1.947,815,1.642,816,1.947,828,1.538,833,1.451,837,1.312,858,1.947,859,1.947,877,1.947,889,1.538,890,1.947,901,1.642,902,1.947,906,1.451,908,1.538,909,1.538,928,1.947,944,1.947,957,1.451,958,1.947,959,1.947,962,1.377,966,1.377,969,1.255,1019,1.451,1020,3.349,1021,2.35,1022,1.947,1029,1.451,1030,1.947,1039,1.451,1052,1.947,1053,1.947,1083,1.642,1084,2.869,1085,3.349,1102,1.312,1103,1.451,1107,1.642,1108,2.869,1114,1.451,1115,1.377,1116,2.869,1117,2.869,1123,1.642,1125,1.451,1126,1.538,1127,1.451,1128,1.947,1129,1.947,1133,1.203,1148,1.451,1181,7.658,1245,1.947,1261,1.772,1285,1.947,1289,1.947,1290,1.947,1310,1.947,1330,1.947,1368,1.947,1374,1.451,1375,1.947,1397,1.538,1398,1.947,1416,1.947,1450,1.642,1451,1.947,1457,1.451,1470,1.947,1476,1.947,1507,1.947,1518,1.538,1523,1.947,1524,1.947,1525,1.947,1538,1.451,1542,1.772,1543,1.947,1561,1.642,1562,1.947,1591,1.772,1639,1.451,1649,1.947,1665,1.947,1669,1.947,1670,1.947,1682,1.947,1695,1.642,1696,1.947,1703,1.451,1718,1.947,1727,1.947,1735,1.772,1746,1.947,1750,1.947,1751,1.947,1770,1.451,1771,1.947,1772,1.947,1780,1.947,1782,1.947,1783,1.772,1788,1.642,1789,1.947,1795,1.538,1802,1.947,1822,1.947,1823,1.947,1868,1.451,1869,1.947,1870,1.947,1911,1.947,1928,1.947,1946,1.642,1947,1.947,1996,1.947,2036,1.772,2037,1.947,2038,2.211,2039,5.183,2040,6.679,2041,7.621,2042,6.093,2043,3.151,2044,1.947,2045,1.947,2046,1.947,2047,1.947,2048,4.51,2049,7.621,2050,4.51,2051,7.513,2052,1.947,2053,7.088,2054,6.093,2055,5.183,2056,1.947,2057,2.211,2058,2.211,2059,2.211,2060,2.211,2061,2.211,2062,2.211,2063,2.211,2064,2.211,2065,2.211,2066,2.211,2067,3.58,2068,3.58,2069,2.211,2070,2.211,2071,2.211,2072,2.211,2073,2.211]],["title/dependencies.html",[136,2.137,2074,3.163]],["body/dependencies.html",[26,0.01,55,0.693,56,2.854,57,3.723,58,4.211,64,0.153,109,0.008,110,0.008,136,2.333,174,1.712,181,3.945,267,2.072,286,1.584,387,2.751,467,4.545,485,3.945,577,3.945,1146,4.993,1216,4.211,1217,4.545,1608,4.993,1877,4.545,1882,4.993,1885,4.993,2075,5.672,2076,5.672,2077,5.672,2078,7.071,2079,5.672,2080,7.071,2081,5.672,2082,5.672,2083,5.672,2084,5.672,2085,5.672,2086,5.672,2087,5.672,2088,5.672,2089,5.672,2090,5.672,2091,5.672,2092,5.672,2093,5.672,2094,5.672,2095,5.672,2096,5.672,2097,5.672,2098,5.672,2099,5.672]],["title/miscellaneous/enumerations.html",[2100,2.358,2101,4.575]],["body/miscellaneous/enumerations.html",[12,0.43,26,0.01,35,1.696,109,0.008,110,0.008,119,3.065,378,4.423,393,6.315,468,4.055,758,3.361,759,5.972,1150,5.972,1154,4.587,2100,4.055,2101,5.438,2102,6.178,2103,8.309,2104,6.178,2105,6.178,2106,6.178,2107,6.178,2108,7.452,2109,7.452,2110,7.452]],["title/miscellaneous/functions.html",[2100,2.358,2111,4.575]],["body/miscellaneous/functions.html",[12,0.474,26,0.009,33,1.672,109,0.009,110,0.009,139,3.428,2056,5.991,2100,4.467,2111,5.991,2112,6.806,2113,6.806,2114,5.991]],["title/index.html",[12,0.25,1137,2.358,2115,3.593]],["body/index.html",[4,0.097,9,0.892,26,0.01,96,2.327,109,0.007,110,0.007,161,3.119,239,3.919,242,3.919,274,1.724,313,3.286,319,5.458,344,3.89,470,2.922,497,3.306,607,3.096,661,3.919,848,3.096,996,3.568,1041,4.768,1216,5.458,1224,3.919,1267,5.891,1621,3.568,2036,3.568,2037,3.919,2114,6.034,2116,4.452,2117,4.452,2118,6.855,2119,4.452,2120,4.452,2121,4.452,2122,4.452,2123,4.452,2124,4.452,2125,4.452,2126,7.351,2127,4.452,2128,8.104,2129,4.452,2130,8.104,2131,4.452,2132,6.04,2133,4.452,2134,4.452,2135,6.855,2136,4.452,2137,6.04,2138,4.452,2139,4.452,2140,4.452,2141,4.452,2142,4.452,2143,4.452,2144,4.452,2145,4.452,2146,6.04,2147,4.452,2148,6.855,2149,4.452,2150,4.452,2151,4.452,2152,4.452,2153,4.452,2154,4.452,2155,4.452,2156,6.855,2157,4.452,2158,4.452,2159,4.452,2160,6.04,2161,3.919,2162,4.452,2163,4.452,2164,4.452,2165,4.452,2166,4.452,2167,4.452,2168,4.452,2169,6.04,2170,4.452,2171,4.452,2172,4.452,2173,6.04,2174,4.452,2175,4.452,2176,4.452,2177,6.04,2178,6.04,2179,4.452,2180,4.452,2181,4.452,2182,4.452,2183,4.452,2184,4.452,2185,4.452,2186,4.452,2187,4.452,2188,3.919,2189,4.452,2190,4.452,2191,4.452,2192,4.452,2193,4.452,2194,4.452,2195,3.919]],["title/modules.html",[135,2.359]],["body/modules.html",[26,0.008,109,0.008,110,0.008,134,4.096,135,2.2,145,3.62,146,3.836,147,3.836,148,3.62,149,3.62,150,3.836,151,3.836,152,3.836,153,3.62,154,3.435,155,3.836,156,3.836,157,3.62,158,3.435,1267,7.188,1324,3.62,2161,4.855,2196,8.968,2197,8.968,2198,8.994,2199,5.516]],["title/overview.html",[2200,5.206]],["body/overview.html",[2,2.094,26,0.01,109,0.005,110,0.005,113,2.26,124,1.125,129,3.469,133,0.693,134,6.498,135,1.125,136,1.16,137,1.235,138,1.235,139,1.16,140,1.235,141,1.235,142,2.482,143,2.482,144,2.482,145,5.226,146,4.455,147,5.389,148,4.624,149,4.624,150,3.676,151,5.389,152,4.455,153,4.624,154,5.238,155,5.187,156,4.9,157,4.895,158,5.264,159,1.9,160,1.061,161,1.197,253,0.729,259,1.002,268,3.469,275,4.624,375,3.469,418,2.482,419,2.482,420,3.292,421,3.469,422,3.469,423,3.469,503,3.469,539,3.469,586,3.469,592,4.624,703,3.469,708,4.181,761,3.469,770,4.181,800,1.474,833,3.469,852,2.482,853,2.482,906,3.469,919,2.482,921,2.482,937,2.482,938,2.482,939,2.482,957,3.469,962,4.388,1019,3.469,1029,3.469,1039,3.469,1127,3.469,1133,3.832,1209,2.482,1210,2.482,1211,2.482,1324,4.624,1325,2.482,1326,2.482,1327,2.482,1421,1.961,1423,2.26,1457,3.469,1461,2.482,1463,2.482,1516,2.482,1517,2.482,1518,3.676,1535,2.482,1536,2.482,1537,2.482,1538,4.624,1635,2.482,1636,2.482,1638,2.482,1639,3.469,1703,3.469,1711,2.482,1713,2.482,1770,3.469,1792,2.482,1794,2.482,1795,3.676,1868,3.469,1904,2.482,1905,2.482,1906,2.482,1981,2.482,1983,2.482,1984,2.482,2200,2.482,2201,2.82,2202,2.82,2203,2.82,2204,2.82,2205,2.82]],["title/properties.html",[117,1.378,2074,3.163]],["body/properties.html",[9,1.364,26,0.01,109,0.009,110,0.009,117,1.805,2188,5.991,2195,5.991,2206,6.806,2207,6.806,2208,6.806]],["title/miscellaneous/variables.html",[2100,2.358,2209,4.575]],["body/miscellaneous/variables.html",[12,0.332,26,0.01,28,0.594,31,3.317,35,1.878,45,3.068,49,1.092,50,2.97,61,5.069,66,1.172,73,2.185,89,4.198,91,4.198,107,0.931,109,0.007,110,0.007,112,3.068,119,1.961,162,3.822,211,4.198,212,4.198,213,5.069,214,4.198,331,3.709,378,3.754,393,6.218,457,4.198,469,5.069,476,4.81,489,5.568,837,4.895,908,4.399,909,3.317,1261,5.069,1622,3.822,1733,5.568,1735,5.069,2043,4.198,2044,4.198,2045,5.568,2046,4.198,2047,4.198,2052,4.198,2100,3.13,2209,4.198,2210,4.769,2211,4.769,2212,6.325,2213,4.769,2214,4.769,2215,4.769,2216,4.769,2217,4.769,2218,6.325,2219,4.769,2220,4.769,2221,4.769,2222,4.769,2223,4.769,2224,4.769,2225,4.769,2226,7.097,2227,4.769,2228,4.769,2229,4.769,2230,4.769,2231,4.769]],["title/routes.html",[2232,5.206]],["body/routes.html",[26,0.009,109,0.009,110,0.009,2232,6.201]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["0",{"_index":627,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"classes/PaginationQueryDto.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"injectables/UpdateProductProvider.html":{},"coverage.html":{}}}],["0.0.1",{"_index":2207,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":2090,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":2096,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":2098,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":2089,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2053,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2059,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2061,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2039,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2051,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2054,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2055,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2064,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2069,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":695,"title":{},"body":{"classes/CreateReviewDto.html":{},"entities/Discount.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"controllers/ProductsController.html":{},"entities/Review.html":{},"controllers/UsersController.html":{}}}],["1.0.0",{"_index":791,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["1.1.26",{"_index":2076,"title":{},"body":{"dependencies.html":{}}}],["1.4.12",{"_index":2084,"title":{},"body":{"dependencies.html":{}}}],["1.8.4",{"_index":2086,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2041,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2058,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1421,"title":{},"body":{"entities/Payment.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"overview.html":{}}}],["10.0.0",{"_index":2078,"title":{},"body":{"dependencies.html":{}}}],["10.4.15",{"_index":2081,"title":{},"body":{"dependencies.html":{}}}],["10/11",{"_index":2071,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1181,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"coverage.html":{}}}],["1000",{"_index":1781,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["1000000",{"_index":1764,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["10})@apiquery({name",{"_index":1581,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["11.0.0",{"_index":2080,"title":{},"body":{"dependencies.html":{}}}],["11.0.6",{"_index":2082,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":2099,"title":{},"body":{"dependencies.html":{}}}],["12345",{"_index":1620,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["12345'})@apiheaders(['undefined",{"_index":1592,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["16",{"_index":2201,"title":{},"body":{"overview.html":{}}}],["17.13.3",{"_index":2092,"title":{},"body":{"dependencies.html":{}}}],["1})@apiheaders(['undefined",{"_index":1960,"title":{},"body":{"controllers/UsersController.html":{}}}],["1})@auth(authtype.none)@get",{"_index":1585,"title":{},"body":{"controllers/ProductsController.html":{}}}],["2",{"_index":1423,"title":{},"body":{"entities/Payment.html":{},"entities/Product.html":{},"overview.html":{}}}],["2.0.2",{"_index":2077,"title":{},"body":{"dependencies.html":{}}}],["2.1692.0",{"_index":2085,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":2048,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":2068,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":2063,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1938,"title":{},"body":{"entities/User.html":{}}}],["200",{"_index":341,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["204",{"_index":1953,"title":{},"body":{"controllers/UsersController.html":{}}}],["22",{"_index":2204,"title":{},"body":{"overview.html":{}}}],["2343",{"_index":1288,"title":{},"body":{"classes/OtpSigninDto.html":{}}}],["2343})@isint()@isnotempty",{"_index":1286,"title":{},"body":{"classes/OtpSigninDto.html":{}}}],["2354",{"_index":409,"title":{},"body":{"controllers/AuthController.html":{}}}],["25",{"_index":2057,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":2205,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":2049,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":2066,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":2072,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":2062,"title":{},"body":{"coverage.html":{}}}],["34",{"_index":2203,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":2079,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":2042,"title":{},"body":{"coverage.html":{}}}],["465",{"_index":1233,"title":{},"body":{"modules/MailModule.html":{}}}],["5",{"_index":698,"title":{},"body":{"classes/CreateReviewDto.html":{},"entities/Product.html":{},"entities/Review.html":{},"injectables/StoreOtpAndExpireProvider.html":{}}}],["5.1.1",{"_index":2088,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":2050,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1618,"title":{},"body":{"controllers/ProductsController.html":{}}}],["60",{"_index":1780,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{},"coverage.html":{}}}],["66",{"_index":2067,"title":{},"body":{"coverage.html":{}}}],["7.8.1",{"_index":2097,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":2065,"title":{},"body":{"coverage.html":{}}}],["8.13.3",{"_index":2094,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":2060,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":2202,"title":{},"body":{"overview.html":{}}}],["90",{"_index":2070,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":1785,"title":{},"body":{"entities/Subscriber.html":{},"entities/User.html":{}}}],["_",{"_index":101,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/ProductsController.html":{}}}],["acc",{"_index":1177,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["accept",{"_index":102,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["accepts",{"_index":1190,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["access",{"_index":10,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{}}}],["accesstoken",{"_index":394,"title":{},"body":{"controllers/AuthController.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{}}}],["accesstokenguard",{"_index":1,"title":{"guards/AccessTokenGuard.html":{}},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["accounttype",{"_index":756,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["active",{"_index":2223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activeuser",{"_index":908,"title":{},"body":{"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["activeuserdata",{"_index":112,"title":{"interfaces/ActiveUserData.html":{}},"body":{"interfaces/ActiveUserData.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ad",{"_index":1694,"title":{},"body":{"entities/Review.html":{}}}],["adapter",{"_index":1242,"title":{},"body":{"modules/MailModule.html":{}}}],["address",{"_index":743,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/InitiatePaymentProvider.html":{},"classes/SignInDto.html":{}}}],["admin",{"_index":759,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"miscellaneous/enumerations.html":{}}}],["admin'})@isenum(role)@isnotempty",{"_index":753,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["allow",{"_index":1741,"title":{},"body":{"guards/RolesGuard.html":{}}}],["already",{"_index":1759,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["amazing",{"_index":2183,"title":{},"body":{"index.html":{}}}],["amount",{"_index":1187,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{}}}],["amounts",{"_index":1191,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["api",{"_index":1584,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apibody",{"_index":383,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes",{"_index":1603,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiconsumes('multipart/form",{"_index":1567,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiheaders",{"_index":1604,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apioperation",{"_index":384,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":338,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apiparam",{"_index":1605,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":744,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/OtpSigninDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{}}}],["apiproperty({description",{"_index":740,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/OtpSigninDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{}}}],["apiquery",{"_index":1606,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apiresponse",{"_index":385,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apiresponse({status",{"_index":1576,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":386,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('auth",{"_index":389,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiversion",{"_index":790,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["app",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["app.controller",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":130,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["app_interceptor",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["appconfig",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":123,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":2160,"title":{},"body":{"index.html":{}}}],["applications",{"_index":2124,"title":{},"body":{"index.html":{}}}],["apply",{"_index":934,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["applyfordiscount",{"_index":272,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{}}}],["applyfordiscount(user",{"_index":278,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{}}}],["applyfordiscountdto",{"_index":258,"title":{"classes/ApplyForDiscountDto.html":{}},"body":{"classes/ApplyForDiscountDto.html":{},"controllers/DiscountsController.html":{},"coverage.html":{}}}],["applyfordiscountdto.code",{"_index":918,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["applyfordiscountprovider",{"_index":268,"title":{"injectables/ApplyForDiscountProvider.html":{}},"body":{"injectables/ApplyForDiscountProvider.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":134,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":129,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":487,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{}}}],["array.from",{"_index":1614,"title":{},"body":{"controllers/ProductsController.html":{}}}],["async",{"_index":14,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}}}],["asynchrousnously",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["audience",{"_index":1068,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["auth",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/DeliveryStatesController.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth(authtype.none",{"_index":404,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["auth(authtype.none)@get('/:state",{"_index":825,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["auth.controller",{"_index":426,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/config/jwt.config",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/access",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/authentication/authentication.guard",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/roles/roles.guard",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["auth_type_key",{"_index":469,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":328,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticating",{"_index":465,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authentication",{"_index":457,"title":{},"body":{"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["authenticationguard",{"_index":186,"title":{"guards/AuthenticationGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["authenticationguard.defaultauthtype",{"_index":493,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authmodule",{"_index":145,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2188,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":1138,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["authorizationurl",{"_index":1199,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{}}}],["authservice",{"_index":375,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authtype",{"_index":378,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"controllers/DeliveryStatesController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["authtype.bearer",{"_index":477,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtype.none",{"_index":482,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtypeguardmap",{"_index":458,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtypes",{"_index":489,"title":{},"body":{"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["authtypes.map((type",{"_index":495,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["autoloadentities",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":2199,"title":{},"body":{"modules.html":{}}}],["await",{"_index":86,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}}}],["aws",{"_index":1877,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"dependencies.html":{}}}],["aws.provider",{"_index":1910,"title":{},"body":{"modules/UploadsModule.html":{},"injectables/UploadsService.html":{}}}],["aws.provider.ts",{"_index":1870,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"coverage.html":{}}}],["aws.provider.ts:25",{"_index":1875,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["aws.provider.ts:49",{"_index":1879,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["aws.provider.ts:8",{"_index":1873,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["axios",{"_index":1146,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"dependencies.html":{}}}],["axios.post",{"_index":1184,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["back",{"_index":1271,"title":{},"body":{"injectables/MailService.html":{}}}],["backers",{"_index":2184,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":282,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('delivery",{"_index":875,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["badrequestexception('mime",{"_index":1923,"title":{},"body":{"injectables/UploadsService.html":{}}}],["badrequestexception('product",{"_index":1828,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["badrequestexception('the",{"_index":873,"title":{},"body":{"injectables/DeliveryStatesService.html":{},"injectables/FindOneByIdProvider.html":{}}}],["badrequestexception('user",{"_index":2034,"title":{},"body":{"injectables/UsersService.html":{}}}],["base",{"_index":1086,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["based",{"_index":105,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/DeliveryStatesService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/OtpSigninProvider.html":{},"controllers/ProductsController.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["baseurl",{"_index":1352,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["bcrypt",{"_index":2087,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":1154,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{}}}],["before",{"_index":795,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["beforeinsert",{"_index":809,"title":{},"body":{"entities/DeliveryState.html":{},"entities/Product.html":{}}}],["beforeupdate",{"_index":810,"title":{},"body":{"entities/DeliveryState.html":{},"entities/Product.html":{}}}],["best",{"_index":1277,"title":{},"body":{"injectables/MailService.html":{}}}],["between",{"_index":975,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"entities/Review.html":{}}}],["board",{"_index":2176,"title":{},"body":{"index.html":{}}}],["body",{"_index":368,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"injectables/UploadToAwsProvider.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":1392,"title":{},"body":{"classes/PatchProductVariantDto.html":{},"entities/ProductVariant.html":{},"guards/RolesGuard.html":{}}}],["boostrap",{"_index":2113,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/PaginationModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["brand",{"_index":554,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["browse",{"_index":2198,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2196,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":1887,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["building",{"_index":2119,"title":{},"body":{"index.html":{}}}],["buyer",{"_index":1156,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["buyer.city",{"_index":1162,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["buyer.email",{"_index":1186,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["buyer.firstname",{"_index":1165,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["buyer.id",{"_index":1195,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["buyer.lastname",{"_index":1166,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["buyer.state",{"_index":1163,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["buyer.streetaddress",{"_index":1161,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["callback_url",{"_index":1188,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["callhandler",{"_index":787,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["canactivate",{"_index":15,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":30,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["cascade",{"_index":1490,"title":{},"body":{"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{}}}],["cascade'})@joincolumn",{"_index":1514,"title":{},"body":{"entities/ProductImage.html":{},"entities/ProductVariant.html":{}}}],["catch",{"_index":100,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}}}],["category",{"_index":555,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["changeuserpasswordprovider",{"_index":2023,"title":{},"body":{"injectables/UsersService.html":{}}}],["channel",{"_index":2151,"title":{},"body":{"index.html":{}}}],["check",{"_index":319,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsUsageService.html":{},"entities/Review.html":{},"index.html":{}}}],["check('\"stars",{"_index":1693,"title":{},"body":{"entities/Review.html":{}}}],["checking",{"_index":34,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["checks",{"_index":297,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsService.html":{}}}],["checkwhereoptions",{"_index":1011,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["city",{"_index":1400,"title":{},"body":{"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["class",{"_index":64,"title":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/OtpSigninDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{},"classes/UpdateDeliveryStateDto.html":{}},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":259,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/OtpSigninDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{},"classes/UpdateDeliveryStateDto.html":{},"overview.html":{}}}],["clear",{"_index":1306,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/UsersService.html":{}}}],["clearing",{"_index":513,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/UsersService.html":{}}}],["clearotpandexpirytime",{"_index":507,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/UsersService.html":{}}}],["clearotpandexpirytime(user",{"_index":511,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/UsersService.html":{}}}],["clearotpandexpirytimeprovider",{"_index":503,"title":{"injectables/ClearOtpAndExpiryTimeProvider.html":{}},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["clothtype",{"_index":556,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["cluster_appmodule",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":418,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":419,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_deliverystatesmodule",{"_index":852,"title":{},"body":{"modules/DeliveryStatesModule.html":{},"overview.html":{}}}],["cluster_deliverystatesmodule_providers",{"_index":853,"title":{},"body":{"modules/DeliveryStatesModule.html":{},"overview.html":{}}}],["cluster_discountsmodule",{"_index":919,"title":{},"body":{"modules/DiscountsModule.html":{},"overview.html":{}}}],["cluster_discountsmodule_imports",{"_index":920,"title":{},"body":{"modules/DiscountsModule.html":{}}}],["cluster_discountsmodule_providers",{"_index":921,"title":{},"body":{"modules/DiscountsModule.html":{},"overview.html":{}}}],["cluster_discountsusagemodule",{"_index":937,"title":{},"body":{"modules/DiscountsUsageModule.html":{},"overview.html":{}}}],["cluster_discountsusagemodule_exports",{"_index":938,"title":{},"body":{"modules/DiscountsUsageModule.html":{},"overview.html":{}}}],["cluster_discountsusagemodule_providers",{"_index":939,"title":{},"body":{"modules/DiscountsUsageModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":1209,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":1210,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":1211,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_paginationmodule",{"_index":1325,"title":{},"body":{"modules/PaginationModule.html":{},"overview.html":{}}}],["cluster_paginationmodule_exports",{"_index":1327,"title":{},"body":{"modules/PaginationModule.html":{},"overview.html":{}}}],["cluster_paginationmodule_providers",{"_index":1326,"title":{},"body":{"modules/PaginationModule.html":{},"overview.html":{}}}],["cluster_paystackmodule",{"_index":1461,"title":{},"body":{"modules/PaystackModule.html":{},"overview.html":{}}}],["cluster_paystackmodule_imports",{"_index":1462,"title":{},"body":{"modules/PaystackModule.html":{}}}],["cluster_paystackmodule_providers",{"_index":1463,"title":{},"body":{"modules/PaystackModule.html":{},"overview.html":{}}}],["cluster_productimagesmodule",{"_index":1516,"title":{},"body":{"modules/ProductImagesModule.html":{},"overview.html":{}}}],["cluster_productimagesmodule_providers",{"_index":1517,"title":{},"body":{"modules/ProductImagesModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":1635,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_exports",{"_index":1638,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_imports",{"_index":1637,"title":{},"body":{"modules/ProductsModule.html":{}}}],["cluster_productsmodule_providers",{"_index":1636,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productvariantsmodule",{"_index":1535,"title":{},"body":{"modules/ProductVariantsModule.html":{},"overview.html":{}}}],["cluster_productvariantsmodule_exports",{"_index":1537,"title":{},"body":{"modules/ProductVariantsModule.html":{},"overview.html":{}}}],["cluster_productvariantsmodule_providers",{"_index":1536,"title":{},"body":{"modules/ProductVariantsModule.html":{},"overview.html":{}}}],["cluster_reviewsmodule",{"_index":1711,"title":{},"body":{"modules/ReviewsModule.html":{},"overview.html":{}}}],["cluster_reviewsmodule_imports",{"_index":1712,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["cluster_reviewsmodule_providers",{"_index":1713,"title":{},"body":{"modules/ReviewsModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule",{"_index":1792,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule_imports",{"_index":1793,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["cluster_subscribersmodule_providers",{"_index":1794,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_uploadsmodule",{"_index":1904,"title":{},"body":{"modules/UploadsModule.html":{},"overview.html":{}}}],["cluster_uploadsmodule_exports",{"_index":1905,"title":{},"body":{"modules/UploadsModule.html":{},"overview.html":{}}}],["cluster_uploadsmodule_providers",{"_index":1906,"title":{},"body":{"modules/UploadsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1981,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1983,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":1982,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":1984,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":262,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"classes/CreateDiscountDto.html":{},"entities/Discount.html":{},"injectables/DiscountsService.html":{}}}],["color",{"_index":672,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"injectables/FindAllProductsProvider.html":{},"entities/ProductVariant.html":{}}}],["colors",{"_index":1088,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["column",{"_index":804,"title":{},"body":{"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{}}}],["column('decimal",{"_index":1419,"title":{},"body":{"entities/Payment.html":{},"entities/Product.html":{}}}],["column('int",{"_index":1508,"title":{},"body":{"entities/ProductImage.html":{},"entities/ProductVariant.html":{}}}],["column('text",{"_index":1687,"title":{},"body":{"entities/Review.html":{}}}],["column({default",{"_index":882,"title":{},"body":{"entities/Discount.html":{},"entities/ProductVariant.html":{}}}],["column({nullable",{"_index":1425,"title":{},"body":{"entities/Payment.html":{},"entities/User.html":{}}}],["column({type",{"_index":884,"title":{},"body":{"entities/Discount.html":{},"entities/Payment.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{}}}],["column({unique",{"_index":1430,"title":{},"body":{"entities/Payment.html":{}}}],["come",{"_index":2143,"title":{},"body":{"index.html":{}}}],["commit",{"_index":654,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["committed",{"_index":657,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["common/interceptors/data",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["complete",{"_index":664,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["compodoc/compodoc",{"_index":2075,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":985,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["conditions.variants",{"_index":1005,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["conditions.variants.color",{"_index":1003,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["conditions.variants.size",{"_index":1004,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["config",{"_index":69,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["config.get('appconfig.mailhost",{"_index":1228,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('appconfig.smtppassword",{"_index":1230,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('appconfig.smtpusername",{"_index":1229,"title":{},"body":{"modules/MailModule.html":{}}}],["config/app.config",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["config/database.config",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["config/enviroment.validation",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["config/jwt.config",{"_index":432,"title":{},"body":{"modules/AuthModule.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["config/paths.config",{"_index":1262,"title":{},"body":{"injectables/MailService.html":{}}}],["config/paystack.config",{"_index":1145,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"modules/PaystackModule.html":{}}}],["configmodule",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PaystackModule.html":{}}}],["configmodule.forfeature(jwtconfig",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forfeature(paystackconfig",{"_index":1469,"title":{},"body":{"modules/PaystackModule.html":{}}}],["configmodule.forroot",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["configservice.get('database.autoloadentities",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.host",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.name",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.password",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.port",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.synchronize",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.user",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["configtype",{"_index":22,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["configure",{"_index":1225,"title":{},"body":{"modules/MailModule.html":{}}}],["conflictexception",{"_index":598,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/UploadsService.html":{}}}],["conflictexception('could",{"_index":663,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["conflictexception(error",{"_index":1208,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/UploadsService.html":{}}}],["connect",{"_index":613,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["connecting",{"_index":315,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["connection",{"_index":668,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["console.log",{"_index":1227,"title":{},"body":{"modules/MailModule.html":{}}}],["console.log('before",{"_index":794,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["console.log('re",{"_index":416,"title":{},"body":{"controllers/AuthController.html":{}}}],["console.log(error",{"_index":309,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SignInProvider.html":{}}}],["console.log(newurl",{"_index":1357,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["console.log(totalamount",{"_index":1182,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["console.log(usagecount",{"_index":325,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["const",{"_index":73,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"injectables/ApplyForDiscountProvider.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constant",{"_index":2226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(configservice",{"_index":784,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"injectables/UploadToAwsProvider.html":{}}}],["constructor(creatediscountprovider",{"_index":929,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["constructor(createproductprovider",{"_index":1651,"title":{},"body":{"injectables/ProductsService.html":{}}}],["constructor(createreviewprovider",{"_index":1720,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["constructor(createuserprovider",{"_index":2001,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(datasource",{"_index":590,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["constructor(deliverystaterepository",{"_index":861,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["constructor(discountsrepository",{"_index":273,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{}}}],["constructor(discountsusagerepository",{"_index":946,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["constructor(initiatepaymentprovider",{"_index":1471,"title":{},"body":{"injectables/PaystackService.html":{}}}],["constructor(jwtservice",{"_index":19,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["constructor(mailerservice",{"_index":1249,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(paystackconfiguration",{"_index":1132,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["constructor(private",{"_index":131,"title":{},"body":{"controllers/AppController.html":{},"guards/RolesGuard.html":{}}}],["constructor(productrepository",{"_index":961,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/UpdateProductProvider.html":{}}}],["constructor(productvariantrepository",{"_index":1546,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["constructor(reflector",{"_index":461,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["constructor(request",{"_index":1332,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["constructor(reviewsrepository",{"_index":707,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["constructor(signinprovider",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(subscriberrepository",{"_index":1805,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["constructor(uploadtoawsprovider",{"_index":1913,"title":{},"body":{"injectables/UploadsService.html":{}}}],["constructor(usersrepository",{"_index":508,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{}}}],["constructor(usersservice",{"_index":1292,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{}}}],["containing",{"_index":1065,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["contains",{"_index":84,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{}}}],["contenttype",{"_index":1891,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["context",{"_index":36,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{}}}],["context.getclass",{"_index":492,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":491,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":74,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/RolesGuard.html":{}}}],["controller",{"_index":122,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":390,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('delivery",{"_index":841,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["controller('discounts",{"_index":912,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["controller('paystack",{"_index":1459,"title":{},"body":{"controllers/PaystackController.html":{}}}],["controller('products",{"_index":1611,"title":{},"body":{"controllers/ProductsController.html":{}}}],["controller('reviews",{"_index":1705,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["controller('subscribers",{"_index":1791,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["controller('users",{"_index":1971,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":124,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["count",{"_index":320,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsUsageService.html":{}}}],["countdiscountusage",{"_index":945,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["countdiscountusage(discountid",{"_index":949,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["country",{"_index":1401,"title":{},"body":{"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["courses",{"_index":2158,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":2036,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":494,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DiscountsService.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UsersService.html":{}}}],["created",{"_index":357,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DiscountsService.html":{},"injectables/ProductsService.html":{}}}],["createdat",{"_index":1417,"title":{},"body":{"entities/Payment.html":{},"entities/Product.html":{}}}],["createdatecolumn",{"_index":802,"title":{},"body":{"entities/DeliveryState.html":{},"entities/DiscountUsage.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/Review.html":{}}}],["createdeliverystate",{"_index":818,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{}}}],["createdeliverystate(createdeliverystatedto",{"_index":821,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{}}}],["createdeliverystatedto",{"_index":521,"title":{"classes/CreateDeliveryStateDto.html":{}},"body":{"classes/CreateDeliveryStateDto.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"classes/UpdateDeliveryStateDto.html":{},"coverage.html":{}}}],["creatediscount",{"_index":541,"title":{},"body":{"injectables/CreateDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{}}}],["creatediscount(@body",{"_index":913,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["creatediscount(creatediscountdto",{"_index":543,"title":{},"body":{"injectables/CreateDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{}}}],["creatediscountdto",{"_index":532,"title":{"classes/CreateDiscountDto.html":{}},"body":{"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"coverage.html":{}}}],["creatediscountprovider",{"_index":539,"title":{"injectables/CreateDiscountProvider.html":{}},"body":{"injectables/CreateDiscountProvider.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"coverage.html":{},"overview.html":{}}}],["createhash('sha256",{"_index":1301,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{}}}],["createparamdecorator",{"_index":2217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproduct",{"_index":589,"title":{},"body":{"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createproduct(createproductdto",{"_index":594,"title":{},"body":{"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createproductdto",{"_index":552,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["createproductdto.variants",{"_index":632,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["createproductprovider",{"_index":586,"title":{"injectables/CreateProductProvider.html":{}},"body":{"injectables/CreateProductProvider.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["createproductvariantdto",{"_index":580,"title":{"classes/CreateProductVariantDto.html":{}},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/PatchProductVariantDto.html":{},"coverage.html":{}}}],["createreview",{"_index":706,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["createreview(@body",{"_index":1706,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["createreview(createreviewdto",{"_index":711,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["createreviewdto",{"_index":684,"title":{"classes/CreateReviewDto.html":{}},"body":{"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"coverage.html":{}}}],["createreviewdto.productid",{"_index":721,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["createreviewdto.review",{"_index":725,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["createreviewdto.reviewer",{"_index":724,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["createreviewdto.stars",{"_index":726,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["createreviewprovider",{"_index":703,"title":{"injectables/CreateReviewProvider.html":{}},"body":{"injectables/CreateReviewProvider.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"coverage.html":{},"overview.html":{}}}],["creates",{"_index":353,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["createsubscriber",{"_index":1803,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["createsubscriber(createsubscriberdto",{"_index":1808,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["createsubscriberdto",{"_index":735,"title":{"classes/CreateSubscriberDto.html":{}},"body":{"classes/CreateSubscriberDto.html":{},"injectables/SubscribersService.html":{},"coverage.html":{}}}],["createuser",{"_index":764,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"injectables/UsersService.html":{}}}],["createuser(createuserdto",{"_index":766,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"injectables/UsersService.html":{}}}],["createuserdto",{"_index":749,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"classes/PatchUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserprovider",{"_index":2005,"title":{},"body":{"injectables/UsersService.html":{}}}],["createusersprovider",{"_index":761,"title":{"injectables/CreateUsersProvider.html":{}},"body":{"injectables/CreateUsersProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["creating",{"_index":738,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/UsersService.html":{}}}],["creatng",{"_index":1810,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["crypto",{"_index":1297,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{}}}],["ctx",{"_index":2220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":2221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cur",{"_index":1176,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["current",{"_index":1322,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["currentpage",{"_index":1318,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["custom",{"_index":1622,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":780,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"controllers/ProductsController.html":{}}}],["data')@useinterceptors(undefined)@roles(role.admin)@post",{"_index":1568,"title":{},"body":{"controllers/ProductsController.html":{}}}],["data.interface",{"_index":289,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/UsersController.html":{}}}],["data.interface.ts",{"_index":115,"title":{},"body":{"interfaces/ActiveUserData.html":{},"coverage.html":{}}}],["database",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"entities/Subscriber.html":{},"injectables/UpdateProductProvider.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["databaseconfig",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["dataresponseinterceptor",{"_index":182,"title":{"injectables/DataResponseInterceptor.html":{}},"body":{"modules/AppModule.html":{},"injectables/DataResponseInterceptor.html":{},"coverage.html":{}}}],["datasource",{"_index":591,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["date",{"_index":305,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"classes/CreateDiscountDto.html":{},"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/Review.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["date().gettime().tostring().trim",{"_index":1902,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["date(date.now",{"_index":1779,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["datecreated",{"_index":732,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"entities/DeliveryState.html":{},"entities/Review.html":{}}}],["db",{"_index":550,"title":{},"body":{"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["declarations",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/PaginationModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decoraror",{"_index":2228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorator",{"_index":1733,"title":{},"body":{"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["decorator/auth.decorator",{"_index":377,"title":{},"body":{"controllers/AuthController.html":{}}}],["decorators",{"_index":127,"title":{},"body":{"controllers/AppController.html":{},"classes/ApplyForDiscountDto.html":{},"controllers/AuthController.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/OtpSigninDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaystackController.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"classes/RefreshTokenDto.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"classes/SignInDto.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["deeper",{"_index":2153,"title":{},"body":{"index.html":{}}}],["default",{"_index":476,"title":{},"body":{"guards/AuthenticationGuard.html":{},"entities/Discount.html":{},"modules/MailModule.html":{},"classes/PaginationQueryDto.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"miscellaneous/variables.html":{}}}],["defaultauthtype",{"_index":460,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["defaultroletype",{"_index":1737,"title":{},"body":{"guards/RolesGuard.html":{}}}],["defined",{"_index":23,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":1600,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{}}}],["delete('/:productid",{"_index":1632,"title":{},"body":{"controllers/ProductsController.html":{}}}],["delete('/:productid')@roles(role.admin)@httpcode(httpstatus.no_content",{"_index":1571,"title":{},"body":{"controllers/ProductsController.html":{}}}],["delete('/:reviewid",{"_index":1708,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["delete('/:reviewid')@roles(role.admin)@httpcode(httpstatus.no_content",{"_index":1700,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["delete('/:userid",{"_index":1978,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleted",{"_index":1574,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleted'})@apiparam({name",{"_index":1954,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteproduct",{"_index":1563,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{}}}],["deleteproduct(productid",{"_index":1570,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["deleteproduct(reviewid",{"_index":1699,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["deletereview",{"_index":1719,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["deletereview(reviewid",{"_index":1723,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["deletes",{"_index":1631,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/UsersController.html":{}}}],["deleteuser",{"_index":1948,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteuser(@param('userid",{"_index":1979,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser(userid",{"_index":1952,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleting",{"_index":1957,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deletion",{"_index":2009,"title":{},"body":{"injectables/UsersService.html":{}}}],["delivery",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateDeliveryStateDto.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"injectables/InitiatePaymentProvider.html":{},"classes/UpdateDeliveryStateDto.html":{},"coverage.html":{}}}],["deliveryaddress",{"_index":1118,"title":{},"body":{"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"classes/ProductWithVariantDto.html":{}}}],["deliverypicker",{"_index":1119,"title":{},"body":{"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"classes/ProductWithVariantDto.html":{}}}],["deliverystate",{"_index":799,"title":{"entities/DeliveryState.html":{}},"body":{"entities/DeliveryState.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"coverage.html":{}}}],["deliverystaterepository",{"_index":863,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["deliverystatescontroller",{"_index":815,"title":{"controllers/DeliveryStatesController.html":{}},"body":{"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"coverage.html":{}}}],["deliverystatesmodule",{"_index":146,"title":{"modules/DeliveryStatesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DeliveryStatesModule.html":{},"modules.html":{},"overview.html":{}}}],["deliverystatesservice",{"_index":833,"title":{"injectables/DeliveryStatesService.html":{}},"body":{"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"coverage.html":{},"overview.html":{}}}],["deny",{"_index":103,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["dependencies",{"_index":136,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/PaginationModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":41,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/RolesGuard.html":{}}}],["description",{"_index":9,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"entities/Payment.html":{},"controllers/ProductsController.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{},"properties.html":{}}}],["details",{"_index":1158,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["development",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["devtools",{"_index":2164,"title":{},"body":{"index.html":{}}}],["diff",{"_index":484,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["digest('hex",{"_index":1303,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{}}}],["dir",{"_index":1239,"title":{},"body":{"modules/MailModule.html":{}}}],["directly",{"_index":1866,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["disable",{"_index":93,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["discord",{"_index":2150,"title":{},"body":{"index.html":{}}}],["discount",{"_index":281,"title":{"entities/Discount.html":{}},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{},"classes/ProductWithVariantDto.html":{},"coverage.html":{}}}],["discount.dto",{"_index":547,"title":{},"body":{"injectables/CreateDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{}}}],["discount.dto.ts",{"_index":261,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDiscountDto.html":{},"coverage.html":{}}}],["discount.dto.ts:10",{"_index":535,"title":{},"body":{"classes/CreateDiscountDto.html":{}}}],["discount.dto.ts:14",{"_index":537,"title":{},"body":{"classes/CreateDiscountDto.html":{}}}],["discount.dto.ts:6",{"_index":264,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDiscountDto.html":{}}}],["discount.id",{"_index":323,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["discount.provider",{"_index":925,"title":{},"body":{"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{}}}],["discount.provider.ts",{"_index":270,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"coverage.html":{}}}],["discount.provider.ts:13",{"_index":276,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["discount.provider.ts:22",{"_index":544,"title":{},"body":{"injectables/CreateDiscountProvider.html":{}}}],["discount.provider.ts:33",{"_index":279,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["discount.provider.ts:8",{"_index":542,"title":{},"body":{"injectables/CreateDiscountProvider.html":{}}}],["discount.usagelimit",{"_index":326,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["discountid",{"_index":952,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["discounts",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{}}}],["discounts.controller",{"_index":923,"title":{},"body":{"modules/DiscountsModule.html":{}}}],["discounts.entity",{"_index":287,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{}}}],["discounts/discounts.module",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["discountscontroller",{"_index":901,"title":{"controllers/DiscountsController.html":{}},"body":{"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"coverage.html":{}}}],["discountsmodule",{"_index":147,"title":{"modules/DiscountsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DiscountsModule.html":{},"modules.html":{},"overview.html":{}}}],["discountsrepository",{"_index":277,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{}}}],["discountsservice",{"_index":906,"title":{"injectables/DiscountsService.html":{}},"body":{"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"coverage.html":{},"overview.html":{}}}],["discountsusagemodule",{"_index":148,"title":{"modules/DiscountsUsageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules.html":{},"overview.html":{}}}],["discountsusagerepository",{"_index":948,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["discountsusageservice",{"_index":275,"title":{"injectables/DiscountsUsageService.html":{}},"body":{"injectables/ApplyForDiscountProvider.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"coverage.html":{},"overview.html":{}}}],["discountusage",{"_index":889,"title":{"entities/DiscountUsage.html":{}},"body":{"entities/DiscountUsage.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"coverage.html":{}}}],["displayorder",{"_index":648,"title":{},"body":{"injectables/CreateProductProvider.html":{},"entities/ProductImage.html":{}}}],["dive",{"_index":2152,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":2037,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dressing",{"_index":1096,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["dressstyle",{"_index":557,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["dto",{"_index":634,"title":{},"body":{"injectables/CreateProductProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/OtpSigninDto.html":{},"classes/PaginationQueryDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{}}}],["dtos/apply",{"_index":911,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["dtos/create",{"_index":546,"title":{},"body":{"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["dtos/createproductdto",{"_index":600,"title":{},"body":{"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["dtos/get",{"_index":972,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/initiate",{"_index":1142,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{}}}],["dtos/otpsignin.dto",{"_index":388,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/OtpSigninProvider.html":{}}}],["dtos/pagination",{"_index":1337,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["dtos/patch",{"_index":1610,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/refresh",{"_index":381,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RefreshTokenProvider.html":{}}}],["dtos/sign",{"_index":373,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SignInProvider.html":{}}}],["dtos/update",{"_index":840,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{}}}],["dynamically",{"_index":1612,"title":{},"body":{"controllers/ProductsController.html":{}}}],["e2e",{"_index":2138,"title":{},"body":{"index.html":{}}}],["each",{"_index":585,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["eager",{"_index":1491,"title":{},"body":{"entities/Product.html":{},"entities/ProductVariant.html":{}}}],["efficient",{"_index":2120,"title":{},"body":{"index.html":{}}}],["ejsadapter",{"_index":1219,"title":{},"body":{"modules/MailModule.html":{}}}],["email",{"_index":118,"title":{},"body":{"interfaces/ActiveUserData.html":{},"controllers/AuthController.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["email.provider",{"_index":1989,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["email.provider.ts",{"_index":1030,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"coverage.html":{}}}],["email.provider.ts:14",{"_index":1032,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{}}}],["email.provider.ts:32",{"_index":1034,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{}}}],["end",{"_index":1112,"title":{},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["enddate",{"_index":1109,"title":{},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["ensures",{"_index":655,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["enterprise",{"_index":2168,"title":{},"body":{"index.html":{}}}],["entities",{"_index":800,"title":{},"body":{"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"overview.html":{}}}],["entity",{"_index":633,"title":{"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{}},"body":{"injectables/CreateProductProvider.html":{},"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"coverage.html":{}}}],["entries",{"_index":1579,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["enum",{"_index":1432,"title":{},"body":{"entities/Payment.html":{},"entities/User.html":{}}}],["enumerations",{"_index":2101,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/account",{"_index":757,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["enums/auth",{"_index":379,"title":{},"body":{"controllers/AuthController.html":{}}}],["enums/paymentstatus.enum",{"_index":1444,"title":{},"body":{"entities/Payment.html":{}}}],["enums/role",{"_index":1749,"title":{},"body":{"classes/SignInDto.html":{}}}],["env",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["env.${env",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["enviroment",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["enviromentvalidation",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":502,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DeliveryStatesService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["error",{"_index":308,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}}}],["eslint",{"_index":92,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["eslint/no",{"_index":97,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["event",{"_index":1596,"title":{},"body":{"controllers/ProductsController.html":{},"entities/User.html":{}}}],["event.owner",{"_index":1945,"title":{},"body":{"entities/User.html":{}}}],["eventid",{"_index":1590,"title":{},"body":{"controllers/ProductsController.html":{}}}],["events",{"_index":1105,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"entities/User.html":{}}}],["example",{"_index":344,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/OtpSigninDto.html":{},"controllers/ProductsController.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["example1",{"_index":397,"title":{},"body":{"controllers/AuthController.html":{}}}],["example2",{"_index":400,"title":{},"body":{"controllers/AuthController.html":{}}}],["examples",{"_index":348,"title":{},"body":{"controllers/AuthController.html":{}}}],["exceed",{"_index":697,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["exception",{"_index":1757,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["excetion",{"_index":72,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["execution",{"_index":486,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{}}}],["executioncontext",{"_index":31,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":317,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/SignInProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["experience",{"_index":2155,"title":{},"body":{"index.html":{}}}],["expire.provider",{"_index":1991,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["expire.provider.ts",{"_index":1772,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{},"coverage.html":{}}}],["expire.provider.ts:10",{"_index":1775,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["expire.provider.ts:29",{"_index":1777,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["expired",{"_index":318,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["expires",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["expiresin",{"_index":1061,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["expiry",{"_index":505,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["export",{"_index":63,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/PaginationModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":58,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/PaginationProvider.html":{},"controllers/ProductsController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":606,"title":{},"body":{"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["extends",{"_index":1106,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/UpdateDeliveryStateDto.html":{}}}],["extension",{"_index":1899,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["extract",{"_index":75,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/UploadToAwsProvider.html":{}}}],["extracting",{"_index":47,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["extractrequestfromheader",{"_index":17,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["extractrequestfromheader(request",{"_index":44,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["failed",{"_index":2110,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["false",{"_index":40,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"modules/MailModule.html":{},"entities/Payment.html":{},"entities/ProductVariant.html":{},"controllers/ProductsController.html":{},"guards/RolesGuard.html":{},"entities/Subscriber.html":{},"injectables/UpdateProductProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["fashion",{"_index":1237,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["favour@gmail.com",{"_index":747,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["favour@gmail.com'})@isemail()@maxlength(96)@isnotempty",{"_index":741,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["fee",{"_index":525,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"entities/DeliveryState.html":{}}}],["fetch",{"_index":1037,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["fetched",{"_index":1577,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["few",{"_index":2141,"title":{},"body":{"index.html":{}}}],["field",{"_index":2218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fields",{"_index":1613,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/UpdateProductProvider.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["file.buffer",{"_index":1889,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["file.mimetype",{"_index":1892,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["file.originalname.split('.')[0",{"_index":1894,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["filearray",{"_index":623,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["filefieldsinterceptor",{"_index":1607,"title":{},"body":{"controllers/ProductsController.html":{}}}],["filename",{"_index":1880,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["files",{"_index":626,"title":{},"body":{"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["fileupload",{"_index":1871,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["fileupload(file",{"_index":1874,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["filteredconditions",{"_index":1006,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["filtering",{"_index":980,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["finally",{"_index":666,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["finalresponse",{"_index":1362,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["find",{"_index":719,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductsService.html":{},"injectables/SignInProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["findall",{"_index":960,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["findall(productquery",{"_index":965,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/ProductsService.html":{}}}],["findall(userquery",{"_index":2010,"title":{},"body":{"injectables/UsersService.html":{}}}],["findallproducts",{"_index":1564,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findallproducts(@query",{"_index":1626,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findallproducts(productquery",{"_index":1575,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findallproductsprovider",{"_index":957,"title":{"injectables/FindAllProductsProvider.html":{}},"body":{"injectables/FindAllProductsProvider.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["findallusers",{"_index":1949,"title":{},"body":{"controllers/UsersController.html":{}}}],["findallusers(@query",{"_index":1975,"title":{},"body":{"controllers/UsersController.html":{}}}],["findallusers(usersquery",{"_index":1959,"title":{},"body":{"controllers/UsersController.html":{}}}],["findbyid",{"_index":1024,"title":{},"body":{"injectables/FindOneByIdProvider.html":{}}}],["findbyid(id",{"_index":1026,"title":{},"body":{"injectables/FindOneByIdProvider.html":{}}}],["finddeliverystatebyname",{"_index":860,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["finddeliverystatebyname(state",{"_index":865,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["finddeliverystatebystate",{"_index":819,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["finddeliverystatebystate(@param('state",{"_index":846,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["finddeliverystatebystate(state",{"_index":824,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["finding",{"_index":1023,"title":{},"body":{"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["findonebyemail",{"_index":1031,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"injectables/UsersService.html":{}}}],["findonebyemail(email",{"_index":1033,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"injectables/UsersService.html":{}}}],["findonebyid",{"_index":1997,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyid(id",{"_index":2014,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyidprovider",{"_index":1019,"title":{"injectables/FindOneByIdProvider.html":{}},"body":{"injectables/FindOneByIdProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["findoneuserbyemailprovider",{"_index":1029,"title":{"injectables/FindOneUserByEmailProvider.html":{}},"body":{"injectables/FindOneUserByEmailProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["findproductbyid",{"_index":1565,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findproductbyid(@param('productid",{"_index":1624,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findproductbyid(productid",{"_index":1587,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findproductvariantbyid",{"_index":1544,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["findproductvariantbyid(variantid",{"_index":1549,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["finds",{"_index":844,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["finduser",{"_index":1950,"title":{},"body":{"controllers/UsersController.html":{}}}],["finduser(@param('userid",{"_index":1973,"title":{},"body":{"controllers/UsersController.html":{}}}],["finduser(userid",{"_index":1964,"title":{},"body":{"controllers/UsersController.html":{}}}],["finduserbyotpandexpiresprovider",{"_index":2003,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyotpandexpirytime",{"_index":1042,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["finduserbyotpandexpirytime(otp",{"_index":1044,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["finduserbyotpandexpirytimeprovider",{"_index":1039,"title":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["finduserbyresetotpandexpiresprovider",{"_index":2022,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyresetotpandexpirytime",{"_index":1998,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyresetotpandexpirytime(otp",{"_index":2016,"title":{},"body":{"injectables/UsersService.html":{}}}],["fire",{"_index":499,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["first",{"_index":1320,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["firstname",{"_index":1402,"title":{},"body":{"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["flat",{"_index":650,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["follow",{"_index":2170,"title":{},"body":{"index.html":{}}}],["forbiddenexception",{"_index":1734,"title":{},"body":{"guards/RolesGuard.html":{}}}],["forbiddenexception('user",{"_index":1742,"title":{},"body":{"guards/RolesGuard.html":{}}}],["forgotpasswordprovider",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["format",{"_index":792,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["formatting",{"_index":789,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["forwardref",{"_index":425,"title":{},"body":{"modules/AuthModule.html":{},"injectables/CreateUsersProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{},"modules/UsersModule.html":{}}}],["fot",{"_index":1087,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["found",{"_index":1555,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"guards/RolesGuard.html":{}}}],["framework",{"_index":2118,"title":{},"body":{"index.html":{}}}],["full",{"_index":2167,"title":{},"body":{"index.html":{}}}],["fullname",{"_index":1275,"title":{},"body":{"injectables/MailService.html":{}}}],["function",{"_index":33,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":2111,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gaurding",{"_index":2229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generate",{"_index":1075,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"controllers/ProductsController.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{},"injectables/UploadToAwsProvider.html":{}}}],["generated",{"_index":1925,"title":{},"body":{"injectables/UploadsService.html":{}}}],["generatefilename",{"_index":1872,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["generatefilename(file",{"_index":1878,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["generatetoken",{"_index":1298,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["generatetokenprovider",{"_index":1293,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["generatetokens",{"_index":1055,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["generatetokens(user",{"_index":1058,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["generatetokensprovider",{"_index":420,"title":{"injectables/GenerateTokensProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{},"coverage.html":{},"overview.html":{}}}],["generating",{"_index":1054,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/UploadToAwsProvider.html":{}}}],["get('/:productid",{"_index":1623,"title":{},"body":{"controllers/ProductsController.html":{}}}],["get('/:state",{"_index":845,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["get('/:userid",{"_index":1972,"title":{},"body":{"controllers/UsersController.html":{}}}],["getauthheader",{"_index":1130,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["gethello",{"_index":126,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getproductsbasedto",{"_index":1083,"title":{"classes/GetProductsBaseDto.html":{}},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"coverage.html":{}}}],["getproductsdto",{"_index":966,"title":{"classes/GetProductsDto.html":{}},"body":{"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["gets",{"_index":954,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["getting",{"_index":1137,"title":{"index.html":{}},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getusersbasedto",{"_index":1107,"title":{"classes/GetUsersBaseDto.html":{}},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"coverage.html":{}}}],["getusersdto",{"_index":1114,"title":{"classes/GetUsersDto.html":{}},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["global",{"_index":1213,"title":{},"body":{"modules/MailModule.html":{}}}],["gotten",{"_index":1679,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["grab",{"_index":71,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["graph",{"_index":2161,"title":{},"body":{"index.html":{},"modules.html":{}}}],["grow",{"_index":2180,"title":{},"body":{"index.html":{}}}],["guard",{"_index":0,"title":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["guarding",{"_index":2225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["handle",{"_index":316,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{}}}],["hands",{"_index":2154,"title":{},"body":{"index.html":{}}}],["handy",{"_index":2144,"title":{},"body":{"index.html":{}}}],["hased",{"_index":1304,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["hash",{"_index":1299,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["hashedotp",{"_index":1300,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{}}}],["hashingprovider",{"_index":769,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"injectables/SignInProvider.html":{}}}],["hasrole",{"_index":1743,"title":{},"body":{"guards/RolesGuard.html":{}}}],["hdfbwojefbnqpkfbjoqfehfewfeqwf234jr",{"_index":1668,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["hdfbwojefbnqpkfbjoqfehfewfeqwf234jr'})@isnotempty()@isstring",{"_index":1666,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["header",{"_index":76,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/InitiatePaymentProvider.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["headers",{"_index":48,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["hello",{"_index":256,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":2165,"title":{},"body":{"index.html":{}}}],["here",{"_index":661,"title":{},"body":{"injectables/CreateProductProvider.html":{},"index.html":{}}}],["hive",{"_index":1266,"title":{},"body":{"injectables/MailService.html":{}}}],["hive's",{"_index":1282,"title":{},"body":{"injectables/MailService.html":{}}}],["host",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["httpcode",{"_index":369,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DiscountsController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":1633,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["httpcode(httpstatus.ok",{"_index":405,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DiscountsController.html":{}}}],["https://nestjs.com",{"_index":2192,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":370,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DiscountsController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["id",{"_index":121,"title":{},"body":{"interfaces/ActiveUserData.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"entities/DeliveryState.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"injectables/SignInProvider.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["id'})@apiparam({name",{"_index":1589,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["id'})@apiresponse({status",{"_index":1588,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["id.provider",{"_index":1993,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["id.provider.ts",{"_index":1022,"title":{},"body":{"injectables/FindOneByIdProvider.html":{},"coverage.html":{}}}],["id.provider.ts:14",{"_index":1025,"title":{},"body":{"injectables/FindOneByIdProvider.html":{}}}],["id.provider.ts:32",{"_index":1027,"title":{},"body":{"injectables/FindOneByIdProvider.html":{}}}],["identifier",{"_index":1591,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["iloghaluagneskc@gmail.com",{"_index":398,"title":{},"body":{"controllers/AuthController.html":{}}}],["image",{"_index":640,"title":{},"body":{"injectables/CreateProductProvider.html":{},"entities/ProductVariant.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["image.entity",{"_index":603,"title":{},"body":{"injectables/CreateProductProvider.html":{},"modules/ProductImagesModule.html":{},"entities/ProductVariant.html":{}}}],["image.entity.ts",{"_index":1507,"title":{},"body":{"entities/ProductImage.html":{},"coverage.html":{}}}],["image.entity.ts:13",{"_index":1510,"title":{},"body":{"entities/ProductImage.html":{}}}],["image.entity.ts:16",{"_index":1511,"title":{},"body":{"entities/ProductImage.html":{}}}],["image.entity.ts:19",{"_index":1509,"title":{},"body":{"entities/ProductImage.html":{}}}],["image.entity.ts:25",{"_index":1515,"title":{},"body":{"entities/ProductImage.html":{}}}],["image.productvariant",{"_index":1528,"title":{},"body":{"entities/ProductVariant.html":{}}}],["image/jpeg",{"_index":1920,"title":{},"body":{"injectables/UploadsService.html":{}}}],["image/jpg'].includes(file.mimetype",{"_index":1922,"title":{},"body":{"injectables/UploadsService.html":{}}}],["image/png",{"_index":1921,"title":{},"body":{"injectables/UploadsService.html":{}}}],["imagepath",{"_index":646,"title":{},"body":{"injectables/CreateProductProvider.html":{},"entities/ProductImage.html":{}}}],["images",{"_index":595,"title":{},"body":{"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"entities/ProductVariant.html":{}}}],["images.module",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["images.module.ts",{"_index":1519,"title":{},"body":{"modules/ProductImagesModule.html":{}}}],["images.service",{"_index":1521,"title":{},"body":{"modules/ProductImagesModule.html":{}}}],["images.service.ts",{"_index":1524,"title":{},"body":{"injectables/ProductImagesService.html":{},"coverage.html":{}}}],["images/product",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"injectables/CreateProductProvider.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"entities/ProductVariant.html":{},"coverage.html":{}}}],["images/providers/product",{"_index":1523,"title":{},"body":{"injectables/ProductImagesService.html":{},"coverage.html":{}}}],["imgurl",{"_index":647,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["imgurls.map((imgurl",{"_index":644,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["implements",{"_index":65,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{},"guards/RolesGuard.html":{}}}],["import",{"_index":51,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["importation",{"_index":1221,"title":{},"body":{"modules/MailModule.html":{}}}],["importing",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["imports",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["in')@auth(authtype.none)@httpcode(httpstatus.ok",{"_index":365,"title":{},"body":{"controllers/AuthController.html":{}}}],["in(productquery['category'].slice().split",{"_index":987,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["in(productquery['clothtype'].slice().split",{"_index":991,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["in(productquery['colors'].slice().split",{"_index":998,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["in(productquery['dressstyle'].slice().split",{"_index":993,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["in(productquery['sizes'].slice().split",{"_index":1000,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["in.dto",{"_index":374,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["in.dto.ts",{"_index":1746,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["in.dto.ts:19",{"_index":1747,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.dto.ts:30",{"_index":1748,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.provider",{"_index":429,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["in.provider.ts",{"_index":1751,"title":{},"body":{"injectables/SignInProvider.html":{},"coverage.html":{}}}],["in.provider.ts:17",{"_index":1753,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["in.provider.ts:42",{"_index":1754,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["indetifying",{"_index":85,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":1958,"title":{},"body":{"controllers/UsersController.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inhjecting",{"_index":771,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["initialize",{"_index":1183,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initializepayment",{"_index":1131,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initializepayment(initiatepaymentdto",{"_index":1140,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initiate",{"_index":1474,"title":{},"body":{"injectables/PaystackService.html":{}}}],["initiatepayment",{"_index":1452,"title":{},"body":{"controllers/PaystackController.html":{},"injectables/PaystackService.html":{}}}],["initiatepayment(initiatepaymentdto",{"_index":1453,"title":{},"body":{"controllers/PaystackController.html":{},"injectables/PaystackService.html":{}}}],["initiatepaymentdto",{"_index":1115,"title":{"classes/InitiatePaymentDto.html":{}},"body":{"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"classes/ProductWithVariantDto.html":{},"coverage.html":{}}}],["initiatepaymentdto.deliveryaddress",{"_index":1160,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initiatepaymentdto.deliverypicker",{"_index":1164,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initiatepaymentdto.discount",{"_index":1179,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initiatepaymentdto.discount.percentoff",{"_index":1180,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initiatepaymentdto.variants",{"_index":1168,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initiatepaymentprovider",{"_index":1127,"title":{"injectables/InitiatePaymentProvider.html":{}},"body":{"injectables/InitiatePaymentProvider.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"coverage.html":{},"overview.html":{}}}],["inject",{"_index":52,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"injectables/CreateUsersProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["inject(forwardref",{"_index":1675,"title":{},"body":{"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["inject(jwtconfig.key",{"_index":70,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["inject(paystackconfig.key",{"_index":1153,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["inject(request",{"_index":1341,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["injectable",{"_index":53,"title":{"injectables/AppService.html":{},"injectables/ApplyForDiscountProvider.html":{},"injectables/AuthService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/PaystackService.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}},"body":{"guards/AccessTokenGuard.html":{},"injectables/AppService.html":{},"injectables/ApplyForDiscountProvider.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/PaystackService.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":253,"title":{},"body":{"injectables/AppService.html":{},"injectables/ApplyForDiscountProvider.html":{},"injectables/AuthService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/PaystackService.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injecting",{"_index":293,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["injectrepository",{"_index":288,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["injectrepository(deliverystate",{"_index":868,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["injectrepository(discount",{"_index":294,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{}}}],["injectrepository(discountusage",{"_index":953,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["injectrepository(product",{"_index":977,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["injectrepository(productvariant",{"_index":1553,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["injectrepository(review",{"_index":717,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/ReviewsService.html":{}}}],["injectrepository(subscriber",{"_index":1817,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["injectrepository(user",{"_index":516,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/UsersService.html":{}}}],["inlinecssenabled",{"_index":1243,"title":{},"body":{"modules/MailModule.html":{}}}],["inner",{"_index":1170,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["inorder",{"_index":1339,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["installcompile",{"_index":2129,"title":{},"body":{"index.html":{}}}],["instance",{"_index":500,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["int",{"_index":1692,"title":{},"body":{"entities/Review.html":{}}}],["int'})@check('\"stars",{"_index":1690,"title":{},"body":{"entities/Review.html":{}}}],["interact",{"_index":2162,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":783,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["intercept(context",{"_index":786,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["interceptor",{"_index":782,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"controllers/ProductsController.html":{}}}],["interface",{"_index":111,"title":{"interfaces/ActiveUserData.html":{},"interfaces/Paginated.html":{}},"body":{"interfaces/ActiveUserData.html":{},"interfaces/Paginated.html":{},"coverage.html":{}}}],["interfaces",{"_index":113,"title":{},"body":{"interfaces/ActiveUserData.html":{},"interfaces/Paginated.html":{},"overview.html":{}}}],["interfaces/active",{"_index":1066,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["interfaces/paginated.interface",{"_index":1340,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["intersectiontype",{"_index":1101,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["invalid",{"_index":401,"title":{},"body":{"controllers/AuthController.html":{}}}],["inversejoincolumn",{"_index":1440,"title":{},"body":{"entities/Payment.html":{}}}],["isarray",{"_index":578,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/PatchProductDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["isarray()@isnotempty()@validatenested({each",{"_index":574,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["isarray()@isoptional",{"_index":1387,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["isboolean",{"_index":1396,"title":{},"body":{"classes/PatchProductVariantDto.html":{}}}],["isboolean()@isoptional",{"_index":1393,"title":{},"body":{"classes/PatchProductVariantDto.html":{}}}],["isdate",{"_index":538,"title":{},"body":{"classes/CreateDiscountDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["isdate()@isnotempty",{"_index":536,"title":{},"body":{"classes/CreateDiscountDto.html":{}}}],["isdate()@isoptional",{"_index":1111,"title":{},"body":{"classes/GetUsersBaseDto.html":{}}}],["isemail",{"_index":745,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["isenum",{"_index":755,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["isenum(role",{"_index":760,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["isglobal",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":531,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/OtpSigninDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchUserDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["isint()@isnotempty",{"_index":528,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["isint()@isnotempty()@min(1",{"_index":678,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{}}}],["isint()@isoptional",{"_index":1384,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["isnotempty",{"_index":265,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/OtpSigninDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{}}}],["isoptional",{"_index":681,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["isoptional()@isarray()@validatenested({each",{"_index":676,"title":{},"body":{"classes/CreateProductVariantDto.html":{}}}],["isoptional()@isint",{"_index":1414,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["isoptional()@ispositive",{"_index":1371,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["isoptional()@isstring",{"_index":1407,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["ispositive",{"_index":1373,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["isstring",{"_index":266,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/RefreshTokenDto.html":{}}}],["isstring()@isnotempty",{"_index":263,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["isstring()@isoptional",{"_index":1090,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{}}}],["issuer",{"_index":1070,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["item",{"_index":1573,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{}}}],["items",{"_index":1343,"title":{},"body":{"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{}}}],["itemsperpage",{"_index":1316,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["jbfwihfubfjkebiejhfbw",{"_index":413,"title":{},"body":{"controllers/AuthController.html":{}}}],["job",{"_index":2173,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":2175,"title":{},"body":{"index.html":{}}}],["joi",{"_index":2091,"title":{},"body":{"dependencies.html":{}}}],["join",{"_index":996,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"modules/MailModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":1240,"title":{},"body":{"modules/MailModule.html":{}}}],["joincolumn",{"_index":1439,"title":{},"body":{"entities/Payment.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{}}}],["jointable",{"_index":1442,"title":{},"body":{"entities/Payment.html":{}}}],["jsbfiwhvfquobdfj",{"_index":395,"title":{},"body":{"controllers/AuthController.html":{}}}],["jwt",{"_index":68,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["jwtconfig",{"_index":59,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["jwtconfiguration",{"_index":21,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["jwtmodule",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtmodule.registerasync(jwtconfig.asprovider",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtservice",{"_index":20,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["kamil",{"_index":2189,"title":{},"body":{"index.html":{}}}],["key",{"_index":605,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/FindAllProductsProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UploadToAwsProvider.html":{}}}],["keyof",{"_index":2219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keyword",{"_index":475,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["kobo",{"_index":1192,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["last",{"_index":1321,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["lastname",{"_index":1929,"title":{},"body":{"entities/User.html":{}}}],["lasttname",{"_index":1403,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["later",{"_index":314,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["learn",{"_index":2147,"title":{},"body":{"index.html":{}}}],["legend",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/PaginationModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":1615,"title":{},"body":{"controllers/ProductsController.html":{},"entities/Subscriber.html":{},"entities/User.html":{}}}],["lessthanorequal",{"_index":284,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["lessthanorequal(new",{"_index":304,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["let's",{"_index":1270,"title":{},"body":{"injectables/MailService.html":{}}}],["level",{"_index":1830,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["license",{"_index":2195,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":2178,"title":{},"body":{"index.html":{}}}],["like(`%${productquery['name'].slice().split",{"_index":995,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["limit",{"_index":955,"title":{},"body":{"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"classes/PaginationQueryDto.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["line",{"_index":95,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["linkedin",{"_index":2171,"title":{},"body":{"index.html":{}}}],["links",{"_index":1311,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["list",{"_index":970,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["literal",{"_index":596,"title":{},"body":{"injectables/CreateProductProvider.html":{},"interfaces/Paginated.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["load",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["locked",{"_index":1202,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["logged",{"_index":116,"title":{},"body":{"interfaces/ActiveUserData.html":{},"guards/AuthenticationGuard.html":{}}}],["logging",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":342,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/MailService.html":{},"injectables/UsersService.html":{}}}],["longdescription",{"_index":558,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["longer",{"_index":1051,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["looking",{"_index":2172,"title":{},"body":{"index.html":{}}}],["loop",{"_index":497,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"index.html":{}}}],["mail",{"_index":1222,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/SignInProvider.html":{},"injectables/SubscribersService.html":{}}}],["mail/mail.module",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["mailer",{"_index":1226,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["mailermodule",{"_index":1215,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":1223,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":1250,"title":{},"body":{"injectables/MailService.html":{}}}],["mailmodule",{"_index":149,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules/SubscribersModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":770,"title":{"injectables/MailService.html":{}},"body":{"injectables/CreateUsersProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/SignInProvider.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"overview.html":{}}}],["makes",{"_index":483,"title":{},"body":{"guards/AuthenticationGuard.html":{},"modules/MailModule.html":{}}}],["manually",{"_index":1857,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["many",{"_index":299,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsService.html":{}}}],["manytomany",{"_index":1443,"title":{},"body":{"entities/Payment.html":{}}}],["manytomany(undefined)@jointable({name",{"_index":1437,"title":{},"body":{"entities/Payment.html":{}}}],["manytoone",{"_index":899,"title":{},"body":{"entities/DiscountUsage.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{}}}],["manytoone(undefined",{"_index":892,"title":{},"body":{"entities/DiscountUsage.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{}}}],["map",{"_index":478,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{}}}],["map((data",{"_index":797,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["map((imgurls",{"_index":642,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["map((prd",{"_index":1169,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["map((vr",{"_index":1173,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["matching",{"_index":110,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["material",{"_index":559,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["math.ceil(totalitems",{"_index":1359,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["max",{"_index":700,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["max(5",{"_index":702,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["maxcount",{"_index":1617,"title":{},"body":{"controllers/ProductsController.html":{}}}],["maxlength",{"_index":746,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["maxlength(96",{"_index":748,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["means",{"_index":471,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["meets",{"_index":1731,"title":{},"body":{"guards/RolesGuard.html":{}}}],["message",{"_index":408,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateReviewDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["meta",{"_index":1312,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["metadata",{"_index":485,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/InitiatePaymentProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"dependencies.html":{}}}],["method",{"_index":488,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{}}}],["methods",{"_index":13,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["mimetype",{"_index":1919,"title":{},"body":{"injectables/UploadsService.html":{}}}],["min",{"_index":682,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{}}}],["min(1",{"_index":683,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{}}}],["miscellaneous",{"_index":2100,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":402,"title":{},"body":{"controllers/AuthController.html":{}}}],["mit",{"_index":2177,"title":{},"body":{"index.html":{}}}],["mode",{"_index":2132,"title":{},"body":{"index.html":{}}}],["module",{"_index":133,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/PaginationModule.html":{},"modules/PaymentModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/PaginationModule.html":{},"modules/PaymentModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["modules",{"_index":135,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/PaginationModule.html":{},"modules/PaymentModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":1217,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/ejs.adapter",{"_index":1220,"title":{},"body":{"modules/MailModule.html":{}}}],["moment",{"_index":312,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["more",{"_index":2148,"title":{},"body":{"index.html":{}}}],["morethan",{"_index":1046,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["morethan(new",{"_index":1048,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["morethanorequal",{"_index":285,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["morethanorequal(new",{"_index":307,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["myśliwiec",{"_index":2190,"title":{},"body":{"index.html":{}}}],["name",{"_index":27,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PatchProductDto.html":{},"entities/Payment.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["name.replace(/|s/g",{"_index":1897,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["need",{"_index":1224,"title":{},"body":{"modules/MailModule.html":{},"index.html":{}}}],["nest",{"_index":2114,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["nested",{"_index":1002,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["nestframework",{"_index":2194,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":793,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["nestjs",{"_index":1216,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/common",{"_index":55,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":56,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"modules/PaystackModule.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/PaginationProvider.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":57,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1395,"title":{},"body":{"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/UpdateDeliveryStateDto.html":{}}}],["nestjs/platform",{"_index":1608,"title":{},"body":{"controllers/ProductsController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":387,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/OtpSigninDto.html":{},"controllers/ProductsController.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplyForDiscountProvider.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":79,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newreview",{"_index":722,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newreview.datecreated",{"_index":733,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newreview.id",{"_index":728,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newreview.product.id",{"_index":734,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newreview.review",{"_index":731,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newreview.reviewer",{"_index":729,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newreview.stars",{"_index":730,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newsletter",{"_index":1260,"title":{},"body":{"injectables/MailService.html":{},"injectables/SubscribersService.html":{}}}],["newurl",{"_index":1355,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?limit=${paginationquery.limit}&page=${nextpage",{"_index":1366,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?limit=${paginationquery.limit}&page=${paginationquery.page",{"_index":1365,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?limit=${paginationquery.limit}&page=${prevpage",{"_index":1367,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?limit=${paginationquery.limit}&page=${totalpages",{"_index":1364,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?limit=${paginationquery.limit}&page=1",{"_index":1363,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newuser",{"_index":772,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["newuser.email",{"_index":776,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["newuser.id",{"_index":775,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["newuser.role",{"_index":777,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["newuserobj",{"_index":517,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{}}}],["next",{"_index":94,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["next.handle().pipe",{"_index":796,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["nextpage",{"_index":1360,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["nich",{"_index":1236,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["node.js",{"_index":2117,"title":{},"body":{"index.html":{}}}],["none",{"_index":2106,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notfoundexception",{"_index":971,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{}}}],["notfoundexception(`product",{"_index":1661,"title":{},"body":{"injectables/ProductsService.html":{}}}],["notfoundexception(error",{"_index":1018,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["npm",{"_index":2128,"title":{},"body":{"index.html":{}}}],["null",{"_index":327,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/UsersService.html":{}}}],["nullable",{"_index":887,"title":{},"body":{"entities/Discount.html":{},"entities/Payment.html":{},"entities/Subscriber.html":{},"entities/User.html":{}}}],["number",{"_index":527,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"entities/DeliveryState.html":{},"entities/Discount.html":{},"injectables/GenerateTokensProvider.html":{},"classes/InitiatePaymentDto.html":{},"classes/OtpSigninDto.html":{},"interfaces/Paginated.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["obj",{"_index":545,"title":{},"body":{"injectables/CreateDiscountProvider.html":{}}}],["object",{"_index":933,"title":{},"body":{"injectables/DiscountsService.html":{},"injectables/GenerateTokensProvider.html":{}}}],["object.entries(conditions).filter(([_",{"_index":1008,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["object.entries(images).foreach",{"_index":622,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["object.fromentries",{"_index":1007,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["object.keys(productquery).foreach((key",{"_index":983,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["object.keys(whereoptions).length",{"_index":1012,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["objectliteral",{"_index":1338,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["observable",{"_index":466,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{}}}],["offer",{"_index":2174,"title":{},"body":{"index.html":{}}}],["official",{"_index":2156,"title":{},"body":{"index.html":{}}}],["ondelete",{"_index":1513,"title":{},"body":{"entities/ProductImage.html":{},"entities/ProductVariant.html":{}}}],["one",{"_index":1021,"title":{},"body":{"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/PaginationProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["onetomany",{"_index":1498,"title":{},"body":{"entities/Product.html":{},"entities/ProductVariant.html":{},"entities/User.html":{}}}],["onetomany(undefined",{"_index":1488,"title":{},"body":{"entities/Product.html":{},"entities/ProductVariant.html":{}}}],["open",{"_index":2179,"title":{},"body":{"index.html":{}}}],["optional",{"_index":29,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":1013,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"modules/MailModule.html":{},"injectables/PaginationProvider.html":{}}}],["options.relations",{"_index":1348,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["options.select",{"_index":1349,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["options.where",{"_index":1350,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["order",{"_index":900,"title":{},"body":{"entities/DiscountUsage.html":{}}}],["otp",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["otp'})@apiresponse({status",{"_index":340,"title":{},"body":{"controllers/AuthController.html":{}}}],["otp.tostring",{"_index":1769,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["otpexpire",{"_index":518,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/User.html":{}}}],["otpsignin",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["otpsignin(@body",{"_index":411,"title":{},"body":{"controllers/AuthController.html":{}}}],["otpsignin(otpsignindto",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["otpsignindto",{"_index":337,"title":{"classes/OtpSigninDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"coverage.html":{}}}],["otpsigninprovider",{"_index":421,"title":{"injectables/OtpSigninProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/OtpSigninProvider.html":{},"coverage.html":{},"overview.html":{}}}],["out",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/PaginationModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":2200,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":2074,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":981,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"classes/PaginationQueryDto.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["pages",{"_index":1315,"title":{},"body":{"interfaces/Paginated.html":{}}}],["paginated",{"_index":969,"title":{"interfaces/Paginated.html":{}},"body":{"injectables/FindAllProductsProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["paginated'})@apiquery({name",{"_index":1578,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["paginating",{"_index":1336,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["pagination",{"_index":978,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"injectables/UsersService.html":{}}}],["paginationmodule",{"_index":1324,"title":{"modules/PaginationModule.html":{}},"body":{"modules/PaginationModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["paginationprovider",{"_index":962,"title":{"injectables/PaginationProvider.html":{}},"body":{"injectables/FindAllProductsProvider.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["paginationquery",{"_index":1331,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["paginationquery(paginationquery",{"_index":1334,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["paginationquery.limit",{"_index":1346,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["paginationquery.page",{"_index":1345,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["paginationquerydto",{"_index":1102,"title":{"classes/PaginationQueryDto.html":{}},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"coverage.html":{}}}],["param",{"_index":66,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/MailService.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["param('productid",{"_index":1629,"title":{},"body":{"controllers/ProductsController.html":{}}}],["param('reviewid",{"_index":1709,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["param('stateid",{"_index":850,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parsefloat(productquery['price'].slice().split",{"_index":989,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["part",{"_index":2166,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":1389,"title":{},"body":{"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/UpdateDeliveryStateDto.html":{}}}],["partialtype(createuserdto",{"_index":1399,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["particular",{"_index":1595,"title":{},"body":{"controllers/ProductsController.html":{}}}],["pass",{"_index":1234,"title":{},"body":{"modules/MailModule.html":{}}}],["passing",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["password",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{}}}],["password'})@apiresponse({status",{"_index":363,"title":{},"body":{"controllers/AuthController.html":{}}}],["password1",{"_index":399,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch",{"_index":371,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["patch('/:productid",{"_index":1628,"title":{},"body":{"controllers/ProductsController.html":{}}}],["patch('/:productid')@roles(role.admin",{"_index":1598,"title":{},"body":{"controllers/ProductsController.html":{}}}],["patch('/:stateid",{"_index":849,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["patch('/otp",{"_index":410,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch()@roles(role.user",{"_index":1968,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchproduct",{"_index":1566,"title":{},"body":{"controllers/ProductsController.html":{}}}],["patchproduct(productid",{"_index":1597,"title":{},"body":{"controllers/ProductsController.html":{}}}],["patchproductdto",{"_index":1374,"title":{"classes/PatchProductDto.html":{}},"body":{"classes/PatchProductDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{},"coverage.html":{}}}],["patchproductdto.brand",{"_index":1847,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.category",{"_index":1839,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.clothtype",{"_index":1843,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.discount",{"_index":1837,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.dressstyle",{"_index":1841,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.material",{"_index":1845,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.name",{"_index":1833,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.price",{"_index":1835,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.variants",{"_index":1851,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.variants.length",{"_index":1852,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductvariantdto",{"_index":1125,"title":{"classes/PatchProductVariantDto.html":{}},"body":{"classes/InitiatePaymentDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/ProductWithVariantDto.html":{},"coverage.html":{}}}],["patchuserdto",{"_index":1397,"title":{"classes/PatchUserDto.html":{}},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["patchusers",{"_index":1951,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchusers(patchuserdto",{"_index":1967,"title":{},"body":{"controllers/UsersController.html":{}}}],["path",{"_index":1218,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/UploadToAwsProvider.html":{}}}],["path.extname(file.originalname",{"_index":1900,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["path.join(root_path",{"_index":1273,"title":{},"body":{"injectables/MailService.html":{}}}],["payload",{"_index":83,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"injectables/GenerateTokensProvider.html":{}}}],["payment",{"_index":1148,"title":{"entities/Payment.html":{}},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"coverage.html":{}}}],["payment')@roles(role.user",{"_index":1455,"title":{},"body":{"controllers/PaystackController.html":{}}}],["payment.dto",{"_index":1143,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{}}}],["payment.dto.ts",{"_index":1117,"title":{},"body":{"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{},"coverage.html":{}}}],["payment.dto.ts:18",{"_index":1559,"title":{},"body":{"classes/ProductWithVariantDto.html":{}}}],["payment.dto.ts:22",{"_index":1558,"title":{},"body":{"classes/ProductWithVariantDto.html":{}}}],["payment.dto.ts:28",{"_index":1560,"title":{},"body":{"classes/ProductWithVariantDto.html":{}}}],["payment.dto.ts:34",{"_index":1121,"title":{},"body":{"classes/InitiatePaymentDto.html":{}}}],["payment.dto.ts:38",{"_index":1120,"title":{},"body":{"classes/InitiatePaymentDto.html":{}}}],["payment.dto.ts:42",{"_index":1122,"title":{},"body":{"classes/InitiatePaymentDto.html":{}}}],["payment.dto.ts:48",{"_index":1124,"title":{},"body":{"classes/InitiatePaymentDto.html":{}}}],["payment.provider",{"_index":1467,"title":{},"body":{"modules/PaystackModule.html":{},"injectables/PaystackService.html":{}}}],["payment.provider.ts",{"_index":1129,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"coverage.html":{}}}],["payment.provider.ts:21",{"_index":1134,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["payment.provider.ts:54",{"_index":1136,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["payment.provider.ts:58",{"_index":1141,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["payment/payment.module",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["payment_variants",{"_index":1438,"title":{},"body":{"entities/Payment.html":{}}}],["paymentid",{"_index":1446,"title":{},"body":{"entities/Payment.html":{}}}],["paymentmodule",{"_index":150,"title":{"modules/PaymentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaymentModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentstatus",{"_index":1150,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{},"miscellaneous/enumerations.html":{}}}],["paymentstatus.pending",{"_index":1198,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{}}}],["paystack",{"_index":1139,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{}}}],["paystack.controller",{"_index":1465,"title":{},"body":{"modules/PaystackModule.html":{}}}],["paystack/paystack.module",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["paystackconfig",{"_index":1144,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"modules/PaystackModule.html":{}}}],["paystackconfiguration",{"_index":1135,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["paystackcontroller",{"_index":1450,"title":{"controllers/PaystackController.html":{}},"body":{"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"coverage.html":{}}}],["paystackmodule",{"_index":151,"title":{"modules/PaystackModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaystackModule.html":{},"modules.html":{},"overview.html":{}}}],["paystackservice",{"_index":1457,"title":{"injectables/PaystackService.html":{}},"body":{"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"coverage.html":{},"overview.html":{}}}],["pending",{"_index":2108,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["per",{"_index":1580,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["percentoff",{"_index":534,"title":{},"body":{"classes/CreateDiscountDto.html":{},"entities/Discount.html":{}}}],["permission",{"_index":1745,"title":{},"body":{"guards/RolesGuard.html":{}}}],["pg",{"_index":2093,"title":{},"body":{"dependencies.html":{}}}],["phonenumber",{"_index":1404,"title":{},"body":{"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["please",{"_index":313,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["port",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["position",{"_index":1582,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["post",{"_index":372,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["post('')@auth(authtype.none",{"_index":1697,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["post('/apply",{"_index":915,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["post('/apply')@roles(role.user)@httpcode(httpstatus.ok",{"_index":903,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["post('/initiate",{"_index":1454,"title":{},"body":{"controllers/PaystackController.html":{}}}],["post('/sign",{"_index":403,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('refresh",{"_index":414,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@roles(role.admin",{"_index":822,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{}}}],["postgres",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["prd",{"_index":1826,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["prd.price",{"_index":1178,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["prd.variants",{"_index":1172,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["precision",{"_index":1420,"title":{},"body":{"entities/Payment.html":{},"entities/Product.html":{}}}],["prefix",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["previous",{"_index":1323,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["prevpage",{"_index":1361,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["price",{"_index":560,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{},"classes/ProductWithVariantDto.html":{}}}],["primarygeneratedcolumn",{"_index":811,"title":{},"body":{"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":806,"title":{},"body":{"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/User.html":{}}}],["private",{"_index":16,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["process",{"_index":311,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["process.cwd",{"_index":2230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["product",{"_index":195,"title":{"entities/Product.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"injectables/CreateReviewProvider.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"entities/Product.html":{},"modules/ProductImagesModule.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/UpdateProductProvider.html":{},"coverage.html":{}}}],["product.brand",{"_index":1848,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.category",{"_index":1840,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.clothtype",{"_index":1844,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.discount",{"_index":1838,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.dressstyle",{"_index":1842,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.dto",{"_index":973,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["product.dto.ts",{"_index":1085,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/PatchProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:11",{"_index":1383,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:14",{"_index":1098,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:15",{"_index":1385,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:19",{"_index":1379,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:21",{"_index":1091,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:23",{"_index":1377,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:27",{"_index":1380,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:28",{"_index":1092,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:31",{"_index":1378,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:35",{"_index":1099,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/PatchProductDto.html":{}}}],["product.dto.ts:39",{"_index":1376,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:42",{"_index":1094,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:43",{"_index":1386,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:47",{"_index":1382,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:49",{"_index":1100,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:51",{"_index":1388,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:56",{"_index":1095,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:7",{"_index":1381,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.entity",{"_index":599,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/FindAllProductsProvider.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["product.id",{"_index":1856,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.material",{"_index":1846,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.name",{"_index":1834,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.price",{"_index":1836,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.provider",{"_index":1642,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["product.provider.ts",{"_index":588,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/UpdateProductProvider.html":{},"coverage.html":{}}}],["product.provider.ts:13",{"_index":1824,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.provider.ts:14",{"_index":593,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["product.provider.ts:27",{"_index":1825,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.provider.ts:33",{"_index":597,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["product.reviews",{"_index":1685,"title":{},"body":{"entities/Review.html":{}}}],["product.variants",{"_index":1530,"title":{},"body":{"entities/ProductVariant.html":{}}}],["productclothtype",{"_index":1093,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["productid",{"_index":687,"title":{},"body":{"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/InitiatePaymentDto.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["productimage",{"_index":602,"title":{"entities/ProductImage.html":{}},"body":{"injectables/CreateProductProvider.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"entities/ProductVariant.html":{},"coverage.html":{}}}],["productimages",{"_index":641,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["productimages.map(async",{"_index":651,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["productimagesmodule",{"_index":152,"title":{"modules/ProductImagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductImagesModule.html":{},"modules.html":{},"overview.html":{}}}],["productimagesservice",{"_index":1518,"title":{"injectables/ProductImagesService.html":{}},"body":{"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"coverage.html":{},"overview.html":{}}}],["production",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["productquery",{"_index":968,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["productquery['category",{"_index":986,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['clothtype",{"_index":990,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['colors",{"_index":997,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['dressstyle",{"_index":992,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['name",{"_index":994,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['price",{"_index":988,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['sizes",{"_index":999,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery[key",{"_index":984,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productrepository",{"_index":964,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["products",{"_index":718,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"injectables/InitiatePaymentProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["products.controller",{"_index":1641,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.provider",{"_index":1646,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["products.provider.ts",{"_index":959,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"coverage.html":{}}}],["products.provider.ts:10",{"_index":963,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["products.provider.ts:29",{"_index":967,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["products/products.module",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["productscontroller",{"_index":1561,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsmodule",{"_index":154,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaystackModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsservice",{"_index":708,"title":{"injectables/ProductsService.html":{}},"body":{"injectables/CreateReviewProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["productupdated",{"_index":1832,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["productvariant",{"_index":573,"title":{"entities/ProductVariant.html":{}},"body":{"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"coverage.html":{}}}],["productvariantrepository",{"_index":1548,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["productvariantsmodule",{"_index":153,"title":{"modules/ProductVariantsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productvariantsservice",{"_index":1538,"title":{"injectables/ProductVariantsService.html":{}},"body":{"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{},"coverage.html":{},"overview.html":{}}}],["productwithvariantdto",{"_index":1123,"title":{"classes/ProductWithVariantDto.html":{}},"body":{"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{},"coverage.html":{}}}],["progressive",{"_index":2116,"title":{},"body":{"index.html":{}}}],["project",{"_index":2126,"title":{},"body":{"index.html":{}}}],["promise",{"_index":38,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DiscountsService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/MailService.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UsersService.html":{}}}],["promise.all",{"_index":1074,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["promise.resolve(instance.canactivate(context",{"_index":501,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["properties",{"_index":117,"title":{"properties.html":{}},"body":{"interfaces/ActiveUserData.html":{},"classes/ApplyForDiscountDto.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/OtpSigninDto.html":{},"interfaces/Paginated.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"classes/ProductWithVariantDto.html":{},"classes/RefreshTokenDto.html":{},"entities/Review.html":{},"classes/SignInDto.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"properties.html":{}}}],["property",{"_index":473,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["provide",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":1831,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["provider",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/DiscountsService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"entities/Payment.html":{},"injectables/PaystackService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}}}],["providerreference",{"_index":1196,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{}}}],["providers",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/PaginationModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers/apply",{"_index":924,"title":{},"body":{"modules/DiscountsModule.html":{}}}],["providers/auth.service",{"_index":376,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["providers/clear",{"_index":1994,"title":{},"body":{"modules/UsersModule.html":{}}}],["providers/create",{"_index":926,"title":{},"body":{"modules/DiscountsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/UsersModule.html":{}}}],["providers/delivery",{"_index":834,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{}}}],["providers/discounts",{"_index":941,"title":{},"body":{"modules/DiscountsUsageModule.html":{}}}],["providers/discounts.service",{"_index":907,"title":{},"body":{"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{}}}],["providers/find",{"_index":1645,"title":{},"body":{"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["providers/generate",{"_index":430,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/initiate",{"_index":1466,"title":{},"body":{"modules/PaystackModule.html":{}}}],["providers/mail.service",{"_index":1214,"title":{},"body":{"modules/MailModule.html":{}}}],["providers/otp",{"_index":435,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/pagination.provider",{"_index":1329,"title":{},"body":{"modules/PaginationModule.html":{}}}],["providers/paystack.service",{"_index":1458,"title":{},"body":{"controllers/PaystackController.html":{},"modules/PaystackModule.html":{}}}],["providers/product",{"_index":1520,"title":{},"body":{"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{}}}],["providers/products.service",{"_index":1609,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{}}}],["providers/refresh",{"_index":433,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/reviews.service",{"_index":1704,"title":{},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{}}}],["providers/sign",{"_index":428,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/store",{"_index":1990,"title":{},"body":{"modules/UsersModule.html":{}}}],["providers/subscribers.service",{"_index":1797,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["providers/update",{"_index":1647,"title":{},"body":{"modules/ProductsModule.html":{}}}],["providers/upload",{"_index":1909,"title":{},"body":{"modules/UploadsModule.html":{}}}],["providers/uploads.service",{"_index":1908,"title":{},"body":{"modules/UploadsModule.html":{}}}],["providers/users.service",{"_index":1970,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["prvariant",{"_index":635,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["public",{"_index":271,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["quantity",{"_index":673,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"entities/ProductVariant.html":{}}}],["queries",{"_index":979,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["query",{"_index":608,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["query.dto",{"_index":1104,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"injectables/PaginationProvider.html":{}}}],["query.dto.ts",{"_index":1368,"title":{},"body":{"classes/PaginationQueryDto.html":{},"coverage.html":{}}}],["query.dto.ts:12",{"_index":1369,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["query.dto.ts:19",{"_index":1372,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["queryrunner",{"_index":611,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["queryrunner.committransaction",{"_index":658,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.connect",{"_index":614,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["queryrunner.manager",{"_index":1204,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["queryrunner.manager.create(product",{"_index":617,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.manager.create(productimage",{"_index":645,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.manager.create(productvariant",{"_index":636,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.manager.save(image",{"_index":652,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.manager.save(payment",{"_index":1194,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["queryrunner.manager.save(product",{"_index":619,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.manager.save(prvariant",{"_index":638,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.release",{"_index":670,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.rollbacktransaction",{"_index":662,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.starttransaction",{"_index":615,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["questions",{"_index":2149,"title":{},"body":{"index.html":{}}}],["randomint",{"_index":1755,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["randomint(1000",{"_index":1763,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["rating",{"_index":694,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["read",{"_index":2186,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":67,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["real",{"_index":2163,"title":{},"body":{"index.html":{}}}],["record",{"_index":480,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["reduce((acc",{"_index":1175,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["referencedcolumnname",{"_index":1447,"title":{},"body":{"entities/Payment.html":{}}}],["reflect",{"_index":2095,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":462,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["refresh",{"_index":354,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["refreshing",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":396,"title":{},"body":{"controllers/AuthController.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"classes/RefreshTokenDto.html":{}}}],["refreshtokendto",{"_index":352,"title":{"classes/RefreshTokenDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"coverage.html":{}}}],["refreshtokendto.refreshtoken",{"_index":1678,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["refreshtokenprovider",{"_index":422,"title":{"injectables/RefreshTokenProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenProvider.html":{},"coverage.html":{},"overview.html":{}}}],["refreshtokens",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenProvider.html":{}}}],["refreshtokens(@body",{"_index":415,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokens(refreshtokendto",{"_index":351,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenProvider.html":{}}}],["registering",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["rejectunauthorized",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["relations",{"_index":1014,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["release",{"_index":669,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["relsease",{"_index":667,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["remove",{"_index":1001,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/UploadToAwsProvider.html":{}}}],["repository",{"_index":274,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["repository.count",{"_index":1358,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["repository.find",{"_index":1342,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["req",{"_index":104,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["request",{"_index":45,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["request.headers.authorization?.split",{"_index":108,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["request.user",{"_index":90,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["request[request_user_key",{"_index":91,"title":{},"body":{"guards/AccessTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["request_user_key",{"_index":61,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requests",{"_index":1370,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["requesttimeoutexception",{"_index":283,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UsersService.html":{}}}],["requesttimeoutexception('could",{"_index":616,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["requesttimeoutexception(err",{"_index":874,"title":{},"body":{"injectables/DeliveryStatesService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["requesttimeoutexception(error",{"_index":520,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UsersService.html":{}}}],["required",{"_index":347,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["requiredroles",{"_index":1739,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.some((role",{"_index":1744,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requirements",{"_index":1732,"title":{},"body":{"guards/RolesGuard.html":{}}}],["reset",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"modules/PaginationModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["resetexpires",{"_index":1778,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["resetpassworddto",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpasswordprovider",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetting",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["resfresh",{"_index":1671,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["resource",{"_index":869,"title":{},"body":{"injectables/DeliveryStatesService.html":{},"guards/RolesGuard.html":{}}}],["resources",{"_index":2142,"title":{},"body":{"index.html":{}}}],["response",{"_index":781,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"injectables/InitiatePaymentProvider.html":{},"interfaces/Paginated.html":{},"injectables/UpdateProductProvider.html":{}}}],["response.data.data.authorization_url",{"_index":1200,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["response.data.data.reference",{"_index":1197,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["response.interceptor",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["response.interceptor.ts",{"_index":779,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"coverage.html":{}}}],["response.interceptor.ts:14",{"_index":785,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["response.interceptor.ts:32",{"_index":788,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["response/data",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataResponseInterceptor.html":{},"coverage.html":{}}}],["results",{"_index":109,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["return",{"_index":107,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":1313,"title":{},"body":{"interfaces/Paginated.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["returns",{"_index":37,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["review",{"_index":688,"title":{"entities/Review.html":{}},"body":{"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"entities/Product.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"coverage.html":{}}}],["review.dto",{"_index":713,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["review.dto.ts",{"_index":686,"title":{},"body":{"classes/CreateReviewDto.html":{},"coverage.html":{}}}],["review.dto.ts:12",{"_index":699,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.dto.ts:16",{"_index":692,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.dto.ts:20",{"_index":691,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.dto.ts:6",{"_index":693,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.product",{"_index":1489,"title":{},"body":{"entities/Product.html":{}}}],["review.provider",{"_index":1716,"title":{},"body":{"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{}}}],["review.provider.ts",{"_index":705,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"coverage.html":{}}}],["review.provider.ts:29",{"_index":712,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["review.provider.ts:9",{"_index":709,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["reviewer",{"_index":689,"title":{},"body":{"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"entities/Review.html":{}}}],["reviewid",{"_index":1702,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["reviews",{"_index":716,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"entities/Product.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["reviews.controller",{"_index":1715,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["reviews.entity",{"_index":714,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{}}}],["reviews/reviews.module",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["reviewscontroller",{"_index":1695,"title":{"controllers/ReviewsController.html":{}},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"coverage.html":{}}}],["reviewsmodule",{"_index":155,"title":{"modules/ReviewsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ReviewsModule.html":{},"modules.html":{},"overview.html":{}}}],["reviewsrepository",{"_index":710,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/ReviewsService.html":{}}}],["reviewsservice",{"_index":1703,"title":{"injectables/ReviewsService.html":{}},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"coverage.html":{},"overview.html":{}}}],["role",{"_index":119,"title":{},"body":{"interfaces/ActiveUserData.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["role.admin",{"_index":1738,"title":{},"body":{"guards/RolesGuard.html":{},"controllers/UsersController.html":{}}}],["roles",{"_index":837,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(role.admin",{"_index":842,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["roles(role.admin)@patch('/:stateid",{"_index":829,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["roles(role.user",{"_index":916,"title":{},"body":{"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/UsersController.html":{}}}],["roles_key",{"_index":1735,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":188,"title":{"guards/RolesGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["rollback",{"_index":660,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["root",{"_index":2231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root_path",{"_index":1261,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["route",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["routes",{"_index":2232,"title":{"routes.html":{}},"body":{"routes.html":{}}}],["run",{"_index":2130,"title":{},"body":{"index.html":{}}}],["runner",{"_index":610,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["rxjs",{"_index":467,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{},"dependencies.html":{}}}],["s3",{"_index":1881,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["save",{"_index":549,"title":{},"body":{"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/UpdateProductProvider.html":{}}}],["savedproduct",{"_index":618,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["savedvariants",{"_index":630,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["savedvariants.push(vr",{"_index":639,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["savedvariants[urlsindex",{"_index":649,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["saveproductvariant",{"_index":1545,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["saveproductvariant(variant",{"_index":1551,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["saves",{"_index":1556,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["scalable",{"_index":2121,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1422,"title":{},"body":{"entities/Payment.html":{},"entities/Product.html":{}}}],["sdk",{"_index":1882,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"dependencies.html":{}}}],["secret",{"_index":1072,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["secure",{"_index":1232,"title":{},"body":{"modules/MailModule.html":{}}}],["select",{"_index":1036,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"injectables/PaginationProvider.html":{}}}],["send",{"_index":1308,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["sending",{"_index":1254,"title":{},"body":{"injectables/MailService.html":{}}}],["sendloginotp",{"_index":1246,"title":{},"body":{"injectables/MailService.html":{}}}],["sendloginotp(user",{"_index":1252,"title":{},"body":{"injectables/MailService.html":{}}}],["sendresetotp",{"_index":1247,"title":{},"body":{"injectables/MailService.html":{}}}],["sendresetotp(user",{"_index":1255,"title":{},"body":{"injectables/MailService.html":{}}}],["sendsubscribermail",{"_index":1248,"title":{},"body":{"injectables/MailService.html":{}}}],["sendsubscribermail(subscriber",{"_index":1257,"title":{},"body":{"injectables/MailService.html":{}}}],["server",{"_index":2122,"title":{},"body":{"index.html":{}}}],["service",{"_index":296,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/SignInProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}}}],["set",{"_index":1159,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["setmetadata(auth_type_key",{"_index":2224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(roles_key",{"_index":2227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setting",{"_index":89,"title":{},"body":{"guards/AccessTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["setup",{"_index":2127,"title":{},"body":{"index.html":{}}}],["shortdescription",{"_index":561,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["side",{"_index":2123,"title":{},"body":{"index.html":{}}}],["sigining",{"_index":1752,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["sign",{"_index":367,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GenerateTokensProvider.html":{},"classes/OtpSigninDto.html":{},"classes/SignInDto.html":{}}}],["signed",{"_index":43,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{}}}],["signin",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/OtpSigninDto.html":{},"injectables/SignInProvider.html":{}}}],["signin(@body",{"_index":406,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(signindto",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["signin.provider",{"_index":436,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["signin.provider.ts",{"_index":1290,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"coverage.html":{}}}],["signin.provider.ts:21",{"_index":1296,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["signin.provider.ts:8",{"_index":1294,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["signindto",{"_index":362,"title":{"classes/SignInDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"coverage.html":{}}}],["signindto.email",{"_index":1761,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["signindto.role",{"_index":1762,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["signing",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["signinprovider",{"_index":423,"title":{"injectables/SignInProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{},"coverage.html":{},"overview.html":{}}}],["signinwithotp",{"_index":1291,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["signinwithotp(otpsignindto",{"_index":1295,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["signs",{"_index":339,"title":{},"body":{"controllers/AuthController.html":{},"injectables/GenerateTokensProvider.html":{}}}],["signtoken",{"_index":1056,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["signtoken(userid",{"_index":1060,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["size",{"_index":674,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"injectables/FindAllProductsProvider.html":{},"entities/ProductVariant.html":{}}}],["sizes",{"_index":1089,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["skip",{"_index":1344,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["soldout",{"_index":1390,"title":{},"body":{"classes/PatchProductVariantDto.html":{},"entities/ProductVariant.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["spaces",{"_index":1896,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["specific",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{}}}],["specified",{"_index":1850,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["sponsors",{"_index":2182,"title":{},"body":{"index.html":{}}}],["src/.../active",{"_index":2210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":2213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":2102,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../auth.constant.ts",{"_index":2212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.decorator.ts",{"_index":2211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2112,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../paths.config.ts",{"_index":2216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../paymentstatus.enum.ts",{"_index":2104,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role",{"_index":2105,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role.constant.ts",{"_index":2215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.decorator.ts",{"_index":2214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":125,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":128,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":254,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":255,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:115",{"_index":350,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:155",{"_index":360,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:76",{"_index":366,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":1987,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/auth/auth.module.ts",{"_index":424,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/config/jwt.config",{"_index":60,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["src/auth/constants/auth.constant",{"_index":62,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["src/auth/constants/auth.constant.ts",{"_index":2043,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/constants/role.constant",{"_index":1736,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/constants/role.constant.ts",{"_index":2044,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorator/active",{"_index":909,"title":{},"body":{"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorator/auth.decorator",{"_index":839,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["src/auth/decorator/auth.decorator.ts",{"_index":2046,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorator/role.decorator",{"_index":838,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{}}}],["src/auth/decorator/role.decorator.ts",{"_index":2047,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dtos/otpsignin.dto.ts",{"_index":1285,"title":{},"body":{"classes/OtpSigninDto.html":{},"coverage.html":{}}}],["src/auth/dtos/otpsignin.dto.ts:17",{"_index":1287,"title":{},"body":{"classes/OtpSigninDto.html":{}}}],["src/auth/dtos/refresh",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["src/auth/dtos/sign",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{},"classes/SignInDto.html":{},"coverage.html":{}}}],["src/auth/enums/auth",{"_index":468,"title":{},"body":{"guards/AuthenticationGuard.html":{},"controllers/DeliveryStatesController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"miscellaneous/enumerations.html":{}}}],["src/auth/enums/role",{"_index":758,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"guards/RolesGuard.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{}}}],["src/auth/guards/access",{"_index":6,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{}}}],["src/auth/guards/authentication/authentication.guard.ts",{"_index":456,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/auth/guards/authentication/authentication.guard.ts:33",{"_index":463,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/authentication/authentication.guard.ts:59",{"_index":464,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/roles/roles.guard.ts",{"_index":1727,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles/roles.guard.ts:16",{"_index":1728,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/guards/roles/roles.guard.ts:31",{"_index":1729,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/interfaces/active",{"_index":114,"title":{},"body":{"interfaces/ActiveUserData.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts:13",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:43",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:52",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:61",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/generate",{"_index":1052,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"coverage.html":{}}}],["src/auth/providers/otp",{"_index":1289,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"coverage.html":{}}}],["src/auth/providers/refresh",{"_index":1669,"title":{},"body":{"injectables/RefreshTokenProvider.html":{},"coverage.html":{}}}],["src/auth/providers/sign",{"_index":1750,"title":{},"body":{"injectables/SignInProvider.html":{},"coverage.html":{}}}],["src/common/interceptors/data",{"_index":778,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"coverage.html":{}}}],["src/common/pagination/dtos/pagination",{"_index":1103,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/PaginationQueryDto.html":{},"coverage.html":{}}}],["src/common/pagination/interfaces/paginated.interface",{"_index":974,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["src/common/pagination/interfaces/paginated.interface.ts",{"_index":1310,"title":{},"body":{"interfaces/Paginated.html":{},"coverage.html":{}}}],["src/common/pagination/pagination.module",{"_index":1644,"title":{},"body":{"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["src/common/pagination/pagination.module.ts",{"_index":1328,"title":{},"body":{"modules/PaginationModule.html":{}}}],["src/common/pagination/providers/pagination.provider",{"_index":976,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/UsersService.html":{}}}],["src/common/pagination/providers/pagination.provider.ts",{"_index":1330,"title":{},"body":{"injectables/PaginationProvider.html":{},"coverage.html":{}}}],["src/common/pagination/providers/pagination.provider.ts:14",{"_index":1333,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["src/common/pagination/providers/pagination.provider.ts:34",{"_index":1335,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["src/config/paths.config.ts",{"_index":2052,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/delivery",{"_index":522,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"classes/UpdateDeliveryStateDto.html":{},"coverage.html":{}}}],["src/discounts",{"_index":290,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"entities/DiscountUsage.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"coverage.html":{}}}],["src/discounts/discounts.controller.ts",{"_index":902,"title":{},"body":{"controllers/DiscountsController.html":{},"coverage.html":{}}}],["src/discounts/discounts.controller.ts:21",{"_index":905,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["src/discounts/discounts.controller.ts:28",{"_index":904,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["src/discounts/discounts.entity",{"_index":897,"title":{},"body":{"entities/DiscountUsage.html":{},"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["src/discounts/discounts.entity.ts",{"_index":877,"title":{},"body":{"entities/Discount.html":{},"coverage.html":{}}}],["src/discounts/discounts.entity.ts:12",{"_index":881,"title":{},"body":{"entities/Discount.html":{}}}],["src/discounts/discounts.entity.ts:15",{"_index":883,"title":{},"body":{"entities/Discount.html":{}}}],["src/discounts/discounts.entity.ts:18",{"_index":886,"title":{},"body":{"entities/Discount.html":{}}}],["src/discounts/discounts.entity.ts:21",{"_index":888,"title":{},"body":{"entities/Discount.html":{}}}],["src/discounts/discounts.entity.ts:6",{"_index":880,"title":{},"body":{"entities/Discount.html":{}}}],["src/discounts/discounts.entity.ts:9",{"_index":879,"title":{},"body":{"entities/Discount.html":{}}}],["src/discounts/discounts.module.ts",{"_index":922,"title":{},"body":{"modules/DiscountsModule.html":{}}}],["src/discounts/dtos/apply",{"_index":260,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"coverage.html":{}}}],["src/discounts/dtos/create",{"_index":533,"title":{},"body":{"classes/CreateDiscountDto.html":{},"coverage.html":{}}}],["src/discounts/providers/apply",{"_index":269,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"coverage.html":{}}}],["src/discounts/providers/create",{"_index":540,"title":{},"body":{"injectables/CreateDiscountProvider.html":{},"coverage.html":{}}}],["src/discounts/providers/discounts.service.ts",{"_index":928,"title":{},"body":{"injectables/DiscountsService.html":{},"coverage.html":{}}}],["src/discounts/providers/discounts.service.ts:27",{"_index":932,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["src/discounts/providers/discounts.service.ts:39",{"_index":931,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["src/discounts/providers/discounts.service.ts:9",{"_index":930,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["src/events/event.entity",{"_index":1944,"title":{},"body":{"entities/User.html":{}}}],["src/mail/mail.module",{"_index":1799,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["src/mail/mail.module.ts",{"_index":1212,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/providers/mail.service",{"_index":1756,"title":{},"body":{"injectables/SignInProvider.html":{},"injectables/SubscribersService.html":{}}}],["src/mail/providers/mail.service.ts",{"_index":1245,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/mail/providers/mail.service.ts:12",{"_index":1251,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/providers/mail.service.ts:29",{"_index":1256,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/providers/mail.service.ts:48",{"_index":1253,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/providers/mail.service.ts:65",{"_index":1258,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/templates/loginotp.ejs",{"_index":1279,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/templates/resetotp.ejs",{"_index":1274,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/templates/subscription.ejs",{"_index":1283,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":2056,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/payment/enums/paymentstatus.enum",{"_index":1151,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["src/payment/enums/paymentstatus.enum.ts",{"_index":2107,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/payment/payment.entity",{"_index":1149,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["src/payment/payment.entity.ts",{"_index":1416,"title":{},"body":{"entities/Payment.html":{},"coverage.html":{}}}],["src/payment/payment.entity.ts:19",{"_index":1428,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.entity.ts:26",{"_index":1433,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.entity.ts:29",{"_index":1429,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.entity.ts:32",{"_index":1431,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.entity.ts:35",{"_index":1426,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.entity.ts:38",{"_index":1424,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.entity.ts:41",{"_index":1436,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.entity.ts:44",{"_index":1427,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.entity.ts:47",{"_index":1435,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.entity.ts:55",{"_index":1441,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.module.ts",{"_index":1449,"title":{},"body":{"modules/PaymentModule.html":{}}}],["src/paystack/dtos/initiate",{"_index":1116,"title":{},"body":{"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{},"coverage.html":{}}}],["src/paystack/paystack.controller.ts",{"_index":1451,"title":{},"body":{"controllers/PaystackController.html":{},"coverage.html":{}}}],["src/paystack/paystack.controller.ts:23",{"_index":1456,"title":{},"body":{"controllers/PaystackController.html":{}}}],["src/paystack/paystack.module.ts",{"_index":1464,"title":{},"body":{"modules/PaystackModule.html":{}}}],["src/paystack/providers/initiate",{"_index":1128,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"coverage.html":{}}}],["src/paystack/providers/paystack.service.ts",{"_index":1470,"title":{},"body":{"injectables/PaystackService.html":{},"coverage.html":{}}}],["src/paystack/providers/paystack.service.ts:15",{"_index":1473,"title":{},"body":{"injectables/PaystackService.html":{}}}],["src/paystack/providers/paystack.service.ts:7",{"_index":1472,"title":{},"body":{"injectables/PaystackService.html":{}}}],["src/product",{"_index":581,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"modules/ProductsModule.html":{},"injectables/UpdateProductProvider.html":{},"coverage.html":{}}}],["src/products/dtos/createproductdto.ts",{"_index":553,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/products/dtos/createproductdto.ts:15",{"_index":570,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:19",{"_index":571,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:23",{"_index":566,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:27",{"_index":564,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:31",{"_index":567,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:35",{"_index":565,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:39",{"_index":569,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:43",{"_index":563,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:47",{"_index":572,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:51",{"_index":568,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:57",{"_index":576,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/get",{"_index":1084,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"coverage.html":{}}}],["src/products/dtos/patch",{"_index":1375,"title":{},"body":{"classes/PatchProductDto.html":{},"coverage.html":{}}}],["src/products/product.entity",{"_index":1152,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{}}}],["src/products/product.entity.ts",{"_index":1476,"title":{},"body":{"entities/Product.html":{},"coverage.html":{}}}],["src/products/product.entity.ts:17",{"_index":1483,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:20",{"_index":1486,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:23",{"_index":1487,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:26",{"_index":1481,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:29",{"_index":1478,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:32",{"_index":1482,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:35",{"_index":1479,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:38",{"_index":1485,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:41",{"_index":1477,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:44",{"_index":1493,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:47",{"_index":1484,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:53",{"_index":1496,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:59",{"_index":1492,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:62",{"_index":1480,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:65",{"_index":1494,"title":{},"body":{"entities/Product.html":{}}}],["src/products/products.controller.ts",{"_index":1562,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/products/products.controller.ts:100",{"_index":1594,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:133",{"_index":1586,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:145",{"_index":1599,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:160",{"_index":1572,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:60",{"_index":1569,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.module",{"_index":1468,"title":{},"body":{"modules/PaystackModule.html":{},"modules/ReviewsModule.html":{}}}],["src/products/products.module.ts",{"_index":1640,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/providers/create",{"_index":587,"title":{},"body":{"injectables/CreateProductProvider.html":{},"coverage.html":{}}}],["src/products/providers/find",{"_index":958,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"coverage.html":{}}}],["src/products/providers/products.service",{"_index":715,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["src/products/providers/products.service.ts",{"_index":1649,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/products/providers/products.service.ts:106",{"_index":1654,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:18",{"_index":1652,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:49",{"_index":1653,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:61",{"_index":1656,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:82",{"_index":1655,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:94",{"_index":1658,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/update",{"_index":1823,"title":{},"body":{"injectables/UpdateProductProvider.html":{},"coverage.html":{}}}],["src/reviews/dtos/create",{"_index":685,"title":{},"body":{"classes/CreateReviewDto.html":{},"coverage.html":{}}}],["src/reviews/providers/create",{"_index":704,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"coverage.html":{}}}],["src/reviews/providers/reviews.service.ts",{"_index":1718,"title":{},"body":{"injectables/ReviewsService.html":{},"coverage.html":{}}}],["src/reviews/providers/reviews.service.ts:29",{"_index":1722,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/providers/reviews.service.ts:45",{"_index":1724,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/providers/reviews.service.ts:9",{"_index":1721,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/reviews.controller.ts",{"_index":1696,"title":{},"body":{"controllers/ReviewsController.html":{},"coverage.html":{}}}],["src/reviews/reviews.controller.ts:33",{"_index":1698,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/reviews/reviews.controller.ts:52",{"_index":1701,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/reviews/reviews.entity",{"_index":1497,"title":{},"body":{"entities/Product.html":{}}}],["src/reviews/reviews.entity.ts",{"_index":1682,"title":{},"body":{"entities/Review.html":{},"coverage.html":{}}}],["src/reviews/reviews.entity.ts:14",{"_index":1684,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.entity.ts:17",{"_index":1689,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.entity.ts:20",{"_index":1688,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.entity.ts:24",{"_index":1691,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.entity.ts:27",{"_index":1683,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.entity.ts:30",{"_index":1686,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.module.ts",{"_index":1714,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["src/subscribers/dtos/create",{"_index":736,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/providers/subscribers.service.ts",{"_index":1802,"title":{},"body":{"injectables/SubscribersService.html":{},"coverage.html":{}}}],["src/subscribers/providers/subscribers.service.ts:12",{"_index":1806,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/providers/subscribers.service.ts:36",{"_index":1809,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/providers/subscribers.service.ts:55",{"_index":1813,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscriber.entity",{"_index":1263,"title":{},"body":{"injectables/MailService.html":{}}}],["src/subscribers/subscriber.entity.ts",{"_index":1782,"title":{},"body":{"entities/Subscriber.html":{},"coverage.html":{}}}],["src/subscribers/subscriber.entity.ts:17",{"_index":1786,"title":{},"body":{"entities/Subscriber.html":{}}}],["src/subscribers/subscriber.entity.ts:9",{"_index":1787,"title":{},"body":{"entities/Subscriber.html":{}}}],["src/subscribers/subscribers.controller.ts",{"_index":1789,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.module.ts",{"_index":1796,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["src/uploads/providers/upload",{"_index":1869,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"coverage.html":{}}}],["src/uploads/providers/uploads.service",{"_index":601,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["src/uploads/providers/uploads.service.ts",{"_index":1911,"title":{},"body":{"injectables/UploadsService.html":{},"coverage.html":{}}}],["src/uploads/providers/uploads.service.ts:10",{"_index":1914,"title":{},"body":{"injectables/UploadsService.html":{}}}],["src/uploads/providers/uploads.service.ts:33",{"_index":1916,"title":{},"body":{"injectables/UploadsService.html":{}}}],["src/uploads/uploads.module",{"_index":1643,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/uploads/uploads.module.ts",{"_index":1907,"title":{},"body":{"modules/UploadsModule.html":{}}}],["src/users/dtos/create",{"_index":750,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/get",{"_index":1108,"title":{},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"coverage.html":{}}}],["src/users/dtos/patch",{"_index":1398,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["src/users/providers/clear",{"_index":504,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"coverage.html":{}}}],["src/users/providers/create",{"_index":762,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"coverage.html":{}}}],["src/users/providers/find",{"_index":1020,"title":{},"body":{"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"coverage.html":{}}}],["src/users/providers/store",{"_index":1771,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{},"coverage.html":{}}}],["src/users/providers/users.service",{"_index":1147,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["src/users/providers/users.service.ts",{"_index":1996,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/providers/users.service.ts:106",{"_index":2019,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:115",{"_index":2017,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:126",{"_index":2006,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:135",{"_index":2015,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:144",{"_index":2011,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:168",{"_index":2008,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:179",{"_index":2021,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:27",{"_index":2004,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:87",{"_index":2007,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:96",{"_index":2013,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/user.entity",{"_index":898,"title":{},"body":{"entities/DiscountUsage.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{}}}],["src/users/user.entity.ts",{"_index":1928,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/user.entity.ts:13",{"_index":1934,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:20",{"_index":1933,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:27",{"_index":1935,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:34",{"_index":1939,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:41",{"_index":1931,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:48",{"_index":1941,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:55",{"_index":1930,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:62",{"_index":1942,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:67",{"_index":1943,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:75",{"_index":1932,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:82",{"_index":1940,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:89",{"_index":1936,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:95",{"_index":1937,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.controller.ts",{"_index":1947,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:111",{"_index":1962,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:117",{"_index":1969,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:156",{"_index":1956,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:67",{"_index":1966,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":427,"title":{},"body":{"modules/AuthModule.html":{},"modules/PaystackModule.html":{}}}],["src/users/users.module.ts",{"_index":1985,"title":{},"body":{"modules/UsersModule.html":{}}}],["ssl",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["stamp",{"_index":1901,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["star",{"_index":701,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["star'})@max(5",{"_index":696,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["stars",{"_index":690,"title":{},"body":{"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"entities/Review.html":{}}}],["start",{"_index":607,"title":{},"body":{"injectables/CreateProductProvider.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"injectables/InitiatePaymentProvider.html":{},"index.html":{}}}],["start:dev",{"_index":2133,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":2134,"title":{},"body":{"index.html":{}}}],["startdate",{"_index":1110,"title":{},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["started",{"_index":2115,"title":{"index.html":{}},"body":{}}],["starter",{"_index":2125,"title":{},"body":{"index.html":{}}}],["state",{"_index":526,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["state.dto",{"_index":836,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"classes/UpdateDeliveryStateDto.html":{}}}],["state.dto.ts",{"_index":524,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"classes/UpdateDeliveryStateDto.html":{},"coverage.html":{}}}],["state.dto.ts:10",{"_index":529,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{}}}],["state.dto.ts:6",{"_index":530,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{}}}],["state.entity",{"_index":856,"title":{},"body":{"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{}}}],["state.entity.ts",{"_index":801,"title":{},"body":{"entities/DeliveryState.html":{},"coverage.html":{}}}],["state.entity.ts:13",{"_index":807,"title":{},"body":{"entities/DeliveryState.html":{}}}],["state.entity.ts:16",{"_index":808,"title":{},"body":{"entities/DeliveryState.html":{}}}],["state.entity.ts:19",{"_index":805,"title":{},"body":{"entities/DeliveryState.html":{}}}],["state.entity.ts:22",{"_index":803,"title":{},"body":{"entities/DeliveryState.html":{}}}],["stateid",{"_index":831,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{}}}],["statements",{"_index":2038,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":817,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{}}}],["states.controller",{"_index":855,"title":{},"body":{"modules/DeliveryStatesModule.html":{}}}],["states.controller.ts",{"_index":816,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"coverage.html":{}}}],["states.controller.ts:25",{"_index":823,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["states.controller.ts:40",{"_index":826,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["states.controller.ts:51",{"_index":830,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["states.module",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["states.module.ts",{"_index":854,"title":{},"body":{"modules/DeliveryStatesModule.html":{}}}],["states.service",{"_index":835,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{}}}],["states.service.ts",{"_index":859,"title":{},"body":{"injectables/DeliveryStatesService.html":{},"coverage.html":{}}}],["states.service.ts:13",{"_index":862,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["states.service.ts:27",{"_index":864,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["states.service.ts:54",{"_index":866,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["states.service.ts:84",{"_index":867,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["states/delivery",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"coverage.html":{}}}],["states/dtos/create",{"_index":523,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"coverage.html":{}}}],["states/dtos/update",{"_index":1822,"title":{},"body":{"classes/UpdateDeliveryStateDto.html":{},"coverage.html":{}}}],["states/providers/delivery",{"_index":858,"title":{},"body":{"injectables/DeliveryStatesService.html":{},"coverage.html":{}}}],["static",{"_index":459,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["status",{"_index":392,"title":{},"body":{"controllers/AuthController.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["stay",{"_index":2169,"title":{},"body":{"index.html":{}}}],["store",{"_index":1766,"title":{},"body":{"injectables/SignInProvider.html":{},"injectables/UsersService.html":{}}}],["stored",{"_index":1040,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UsersService.html":{}}}],["storedimagesurls",{"_index":625,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["storedimagesurls.push(urls",{"_index":629,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["storeotpandexpire",{"_index":1774,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["storeotpandexpire(user",{"_index":1776,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["storeotpandexpireprovider",{"_index":1770,"title":{"injectables/StoreOtpAndExpireProvider.html":{}},"body":{"injectables/StoreOtpAndExpireProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["storeotpandexpiresprovider",{"_index":2002,"title":{},"body":{"injectables/UsersService.html":{}}}],["storetokenotpandotpexpire",{"_index":1999,"title":{},"body":{"injectables/UsersService.html":{}}}],["storetokenotpandotpexpire(user",{"_index":2018,"title":{},"body":{"injectables/UsersService.html":{}}}],["storing",{"_index":1773,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{},"injectables/UsersService.html":{}}}],["streetaddress",{"_index":1405,"title":{},"body":{"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["strict",{"_index":1244,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":49,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"interfaces/Paginated.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/SignInDto.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["string(error",{"_index":665,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["style",{"_index":1097,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["sub",{"_index":120,"title":{},"body":{"interfaces/ActiveUserData.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["subject",{"_index":1269,"title":{},"body":{"injectables/MailService.html":{}}}],["subscribe",{"_index":1259,"title":{},"body":{"injectables/MailService.html":{}}}],["subscribed",{"_index":1811,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["subscriber",{"_index":739,"title":{"entities/Subscriber.html":{}},"body":{"classes/CreateSubscriberDto.html":{},"injectables/MailService.html":{},"entities/Subscriber.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{}}}],["subscriber.dto",{"_index":1816,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["subscriber.dto.ts",{"_index":737,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"coverage.html":{}}}],["subscriber.dto.ts:18",{"_index":742,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.email",{"_index":1280,"title":{},"body":{"injectables/MailService.html":{}}}],["subscriber.entity",{"_index":1798,"title":{},"body":{"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{}}}],["subscriber.id",{"_index":1284,"title":{},"body":{"injectables/MailService.html":{}}}],["subscriberrepository",{"_index":1807,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["subscribers",{"_index":1790,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["subscribers.controller",{"_index":1800,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["subscribers/subscribers.module",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["subscriberscontroller",{"_index":1788,"title":{"controllers/SubscribersController.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"coverage.html":{}}}],["subscribersmodule",{"_index":156,"title":{"modules/SubscribersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SubscribersModule.html":{},"modules.html":{},"overview.html":{}}}],["subscribersservice",{"_index":1795,"title":{"injectables/SubscribersService.html":{}},"body":{"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"overview.html":{}}}],["success",{"_index":2109,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["successful",{"_index":653,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/UsersService.html":{}}}],["successfully",{"_index":343,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["summary",{"_index":391,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["support",{"_index":1267,"title":{},"body":{"injectables/MailService.html":{},"index.html":{},"modules.html":{}}}],["supported",{"_index":1924,"title":{},"body":{"injectables/UploadsService.html":{}}}],["svg",{"_index":2197,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["t",{"_index":1062,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["table",{"_index":1783,"title":{},"body":{"entities/Subscriber.html":{},"entities/User.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2073,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1347,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["team",{"_index":1268,"title":{},"body":{"injectables/MailService.html":{}}}],["template",{"_index":1238,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["templates",{"_index":1241,"title":{},"body":{"modules/MailModule.html":{}}}],["test",{"_index":2137,"title":{},"body":{"index.html":{}}}],["test:covresources",{"_index":2140,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":2139,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2135,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":2181,"title":{},"body":{"index.html":{}}}],["this.accesstokenguard",{"_index":481,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.applyfordiscountprovider.applyfordiscount(user",{"_index":936,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["this.appservice.gethello",{"_index":132,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.otpsignin(otpsignindto",{"_index":412,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.refreshtokens(refreshtokendto",{"_index":417,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signin(signindto",{"_index":407,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authtypeguardmap[type]).flat",{"_index":496,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.category",{"_index":1501,"title":{},"body":{"entities/Product.html":{}}}],["this.category.tolowercase",{"_index":1502,"title":{},"body":{"entities/Product.html":{}}}],["this.clearotpandexpirytimeprovider.clearotpandexpirytime(user",{"_index":2028,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.clothtype",{"_index":1505,"title":{},"body":{"entities/Product.html":{}}}],["this.clothtype.tolowercase",{"_index":1506,"title":{},"body":{"entities/Product.html":{}}}],["this.configservice.get('appconfig.apiversion",{"_index":798,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["this.configservice.get('appconfig.awsbucketname",{"_index":1888,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["this.configservice.get('appconfig.awscloudfronturl')}/${name",{"_index":1927,"title":{},"body":{"injectables/UploadsService.html":{}}}],["this.configservice.get('appconfig.host')}/collections?success=yes",{"_index":1189,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["this.creatediscountprovider.creatediscount(creatediscountdto",{"_index":935,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["this.createproductprovider.createproduct(createproductdto",{"_index":1659,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.createreviewprovider.createreview(createreviewdto",{"_index":1725,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.createuserprovider.createuser(createuserdto",{"_index":2024,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.datasource.createqueryrunner",{"_index":612,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["this.deliverystaterepository.create(createdeliverystatedto",{"_index":870,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["this.deliverystaterepository.findoneby",{"_index":872,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["this.deliverystaterepository.save(deliverystate",{"_index":871,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["this.deliverystatesservice.createdeliverystate",{"_index":843,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["this.deliverystatesservice.finddeliverystatebyname(state",{"_index":847,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["this.deliverystatesservice.updatedeliverystate",{"_index":851,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["this.discountsrepository.create(creatediscountdto",{"_index":548,"title":{},"body":{"injectables/CreateDiscountProvider.html":{}}}],["this.discountsrepository.findone",{"_index":302,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["this.discountsrepository.save(discount",{"_index":551,"title":{},"body":{"injectables/CreateDiscountProvider.html":{}}}],["this.discountsservice.applyfordiscount",{"_index":917,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["this.discountsservice.creatediscount(creatediscountdto",{"_index":914,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["this.discountsusagerepository.count",{"_index":956,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["this.discountsusageservice.countdiscountusage",{"_index":322,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["this.dressstyle",{"_index":1503,"title":{},"body":{"entities/Product.html":{}}}],["this.dressstyle.tolowercase",{"_index":1504,"title":{},"body":{"entities/Product.html":{}}}],["this.extractrequestfromheader(request",{"_index":77,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.findallproductsprovider.findall(productquery",{"_index":1662,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.findonebyidprovider.findbyid(id",{"_index":2029,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.findoneuserbyemailprovider.findonebyemail(email",{"_index":2025,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.finduserbyotpandexpiresprovider.finduserbyotpandexpirytime",{"_index":2027,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.generatefilename(file",{"_index":1890,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["this.generatetokenprovider.generatetokens(user",{"_index":1309,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["this.getauthheader",{"_index":1193,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["this.initiatepaymentprovider.initializepayment",{"_index":1475,"title":{},"body":{"injectables/PaystackService.html":{}}}],["this.jwtconfiguration",{"_index":88,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.jwtconfiguration.accesstokenttl",{"_index":1078,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.jwtconfiguration.audience",{"_index":1069,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["this.jwtconfiguration.issuer",{"_index":1071,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["this.jwtconfiguration.refreshtokenttl",{"_index":1082,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.jwtconfiguration.secret",{"_index":1073,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["this.jwtservice.signasync",{"_index":1067,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.jwtservice.verify",{"_index":87,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.jwtservice.verifyasync",{"_index":1677,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["this.mailerservice.sendmail",{"_index":1264,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailservice.sendloginotp(user",{"_index":1768,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.mailservice.sendsubscribermail(subscriber",{"_index":1820,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.name",{"_index":1499,"title":{},"body":{"entities/Product.html":{}}}],["this.name.tolowercase",{"_index":1500,"title":{},"body":{"entities/Product.html":{}}}],["this.otpsigninprovider.signinwithotp(otpsignindto",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.paginationprovider.paginationquery",{"_index":1016,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/UsersService.html":{}}}],["this.paystackconfiguration.baseurl}/transaction/initialize",{"_index":1185,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["this.paystackconfiguration.secret",{"_index":1155,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["this.paystackservice.initiatepayment(initiatepaymentdto",{"_index":1460,"title":{},"body":{"controllers/PaystackController.html":{}}}],["this.productrepository",{"_index":1017,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["this.productrepository.delete(productid",{"_index":1664,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productrepository.findone",{"_index":1827,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["this.productrepository.findoneby",{"_index":1660,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productrepository.save(product",{"_index":1849,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["this.productsservice.createproduct(createproductdto",{"_index":1619,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.deleteproduct(productid",{"_index":1634,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findall(productquery",{"_index":1627,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findproductbyid",{"_index":720,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["this.productsservice.findproductbyid(productid",{"_index":1625,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.updateproduct(productid",{"_index":1630,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productvariantrepository.findone",{"_index":1554,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["this.productvariantrepository.save(variant",{"_index":1557,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["this.productvariantsservice.findproductvariantbyid",{"_index":1854,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["this.productvariantsservice.saveproductvariant(variant",{"_index":1867,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["this.reflector.getallandoverride(auth_type_key",{"_index":490,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.reflector.getallandoverride(roles_key",{"_index":1740,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.refreshtokenprovider.refreshtokens(refreshtokendto",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.request.headers.host",{"_index":1354,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["this.request.protocol",{"_index":1353,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["this.reviewsrepository.create",{"_index":723,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["this.reviewsrepository.delete(reviewid",{"_index":1726,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.reviewsrepository.save(newreview",{"_index":727,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["this.reviewsservice.createreview(createreviewdto",{"_index":1707,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.reviewsservice.deletereview(reviewid",{"_index":1710,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.signinprovider.signin(signindto",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.signtoken",{"_index":1076,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.signtoken(user.id",{"_index":1081,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.state",{"_index":813,"title":{},"body":{"entities/DeliveryState.html":{}}}],["this.state.tolowercase",{"_index":814,"title":{},"body":{"entities/DeliveryState.html":{}}}],["this.storeotpandexpiresprovider.storeotpandexpire(user",{"_index":2026,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.subscriberrepository.create(createsubscriberdto",{"_index":1818,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscriberrepository.delete(id",{"_index":1821,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscriberrepository.save(subscriber",{"_index":1819,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.ticketsservice.updateticketsstatus",{"_index":1203,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["this.updateproductprovider.updateproduct(id",{"_index":1663,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.uploadsservice.uploadfile(file",{"_index":628,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["this.uploadtoawsprovider.fileupload(file",{"_index":1926,"title":{},"body":{"injectables/UploadsService.html":{}}}],["this.usersrepository",{"_index":2032,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.create",{"_index":773,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["this.usersrepository.delete(userid",{"_index":2033,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.find",{"_index":1047,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["this.usersrepository.findone",{"_index":1035,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{}}}],["this.usersrepository.findoneby",{"_index":1028,"title":{},"body":{"injectables/FindOneByIdProvider.html":{},"injectables/UsersService.html":{}}}],["this.usersrepository.save(newuser",{"_index":774,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["this.usersrepository.save(newuserobj",{"_index":519,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{}}}],["this.usersrepository.save(user",{"_index":2035,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.clearotpandexpirytime(user",{"_index":1307,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["this.usersservice.createuser",{"_index":1760,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.usersservice.deleteuser(userid",{"_index":1980,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(usersquery",{"_index":1976,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyemail(signindto.email",{"_index":1758,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.usersservice.findonebyid(sub",{"_index":1680,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["this.usersservice.findonebyid(user.sub",{"_index":1157,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["this.usersservice.findonebyid(userid",{"_index":1974,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.finduserbyresetotpandexpirytime(hashedotp",{"_index":1305,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["this.usersservice.storetokenotpandotpexpire(user",{"_index":1767,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.usersservice.updateuser(user.sub",{"_index":1977,"title":{},"body":{"controllers/UsersController.html":{}}}],["through",{"_index":498,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["throw",{"_index":78,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}}}],["ticket",{"_index":1265,"title":{},"body":{"injectables/MailService.html":{}}}],["ticket.id",{"_index":1206,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["tickets",{"_index":1201,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["tickets.map((ticket",{"_index":1205,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["ticketstatus.locked",{"_index":1207,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["time",{"_index":1041,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["time.provider",{"_index":1992,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["time.provider.ts",{"_index":506,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"coverage.html":{}}}],["time.provider.ts:14",{"_index":1043,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["time.provider.ts:25",{"_index":512,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{}}}],["time.provider.ts:32",{"_index":1045,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["time.provider.ts:7",{"_index":509,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{}}}],["times",{"_index":300,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsService.html":{}}}],["timestamp",{"_index":885,"title":{},"body":{"entities/Discount.html":{},"injectables/OtpSigninProvider.html":{},"injectables/UploadToAwsProvider.html":{},"entities/User.html":{}}}],["tls",{"_index":1235,"title":{},"body":{"modules/MailModule.html":{}}}],["token",{"_index":11,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"controllers/ProductsController.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["token.dto",{"_index":382,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenProvider.html":{}}}],["token.dto.ts",{"_index":1665,"title":{},"body":{"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["token.dto.ts:17",{"_index":1667,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["token.guard",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{}}}],["token.guard.ts",{"_index":8,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{}}}],["token.guard.ts:18",{"_index":24,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard.ts:42",{"_index":32,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard.ts:77",{"_index":46,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.provider",{"_index":434,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["token.provider.ts",{"_index":1670,"title":{},"body":{"injectables/RefreshTokenProvider.html":{},"coverage.html":{}}}],["token.provider.ts:19",{"_index":1672,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["token.provider.ts:56",{"_index":1673,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["token/access",{"_index":7,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["tokend",{"_index":1674,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["tokens",{"_index":356,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["tokens')@httpcode(httpstatus.ok)@auth(authtype.none",{"_index":359,"title":{},"body":{"controllers/AuthController.html":{}}}],["tokens'})@apiresponse({status",{"_index":355,"title":{},"body":{"controllers/AuthController.html":{}}}],["tokens.provider",{"_index":431,"title":{},"body":{"modules/AuthModule.html":{},"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["tokens.provider.ts",{"_index":1053,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"coverage.html":{}}}],["tokens.provider.ts:12",{"_index":1057,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["tokens.provider.ts:38",{"_index":1063,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["tokens.provider.ts:58",{"_index":1059,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["top",{"_index":1829,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["totalamount",{"_index":1167,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["totalitems",{"_index":1317,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["totalpages",{"_index":1319,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["totalqty",{"_index":1171,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["touch",{"_index":2187,"title":{},"body":{"index.html":{}}}],["track",{"_index":1272,"title":{},"body":{"injectables/MailService.html":{}}}],["transaction",{"_index":609,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["transformer",{"_index":577,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{},"dependencies.html":{}}}],["transformtolowercase",{"_index":812,"title":{},"body":{"entities/DeliveryState.html":{},"entities/Product.html":{}}}],["transport",{"_index":1231,"title":{},"body":{"modules/MailModule.html":{}}}],["trim",{"_index":1898,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["true",{"_index":39,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"entities/Discount.html":{},"classes/InitiatePaymentDto.html":{},"modules/MailModule.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductVariant.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"guards/RolesGuard.html":{},"entities/Subscriber.html":{},"injectables/UpdateProductProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["true})@type(undefined",{"_index":575,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["try",{"_index":81,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}}}],["twitter",{"_index":2193,"title":{},"body":{"index.html":{}}}],["txn",{"_index":656,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["type",{"_index":28,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"modules/AppModule.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":380,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateUserDto.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["type.enum.ts",{"_index":2103,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typeorm",{"_index":286,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"entities/DeliveryState.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/PaginationProvider.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"entities/Review.html":{},"injectables/ReviewsService.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([deliverystate",{"_index":857,"title":{},"body":{"modules/DeliveryStatesModule.html":{}}}],["typeormmodule.forfeature([discount",{"_index":927,"title":{},"body":{"modules/DiscountsModule.html":{}}}],["typeormmodule.forfeature([discountusage",{"_index":943,"title":{},"body":{"modules/DiscountsUsageModule.html":{}}}],["typeormmodule.forfeature([product",{"_index":1648,"title":{},"body":{"modules/ProductsModule.html":{}}}],["typeormmodule.forfeature([productimage",{"_index":1522,"title":{},"body":{"modules/ProductImagesModule.html":{}}}],["typeormmodule.forfeature([productvariant",{"_index":1541,"title":{},"body":{"modules/ProductVariantsModule.html":{}}}],["typeormmodule.forfeature([review",{"_index":1717,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["typeormmodule.forfeature([subscriber",{"_index":1801,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":1995,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":479,"title":{},"body":{"guards/AuthenticationGuard.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/UpdateDeliveryStateDto.html":{}}}],["types/multer",{"_index":2083,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":96,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["unable",{"_index":310,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["unauthorizedexception",{"_index":54,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["unauthorizedexception('otp",{"_index":1050,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["unauthorizedexception('user",{"_index":1038,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{}}}],["unauthorizedexception(error",{"_index":1681,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["undefined",{"_index":50,"title":{},"body":{"guards/AccessTokenGuard.html":{},"entities/Discount.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"entities/Payment.html":{},"injectables/UpdateProductProvider.html":{},"miscellaneous/variables.html":{}}}],["undefined'])@auth(authtype.none)@get('/:productid",{"_index":1593,"title":{},"body":{"controllers/ProductsController.html":{}}}],["undefined'])@delete('/:userid",{"_index":1955,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined'])@get",{"_index":1961,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined'])@get('/:userid",{"_index":1965,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined})@apibody({description",{"_index":345,"title":{},"body":{"controllers/AuthController.html":{}}}],["undefined})@httpcode(httpstatus.ok)@auth(authtype.none)@patch('/otp",{"_index":349,"title":{},"body":{"controllers/AuthController.html":{}}}],["undefined})@post('/sign",{"_index":364,"title":{},"body":{"controllers/AuthController.html":{}}}],["undefined})@post('refresh",{"_index":358,"title":{},"body":{"controllers/AuthController.html":{}}}],["unique",{"_index":1445,"title":{},"body":{"entities/Payment.html":{},"controllers/ProductsController.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["unit",{"_index":2136,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":280,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaystackService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":2208,"title":{},"body":{"properties.html":{}}}],["unsubscribed",{"_index":1815,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["unsubscribeemail",{"_index":1804,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["unsubscribeemail(id",{"_index":1812,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["unsubscribing",{"_index":1814,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["unsuccessful",{"_index":659,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["unsupported",{"_index":1918,"title":{},"body":{"injectables/UploadsService.html":{}}}],["unused",{"_index":98,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["update",{"_index":876,"title":{},"body":{"injectables/DeliveryStatesService.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["update(otp.tostring",{"_index":1765,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["update(otpsignindto.otp.tostring",{"_index":1302,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["updated",{"_index":832,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["updatedat",{"_index":1418,"title":{},"body":{"entities/Payment.html":{},"entities/Product.html":{}}}],["updatedatecolumn",{"_index":1434,"title":{},"body":{"entities/Payment.html":{},"entities/Product.html":{}}}],["updatedeliverystate",{"_index":820,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{}}}],["updatedeliverystate(stateid",{"_index":827,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{}}}],["updatedeliverystatedto",{"_index":828,"title":{"classes/UpdateDeliveryStateDto.html":{}},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"classes/UpdateDeliveryStateDto.html":{},"coverage.html":{}}}],["updateproduct",{"_index":1650,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["updateproduct(id",{"_index":1657,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["updateproductprovider",{"_index":1639,"title":{"injectables/UpdateProductProvider.html":{}},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{},"coverage.html":{},"overview.html":{}}}],["updates",{"_index":848,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"index.html":{}}}],["updateuser",{"_index":2000,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuser(id",{"_index":2020,"title":{},"body":{"injectables/UsersService.html":{}}}],["upload",{"_index":620,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["uploadedfiles",{"_index":1601,"title":{},"body":{"controllers/ProductsController.html":{}}}],["uploadfile",{"_index":1912,"title":{},"body":{"injectables/UploadsService.html":{}}}],["uploadfile(file",{"_index":1915,"title":{},"body":{"injectables/UploadsService.html":{}}}],["uploading",{"_index":1876,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["uploadresult",{"_index":1886,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["uploadresult.key",{"_index":1893,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["uploads",{"_index":604,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["uploads/uploads.module",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["uploadsmodule",{"_index":157,"title":{"modules/UploadsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/UploadsModule.html":{},"modules.html":{},"overview.html":{}}}],["uploadsservice",{"_index":592,"title":{"injectables/UploadsService.html":{}},"body":{"injectables/CreateProductProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"coverage.html":{},"overview.html":{}}}],["uploadtoawsprovider",{"_index":1868,"title":{"injectables/UploadToAwsProvider.html":{}},"body":{"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"coverage.html":{},"overview.html":{}}}],["url",{"_index":1917,"title":{},"body":{"injectables/UploadsService.html":{}}}],["url(this.request.url",{"_index":1356,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["urls",{"_index":1351,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["urlsindex",{"_index":643,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["usage",{"_index":295,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsUsageService.html":{}}}],["usage.entity",{"_index":942,"title":{},"body":{"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{}}}],["usage.entity.ts",{"_index":890,"title":{},"body":{"entities/DiscountUsage.html":{},"coverage.html":{}}}],["usage.entity.ts:13",{"_index":894,"title":{},"body":{"entities/DiscountUsage.html":{}}}],["usage.entity.ts:16",{"_index":896,"title":{},"body":{"entities/DiscountUsage.html":{}}}],["usage.entity.ts:19",{"_index":893,"title":{},"body":{"entities/DiscountUsage.html":{}}}],["usage.entity.ts:25",{"_index":895,"title":{},"body":{"entities/DiscountUsage.html":{}}}],["usage.module",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"modules/DiscountsModule.html":{}}}],["usage.module.ts",{"_index":940,"title":{},"body":{"modules/DiscountsUsageModule.html":{}}}],["usage.service",{"_index":292,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"modules/DiscountsUsageModule.html":{}}}],["usage.service.ts",{"_index":944,"title":{},"body":{"injectables/DiscountsUsageService.html":{},"coverage.html":{}}}],["usage.service.ts:22",{"_index":951,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["usage.service.ts:7",{"_index":947,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["usage/discounts",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"entities/DiscountUsage.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"coverage.html":{}}}],["usage/providers/discounts",{"_index":291,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsUsageService.html":{},"coverage.html":{}}}],["usagecount",{"_index":321,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsUsageService.html":{}}}],["usagelimit",{"_index":878,"title":{},"body":{"entities/Discount.html":{}}}],["use",{"_index":472,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"guards/RolesGuard.html":{}}}],["useclass",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":301,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsService.html":{}}}],["usedat",{"_index":891,"title":{},"body":{"entities/DiscountUsage.html":{}}}],["usefactory",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["useinterceptors",{"_index":1602,"title":{},"body":{"controllers/ProductsController.html":{}}}],["user",{"_index":35,"title":{"entities/User.html":{}},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ProductsController.html":{},"injectables/RefreshTokenProvider.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user.decorator",{"_index":910,"title":{},"body":{"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/UsersController.html":{}}}],["user.decorator.ts",{"_index":2045,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":768,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":751,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/PatchUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":1411,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:14",{"_index":1113,"title":{},"body":{"classes/GetUsersBaseDto.html":{}}}],["user.dto.ts:16",{"_index":1409,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:20",{"_index":1412,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:21",{"_index":752,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUsersBaseDto.html":{}}}],["user.dto.ts:24",{"_index":1413,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:28",{"_index":1408,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:32",{"_index":754,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{}}}],["user.dto.ts:36",{"_index":1415,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:8",{"_index":1410,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.email",{"_index":1079,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{}}}],["user.entity",{"_index":514,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.fullname",{"_index":1276,"title":{},"body":{"injectables/MailService.html":{}}}],["user.id",{"_index":1077,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{}}}],["user.role",{"_index":1080,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{}}}],["user.sub",{"_index":324,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["user?.[field",{"_index":2222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user[0",{"_index":1049,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["userid",{"_index":950,"title":{},"body":{"injectables/DiscountsUsageService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["userquery",{"_index":2012,"title":{},"body":{"injectables/UsersService.html":{}}}],["userquery.limit",{"_index":2030,"title":{},"body":{"injectables/UsersService.html":{}}}],["userquery.page",{"_index":2031,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":515,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OtpSigninProvider.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":1986,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.provider",{"_index":1988,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["users.provider.ts",{"_index":763,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"coverage.html":{}}}],["users.provider.ts:18",{"_index":765,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["users.provider.ts:38",{"_index":767,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["users/users.module",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":1946,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":158,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PaystackModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersquery",{"_index":1963,"title":{},"body":{"controllers/UsersController.html":{}}}],["usersrepository",{"_index":510,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/UsersService.html":{}}}],["usersservice",{"_index":1133,"title":{"injectables/UsersService.html":{}},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":470,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"index.html":{}}}],["uuid",{"_index":1885,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"dependencies.html":{}}}],["uuid4",{"_index":1884,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["uuid4()}${extension",{"_index":1903,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["v",{"_index":1009,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["v4",{"_index":1883,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["valid",{"_index":82,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["validate",{"_index":80,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["validatenested",{"_index":579,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["validating",{"_index":1730,"title":{},"body":{"guards/RolesGuard.html":{}}}],["validation",{"_index":106,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["validationschema",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":267,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/OtpSigninDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{},"dependencies.html":{}}}],["validfrom",{"_index":303,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"entities/Discount.html":{}}}],["validity",{"_index":298,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsService.html":{}}}],["validuntil",{"_index":306,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"classes/CreateDiscountDto.html":{},"entities/Discount.html":{}}}],["value",{"_index":393,"title":{},"body":{"controllers/AuthController.html":{},"classes/PaginationQueryDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":1784,"title":{},"body":{"entities/Subscriber.html":{},"entities/User.html":{}}}],["variable",{"_index":2040,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2209,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variant",{"_index":631,"title":{},"body":{"injectables/CreateProductProvider.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["variant.color",{"_index":1859,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variant.dto",{"_index":583,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["variant.dto.ts",{"_index":671,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"classes/PatchProductVariantDto.html":{},"coverage.html":{}}}],["variant.dto.ts:10",{"_index":1391,"title":{},"body":{"classes/PatchProductVariantDto.html":{}}}],["variant.dto.ts:14",{"_index":1394,"title":{},"body":{"classes/PatchProductVariantDto.html":{}}}],["variant.dto.ts:15",{"_index":675,"title":{},"body":{"classes/CreateProductVariantDto.html":{}}}],["variant.dto.ts:19",{"_index":680,"title":{},"body":{"classes/CreateProductVariantDto.html":{}}}],["variant.dto.ts:24",{"_index":679,"title":{},"body":{"classes/CreateProductVariantDto.html":{}}}],["variant.dto.ts:30",{"_index":677,"title":{},"body":{"classes/CreateProductVariantDto.html":{}}}],["variant.images",{"_index":1512,"title":{},"body":{"entities/ProductImage.html":{}}}],["variant.product",{"_index":1495,"title":{},"body":{"entities/Product.html":{}}}],["variant.quantity",{"_index":1863,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variant.size",{"_index":1861,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variant.soldout",{"_index":1865,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantdto",{"_index":1853,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantdto.color",{"_index":1858,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantdto.id",{"_index":1855,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantdto.quantity",{"_index":1862,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantdto.size",{"_index":1860,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantdto.soldout",{"_index":1864,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantid",{"_index":1448,"title":{},"body":{"entities/Payment.html":{},"injectables/ProductVariantsService.html":{}}}],["variants",{"_index":562,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"injectables/FindAllProductsProvider.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"classes/PatchProductDto.html":{},"entities/Payment.html":{},"entities/Product.html":{},"classes/ProductWithVariantDto.html":{},"injectables/UpdateProductProvider.html":{}}}],["variants.entity",{"_index":584,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{}}}],["variants.entity.ts",{"_index":1525,"title":{},"body":{"entities/ProductVariant.html":{},"coverage.html":{}}}],["variants.entity.ts:15",{"_index":1527,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:18",{"_index":1526,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:21",{"_index":1533,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:24",{"_index":1532,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:27",{"_index":1534,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:33",{"_index":1531,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:39",{"_index":1529,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.images",{"_index":1015,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["variants.module",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{}}}],["variants.module.ts",{"_index":1539,"title":{},"body":{"modules/ProductVariantsModule.html":{}}}],["variants.service",{"_index":1540,"title":{},"body":{"modules/ProductVariantsModule.html":{},"injectables/UpdateProductProvider.html":{}}}],["variants.service.ts",{"_index":1543,"title":{},"body":{"injectables/ProductVariantsService.html":{},"coverage.html":{}}}],["variants.service.ts:22",{"_index":1550,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["variants.service.ts:44",{"_index":1552,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["variants.service.ts:7",{"_index":1547,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["variants/dto/create",{"_index":582,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"coverage.html":{}}}],["variants/dto/patch",{"_index":1126,"title":{},"body":{"classes/InitiatePaymentDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/ProductWithVariantDto.html":{},"coverage.html":{}}}],["variants/product",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["variants/providers/product",{"_index":1542,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{},"coverage.html":{}}}],["variants[${i}][images",{"_index":1616,"title":{},"body":{"controllers/ProductsController.html":{}}}],["variantsimages",{"_index":621,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["variantsimages.push(filearray",{"_index":624,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["various",{"_index":1314,"title":{},"body":{"interfaces/Paginated.html":{}}}],["vars",{"_index":99,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["verify",{"_index":1676,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["version",{"_index":2206,"title":{},"body":{"properties.html":{}}}],["video",{"_index":2157,"title":{},"body":{"index.html":{}}}],["visit",{"_index":2146,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":2159,"title":{},"body":{"index.html":{}}}],["vr",{"_index":637,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["vr.quantity",{"_index":1174,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["want",{"_index":1583,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["watch",{"_index":2131,"title":{},"body":{"index.html":{}}}],["wears",{"_index":1278,"title":{},"body":{"injectables/MailService.html":{}}}],["website",{"_index":2191,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":1281,"title":{},"body":{"injectables/MailService.html":{}}}],["whereoptions",{"_index":982,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["whereoptions.push(filteredconditions",{"_index":1010,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["whether",{"_index":42,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{},"guards/RolesGuard.html":{}}}],["white",{"_index":1895,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["without",{"_index":474,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["working",{"_index":2145,"title":{},"body":{"index.html":{}}}],["world",{"_index":257,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":1621,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["yes",{"_index":1064,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/PaginationProvider.html":{}}}],["you'd",{"_index":2185,"title":{},"body":{"index.html":{}}}],["zipcode",{"_index":1406,"title":{},"body":{"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["zoom",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/PaginationModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AccessTokenGuard.html":{"url":"guards/AccessTokenGuard.html","title":"guard - AccessTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AccessTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/access-token/access-token.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    guard for access token\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractRequestFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConfiguration: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/access-token/access-token.guard.ts:18\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/access-token/access-token.guard.ts:42\n                        \n                    \n\n\n            \n                \n                        function for checking if user has access token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                true or false depending on whether user is signed in or not\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractRequestFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractRequestFromHeader(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/access-token/access-token.guard.ts:77\n                        \n                    \n\n\n            \n                \n                        function for extracting the access token from the request headers\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                access token\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ConfigType } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\nimport jwtConfig from 'src/auth/config/jwt.config';\nimport { REQUEST_USER_KEY } from 'src/auth/constants/auth.constant';\n\n/**\n * guard for access token\n */\n@Injectable()\nexport class AccessTokenGuard implements CanActivate {\n  /**\n   * constructor\n   * @param jwtService\n   * @param jwtConfiguration\n   */\n  constructor(\n    /**\n     * Inject jwtService\n     */\n    private readonly jwtService: JwtService,\n\n    /**\n     * inject jwt config\n     */\n    @Inject(jwtConfig.KEY)\n    private readonly jwtConfiguration: ConfigType,\n  ) {}\n\n  /**\n   * function for checking if user has access token\n   * @param context\n   * @returns true or false depending on whether user is signed in or not\n   */\n  async canActivate(context: ExecutionContext): Promise {\n    // we can grab the request from the excetion context\n    const request = context.switchToHttp().getRequest();\n\n    // extract the token from the header\n    const token = this.extractRequestFromHeader(request);\n\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n\n    // validate the token\n    try {\n      // if the token is valid, jwt returns the payload which contains info for indetifying the user\n      const payload = await this.jwtService.verify(\n        token,\n        this.jwtConfiguration,\n      );\n\n      // setting the request.user = payload\n      request[REQUEST_USER_KEY] = payload;\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (_) {\n      throw new UnauthorizedException();\n    }\n\n    // accept or deny req based on validation\n    return true;\n  }\n\n  /**\n   * function for extracting the access token from the request headers\n   * @param request\n   * @returns access token\n   */\n  private extractRequestFromHeader(request: Request): string | undefined {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [_, token] = request.headers.authorization?.split(' ') ?? [];\n    return token;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActiveUserData.html":{"url":"interfaces/ActiveUserData.html","title":"interface - ActiveUserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActiveUserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/active-user-data.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for a user that has logged in (payload)\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    user email\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    user role\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    id for user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ActiveUserData {\n  /**\n   * id for user\n   */\n  sub: string;\n\n  /**\n   * user email\n   */\n  email: string;\n\n  /**\n   * user role\n   */\n  role: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDeliveryStatesModule\n\nDeliveryStatesModule\n\nAppModule -->\n\nDeliveryStatesModule->AppModule\n\n\n\n\n\nDiscountsModule\n\nDiscountsModule\n\nAppModule -->\n\nDiscountsModule->AppModule\n\n\n\n\n\nDiscountsUsageModule\n\nDiscountsUsageModule\n\nAppModule -->\n\nDiscountsUsageModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nAppModule -->\n\nPaymentModule->AppModule\n\n\n\n\n\nPaystackModule\n\nPaystackModule\n\nAppModule -->\n\nPaystackModule->AppModule\n\n\n\n\n\nProductImagesModule\n\nProductImagesModule\n\nAppModule -->\n\nProductImagesModule->AppModule\n\n\n\n\n\nProductVariantsModule\n\nProductVariantsModule\n\nAppModule -->\n\nProductVariantsModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nReviewsModule\n\nReviewsModule\n\nAppModule -->\n\nReviewsModule->AppModule\n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUploadsModule\n\nUploadsModule\n\nAppModule -->\n\nUploadsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            DeliveryStatesModule\n                        \n                        \n                            DiscountsModule\n                        \n                        \n                            DiscountsUsageModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            PaymentModule\n                        \n                        \n                            PaystackModule\n                        \n                        \n                            ProductImagesModule\n                        \n                        \n                            ProductVariantsModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            ReviewsModule\n                        \n                        \n                            SubscribersModule\n                        \n                        \n                            UploadsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport appConfig from './config/app.config';\nimport databaseConfig from './config/database.config';\nimport enviromentValidation from './config/enviroment.validation';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { MailModule } from './mail/mail.module';\nimport { SubscribersModule } from './subscribers/subscribers.module';\nimport { APP_GUARD, APP_INTERCEPTOR } from '@nestjs/core';\nimport { DataResponseInterceptor } from './common/interceptors/data-response/data-response.interceptor';\nimport { AuthenticationGuard } from './auth/guards/authentication/authentication.guard';\nimport { RolesGuard } from './auth/guards/roles/roles.guard';\nimport { AccessTokenGuard } from './auth/guards/access-token/access-token.guard';\nimport jwtConfig from './auth/config/jwt.config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ProductsModule } from './products/products.module';\nimport { ProductVariantsModule } from './product-variants/product-variants.module';\nimport { ProductImagesModule } from './product-images/product-images.module';\n\nimport { ReviewsModule } from './reviews/reviews.module';\nimport { UploadsModule } from './uploads/uploads.module';\nimport { DiscountsModule } from './discounts/discounts.module';\nimport { DiscountsUsageModule } from './discounts-usage/discounts-usage.module';\nimport { DeliveryStatesModule } from './delivery-states/delivery-states.module';\nimport { PaystackModule } from './paystack/paystack.module';\nimport { PaymentModule } from './payment/payment.module';\n\n/**\n * app environment\n */\nconst ENV = process.env.NODE_ENV;\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: !ENV ? '.env' : `.env.${ENV}`,\n      load: [appConfig, databaseConfig],\n      validationSchema: enviromentValidation,\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => {\n        return {\n          type: 'postgres',\n          autoLoadEntities: configService.get('database.autoLoadEntities'),\n          synchronize: configService.get('database.synchronize'),\n          port: +configService.get('database.port'),\n          username: configService.get('database.user'),\n          password: configService.get('database.password'),\n          host: configService.get('database.host'),\n          database: configService.get('database.name'),\n          ssl:\n            process.env.NODE_ENV === 'development'\n              ? false\n              : {\n                  rejectUnauthorized: false,\n                },\n          logging: process.env.NODE_ENV !== 'production',\n        };\n      },\n    }),\n    UsersModule,\n    AuthModule,\n    MailModule,\n    SubscribersModule,\n    // Importing an enviroment config specific for this module\n    ConfigModule.forFeature(jwtConfig),\n    // for asynchrousnously registering the jwt module and passing the config to the module\n    JwtModule.registerAsync(jwtConfig.asProvider()),\n    ProductsModule,\n    ProductVariantsModule,\n    ProductImagesModule,\n    ReviewsModule,\n    UploadsModule,\n    DiscountsModule,\n    DiscountsUsageModule,\n    DeliveryStatesModule,\n    PaystackModule,\n    PaymentModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: DataResponseInterceptor,\n    },\n    {\n      provide: APP_GUARD,\n      useClass: AuthenticationGuard,\n    },\n    {\n      provide: APP_GUARD,\n      useClass: RolesGuard,\n    },\n    AccessTokenGuard,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplyForDiscountDto.html":{"url":"classes/ApplyForDiscountDto.html","title":"class - ApplyForDiscountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplyForDiscountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/dtos/apply-for-discount.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/dtos/apply-for-discount.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class ApplyForDiscountDto {\n  @IsString()\n  @IsNotEmpty()\n  code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplyForDiscountProvider.html":{"url":"injectables/ApplyForDiscountProvider.html","title":"injectable - ApplyForDiscountProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApplyForDiscountProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/providers/apply-for-discount.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                applyForDiscount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(discountsRepository: Repository, discountsUsageService: DiscountsUsageService)\n                    \n                \n                        \n                            \n                                Defined in src/discounts/providers/apply-for-discount.provider.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        discountsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discountsUsageService\n                                                  \n                                                        \n                                                                        DiscountsUsageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        applyForDiscount\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyForDiscount(user: ActiveUserData, code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/discounts/providers/apply-for-discount.provider.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                discount\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { LessThanOrEqual, MoreThanOrEqual, Repository } from 'typeorm';\nimport { Discount } from '../discounts.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\nimport { DiscountsUsageService } from 'src/discounts-usage/providers/discounts-usage.service';\n\n@Injectable()\nexport class ApplyForDiscountProvider {\n  constructor(\n    /**\n     * injecting the discounts repository\n     */\n    @InjectRepository(Discount)\n    private readonly discountsRepository: Repository,\n\n    /**\n     * injecting the discounts usage service\n     */\n    private readonly discountsUsageService: DiscountsUsageService,\n  ) {}\n\n  /**\n   * @function checks the validity of the code and how many times the user has used it\n   * @param user\n   * @param code\n   * @returns discount\n   */\n  public async applyForDiscount(user: ActiveUserData, code: string) {\n    let discount: Discount;\n\n    try {\n      discount = await this.discountsRepository.findOne({\n        where: {\n          code,\n          validFrom: LessThanOrEqual(new Date()),\n          validUntil: MoreThanOrEqual(new Date()),\n        },\n      });\n    } catch (error) {\n      console.log(error);\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    //Handle the discount does not exist\n    if (!discount) {\n      throw new BadRequestException(\n        'The discount code has expired or does not exist',\n      );\n    }\n\n    // check the usage count\n    const usageCount = await this.discountsUsageService.countDiscountUsage(\n      discount.id,\n      user.sub,\n    );\n\n    console.log(usageCount);\n\n    if (usageCount >= discount.usageLimit) {\n      return null;\n    }\n\n    return discount;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n            \n                Description\n            \n            \n                controller for the auth route\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                otpSignin\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                refreshTokens\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        otpSignin\n                        \n                    \n                \n            \n            \n                \n                        \n                    otpSignin(otpSigninDto: OtpSigninDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It signs in the user with a valid otp'})@ApiResponse({status: 200, description: 'Login Successfully', example: undefined})@ApiBody({description: 'Contains the  otp', required: true, type: OtpSigninDto, examples: undefined})@HttpCode(HttpStatus.OK)@Auth(AuthType.None)@Patch('/otp-signin')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:115\n                        \n                    \n\n\n            \n                \n                        route for otp signin\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otpSigninDto\n                                            \n                                                            OtpSigninDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshTokens(refreshTokenDto: RefreshTokenDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It creates  new access and refresh tokens'})@ApiResponse({status: 200, description: 'Access and refresh tokens are created successfully', example: undefined})@ApiBody({description: 'Contains the refresh token', required: true, type: RefreshTokenDto, examples: undefined})@Post('refresh-tokens')@HttpCode(HttpStatus.OK)@Auth(AuthType.None)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:155\n                        \n                    \n\n\n            \n                \n                        route for refresh tokens\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshTokenDto\n                                            \n                                                            RefreshTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: SignInDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It signs in a user with valid email and password'})@ApiResponse({status: 200, description: 'User is signed in successfully', example: undefined})@ApiBody({description: 'Signs in a user', required: true, type: SignInDto, examples: undefined})@Post('/sign-in')@Auth(AuthType.None)@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:76\n                        \n                    \n\n\n            \n                \n                        route for sign in\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                access token and refresh token\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  HttpCode,\n  HttpStatus,\n  Patch,\n  Post,\n} from '@nestjs/common';\nimport { SignInDto } from './dtos/sign-in.dto';\nimport { AuthService } from './providers/auth.service';\nimport { Auth } from './decorator/auth.decorator';\nimport { AuthType } from './enums/auth-type.enum';\nimport { RefreshTokenDto } from './dtos/refresh-token.dto';\nimport { ApiBody, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { OtpSigninDto } from './dtos/otpSignin.dto';\n\n/**\n * controller for the auth route\n */\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  /**\n   * constructor\n   * @param authService\n   */\n  constructor(\n    /**\n     * injecting the auth service\n     */\n    private readonly authService: AuthService,\n  ) {}\n\n  /**\n   * route for sign in\n   * @param signInDto\n   * @returns access token and refresh token\n   */\n  @ApiOperation({\n    summary: 'It signs in a user with valid email and password',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'User is signed in successfully',\n    example: {\n      summary: 'Access and refresh token',\n      value: {\n        accessToken: 'jsbfiwhvfquobdfj',\n        refreshToken: 'jsbfiwhvfquobdfj',\n      },\n    },\n  })\n  @ApiBody({\n    description: 'Signs in a user',\n    required: true,\n    type: SignInDto,\n    examples: {\n      example1: {\n        summary: 'Valid request example',\n        value: {\n          email: 'iloghaluagneskc@gmail.com',\n          password: '@Password1',\n        },\n      },\n      example2: {\n        summary: 'Invalid request example (missing password)',\n        value: {\n          email: 'iloghaluagneskc@gmail.com',\n        },\n      },\n    },\n  })\n  @Post('/sign-in')\n  @Auth(AuthType.None)\n  @HttpCode(HttpStatus.OK)\n  public signIn(@Body() signInDto: SignInDto) {\n    return this.authService.signIn(signInDto);\n  }\n\n  /**\n   * route for otp signin\n   */\n  @ApiOperation({\n    summary: 'It signs in the user with a valid otp',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Login Successfully',\n    example: {\n      value: {\n        message: 'Login successfully',\n      },\n    },\n  })\n  @ApiBody({\n    description: 'Contains the  otp',\n    required: true,\n    type: OtpSigninDto,\n    examples: {\n      example1: {\n        summary: 'Valid request example',\n        value: {\n          otp: 2354,\n        },\n      },\n      example2: {\n        summary: 'Invalid request example (missing otp)',\n        value: {},\n      },\n    },\n  })\n  @HttpCode(HttpStatus.OK)\n  @Auth(AuthType.None)\n  @Patch('/otp-signin')\n  public otpSignin(@Body() otpSigninDto: OtpSigninDto) {\n    return this.authService.otpSignin(otpSigninDto);\n  }\n\n  /**\n   * route for refresh tokens\n   */\n  @ApiOperation({\n    summary: 'It creates  new access and refresh tokens',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Access and refresh tokens are created successfully',\n    example: {\n      value: {\n        accessToken: 'jsbfiwhvfquobdfj',\n        refreshToken: 'jsbfiwhvfquobdfj',\n      },\n    },\n  })\n  @ApiBody({\n    description: 'Contains the refresh token',\n    required: true,\n    type: RefreshTokenDto,\n    examples: {\n      example1: {\n        summary: 'Valid request example',\n        value: {\n          refreshToken: 'jbfwihfubfjkebiejhfbw',\n        },\n      },\n      example2: {\n        summary: 'Invalid request example (missing refresh token)',\n        value: {},\n      },\n    },\n  })\n  @Post('refresh-tokens')\n  @HttpCode(HttpStatus.OK)\n  @Auth(AuthType.None)\n  public async refreshTokens(@Body() refreshTokenDto: RefreshTokenDto) {\n    // console.log('re', refreshTokenDto);\n    return await this.authService.refreshTokens(refreshTokenDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nGenerateTokensProvider\n\nGenerateTokensProvider\n\nAuthModule -->\n\nGenerateTokensProvider->AuthModule\n\n\n\n\n\nOtpSigninProvider\n\nOtpSigninProvider\n\nAuthModule -->\n\nOtpSigninProvider->AuthModule\n\n\n\n\n\nRefreshTokenProvider\n\nRefreshTokenProvider\n\nAuthModule -->\n\nRefreshTokenProvider->AuthModule\n\n\n\n\n\nSignInProvider\n\nSignInProvider\n\nAuthModule -->\n\nSignInProvider->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            GenerateTokensProvider\n                        \n                        \n                            OtpSigninProvider\n                        \n                        \n                            RefreshTokenProvider\n                        \n                        \n                            SignInProvider\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { AuthService } from './providers/auth.service';\nimport { AuthController } from './auth.controller';\nimport { UsersModule } from 'src/users/users.module';\nimport { SignInProvider } from './providers/sign-in.provider';\nimport { GenerateTokensProvider } from './providers/generate-tokens.provider';\nimport { ConfigModule } from '@nestjs/config';\nimport jwtConfig from './config/jwt.config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { RefreshTokenProvider } from './providers/refresh-token.provider';\nimport { OtpSigninProvider } from './providers/otp-signin.provider';\n\n@Module({\n  providers: [\n    AuthService,\n\n    SignInProvider,\n    GenerateTokensProvider,\n\n    RefreshTokenProvider,\n    OtpSigninProvider,\n  ],\n  controllers: [AuthController],\n  imports: [\n    forwardRef(() => UsersModule),\n    ConfigModule.forFeature(jwtConfig),\n    // for asynchrousnously registering the jwt module and passing the config to the module\n    JwtModule.registerAsync(jwtConfig.asProvider()),\n  ],\n  exports: [],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                auth service for the auth module\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                otpSignin\n                            \n                            \n                                    Public\n                                    Async\n                                refreshTokens\n                            \n                            \n                                    Public\n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(signInProvider: SignInProvider, otpSigninProvider: OtpSigninProvider, refreshTokenProvider: RefreshTokenProvider)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        signInProvider\n                                                  \n                                                        \n                                                                        SignInProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        otpSigninProvider\n                                                  \n                                                        \n                                                                        OtpSigninProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        refreshTokenProvider\n                                                  \n                                                        \n                                                                        RefreshTokenProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        otpSignin\n                        \n                    \n                \n            \n            \n                \n                        \n                    otpSignin(otpSigninDto: OtpSigninDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:52\n                        \n                    \n\n\n            \n                \n                        function for resetting password\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otpSigninDto\n                                            \n                                                            OtpSigninDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshTokens(refreshTokenDto: RefreshTokenDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:61\n                        \n                    \n\n\n            \n                \n                        function for refreshing access token after it expires\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshTokenDto\n                                            \n                                                            RefreshTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                access and refresh tokens\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: SignInDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:43\n                        \n                    \n\n\n            \n                \n                        function for signing in a user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                access and refresh tokens\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SignInDto } from 'src/auth/dtos/sign-in.dto';\nimport { SignInProvider } from './sign-in.provider';\nimport { RefreshTokenDto } from 'src/auth/dtos/refresh-token.dto';\nimport { RefreshTokenProvider } from './refresh-token.provider';\nimport { OtpSigninDto } from '../dtos/otpSignin.dto';\nimport { OtpSigninProvider } from './otp-signin.provider';\n\n/**\n * auth service for the auth module\n */\n@Injectable()\nexport class AuthService {\n  /**\n   * constructor\n   * @param signInProvider\n   * @param forgotPasswordProvider\n   * @param resetPasswordProvider\n   * @param refreshTokenProvider\n   */\n  constructor(\n    /**\n     * injecting the sign in provider\n     */\n    private readonly signInProvider: SignInProvider,\n\n    /**\n     * injecting the otp sign in provider\n     */\n    private readonly otpSigninProvider: OtpSigninProvider,\n\n    /**\n     * injecting the refresh token provider\n     */\n    private readonly refreshTokenProvider: RefreshTokenProvider,\n  ) {}\n\n  /**\n   * function for signing in a user\n   * @param signInDto\n   * @returns access and refresh tokens\n   */\n  public async signIn(signInDto: SignInDto) {\n    return await this.signInProvider.signIn(signInDto);\n  }\n\n  /**\n   * function for resetting password\n   * @param resetPasswordDto\n   * @returns user\n   */\n  public async otpSignin(otpSigninDto: OtpSigninDto) {\n    return await this.otpSigninProvider.signInWithOtp(otpSigninDto);\n  }\n\n  /**\n   * function for refreshing access token after it expires\n   * @param refreshTokenDto\n   * @returns access and refresh tokens\n   */\n  public async refreshTokens(refreshTokenDto: RefreshTokenDto) {\n    return await this.refreshTokenProvider.refreshTokens(refreshTokenDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/authentication/authentication.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    guard for authentication\n\n                \n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authTypeGuardMap\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                defaultAuthType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, accessTokenGuard: AccessTokenGuard)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/authentication/authentication.guard.ts:33\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessTokenGuard\n                                                  \n                                                        \n                                                                        AccessTokenGuard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/authentication/authentication.guard.ts:59\n                        \n                    \n\n\n            \n                \n                        function for authenticating a user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                true or false based on whether user is logged in or not\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\n// import { Observable } from 'rxjs';\nimport { AccessTokenGuard } from '../access-token/access-token.guard';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\nimport { AUTH_TYPE_KEY } from 'src/auth/constants/auth.constant';\n\n/**\n * guard for authentication\n */\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  // using static means you can use the name of the property of the class without the \"this\" keyword\n  /**\n   * default auth type\n   */\n  private static readonly defaultAuthType = AuthType.Bearer;\n\n  /**\n   * map for auth types and guards they use\n   */\n  private readonly authTypeGuardMap: Record = {\n    [AuthType.Bearer]: this.accessTokenGuard,\n    [AuthType.None]: { canActivate: () => true },\n  };\n\n  /**\n   * constructor\n   * @param reflector\n   * @param accessTokenGuard\n   */\n  constructor(\n    /**\n     * injecting the reflector class\n     * The reflector class makes you access diff metadata from the execution context\n     */\n    private readonly reflector: Reflector,\n\n    /**\n     * Injecting the access token guard\n     *\n     */\n    private readonly accessTokenGuard: AccessTokenGuard,\n  ) {}\n\n  /**\n   * function for authenticating a user\n   * @param context\n   * @returns true or false based on whether user is logged in or not\n   */\n  async canActivate(context: ExecutionContext): Promise {\n    // Get all the auth types from reflector\n    // This returns an array of the auth types for a specific class or method in a class\n    const authTypes = this.reflector.getAllAndOverride(AUTH_TYPE_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]) ?? [AuthenticationGuard.defaultAuthType];\n\n    // create an array of the guards\n    const guards = authTypes.map((type) => this.authTypeGuardMap[type]).flat();\n\n    // Default error\n    const error = new UnauthorizedException();\n\n    // loop through the guards and fire the canActivate\n    for (const instance of guards) {\n      let canActivate;\n\n      try {\n        canActivate = await Promise.resolve(instance.canActivate(context));\n      } catch (err) {\n        throw err;\n      }\n\n      if (canActivate) {\n        return true;\n      }\n    }\n\n    throw error;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClearOtpAndExpiryTimeProvider.html":{"url":"injectables/ClearOtpAndExpiryTimeProvider.html","title":"injectable - ClearOtpAndExpiryTimeProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClearOtpAndExpiryTimeProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/clear-otp-and-expiry-time.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                clearOtpAndExpiryTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/clear-otp-and-expiry-time.provider.ts:7\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        clearOtpAndExpiryTime\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearOtpAndExpiryTime(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/clear-otp-and-expiry-time.provider.ts:25\n                        \n                    \n\n\n            \n                \n                        function for clearing otp after login\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from '../user.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class ClearOtpAndExpiryTimeProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * injecting the users repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for clearing otp after login\n   * @param user\n   * @returns user\n   */\n  public async clearOtpAndExpiryTime(user: User) {\n    const newUserObj = {\n      ...user,\n      otp: null,\n      otpExpire: null,\n    };\n\n    try {\n      return await this.usersRepository.save(newUserObj);\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDeliveryStateDto.html":{"url":"classes/CreateDeliveryStateDto.html","title":"class - CreateDeliveryStateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDeliveryStateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery-states/dtos/create-delivery-state.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                fee\n                            \n                            \n                                    \n                                    \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        fee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery-states/dtos/create-delivery-state.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery-states/dtos/create-delivery-state.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateDeliveryStateDto {\n  @IsString()\n  @IsNotEmpty()\n  state: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  fee: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDiscountDto.html":{"url":"classes/CreateDiscountDto.html","title":"class - CreateDiscountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDiscountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/dtos/create-discount.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                percentOff\n                            \n                            \n                                    \n                                    \n                                validUntil\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/dtos/create-discount.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        percentOff\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/dtos/create-discount.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        validUntil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/dtos/create-discount.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsDate, IsInt, IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateDiscountDto {\n  @IsString()\n  @IsNotEmpty()\n  code: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  percentOff: number;\n\n  @IsDate()\n  @IsNotEmpty()\n  validUntil: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateDiscountProvider.html":{"url":"injectables/CreateDiscountProvider.html","title":"injectable - CreateDiscountProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateDiscountProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/providers/create-discount.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createDiscount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(discountsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/discounts/providers/create-discount.provider.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        discountsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createDiscount\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDiscount(createDiscountDto: CreateDiscountDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/discounts/providers/create-discount.provider.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDiscountDto\n                                            \n                                                            CreateDiscountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                discount obj\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Discount } from '../discounts.entity';\nimport { Repository } from 'typeorm';\nimport { CreateDiscountDto } from '../dtos/create-discount.dto';\n\n@Injectable()\nexport class CreateDiscountProvider {\n  constructor(\n    /**\n     * injecting the discounts repository\n     */\n    @InjectRepository(Discount)\n    private readonly discountsRepository: Repository,\n  ) {}\n\n  /**\n   * @function creates a discount\n   * @param createDiscountDto\n   * @returns discount obj\n   */\n  public async createDiscount(\n    createDiscountDto: CreateDiscountDto,\n  ): Promise {\n    let discount = this.discountsRepository.create(createDiscountDto);\n\n    // save the discount to the db\n    try {\n      discount = await this.discountsRepository.save(discount);\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    return discount;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/createProductDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                brand\n                            \n                            \n                                    \n                                    \n                                category\n                            \n                            \n                                    \n                                    \n                                clothType\n                            \n                            \n                                    \n                                    \n                                discount\n                            \n                            \n                                    \n                                    \n                                dressStyle\n                            \n                            \n                                    \n                                    \n                                longDescription\n                            \n                            \n                                    \n                                    \n                                material\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                shortDescription\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                variants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        brand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        clothType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dressStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        longDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        material\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        shortDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProductVariant[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsNotEmpty()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:57\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsInt,\n  IsNotEmpty,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { CreateProductVariantDto } from 'src/product-variants/dto/create-product-variant.dto';\nimport { ProductVariant } from 'src/product-variants/product-variants.entity';\n\nexport class CreateProductDto {\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  price: number;\n\n  @IsInt()\n  @IsNotEmpty()\n  discount: number;\n\n  @IsString()\n  @IsNotEmpty()\n  category: string;\n\n  @IsString()\n  @IsNotEmpty()\n  dressStyle: string;\n\n  @IsString()\n  @IsNotEmpty()\n  clothType: string;\n\n  @IsString()\n  @IsNotEmpty()\n  material: string;\n\n  @IsString()\n  @IsNotEmpty()\n  brand: string;\n\n  @IsString()\n  @IsNotEmpty()\n  shortDescription: string;\n\n  @IsString()\n  @IsNotEmpty()\n  longDescription: string;\n\n  @IsArray()\n  @IsNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => CreateProductVariantDto)\n  variants: ProductVariant[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateProductProvider.html":{"url":"injectables/CreateProductProvider.html","title":"injectable - CreateProductProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateProductProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/providers/create-product.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataSource: DataSource, uploadsService: UploadsService)\n                    \n                \n                        \n                            \n                                Defined in src/products/providers/create-product.provider.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uploadsService\n                                                  \n                                                        \n                                                                        UploadsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProduct(createProductDto: CreateProductDto, images: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/create-product.provider.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                images\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                a product\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { DataSource } from 'typeorm';\nimport { Product } from '../product.entity';\nimport { CreateProductDto } from '../dtos/createProductDto';\nimport { UploadsService } from 'src/uploads/providers/uploads.service';\nimport { ProductVariant } from 'src/product-variants/product-variants.entity';\nimport { ProductImage } from 'src/product-images/product-image.entity';\n\n@Injectable()\nexport class CreateProductProvider {\n  constructor(\n    /**\n     * Injecting datasource\n     */\n    private readonly dataSource: DataSource,\n\n    /**\n     * injecting uploads service\n     */\n    private readonly uploadsService: UploadsService,\n  ) {}\n\n  /**\n   * @function creates a product\n   * @param createProductDto\n   * @param images\n   * @returns a product\n   */\n  public async createProduct(\n    createProductDto: CreateProductDto,\n    images: { [key: string]: Express.Multer.File[] },\n  ): Promise {\n    // start query transaction\n    // create Query Runner instance\n    const queryRunner = this.dataSource.createQueryRunner();\n    try {\n      // connect query runner to datasource\n      await queryRunner.connect();\n      // start transaction\n      await queryRunner.startTransaction();\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error) {\n      throw new RequestTimeoutException('Could not connect to datasource');\n    }\n\n    try {\n      // create the product\n      const product = queryRunner.manager.create(Product, {\n        ...createProductDto,\n        variants: [],\n      });\n\n      // save the product\n      const savedProduct = await queryRunner.manager.save(product);\n\n      // upload the images in the variants\n      const variantsImages = [];\n\n      Object.entries(images).forEach(\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        ([key, fileArray]) => {\n          variantsImages.push(fileArray);\n        },\n      );\n\n      const storedImagesUrls = [];\n\n      // loop through the array of files and upload them\n      for (let i = 0; i  await this.uploadsService.uploadFile(file),\n          ),\n        );\n        storedImagesUrls.push(urls);\n      }\n\n      // loop through the product variants and create product variants\n      const savedVariants = [];\n\n      for (const variant of createProductDto.variants) {\n        /**\n         * param\n         * entity\n         * dto\n         */\n        const prVariant = queryRunner.manager.create(ProductVariant, {\n          ...variant,\n          product: savedProduct,\n        });\n\n        const vr = await queryRunner.manager.save(prVariant);\n        savedVariants.push(vr);\n      }\n\n      // loop through the images and create a product image\n      const productImages = storedImagesUrls\n        .map((imgUrls: string[], urlsIndex) =>\n          imgUrls.map((imgUrl, index) =>\n            queryRunner.manager.create(ProductImage, {\n              imagePath: imgUrl,\n              displayOrder: index,\n              productVariant: savedVariants[urlsIndex],\n            }),\n          ),\n        )\n        .flat();\n\n      productImages.map(async (image) => await queryRunner.manager.save(image));\n\n      // if successful commit\n      // ensures the txn is committed to the db\n      await queryRunner.commitTransaction();\n\n      // return product\n      return savedProduct;\n    } catch (error) {\n      // if unsuccessful rollback\n      // we rollback the txn here if it is not successful\n      await queryRunner.rollbackTransaction();\n      throw new ConflictException('Could not complete the transaction', {\n        description: String(error),\n      });\n    } finally {\n      // relsease the connection\n      // release connection whether it was successful or not\n      try {\n        await queryRunner.release();\n      } catch (error) {\n        throw new RequestTimeoutException('Could not release the connection', {\n          description: String(error),\n        });\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductVariantDto.html":{"url":"classes/CreateProductVariantDto.html","title":"class - CreateProductVariantDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductVariantDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-variants/dto/create-product-variant.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                color\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                images\n                            \n                            \n                                    \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/create-product-variant.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/create-product-variant.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/create-product-variant.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/create-product-variant.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsInt,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Min,\n  ValidateNested,\n} from 'class-validator';\n\nexport class CreateProductVariantDto {\n  @IsString()\n  @IsNotEmpty()\n  color: string;\n\n  @IsString()\n  @IsNotEmpty()\n  size: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  @Min(1)\n  quantity: number;\n\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => String)\n  images?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReviewDto.html":{"url":"classes/CreateReviewDto.html","title":"class - CreateReviewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReviewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/dtos/create-review.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                productId\n                            \n                            \n                                    \n                                    \n                                review\n                            \n                            \n                                    \n                                    \n                                reviewer\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                stars\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/create-review.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        review\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/create-review.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        reviewer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/create-review.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        stars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()@Min(1, {message: 'Rating must be at least 1 star'})@Max(5, {message: 'Rating cannot exceed 5 stars'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/create-review.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsNotEmpty, IsString, Max, Min } from 'class-validator';\n\nexport class CreateReviewDto {\n  @IsString()\n  @IsNotEmpty()\n  reviewer: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  @Min(1, { message: 'Rating must be at least 1 star' })\n  @Max(5, { message: 'Rating cannot exceed 5 stars' })\n  stars: number;\n\n  @IsString()\n  @IsNotEmpty()\n  review: string;\n\n  @IsString()\n  @IsNotEmpty()\n  productId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateReviewProvider.html":{"url":"injectables/CreateReviewProvider.html","title":"injectable - CreateReviewProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateReviewProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/providers/create-review.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createReview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reviewsRepository: Repository, productsService: ProductsService)\n                    \n                \n                        \n                            \n                                Defined in src/reviews/providers/create-review.provider.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reviewsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productsService\n                                                  \n                                                        \n                                                                        ProductsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createReview\n                        \n                    \n                \n            \n            \n                \n                        \n                    createReview(createReviewDto: CreateReviewDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/reviews/providers/create-review.provider.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createReviewDto\n                                            \n                                                            CreateReviewDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a review\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { CreateReviewDto } from '../dtos/create-review.dto';\nimport { Review } from '../reviews.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProductsService } from 'src/products/providers/products.service';\n\n@Injectable()\nexport class CreateReviewProvider {\n  constructor(\n    /**\n     * injecting the reviews repository\n     */\n    @InjectRepository(Review)\n    private readonly reviewsRepository: Repository,\n\n    /**\n     * injecting the products service\n     */\n    private readonly productsService: ProductsService,\n  ) {}\n\n  /**\n   * @function creates a review\n   * @param createReviewDto\n   * @param productId\n   * @returns  a review\n   */\n  public async createReview(createReviewDto: CreateReviewDto): Promise {\n    // find product\n    const product = await this.productsService.findProductById(\n      createReviewDto.productId,\n    );\n\n    // create a new review\n    let newReview = this.reviewsRepository.create({\n      reviewer: createReviewDto.reviewer,\n      review: createReviewDto.review,\n      stars: createReviewDto.stars,\n      product: product,\n    });\n\n    // save the review to the db\n    try {\n      newReview = await this.reviewsRepository.save(newReview);\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    return {\n      id: newReview.id,\n      reviewer: newReview.reviewer,\n      stars: newReview.stars,\n      review: newReview.review,\n      dateCreated: newReview.dateCreated,\n      product: newReview.product.id,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSubscriberDto.html":{"url":"classes/CreateSubscriberDto.html","title":"class - CreateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dtos/create-subscriber.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto for creating a subscriber\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the email of the subscriber', example: 'Favour@gmail.com'})@IsEmail()@MaxLength(96)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dtos/create-subscriber.dto.ts:18\n                        \n                    \n\n            \n                \n                    email address\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, MaxLength } from 'class-validator';\n\n/**\n * dto for creating a subscriber\n */\nexport class CreateSubscriberDto {\n  /**\n   * email address\n   */\n  @ApiProperty({\n    description: 'This is the email of the subscriber',\n    example: 'Favour@gmail.com',\n  })\n  @IsEmail()\n  @MaxLength(96)\n  @IsNotEmpty()\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto class for creating user dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the email of the user', example: 'Favour@gmail.com'})@IsEmail()@MaxLength(96)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:21\n                        \n                    \n\n            \n                \n                    user email address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the role of the user', example: 'Admin'})@IsEnum(Role)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:32\n                        \n                    \n\n            \n                \n                    user role\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsEnum, IsNotEmpty, MaxLength } from 'class-validator';\n// import { accountType } from '../enums/account-type.enum';\n// import { Role } from 'src/auth/enums/role-type.enum';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Role } from 'src/auth/enums/role-type.enum';\n\n/**\n * dto class for creating user dto\n */\nexport class CreateUserDto {\n  /**\n   * user email address\n   */\n  @ApiProperty({\n    description: 'This is the email of the user',\n    example: 'Favour@gmail.com',\n  })\n  @IsEmail()\n  @MaxLength(96)\n  @IsNotEmpty()\n  email: string;\n\n  /**\n   * user role\n   */\n  @ApiProperty({\n    description: 'This is the role of the user',\n    example: 'Admin',\n  })\n  @IsEnum(Role)\n  @IsNotEmpty()\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUsersProvider.html":{"url":"injectables/CreateUsersProvider.html","title":"injectable - CreateUsersProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateUsersProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/create-users.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider class for creating user\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/create-users.provider.ts:18\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/create-users.provider.ts:38\n                        \n                    \n\n\n            \n                \n                        function for creating user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                created user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  forwardRef,\n  Inject,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { CreateUserDto } from '../dtos/create-user.dto';\nimport { Repository } from 'typeorm';\nimport { User } from '../user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n/**\n * provider class for creating user\n */\n@Injectable()\nexport class CreateUsersProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   * @param hashingProvider\n   * @param mailService\n   */\n  constructor(\n    /**\n     * inhjecting the user repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for creating user\n   * @param createUserDto\n   * @returns created user\n   */\n  public async createUser(createUserDto: CreateUserDto) {\n    // create a new user\n    let newUser = this.usersRepository.create({\n      ...createUserDto,\n    });\n\n    // save the user to the db\n    try {\n      newUser = await this.usersRepository.save(newUser);\n    } catch (error) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    return {\n      id: newUser.id,\n      email: newUser.email,\n      role: newUser.role,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataResponseInterceptor.html":{"url":"injectables/DataResponseInterceptor.html","title":"injectable - DataResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/data-response/data-response.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for the data response interceptor\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/data-response/data-response.interceptor.ts:14\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/interceptors/data-response/data-response.interceptor.ts:32\n                        \n                    \n\n\n            \n                \n                        function for formatting the response data\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                the response in {apiVersion: \"1.0.0\", data: ...} format\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { map, Observable } from 'rxjs';\n\n/**\n * provider for the data response interceptor\n */\n@Injectable()\nexport class DataResponseInterceptor implements NestInterceptor {\n  /**\n   * constructor\n   * @param configService\n   */\n  constructor(\n    /**\n     * injecting config service\n     */\n    private readonly configService: ConfigService,\n  ) {}\n\n  /**\n   * function for formatting the response data\n   * @param context\n   * @param next\n   * @returns the response in {apiVersion: \"1.0.0\", data: ...} format\n   */\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    // console.log('Before ...');\n    // before method execution\n    return next.handle().pipe(\n      map((data) => ({\n        apiVersion: this.configService.get('appConfig.apiVersion'),\n        data: data,\n      })),\n    );\n    // After method execution\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DeliveryState.html":{"url":"entities/DeliveryState.html","title":"entity - DeliveryState","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DeliveryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery-states/delivery-state.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dateCreated\n                            \n                            \n                                    \n                                fee\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery-states/delivery-state.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery-states/delivery-state.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery-states/delivery-state.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery-states/delivery-state.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BeforeInsert,\n  BeforeUpdate,\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class DeliveryState {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  state: string;\n\n  @Column()\n  fee: number;\n\n  @CreateDateColumn()\n  dateCreated: Date;\n\n  @BeforeInsert()\n  @BeforeUpdate()\n  transformToLowercase() {\n    if (this.state) {\n      this.state = this.state.toLowerCase();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DeliveryStatesController.html":{"url":"controllers/DeliveryStatesController.html","title":"controller - DeliveryStatesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DeliveryStatesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery-states/delivery-states.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                delivery-states\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                createDeliveryState\n                            \n                            \n                                    \n                                    \n                                    Public\n                                findDeliveryStateByState\n                            \n                            \n                                    \n                                    \n                                    Public\n                                updateDeliveryState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        createDeliveryState\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDeliveryState(createDeliveryStateDto: CreateDeliveryStateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Roles(Role.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/delivery-states/delivery-states.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDeliveryStateDto\n                                            \n                                                            CreateDeliveryStateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        findDeliveryStateByState\n                        \n                    \n                \n            \n            \n                \n                        \n                    findDeliveryStateByState(state: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Auth(AuthType.None)@Get('/:state')\n                \n            \n\n                    \n                        \n                            Defined in src/delivery-states/delivery-states.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                delivery state\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        updateDeliveryState\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDeliveryState(stateId: string, updateDeliveryStateDto: UpdateDeliveryStateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.ADMIN)@Patch('/:stateId')\n                \n            \n\n                    \n                        \n                            Defined in src/delivery-states/delivery-states.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stateId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDeliveryStateDto\n                                            \n                                                            UpdateDeliveryStateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                updated delivery state\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post } from '@nestjs/common';\nimport { DeliveryStatesService } from './providers/delivery-states.service';\nimport { CreateDeliveryStateDto } from './dtos/create-delivery-state.dto';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { Role } from 'src/auth/enums/role-type.enum';\nimport { Auth } from 'src/auth/decorator/auth.decorator';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\nimport { UpdateDeliveryStateDto } from './dtos/update-delivery-state.dto';\n\n@Controller('delivery-states')\nexport class DeliveryStatesController {\n  constructor(\n    /**\n     * injecting the delivery states service\n     */\n    private readonly deliveryStatesService: DeliveryStatesService,\n  ) {}\n\n  /**\n   * @function creates a delivery state\n   * @param createDeliveryStateDto\n   */\n  @Post()\n  @Roles(Role.ADMIN)\n  public createDeliveryState(\n    @Body() createDeliveryStateDto: CreateDeliveryStateDto,\n  ) {\n    return this.deliveryStatesService.createDeliveryState(\n      createDeliveryStateDto,\n    );\n  }\n\n  /**\n   * @function finds a delivery state by name\n   * @param state\n   * @returns delivery state\n   */\n  @Auth(AuthType.None)\n  @Get('/:state')\n  public findDeliveryStateByState(@Param('state') state: string) {\n    return this.deliveryStatesService.findDeliveryStateByName(state);\n  }\n\n  /**\n   * @function updates a delivery state\n   * @param updateDeliveryStateDto\n   * @returns updated delivery state\n   */\n  @Roles(Role.ADMIN)\n  @Patch('/:stateId')\n  public updateDeliveryState(\n    @Param('stateId') stateId: string,\n    @Body() updateDeliveryStateDto: UpdateDeliveryStateDto,\n  ) {\n    return this.deliveryStatesService.updateDeliveryState(\n      stateId,\n      updateDeliveryStateDto,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DeliveryStatesModule.html":{"url":"modules/DeliveryStatesModule.html","title":"module - DeliveryStatesModule","body":"\n                   \n\n\n\n\n    Modules\n    DeliveryStatesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DeliveryStatesModule\n\n\n\ncluster_DeliveryStatesModule_providers\n\n\n\n\nDeliveryStatesService\n\nDeliveryStatesService\n\n\n\nDeliveryStatesModule\n\nDeliveryStatesModule\n\nDeliveryStatesModule -->\n\nDeliveryStatesService->DeliveryStatesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/delivery-states/delivery-states.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DeliveryStatesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DeliveryStatesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DeliveryStatesController } from './delivery-states.controller';\nimport { DeliveryStatesService } from './providers/delivery-states.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { DeliveryState } from './delivery-state.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([DeliveryState])],\n  controllers: [DeliveryStatesController],\n  providers: [DeliveryStatesService],\n})\nexport class DeliveryStatesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeliveryStatesService.html":{"url":"injectables/DeliveryStatesService.html","title":"injectable - DeliveryStatesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeliveryStatesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery-states/providers/delivery-states.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createDeliveryState\n                            \n                            \n                                    Public\n                                    Async\n                                findDeliveryStateByName\n                            \n                            \n                                    Public\n                                    Async\n                                updateDeliveryState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deliveryStateRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/delivery-states/providers/delivery-states.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deliveryStateRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createDeliveryState\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDeliveryState(createDeliveryStateDto: CreateDeliveryStateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/delivery-states/providers/delivery-states.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDeliveryStateDto\n                                            \n                                                            CreateDeliveryStateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                delivery state\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findDeliveryStateByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findDeliveryStateByName(state: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/delivery-states/providers/delivery-states.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                delivery state\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateDeliveryState\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDeliveryState(stateId: string, updateDeliveryStateDto: UpdateDeliveryStateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/delivery-states/providers/delivery-states.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stateId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDeliveryStateDto\n                                            \n                                                            UpdateDeliveryStateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                updated delivery state\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { DeliveryState } from '../delivery-state.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CreateDeliveryStateDto } from '../dtos/create-delivery-state.dto';\nimport { UpdateDeliveryStateDto } from '../dtos/update-delivery-state.dto';\n\n@Injectable()\nexport class DeliveryStatesService {\n  constructor(\n    /**\n     * injecting the delivery states repository\n     */\n    @InjectRepository(DeliveryState)\n    private readonly deliveryStateRepository: Repository,\n  ) {}\n\n  /**\n   * @function creates a delivery state resource\n   * @param createDeliveryStateDto\n   * @returns delivery state\n   */\n  public async createDeliveryState(\n    createDeliveryStateDto: CreateDeliveryStateDto,\n  ) {\n    let deliveryState: DeliveryState;\n\n    deliveryState = this.deliveryStateRepository.create(createDeliveryStateDto);\n\n    try {\n      deliveryState = await this.deliveryStateRepository.save(deliveryState);\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    return deliveryState;\n  }\n\n  /**\n   * @function finds a delivery state based on the state\n   * @param state\n   * @returns delivery state\n   */\n  public async findDeliveryStateByName(state: string) {\n    let deliveryState;\n    try {\n      deliveryState = await this.deliveryStateRepository.findOneBy({\n        state: state,\n      });\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (err: any) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    /**\n     * Handle the delivery state does not exist\n     */\n    if (!deliveryState) {\n      throw new BadRequestException('The delivery state does not exist');\n    }\n    return deliveryState;\n  }\n\n  /**\n   * @function updates a delivery state\n   * @param updateDeliveryStateDto\n   * @returns updated delivery state\n   */\n  public async updateDeliveryState(\n    stateId: string,\n    updateDeliveryStateDto: UpdateDeliveryStateDto,\n  ) {\n    let deliveryState;\n    // find the user\n    try {\n      deliveryState = await this.deliveryStateRepository.findOneBy({\n        id: stateId,\n      });\n    } catch (err) {\n      throw new RequestTimeoutException(err);\n    }\n    if (!deliveryState) {\n      throw new BadRequestException('Delivery state does not exist');\n    }\n    // update user\n    deliveryState = { ...deliveryState, ...updateDeliveryStateDto };\n\n    try {\n      await this.deliveryStateRepository.save(deliveryState);\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error: any) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n    return deliveryState;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Discount.html":{"url":"entities/Discount.html","title":"entity - Discount","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Discount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/discounts.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                percentOff\n                            \n                            \n                                    \n                                usageLimit\n                            \n                            \n                                    \n                                validFrom\n                            \n                            \n                                    \n                                validUntil\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/discounts.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/discounts.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        percentOff\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/discounts.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usageLimit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/discounts.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        validFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/discounts.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        validUntil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/discounts.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Discount {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  code: string;\n\n  @Column()\n  percentOff: number;\n\n  @Column({ default: 1 })\n  usageLimit: number;\n\n  @Column({ type: 'timestamp', default: new Date() })\n  validFrom: Date;\n\n  @Column({ type: 'timestamp', nullable: true })\n  validUntil: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DiscountUsage.html":{"url":"entities/DiscountUsage.html","title":"entity - DiscountUsage","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DiscountUsage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts-usage/discounts-usage.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                discount\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                usedAt\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Discount\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts-usage/discounts-usage.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts-usage/discounts-usage.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts-usage/discounts-usage.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts-usage/discounts-usage.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Discount } from 'src/discounts/discounts.entity';\nimport { User } from 'src/users/user.entity';\nimport {\n  CreateDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class DiscountUsage {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @ManyToOne(() => User)\n  user: User;\n\n  @ManyToOne(() => Discount)\n  discount: Discount;\n\n  //   @ManyToOne(() => Order)\n  //   order: Order;\n\n  @CreateDateColumn()\n  usedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DiscountsController.html":{"url":"controllers/DiscountsController.html","title":"controller - DiscountsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DiscountsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/discounts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                discounts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                applyForDiscount\n                            \n                            \n                                    \n                                    \n                                    Public\n                                createDiscount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        applyForDiscount\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyForDiscount(user: ActiveUserData, applyForDiscountDto: ApplyForDiscountDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/apply')@Roles(Role.USER)@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in src/discounts/discounts.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                applyForDiscountDto\n                                            \n                                                            ApplyForDiscountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        createDiscount\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDiscount(createDiscountDto: CreateDiscountDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Roles(Role.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/discounts/discounts.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDiscountDto\n                                            \n                                                            CreateDiscountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post } from '@nestjs/common';\nimport { DiscountsService } from './providers/discounts.service';\nimport { CreateDiscountDto } from './dtos/create-discount.dto';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { Role } from 'src/auth/enums/role-type.enum';\nimport { ActiveUser } from 'src/auth/decorator/active-user.decorator';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\nimport { ApplyForDiscountDto } from './dtos/apply-for-discount.dto';\n\n@Controller('discounts')\nexport class DiscountsController {\n  constructor(\n    /**\n     * injecting the discounts service\n     */\n    private readonly discountsService: DiscountsService,\n  ) {}\n\n  @Post()\n  @Roles(Role.ADMIN)\n  public createDiscount(@Body() createDiscountDto: CreateDiscountDto) {\n    return this.discountsService.createDiscount(createDiscountDto);\n  }\n\n  @Post('/apply')\n  @Roles(Role.USER)\n  @HttpCode(HttpStatus.OK)\n  public applyForDiscount(\n    @ActiveUser() user: ActiveUserData,\n    @Body() applyForDiscountDto: ApplyForDiscountDto,\n  ) {\n    return this.discountsService.applyForDiscount(\n      user,\n      applyForDiscountDto.code,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DiscountsModule.html":{"url":"modules/DiscountsModule.html","title":"module - DiscountsModule","body":"\n                   \n\n\n\n\n    Modules\n    DiscountsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DiscountsModule\n\n\n\ncluster_DiscountsModule_imports\n\n\n\ncluster_DiscountsModule_providers\n\n\n\n\nDiscountsUsageModule\n\nDiscountsUsageModule\n\n\n\nDiscountsModule\n\nDiscountsModule\n\nDiscountsModule -->\n\nDiscountsUsageModule->DiscountsModule\n\n\n\n\n\nApplyForDiscountProvider\n\nApplyForDiscountProvider\n\nDiscountsModule -->\n\nApplyForDiscountProvider->DiscountsModule\n\n\n\n\n\nCreateDiscountProvider\n\nCreateDiscountProvider\n\nDiscountsModule -->\n\nCreateDiscountProvider->DiscountsModule\n\n\n\n\n\nDiscountsService\n\nDiscountsService\n\nDiscountsModule -->\n\nDiscountsService->DiscountsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/discounts/discounts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApplyForDiscountProvider\n                        \n                        \n                            CreateDiscountProvider\n                        \n                        \n                            DiscountsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DiscountsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DiscountsUsageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DiscountsController } from './discounts.controller';\nimport { DiscountsService } from './providers/discounts.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Discount } from './discounts.entity';\nimport { ApplyForDiscountProvider } from './providers/apply-for-discount.provider';\nimport { CreateDiscountProvider } from './providers/create-discount.provider';\nimport { DiscountsUsageModule } from 'src/discounts-usage/discounts-usage.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Discount]), DiscountsUsageModule],\n  controllers: [DiscountsController],\n  providers: [\n    DiscountsService,\n    ApplyForDiscountProvider,\n    CreateDiscountProvider,\n  ],\n})\nexport class DiscountsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiscountsService.html":{"url":"injectables/DiscountsService.html","title":"injectable - DiscountsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiscountsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/providers/discounts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                applyForDiscount\n                            \n                            \n                                    Public\n                                    Async\n                                createDiscount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createDiscountProvider: CreateDiscountProvider, applyForDiscountProvider: ApplyForDiscountProvider)\n                    \n                \n                        \n                            \n                                Defined in src/discounts/providers/discounts.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createDiscountProvider\n                                                  \n                                                        \n                                                                        CreateDiscountProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applyForDiscountProvider\n                                                  \n                                                        \n                                                                        ApplyForDiscountProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        applyForDiscount\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyForDiscount(user: ActiveUserData, code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/discounts/providers/discounts.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                discount\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createDiscount\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDiscount(createDiscountDto: CreateDiscountDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/discounts/providers/discounts.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDiscountDto\n                                            \n                                                            CreateDiscountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                created discount object\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateDiscountDto } from '../dtos/create-discount.dto';\nimport { CreateDiscountProvider } from './create-discount.provider';\nimport { Discount } from '../discounts.entity';\nimport { ApplyForDiscountProvider } from './apply-for-discount.provider';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\n\n@Injectable()\nexport class DiscountsService {\n  constructor(\n    /**\n     * injecting the create discount provider\n     */\n    private readonly createDiscountProvider: CreateDiscountProvider,\n\n    /**\n     * injecting the apply for discount provider\n     */\n    private readonly applyForDiscountProvider: ApplyForDiscountProvider,\n  ) {}\n\n  /**\n   * @function creates a discount\n   * @param createDiscountDto\n   * @returns created discount object\n   */\n  public async createDiscount(\n    createDiscountDto: CreateDiscountDto,\n  ): Promise {\n    return await this.createDiscountProvider.createDiscount(createDiscountDto);\n  }\n\n  /**\n   * @function checks the validity of the code and how many times the user has used it\n   * @param user\n   * @param code\n   * @returns discount\n   */\n  public async applyForDiscount(user: ActiveUserData, code: string) {\n    return await this.applyForDiscountProvider.applyForDiscount(user, code);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DiscountsUsageModule.html":{"url":"modules/DiscountsUsageModule.html","title":"module - DiscountsUsageModule","body":"\n                   \n\n\n\n\n    Modules\n    DiscountsUsageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DiscountsUsageModule\n\n\n\ncluster_DiscountsUsageModule_exports\n\n\n\ncluster_DiscountsUsageModule_providers\n\n\n\n\nDiscountsUsageService \n\nDiscountsUsageService \n\n\n\nDiscountsUsageModule\n\nDiscountsUsageModule\n\nDiscountsUsageService  -->\n\nDiscountsUsageModule->DiscountsUsageService \n\n\n\n\n\nDiscountsUsageService\n\nDiscountsUsageService\n\nDiscountsUsageModule -->\n\nDiscountsUsageService->DiscountsUsageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/discounts-usage/discounts-usage.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DiscountsUsageService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DiscountsUsageService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DiscountsUsageService } from './providers/discounts-usage.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { DiscountUsage } from './discounts-usage.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([DiscountUsage])],\n  providers: [DiscountsUsageService],\n  exports: [DiscountsUsageService],\n})\nexport class DiscountsUsageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiscountsUsageService.html":{"url":"injectables/DiscountsUsageService.html","title":"injectable - DiscountsUsageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiscountsUsageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts-usage/providers/discounts-usage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                countDiscountUsage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(discountsUsageRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/discounts-usage/providers/discounts-usage.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        discountsUsageRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        countDiscountUsage\n                        \n                    \n                \n            \n            \n                \n                        \n                    countDiscountUsage(discountId: string, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/discounts-usage/providers/discounts-usage.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                discountId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                discount usage count by a user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { DiscountUsage } from '../discounts-usage.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class DiscountsUsageService {\n  constructor(\n    /**\n     * injecting the discounts usage repository\n     */\n    @InjectRepository(DiscountUsage)\n    private readonly discountsUsageRepository: Repository,\n  ) {}\n\n  /**\n   * @function gets the discount usage count of a user\n   * @param discountId\n   * @param userId\n   * @returns discount usage count by a user\n   */\n  public async countDiscountUsage(discountId: string, userId: string) {\n    let usageCount;\n    try {\n      // Check usage limit\n      usageCount = await this.discountsUsageRepository.count({\n        where: {\n          discount: { id: discountId },\n          user: { id: userId },\n        },\n      });\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    return usageCount;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindAllProductsProvider.html":{"url":"injectables/FindAllProductsProvider.html","title":"injectable - FindAllProductsProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindAllProductsProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/providers/find-all-products.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productRepository: Repository, paginationProvider: PaginationProvider)\n                    \n                \n                        \n                            \n                                Defined in src/products/providers/find-all-products.provider.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paginationProvider\n                                                  \n                                                        \n                                                                        PaginationProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(productQuery: GetProductsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/find-all-products.provider.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productQuery\n                                            \n                                                            GetProductsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                a paginated list of products\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { GetProductsDto } from '../dtos/get-product.dto';\nimport { Paginated } from 'src/common/pagination/interfaces/paginated.interface';\nimport { Product } from '../product.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Between, In, Like, Repository } from 'typeorm';\nimport { PaginationProvider } from 'src/common/pagination/providers/pagination.provider';\n\n@Injectable()\nexport class FindAllProductsProvider {\n  constructor(\n    /**\n     * injecting the product repository\n     */\n    @InjectRepository(Product)\n    private readonly productRepository: Repository,\n\n    /**\n     * injecting the pagination provider\n     */\n    private readonly paginationProvider: PaginationProvider,\n  ) {}\n\n  /**\n   * @function finds all products And handle queries for filtering products\n   * @param productQuery\n   * @returns  a paginated list of products\n   */\n  public async findAll(\n    productQuery: GetProductsDto,\n  ): Promise> {\n    const { limit, page } = productQuery;\n\n    const whereOptions = [];\n\n    Object.keys(productQuery).forEach((key) => {\n      if (key === 'limit' || key === 'page' || !productQuery[key]) {\n        return;\n      }\n\n      const conditions = {\n        category: productQuery['category']\n          ? In(productQuery['category'].slice().split(','))\n          : undefined,\n        price: productQuery['price']\n          ? Between(\n              parseFloat(productQuery['price'].slice().split('-')[0]),\n              parseFloat(productQuery['price'].slice().split('-')[1]),\n            )\n          : undefined,\n        clothType: productQuery['clothType']\n          ? In(productQuery['clothType'].slice().split(','))\n          : undefined,\n        dressStyle: productQuery['dressStyle']\n          ? In(productQuery['dressStyle'].slice().split(','))\n          : undefined,\n        name: productQuery['name']\n          ? Like(`%${productQuery['name'].slice().split('-').join(' ')}%`)\n          : undefined,\n        variants: {\n          color: productQuery['colors']\n            ? In(productQuery['colors'].slice().split(','))\n            : undefined,\n          size: productQuery['sizes']\n            ? In(productQuery['sizes'].slice().split(','))\n            : undefined,\n        },\n      };\n\n      // Remove undefined nested conditions for variants\n      if (\n        conditions.variants.color === undefined &&\n        conditions.variants.size === undefined\n      ) {\n        conditions.variants = undefined;\n      }\n\n      // Remove undefined conditions\n      const filteredConditions = Object.fromEntries(\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        Object.entries(conditions).filter(([_, v]) => v !== undefined),\n      );\n\n      whereOptions.push(filteredConditions);\n    });\n\n    const checkWhereOptions = Object.keys(whereOptions).length;\n\n    const options = {\n      where: checkWhereOptions ? whereOptions : null,\n      relations: ['variants', 'variants.images'],\n    };\n\n    try {\n      const products = await this.paginationProvider.paginationQuery(\n        {\n          limit: limit,\n          page: page,\n        },\n        this.productRepository,\n        options,\n      );\n\n      return products;\n    } catch (error) {\n      throw new NotFoundException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindOneByIdProvider.html":{"url":"injectables/FindOneByIdProvider.html","title":"injectable - FindOneByIdProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindOneByIdProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/find-one-by-id.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider class for finding one user by id\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/find-one-by-id.provider.ts:14\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/find-one-by-id.provider.ts:32\n                        \n                    \n\n\n            \n                \n                        function for finding user based on id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { User } from '../user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n/**\n * provider class for finding one user by id\n */\n@Injectable()\nexport class FindOneByIdProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * injecting user repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for finding user based on id\n   * @param id\n   * @returns user\n   */\n  public async findById(id: string) {\n    let user;\n    try {\n      user = await this.usersRepository.findOneBy({\n        id,\n      });\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (err: any) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    /**\n     * Handle the user does not exist\n     */\n    if (!user) {\n      throw new BadRequestException('The user does not exist');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindOneUserByEmailProvider.html":{"url":"injectables/FindOneUserByEmailProvider.html","title":"injectable - FindOneUserByEmailProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindOneUserByEmailProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/find-one-user-by-email.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for finding user based on email\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findOneByEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/find-one-user-by-email.provider.ts:14\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/find-one-user-by-email.provider.ts:32\n                        \n                    \n\n\n            \n                \n                        function for finding user based on email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  RequestTimeoutException,\n  // UnauthorizedException,\n} from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { User } from '../user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n/**\n * provider for finding user based on email\n */\n@Injectable()\nexport class FindOneUserByEmailProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * Injecting usersRepository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for finding user based on email\n   * @param email\n   * @returns user\n   */\n  public async findOneByEmail(email: string) {\n    let user: User | undefined = undefined;\n\n    try {\n      user = await this.usersRepository.findOne({\n        where: { email: email },\n        select: ['id', 'email', 'role'],\n      });\n    } catch (error) {\n      throw new RequestTimeoutException(error, {\n        description: 'Could not fetch the user',\n      });\n    }\n\n    // if (!user) {\n    //   throw new UnauthorizedException('User does not exist');\n    // }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{"url":"injectables/FindUserByOtpAndExpiryTimeProvider.html","title":"injectable - FindUserByOtpAndExpiryTimeProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindUserByOtpAndExpiryTimeProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/find-user-by-reset-otp-and-expiry-time.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider class for finding user based on stored reset token and expiry time\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findUserByOtpAndExpiryTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/find-user-by-reset-otp-and-expiry-time.provider.ts:14\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findUserByOtpAndExpiryTime\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserByOtpAndExpiryTime(otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/find-user-by-reset-otp-and-expiry-time.provider.ts:32\n                        \n                    \n\n\n            \n                \n                        function for finding a user based on the stored reset token and expiry time\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  RequestTimeoutException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { MoreThan, Repository } from 'typeorm';\nimport { User } from '../user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n/**\n * provider class for finding user based on stored reset token and expiry time\n */\n@Injectable()\nexport class FindUserByOtpAndExpiryTimeProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * injecting the users repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for finding a user based on the stored reset token and expiry time\n   * @param otp\n   * @returns user\n   */\n  public async findUserByOtpAndExpiryTime(otp: string) {\n    let user;\n\n    try {\n      user = await this.usersRepository.find({\n        where: {\n          otp: otp,\n          otpExpire: MoreThan(new Date()),\n        },\n      });\n    } catch (error) {\n      throw new RequestTimeoutException(error, {\n        description: 'Could not fetch the user',\n      });\n    }\n\n    if (!user[0]) {\n      throw new UnauthorizedException('Otp is no longer valid');\n    }\n\n    return user[0];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GenerateTokensProvider.html":{"url":"injectables/GenerateTokensProvider.html","title":"injectable - GenerateTokensProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GenerateTokensProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/generate-tokens.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for generating tokens\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                generateTokens\n                            \n                            \n                                    Public\n                                    Async\n                                signToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConfiguration: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/generate-tokens.provider.ts:12\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        generateTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateTokens(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/generate-tokens.provider.ts:58\n                        \n                    \n\n\n            \n                \n                        function for generating tokens\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                access and refresh tokens\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        signToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    signToken(userId: string, expiresIn: number, payload?: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/generate-tokens.provider.ts:38\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        function for using jwt to sign the user info\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                expiresIn\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                the object containing payload when a user signs in\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport jwtConfig from '../config/jwt.config';\nimport { ConfigType } from '@nestjs/config';\nimport { ActiveUserData } from '../interfaces/active-user-data.interface';\nimport { User } from 'src/users/user.entity';\n\n/**\n * provider for generating tokens\n */\n@Injectable()\nexport class GenerateTokensProvider {\n  /**\n   * constructor\n   * @param jwtService\n   * @param jwtConfiguration\n   */\n  constructor(\n    /**\n     * Injecting the jwt service\n     */\n    private readonly jwtService: JwtService,\n\n    /**\n     * Injecting the jwt config\n     */\n    @Inject(jwtConfig.KEY)\n    private readonly jwtConfiguration: ConfigType,\n  ) {}\n\n  /**\n   * function for using jwt to sign the user info\n   * @param userId\n   * @param expiresIn\n   * @param payload\n   * @returns the object containing payload when a user signs in\n   */\n  public async signToken(userId: string, expiresIn: number, payload?: T) {\n    return await this.jwtService.signAsync(\n      {\n        sub: userId,\n        ...payload,\n      },\n      {\n        audience: this.jwtConfiguration.audience,\n        issuer: this.jwtConfiguration.issuer,\n        secret: this.jwtConfiguration.secret,\n        expiresIn,\n      },\n    );\n  }\n\n  /**\n   * function for generating tokens\n   * @param user\n   * @returns access and refresh tokens\n   */\n  public async generateTokens(user: User) {\n    const [accessToken, refreshToken] = await Promise.all([\n      // Generate the access token\n      this.signToken>(\n        user.id,\n        this.jwtConfiguration.accessTokenTtl,\n        {\n          email: user.email,\n          role: user.role,\n        },\n      ),\n      // Generate the refresh token\n      this.signToken(user.id, this.jwtConfiguration.refreshTokenTtl),\n    ]);\n\n    return {\n      accessToken,\n      refreshToken,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProductsBaseDto.html":{"url":"classes/GetProductsBaseDto.html","title":"class - GetProductsBaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProductsBaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/get-product.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                base dto fot products\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                category\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                clothType\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                colors\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                dressStyle\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                price\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                sizes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:21\n                        \n                    \n\n            \n                \n                    product category\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        clothType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:28\n                        \n                    \n\n            \n                \n                    productClothType\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        colors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:42\n                        \n                    \n\n            \n                \n                    product colors\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        dressStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:56\n                        \n                    \n\n            \n                \n                    product dressing style\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:14\n                        \n                    \n\n            \n                \n                    product name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:35\n                        \n                    \n\n            \n                \n                    product price\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        sizes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:49\n                        \n                    \n\n            \n                \n                    product sizes\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from 'class-validator';\nimport { IntersectionType } from '@nestjs/swagger';\nimport { PaginationQueryDto } from 'src/common/pagination/dtos/pagination-query.dto';\n\n/**\n * base dto fot products\n */\nclass GetProductsBaseDto {\n  /**\n   * product name\n   */\n  @IsString()\n  @IsOptional()\n  name?: string;\n\n  /**\n   * product category\n   */\n  @IsString()\n  @IsOptional()\n  category?: string;\n\n  /**\n   * productClothType\n   */\n  @IsString()\n  @IsOptional()\n  clothType?: string;\n\n  /**\n   * product price\n   */\n  @IsString()\n  @IsOptional()\n  price?: string;\n\n  /**\n   * product colors\n   */\n  @IsString()\n  @IsOptional()\n  colors?: string;\n\n  /**\n   * product sizes\n   */\n  @IsString()\n  @IsOptional()\n  sizes?: string;\n\n  /**\n   * product dressing style\n   */\n  @IsString()\n  @IsOptional()\n  dressStyle?: string;\n}\n\n/**\n * dto for get events\n */\nexport class GetProductsDto extends IntersectionType(\n  GetProductsBaseDto,\n  PaginationQueryDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProductsDto.html":{"url":"classes/GetProductsDto.html","title":"class - GetProductsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProductsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/get-product.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto for get events\n\n            \n\n            \n                Extends\n            \n            \n                            IntersectionType(\n  GetProductsBaseDto,\n  PaginationQueryDto,\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from 'class-validator';\nimport { IntersectionType } from '@nestjs/swagger';\nimport { PaginationQueryDto } from 'src/common/pagination/dtos/pagination-query.dto';\n\n/**\n * base dto fot products\n */\nclass GetProductsBaseDto {\n  /**\n   * product name\n   */\n  @IsString()\n  @IsOptional()\n  name?: string;\n\n  /**\n   * product category\n   */\n  @IsString()\n  @IsOptional()\n  category?: string;\n\n  /**\n   * productClothType\n   */\n  @IsString()\n  @IsOptional()\n  clothType?: string;\n\n  /**\n   * product price\n   */\n  @IsString()\n  @IsOptional()\n  price?: string;\n\n  /**\n   * product colors\n   */\n  @IsString()\n  @IsOptional()\n  colors?: string;\n\n  /**\n   * product sizes\n   */\n  @IsString()\n  @IsOptional()\n  sizes?: string;\n\n  /**\n   * product dressing style\n   */\n  @IsString()\n  @IsOptional()\n  dressStyle?: string;\n}\n\n/**\n * dto for get events\n */\nexport class GetProductsDto extends IntersectionType(\n  GetProductsBaseDto,\n  PaginationQueryDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersBaseDto.html":{"url":"classes/GetUsersBaseDto.html","title":"class - GetUsersBaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersBaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/get-user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto class for get user base\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                endDate\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/get-user.dto.ts:21\n                        \n                    \n\n            \n                \n                    end date\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/get-user.dto.ts:14\n                        \n                    \n\n            \n                \n                    start date\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IntersectionType } from '@nestjs/swagger';\nimport { IsDate, IsOptional } from 'class-validator';\nimport { PaginationQueryDto } from 'src/common/pagination/dtos/pagination-query.dto';\n\n/**\n * dto class for get user base\n */\nexport class GetUsersBaseDto {\n  /**\n   * start date\n   */\n  @IsDate()\n  @IsOptional()\n  startDate?: Date;\n\n  /**\n   * end date\n   */\n  @IsDate()\n  @IsOptional()\n  endDate?: Date;\n}\n\n/**\n * dto class for get user\n */\nexport class GetUsersDto extends IntersectionType(\n  GetUsersBaseDto,\n  PaginationQueryDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersDto.html":{"url":"classes/GetUsersDto.html","title":"class - GetUsersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/get-user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto class for get user\n\n            \n\n            \n                Extends\n            \n            \n                            IntersectionType(\n  GetUsersBaseDto,\n  PaginationQueryDto,\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IntersectionType } from '@nestjs/swagger';\nimport { IsDate, IsOptional } from 'class-validator';\nimport { PaginationQueryDto } from 'src/common/pagination/dtos/pagination-query.dto';\n\n/**\n * dto class for get user base\n */\nexport class GetUsersBaseDto {\n  /**\n   * start date\n   */\n  @IsDate()\n  @IsOptional()\n  startDate?: Date;\n\n  /**\n   * end date\n   */\n  @IsDate()\n  @IsOptional()\n  endDate?: Date;\n}\n\n/**\n * dto class for get user\n */\nexport class GetUsersDto extends IntersectionType(\n  GetUsersBaseDto,\n  PaginationQueryDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitiatePaymentDto.html":{"url":"classes/InitiatePaymentDto.html","title":"class - InitiatePaymentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitiatePaymentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/dtos/initiate-payment.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                deliveryAddress\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                deliveryPicker\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                discount\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                variants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        deliveryAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dtos/initiate-payment.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        deliveryPicker\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dtos/initiate-payment.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Discount\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dtos/initiate-payment.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductWithVariantDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsNotEmpty()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dtos/initiate-payment.dto.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsInt,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { Discount } from 'src/discounts/discounts.entity';\nimport { PatchProductVariantDto } from 'src/product-variants/dto/patch-product-variant.dto';\n\nclass ProductWithVariantDto {\n  @IsString()\n  @IsNotEmpty()\n  productId: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  price: number;\n\n  @IsArray()\n  @IsNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => PatchProductVariantDto)\n  variants: PatchProductVariantDto[];\n}\n\nexport class InitiatePaymentDto {\n  @IsString()\n  @IsOptional()\n  deliveryPicker?: string;\n\n  @IsString()\n  @IsOptional()\n  deliveryAddress?: string;\n\n  @IsString()\n  @IsOptional()\n  discount?: Discount;\n\n  @IsArray()\n  @IsNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => ProductWithVariantDto)\n  variants: ProductWithVariantDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InitiatePaymentProvider.html":{"url":"injectables/InitiatePaymentProvider.html","title":"injectable - InitiatePaymentProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InitiatePaymentProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/providers/initiate-payment.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAuthHeader\n                            \n                            \n                                    Public\n                                    Async\n                                initializePayment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paystackConfiguration: ConfigType<>, dataSource: DataSource, usersService: UsersService, configService: ConfigService, productsService: ProductsService)\n                    \n                \n                        \n                            \n                                Defined in src/paystack/providers/initiate-payment.provider.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paystackConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productsService\n                                                  \n                                                        \n                                                                        ProductsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAuthHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAuthHeader()\n                \n            \n\n\n                    \n                        \n                            Defined in src/paystack/providers/initiate-payment.provider.ts:54\n                        \n                    \n\n\n            \n                \n                        function for getting the auth header\n\n\n                        \n                            Returns :         { Authorization: string; }\n\n                        \n                            \n                                authorization header for paystack\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        initializePayment\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializePayment(initiatePaymentDto: InitiatePaymentDto, user: ActiveUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paystack/providers/initiate-payment.provider.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                initiatePaymentDto\n                                            \n                                                            InitiatePaymentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  Inject,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { InitiatePaymentDto } from '../dtos/initiate-payment.dto';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\nimport paystackConfig from '../config/paystack.config';\nimport { ConfigService, ConfigType } from '@nestjs/config';\nimport { DataSource } from 'typeorm';\nimport axios from 'axios';\nimport { UsersService } from 'src/users/providers/users.service';\nimport { Payment } from 'src/payment/payment.entity';\nimport { paymentStatus } from 'src/payment/enums/paymentStatus.enum';\nimport { User } from 'src/users/user.entity';\nimport { ProductsService } from 'src/products/providers/products.service';\nimport { Product } from 'src/products/product.entity';\n\n@Injectable()\nexport class InitiatePaymentProvider {\n  constructor(\n    /**\n     * injecting the paystack config\n     */\n    @Inject(paystackConfig.KEY)\n    private readonly paystackConfiguration: ConfigType,\n\n    /**\n     * Injecting datasource\n     */\n    private readonly dataSource: DataSource,\n\n    /**\n     * injecting the users service\n     */\n    private readonly usersService: UsersService,\n\n    /**\n     * injecting config service\n     */\n    private readonly configService: ConfigService,\n\n    /**\n     * injecting the products service\n     */\n    private readonly productsService: ProductsService,\n  ) {}\n\n  /**\n   * function for getting the auth header\n   * @returns authorization header for paystack\n   */\n  private getAuthHeader() {\n    return { Authorization: `Bearer ${this.paystackConfiguration.secret}` };\n  }\n\n  public async initializePayment(\n    initiatePaymentDto: InitiatePaymentDto,\n    user: ActiveUserData,\n  ) {\n    // start transaction\n    // create Query Runner instance\n    const queryRunner = this.dataSource.createQueryRunner();\n    try {\n      // connect query runner to datasource\n      await queryRunner.connect();\n      // start transaction\n      await queryRunner.startTransaction();\n    } catch (error) {\n      console.log(error);\n      throw new RequestTimeoutException('Could not connect to datasource');\n    }\n\n    // user, discount info, delivery address info, product info\n\n    // find the user\n    const buyer: User = await this.usersService.findOneById(user.sub);\n\n    // user info should have details about address but if there is a set delivery address then use that\n    const deliveryAddress =\n      initiatePaymentDto.deliveryAddress ??\n      `${buyer.streetAddress}, ${buyer.city}, ${buyer.state}`;\n\n    const deliveryPicker =\n      initiatePaymentDto.deliveryPicker ??\n      `${buyer.firstName} ${buyer.lastName}`;\n\n    // find the discount if there is any\n\n    let totalAmount = initiatePaymentDto.variants\n      .map((prd) => {\n        // loop through inner variants\n        const totalQty = prd.variants\n          .map((vr) => vr.quantity)\n          .reduce((acc, cur) => cur + acc, 0);\n\n        return prd.price * totalQty;\n      })\n      .reduce((acc, cur) => acc + cur, 0);\n\n    totalAmount = initiatePaymentDto.discount\n      ? (initiatePaymentDto.discount.percentOff / 100) * totalAmount\n      : totalAmount;\n\n    console.log(totalAmount);\n\n    // initialize payment\n    let response;\n    try {\n      response = await axios.post(\n        `${this.paystackConfiguration.baseUrl}/transaction/initialize`,\n        {\n          email: buyer.email,\n          metadata: {\n            variants: initiatePaymentDto.variants,\n            user: buyer,\n            deliveryAddress,\n            deliveryPicker,\n            totalAmount,\n            discount: initiatePaymentDto.discount ?? {},\n          },\n          amount: totalAmount * 100,\n          callback_url: `${this.configService.get('appConfig.host')}/collections?success=yes`,\n        }, // Paystack accepts amounts in kobo\n        { headers: this.getAuthHeader() },\n      );\n\n      // Create payment record\n      await queryRunner.manager.save(Payment, {\n        userId: buyer.id,\n        amount: totalAmount,\n        provider: 'paystack',\n        providerReference: response.data.data.reference,\n        status: paymentStatus.PENDING,\n        authorizationUrl: response.data.data.authorization_url,\n        // variants\n      });\n\n      //   // Update tickets status to locked\n      //   await this.ticketsService.updateTicketsStatus(\n      //     queryRunner.manager,\n      //     tickets.map((ticket) => ticket.id),\n      //     TicketStatus.LOCKED,\n      //   );\n    } catch (error) {\n      throw new ConflictException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { MailService } from './providers/mail.service';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { ConfigService } from '@nestjs/config';\nimport { join } from 'path';\nimport { EjsAdapter } from '@nestjs-modules/mailer/dist/adapters/ejs.adapter';\n\n// makes importation of mail module to any module\n@Global()\n@Module({\n  imports: [\n    MailerModule.forRootAsync({\n      // we need the config service to configure the mailer module\n      inject: [ConfigService],\n      // we use the useFactory to inject the mailer module\n      useFactory: async (config: ConfigService) => {\n        // console.log(\n        //   config.get('appConfig.mailHost'),\n        //   config.get('appConfig.smtpUsername'),\n        //   config.get('appConfig.smtpPassword'),\n        // );\n        return {\n          transport: {\n            host: config.get('appConfig.mailHost'),\n            secure: true,\n            port: 465,\n            auth: {\n              user: config.get('appConfig.smtpUsername'),\n              pass: config.get('appConfig.smtpPassword'),\n            },\n            // tls: { rejectUnauthorized: false },\n          },\n          default: {\n            from: `Nich Fashion `,\n          },\n          template: {\n            dir: join(__dirname, 'templates'),\n            adapter: new EjsAdapter({\n              inlineCssEnabled: true,\n            }),\n            options: {\n              strict: false,\n            },\n          },\n        };\n      },\n    }),\n  ],\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/providers/mail.service.ts\n        \n\n\n            \n                Description\n            \n            \n                service for the mail module\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                sendLoginOtp\n                            \n                            \n                                    Public\n                                    Async\n                                sendResetOtp\n                            \n                            \n                                    Public\n                                    Async\n                                sendSubscriberMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService)\n                    \n                \n                        \n                            \n                                Defined in src/mail/providers/mail.service.ts:12\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendLoginOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendLoginOtp(user: User, otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/providers/mail.service.ts:48\n                        \n                    \n\n\n            \n                \n                        function for sending reset otp mail to user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendResetOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendResetOtp(user: User, otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/providers/mail.service.ts:29\n                        \n                    \n\n\n            \n                \n                        function for sending reset otp mail to user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendSubscriberMail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendSubscriberMail(subscriber: Subscriber)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/providers/mail.service.ts:65\n                        \n                    \n\n\n            \n                \n                        function for sending mail to user when they subscribe to the newsletter\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                subscriber\n                                            \n                                                            Subscriber\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ROOT_PATH } from '../../config/paths.config';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { Injectable } from '@nestjs/common';\nimport * as path from 'path';\nimport { Subscriber } from 'src/subscribers/subscriber.entity';\nimport { User } from 'src/users/user.entity';\n\n/**\n * service for the mail module\n */\n@Injectable()\nexport class MailService {\n  /**\n   * constructor\n   * @param mailerService\n   */\n  constructor(\n    /**\n     * injecting mailer service\n     */\n    private mailerService: MailerService,\n  ) {}\n\n  /**\n   * function for sending reset otp mail to user\n   * @param user\n   * @param otp\n   */\n  public async sendResetOtp(user: User, otp: string): Promise {\n    await this.mailerService.sendMail({\n      to: user.email,\n      from: `Ticket Hive - Support Team  `,\n      subject: `🔐 Reset Your Password – Let's Get You Back on Track!`,\n      template: path.join(ROOT_PATH, '/src/mail/templates/resetOtp.ejs'),\n      context: {\n        // fullname: user.fullname,\n        email: user.email,\n        otp: otp,\n      },\n    });\n  }\n\n  /**\n   * function for sending reset otp mail to user\n   * @param user\n   * @param otp\n   */\n  public async sendLoginOtp(user: User, otp: string): Promise {\n    await this.mailerService.sendMail({\n      to: user.email,\n      from: `Nich Fashion - Team  `,\n      subject: `🔐 Login to Nich Fashion- Get your best wears`,\n      template: path.join(ROOT_PATH, '/src/mail/templates/loginOtp.ejs'),\n      context: {\n        email: user.email,\n        otp: otp,\n      },\n    });\n  }\n\n  /**\n   * function for sending mail to user when they subscribe to the newsletter\n   * @param subscriber\n   */\n  public async sendSubscriberMail(subscriber: Subscriber): Promise {\n    await this.mailerService.sendMail({\n      to: subscriber.email,\n      from: `Ticket Hive -Team  `,\n      subject: `Welcome to Ticket Hive's Newsletter! 🎉`,\n      template: path.join(ROOT_PATH, '/src/mail/templates/subscription.ejs'),\n      context: {\n        email: subscriber.email,\n        id: subscriber.id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OtpSigninDto.html":{"url":"classes/OtpSigninDto.html","title":"class - OtpSigninDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OtpSigninDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/otpSignin.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                otp sign in dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                otp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        otp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the reset otp', example: 2343})@IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/otpSignin.dto.ts:17\n                        \n                    \n\n            \n                \n                    otp for signin\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsInt, IsNotEmpty } from 'class-validator';\n\n/**\n * otp sign in dto\n */\nexport class OtpSigninDto {\n  /**\n   * otp for signin\n   */\n  @ApiProperty({\n    description: 'This is the reset otp',\n    example: 2343,\n  })\n  @IsInt()\n  @IsNotEmpty()\n  otp: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtpSigninProvider.html":{"url":"injectables/OtpSigninProvider.html","title":"injectable - OtpSigninProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OtpSigninProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/otp-signin.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                signInWithOtp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, generateTokenProvider: GenerateTokensProvider)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/otp-signin.provider.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        generateTokenProvider\n                                                  \n                                                        \n                                                                        GenerateTokensProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        signInWithOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signInWithOtp(otpSigninDto: OtpSigninDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/otp-signin.provider.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otpSigninDto\n                                            \n                                                            OtpSigninDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/providers/users.service';\nimport { OtpSigninDto } from '../dtos/otpSignin.dto';\nimport * as crypto from 'crypto';\nimport { GenerateTokensProvider } from './generate-tokens.provider';\n\n@Injectable()\nexport class OtpSigninProvider {\n  constructor(\n    /**\n     * injecting users service\n     */\n    private readonly usersService: UsersService,\n\n    /**\n     * injecting the generateToken Provider\n     */\n    private readonly generateTokenProvider: GenerateTokensProvider,\n  ) {}\n\n  public async signInWithOtp(otpSigninDto: OtpSigninDto) {\n    // get the otp and hash it\n    const hashedOtp = crypto\n      .createHash('sha256')\n      .update(otpSigninDto.otp.toString())\n      .digest('hex');\n\n    // find the user based on the hased otp and timestamp\n    const user =\n      await this.usersService.findUserByResetOtpAndExpiryTime(hashedOtp);\n\n    // clear the otp and expiry time\n    await this.usersService.clearOtpAndExpiryTime(user);\n\n    // send access token and refresh token\n    // // generate an access token\n    const { accessToken, refreshToken } =\n      await this.generateTokenProvider.generateTokens(user);\n\n    return {\n      accessToken,\n      refreshToken,\n      user: {\n        id: user.id,\n        email: user.email,\n        role: user.role,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paginated.html":{"url":"interfaces/Paginated.html","title":"interface - Paginated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Paginated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pagination/interfaces/paginated.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for the response on paginated queries\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            links\n                                        \n                                \n                                \n                                        \n                                            meta\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the data to be returned\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        links:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    various links for the pages of the data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the metadata for the data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Paginated {\n  /**\n   * the data to be returned\n   */\n  data: T[];\n\n  /**\n   * the metadata for the data\n   */\n  meta: {\n    itemsPerPage: number;\n    totalItems: number;\n    currentPage: number;\n    totalPages: number;\n  };\n\n  /**\n   * various links for the pages of the data\n   */\n  links: {\n    first: string;\n    last: string;\n    current: string;\n    next: string;\n    previous: string;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaginationModule.html":{"url":"modules/PaginationModule.html","title":"module - PaginationModule","body":"\n                   \n\n\n\n\n    Modules\n    PaginationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaginationModule\n\n\n\ncluster_PaginationModule_providers\n\n\n\ncluster_PaginationModule_exports\n\n\n\n\nPaginationProvider \n\nPaginationProvider \n\n\n\nPaginationModule\n\nPaginationModule\n\nPaginationProvider  -->\n\nPaginationModule->PaginationProvider \n\n\n\n\n\nPaginationProvider\n\nPaginationProvider\n\nPaginationModule -->\n\nPaginationProvider->PaginationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/pagination/pagination.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaginationProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PaginationProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PaginationProvider } from './providers/pagination.provider';\n\n@Module({\n  providers: [PaginationProvider],\n  exports: [PaginationProvider],\n})\nexport class PaginationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaginationProvider.html":{"url":"injectables/PaginationProvider.html","title":"injectable - PaginationProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaginationProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pagination/providers/pagination.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for pagination\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                paginationQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in src/common/pagination/providers/pagination.provider.ts:14\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        paginationQuery\n                        \n                    \n                \n            \n            \n                \n                        \n                    paginationQuery(paginationQuery: PaginationQueryDto, repository: Repository, options?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/pagination/providers/pagination.provider.ts:34\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        function for paginating find all queries\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paginationQuery\n                                            \n                                                            PaginationQueryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                repository\n                                            \n                                                        Repository\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                data, metadata and links for the findAll queries\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { PaginationQueryDto } from '../dtos/pagination-query.dto';\nimport { ObjectLiteral, Repository } from 'typeorm';\n\n// inorder to inject a request to a provider\nimport { Request } from 'express';\nimport { REQUEST } from '@nestjs/core';\nimport { Paginated } from '../interfaces/paginated.interface';\n\n/**\n * provider for pagination\n */\n@Injectable()\nexport class PaginationProvider {\n  /**\n   * constructor\n   * @param request\n   */\n  constructor(\n    /**\n     * Injecting request\n     */\n    @Inject(REQUEST)\n    private readonly request: Request,\n  ) {}\n\n  /**\n   * function for paginating find all queries\n   * @param paginationQuery\n   * @param repository\n   * @param options\n   * @returns data, metadata and links for the findAll queries\n   */\n  public async paginationQuery(\n    paginationQuery: PaginationQueryDto,\n    repository: Repository,\n    options?: any,\n  ): Promise> {\n    const results = await repository.find({\n      // no of items to skip in one query\n      skip: (paginationQuery.page - 1) * paginationQuery.limit,\n      // the no items to take in one query\n      take: paginationQuery.limit,\n      relations: options.relations,\n      select: options.select,\n      where: options.where,\n    });\n\n    /**\n     * Create the request URLS\n     */\n    const baseURL =\n      this.request.protocol + '://' + this.request.headers.host + '/';\n\n    const newUrl = new URL(this.request.url, baseURL);\n\n    // console.log(newUrl);\n\n    const totalItems = await repository.count();\n    const totalPages = Math.ceil(totalItems / paginationQuery.limit);\n    const nextPage =\n      paginationQuery.page === totalPages\n        ? paginationQuery.page\n        : paginationQuery.page + 1;\n    const prevPage =\n      paginationQuery.page === 1\n        ? paginationQuery.page\n        : paginationQuery.page - 1;\n\n    const finalResponse: Paginated = {\n      data: results,\n      meta: {\n        itemsPerPage: paginationQuery.limit,\n        totalItems: totalItems,\n        currentPage: paginationQuery.page,\n        totalPages: totalPages,\n      },\n      links: {\n        first: `${newUrl.origin}${newUrl.pathname}?limit=${paginationQuery.limit}&page=1`,\n        last: `${newUrl.origin}${newUrl.pathname}?limit=${paginationQuery.limit}&page=${totalPages}`,\n        current: `${newUrl.origin}${newUrl.pathname}?limit=${paginationQuery.limit}&page=${paginationQuery.page}`,\n        next: `${newUrl.origin}${newUrl.pathname}?limit=${paginationQuery.limit}&page=${nextPage}`,\n        previous: `${newUrl.origin}${newUrl.pathname}?limit=${paginationQuery.limit}&page=${prevPage}`,\n      },\n    };\n\n    return finalResponse;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQueryDto.html":{"url":"classes/PaginationQueryDto.html","title":"class - PaginationQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pagination/dtos/pagination-query.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto for the pagination query\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/pagination/dtos/pagination-query.dto.ts:12\n                        \n                    \n\n            \n                \n                    limit for the number of items in the get all requests\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/pagination/dtos/pagination-query.dto.ts:19\n                        \n                    \n\n            \n                \n                    page number for the get all requests\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsPositive } from 'class-validator';\n\n/**\n * dto for the pagination query\n */\nexport class PaginationQueryDto {\n  /**\n   * limit for the number of items in the get all requests\n   */\n  @IsOptional()\n  limit?: number = 0;\n\n  /**\n   * page number for the get all requests\n   */\n  @IsOptional()\n  @IsPositive()\n  page?: number = 1;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchProductDto.html":{"url":"classes/PatchProductDto.html","title":"class - PatchProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/patch-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                brand\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                category\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                clothType\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                discount\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                dressStyle\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    \n                                longDescription\n                            \n                            \n                                    \n                                    \n                                material\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                price\n                            \n                            \n                                    \n                                    \n                                shortDescription\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                variants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        brand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        clothType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        dressStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        longDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        material\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        shortDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PatchProductVariantDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsInt, IsOptional, IsString } from 'class-validator';\nimport { PatchProductVariantDto } from 'src/product-variants/dto/patch-product-variant.dto';\n\nexport class PatchProductDto {\n  @IsString()\n  @IsOptional()\n  id?: string;\n\n  @IsString()\n  @IsOptional()\n  name?: string;\n\n  @IsInt()\n  @IsOptional()\n  price?: number;\n\n  @IsString()\n  @IsOptional()\n  discount?: string;\n\n  @IsString()\n  @IsOptional()\n  category?: string;\n\n  @IsString()\n  @IsOptional()\n  dressStyle?: string;\n\n  @IsString()\n  @IsOptional()\n  clothType?: string;\n\n  @IsString()\n  @IsOptional()\n  material: string;\n\n  @IsString()\n  @IsOptional()\n  brand: string;\n\n  @IsString()\n  @IsOptional()\n  shortDescription: string;\n\n  @IsString()\n  @IsOptional()\n  longDescription: string;\n\n  @IsArray()\n  @IsOptional()\n  variants?: PatchProductVariantDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchProductVariantDto.html":{"url":"classes/PatchProductVariantDto.html","title":"class - PatchProductVariantDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchProductVariantDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-variants/dto/patch-product-variant.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(\n  CreateProductVariantDto,\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                soldOut\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/patch-product-variant.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        soldOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/patch-product-variant.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateProductVariantDto } from './create-product-variant.dto';\nimport { IsBoolean, IsOptional, IsString } from 'class-validator';\n\nexport class PatchProductVariantDto extends PartialType(\n  CreateProductVariantDto,\n) {\n  @IsString()\n  @IsOptional()\n  id?: string;\n\n  @IsBoolean()\n  @IsOptional()\n  soldOut?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUserDto.html":{"url":"classes/PatchUserDto.html","title":"class - PatchUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/patch-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                country\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lasttName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                state\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                streetAddress\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lasttName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        streetAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\nimport { IsInt, IsOptional, IsString } from 'class-validator';\n\nexport class PatchUserDto extends PartialType(CreateUserDto) {\n  @IsOptional()\n  @IsString()\n  firstName?: string;\n\n  @IsOptional()\n  @IsString()\n  lasttName?: string;\n\n  @IsOptional()\n  @IsString()\n  country?: string;\n\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @IsOptional()\n  @IsString()\n  state?: string;\n\n  @IsOptional()\n  @IsString()\n  city?: string;\n\n  @IsOptional()\n  @IsString()\n  streetAddress?: string;\n\n  @IsOptional()\n  @IsInt()\n  zipCode?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Payment.html":{"url":"entities/Payment.html","title":"entity - Payment","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Payment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/payment.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                payment entity\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                    Optional\n                                authorizationUrl\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                provider\n                            \n                            \n                                    \n                                providerReference\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                userId\n                            \n                            \n                                    \n                                    \n                                variants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {precision: 10, scale: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        authorizationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        providerReference\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         paymentStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: paymentStatus, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProductVariant[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable({name: 'payment_variants', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:55\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { paymentStatus } from './enums/paymentStatus.enum';\nimport { ProductVariant } from 'src/product-variants/product-variants.entity';\n\n/**\n * payment entity\n */\n@Entity()\nexport class Payment {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({\n    type: 'enum',\n    enum: paymentStatus,\n    default: paymentStatus.PENDING,\n  })\n  status: paymentStatus;\n\n  @Column()\n  provider: string;\n\n  @Column({ unique: true })\n  providerReference: string;\n\n  @Column({ nullable: true })\n  authorizationUrl?: string;\n\n  @Column('decimal', { precision: 10, scale: 2 })\n  amount: number;\n\n  @Column({ nullable: false })\n  userId: string;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @ManyToMany(() => ProductVariant)\n  @JoinTable({\n    name: 'payment_variants',\n    joinColumn: { name: 'paymentId', referencedColumnName: 'id' },\n    inverseJoinColumn: { name: 'variantId', referencedColumnName: 'id' },\n  })\n  variants: ProductVariant[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentModule.html":{"url":"modules/PaymentModule.html","title":"module - PaymentModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/payment/payment.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class PaymentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaystackController.html":{"url":"controllers/PaystackController.html","title":"controller - PaystackController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaystackController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/paystack.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                paystack\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                initiatePayment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        initiatePayment\n                        \n                    \n                \n            \n            \n                \n                        \n                    initiatePayment(initiatePaymentDto: InitiatePaymentDto, user: ActiveUserData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/initiate-payment')@Roles(Role.USER)\n                \n            \n\n                    \n                        \n                            Defined in src/paystack/paystack.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                initiatePaymentDto\n                                            \n                                                            InitiatePaymentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { PaystackService } from './providers/paystack.service';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { Role } from 'src/auth/enums/role-type.enum';\nimport { InitiatePaymentDto } from './dtos/initiate-payment.dto';\nimport { ActiveUser } from 'src/auth/decorator/active-user.decorator';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\nimport { Auth } from 'src/auth/decorator/auth.decorator';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\n\n@Controller('paystack')\nexport class PaystackController {\n  constructor(\n    /**\n     * injecting the paystack service\n     */\n    private readonly paystackService: PaystackService,\n  ) {}\n\n  @Post('/initiate-payment')\n  @Roles(Role.USER)\n  //   @Auth(AuthType.None)\n  public initiatePayment(\n    @Body() initiatePaymentDto: InitiatePaymentDto,\n    @ActiveUser() user: ActiveUserData,\n  ) {\n    return this.paystackService.initiatePayment(initiatePaymentDto, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaystackModule.html":{"url":"modules/PaystackModule.html","title":"module - PaystackModule","body":"\n                   \n\n\n\n\n    Modules\n    PaystackModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaystackModule\n\n\n\ncluster_PaystackModule_imports\n\n\n\ncluster_PaystackModule_providers\n\n\n\n\nProductsModule\n\nProductsModule\n\n\n\nPaystackModule\n\nPaystackModule\n\nPaystackModule -->\n\nProductsModule->PaystackModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nPaystackModule -->\n\nUsersModule->PaystackModule\n\n\n\n\n\nInitiatePaymentProvider\n\nInitiatePaymentProvider\n\nPaystackModule -->\n\nInitiatePaymentProvider->PaystackModule\n\n\n\n\n\nPaystackService\n\nPaystackService\n\nPaystackModule -->\n\nPaystackService->PaystackModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/paystack/paystack.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            InitiatePaymentProvider\n                        \n                        \n                            PaystackService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaystackController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProductsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { PaystackController } from './paystack.controller';\nimport { PaystackService } from './providers/paystack.service';\nimport { InitiatePaymentProvider } from './providers/initiate-payment.provider';\nimport paystackConfig from './config/paystack.config';\nimport { UsersModule } from 'src/users/users.module';\nimport { ProductsModule } from 'src/products/products.module';\n\n@Module({\n  imports: [\n    UsersModule,\n    ProductsModule,\n    ConfigModule.forFeature(paystackConfig),\n  ],\n  controllers: [PaystackController],\n  providers: [PaystackService, InitiatePaymentProvider],\n})\nexport class PaystackModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaystackService.html":{"url":"injectables/PaystackService.html","title":"injectable - PaystackService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaystackService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/providers/paystack.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                initiatePayment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(initiatePaymentProvider: InitiatePaymentProvider)\n                    \n                \n                        \n                            \n                                Defined in src/paystack/providers/paystack.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initiatePaymentProvider\n                                                  \n                                                        \n                                                                        InitiatePaymentProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        initiatePayment\n                        \n                    \n                \n            \n            \n                \n                        \n                    initiatePayment(initiatePaymentDto: InitiatePaymentDto, user: ActiveUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paystack/providers/paystack.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                initiatePaymentDto\n                                            \n                                                            InitiatePaymentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InitiatePaymentProvider } from './initiate-payment.provider';\nimport { InitiatePaymentDto } from '../dtos/initiate-payment.dto';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\n\n@Injectable()\nexport class PaystackService {\n  constructor(\n    /**\n     * injecting the initiate payment provider\n     */\n    private readonly initiatePaymentProvider: InitiatePaymentProvider,\n  ) {}\n\n  public async initiatePayment(\n    initiatePaymentDto: InitiatePaymentDto,\n    user: ActiveUserData,\n  ) {\n    return await this.initiatePaymentProvider.initializePayment(\n      initiatePaymentDto,\n      user,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Product.html":{"url":"entities/Product.html","title":"entity - Product","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/product.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                brand\n                            \n                            \n                                    \n                                category\n                            \n                            \n                                    \n                                clothType\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                discount\n                            \n                            \n                                    \n                                dressStyle\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                longDescription\n                            \n                            \n                                    \n                                material\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                    Optional\n                                reviews\n                            \n                            \n                                    \n                                shortDescription\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    Optional\n                                variants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        brand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        clothType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {precision: 5, scale: 2, default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dressStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        longDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        material\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {precision: 10, scale: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        reviews\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Review[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, review => review.product, {cascade: true, eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        shortDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProductVariant[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, variant => variant.product, {cascade: true, eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:53\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ProductVariant } from 'src/product-variants/product-variants.entity';\nimport { Review } from 'src/reviews/reviews.entity';\nimport {\n  BeforeInsert,\n  BeforeUpdate,\n  Column,\n  CreateDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Product {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column('decimal', { precision: 10, scale: 2 })\n  price: number;\n\n  @Column('decimal', { precision: 5, scale: 2, default: 0 })\n  discount: number;\n\n  @Column()\n  category: string;\n\n  @Column()\n  dressStyle: string;\n\n  @Column()\n  clothType: string;\n\n  @Column()\n  material: string;\n\n  @Column()\n  brand: string;\n\n  @Column()\n  shortDescription: string;\n\n  @Column()\n  longDescription: string;\n\n  @OneToMany(() => ProductVariant, (variant) => variant.product, {\n    cascade: true,\n    eager: true,\n  })\n  variants?: ProductVariant[];\n\n  @OneToMany(() => Review, (review) => review.product, {\n    cascade: true,\n    eager: true,\n  })\n  reviews?: Review[];\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @BeforeInsert()\n  @BeforeUpdate()\n  transformToLowercase() {\n    if (this.name) {\n      this.name = this.name.toLowerCase();\n    }\n    if (this.category) {\n      this.category = this.category.toLowerCase();\n    }\n    if (this.dressStyle) {\n      this.dressStyle = this.dressStyle.toLowerCase();\n    }\n    if (this.clothType) {\n      this.clothType = this.clothType.toLowerCase();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProductImage.html":{"url":"entities/ProductImage.html","title":"entity - ProductImage","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProductImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-images/product-image.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                displayOrder\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                imagePath\n                            \n                            \n                                    \n                                    \n                                productVariant\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        displayOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int', {default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-images/product-image.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-images/product-image.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        imagePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-images/product-image.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        productVariant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductVariant\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, variant => variant.images, {onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-images/product-image.entity.ts:25\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ProductVariant } from 'src/product-variants/product-variants.entity';\nimport {\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class ProductImage {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  imagePath: string;\n\n  @Column('int', { default: 0 })\n  displayOrder: number;\n\n  @ManyToOne(() => ProductVariant, (variant) => variant.images, {\n    onDelete: 'CASCADE',\n  })\n  @JoinColumn()\n  productVariant: ProductVariant;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductImagesModule.html":{"url":"modules/ProductImagesModule.html","title":"module - ProductImagesModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductImagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductImagesModule\n\n\n\ncluster_ProductImagesModule_providers\n\n\n\n\nProductImagesService\n\nProductImagesService\n\n\n\nProductImagesModule\n\nProductImagesModule\n\nProductImagesModule -->\n\nProductImagesService->ProductImagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product-images/product-images.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductImagesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductImagesService } from './providers/product-images.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProductImage } from './product-image.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ProductImage])],\n  providers: [ProductImagesService],\n})\nexport class ProductImagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductImagesService.html":{"url":"injectables/ProductImagesService.html","title":"injectable - ProductImagesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductImagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-images/providers/product-images.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ProductImagesService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProductVariant.html":{"url":"entities/ProductVariant.html","title":"entity - ProductVariant","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProductVariant\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-variants/product-variants.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                color\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                images\n                            \n                            \n                                    \n                                    \n                                product\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                soldOut\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProductImage[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, image => image.productVariant, {cascade: true, eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, product => product.variants, {onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        soldOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:27\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ProductImage } from 'src/product-images/product-image.entity';\nimport { Product } from 'src/products/product.entity';\nimport {\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  OneToMany,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class ProductVariant {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  color: string;\n\n  @Column()\n  size: string;\n\n  @Column('int')\n  quantity: number;\n\n  @Column({ default: false })\n  soldOut: boolean;\n\n  @ManyToOne(() => Product, (product) => product.variants, {\n    onDelete: 'CASCADE',\n  })\n  @JoinColumn()\n  product: Product;\n\n  @OneToMany(() => ProductImage, (image) => image.productVariant, {\n    cascade: true,\n    eager: true,\n  })\n  images?: ProductImage[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductVariantsModule.html":{"url":"modules/ProductVariantsModule.html","title":"module - ProductVariantsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductVariantsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductVariantsModule\n\n\n\ncluster_ProductVariantsModule_providers\n\n\n\ncluster_ProductVariantsModule_exports\n\n\n\n\nProductVariantsService \n\nProductVariantsService \n\n\n\nProductVariantsModule\n\nProductVariantsModule\n\nProductVariantsService  -->\n\nProductVariantsModule->ProductVariantsService \n\n\n\n\n\nProductVariantsService\n\nProductVariantsService\n\nProductVariantsModule -->\n\nProductVariantsService->ProductVariantsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product-variants/product-variants.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductVariantsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProductVariantsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductVariantsService } from './providers/product-variants.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProductVariant } from './product-variants.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ProductVariant])],\n  providers: [ProductVariantsService],\n  exports: [ProductVariantsService],\n})\nexport class ProductVariantsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductVariantsService.html":{"url":"injectables/ProductVariantsService.html","title":"injectable - ProductVariantsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductVariantsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-variants/providers/product-variants.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findProductVariantById\n                            \n                            \n                                    Public\n                                    Async\n                                saveProductVariant\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productVariantRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/product-variants/providers/product-variants.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productVariantRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findProductVariantById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductVariantById(variantId: string, productId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product-variants/providers/product-variants.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                variantId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a product variant\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        saveProductVariant\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveProductVariant(variant: ProductVariant)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product-variants/providers/product-variants.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                variant\n                                            \n                                                            ProductVariant\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a product variant\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { ProductVariant } from '../product-variants.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class ProductVariantsService {\n  constructor(\n    /**\n     * injecting the product variant repository\n     */\n    @InjectRepository(ProductVariant)\n    private readonly productVariantRepository: Repository,\n  ) {}\n\n  /**\n   * @function finds a product variant by id\n   * @param variantId\n   * @param productId\n   * @returns a product variant\n   */\n  public async findProductVariantById(\n    variantId: string,\n    productId: string,\n  ): Promise {\n    const variant = await this.productVariantRepository.findOne({\n      where: { id: variantId, product: { id: productId } },\n    });\n\n    if (!variant) {\n      throw new NotFoundException(\n        `Variant with ID ${variantId} not found for product ${productId}`,\n      );\n    }\n\n    return variant;\n  }\n\n  /**\n   * @function saves a variant\n   * @param variant\n   * @returns  a product variant\n   */\n  public async saveProductVariant(\n    variant: ProductVariant,\n  ): Promise {\n    return await this.productVariantRepository.save(variant);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductWithVariantDto.html":{"url":"classes/ProductWithVariantDto.html","title":"class - ProductWithVariantDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductWithVariantDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/dtos/initiate-payment.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                productId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                variants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dtos/initiate-payment.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dtos/initiate-payment.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PatchProductVariantDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsNotEmpty()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dtos/initiate-payment.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsInt,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { Discount } from 'src/discounts/discounts.entity';\nimport { PatchProductVariantDto } from 'src/product-variants/dto/patch-product-variant.dto';\n\nclass ProductWithVariantDto {\n  @IsString()\n  @IsNotEmpty()\n  productId: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  price: number;\n\n  @IsArray()\n  @IsNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => PatchProductVariantDto)\n  variants: PatchProductVariantDto[];\n}\n\nexport class InitiatePaymentDto {\n  @IsString()\n  @IsOptional()\n  deliveryPicker?: string;\n\n  @IsString()\n  @IsOptional()\n  deliveryAddress?: string;\n\n  @IsString()\n  @IsOptional()\n  discount?: Discount;\n\n  @IsArray()\n  @IsNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => ProductWithVariantDto)\n  variants: ProductWithVariantDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                createProduct\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                deleteProduct\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                findAllProducts\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                findProductById\n                            \n                            \n                                    \n                                    \n                                    Public\n                                patchProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProduct(createProductDto: CreateProductDto, files: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiConsumes('multipart/form-data')@UseInterceptors(undefined)@Roles(Role.ADMIN)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                files\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProduct(productId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:productId')@Roles(Role.ADMIN)@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a message that the item was successfully deleted\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        findAllProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllProducts(productQuery: GetProductsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It finds all products '})@ApiResponse({status: 200, description: 'All products are fetched and paginated'})@ApiQuery({name: 'limit', type: 'number', required: false, description: 'The number of entries returned per query', example: 10})@ApiQuery({name: 'page', type: 'number', required: false, description: 'The position of the page number that you want the api to return', example: 1})@Auth(AuthType.None)@Get('')\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:133\n                        \n                    \n\n\n            \n                \n                        route for getting all products\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productQuery\n                                            \n                                                            GetProductsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                all products\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        findProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductById(productId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It finds a product based on its id'})@ApiResponse({status: 200, description: 'Product is fetched successfully based on its id'})@ApiParam({name: 'eventId', required: true, type: String, description: 'The unique identifier of the product', example: '12345'})@ApiHeaders(['undefined', 'undefined'])@Auth(AuthType.None)@Get('/:productId')\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:100\n                        \n                    \n\n\n            \n                \n                        route for getting a product by the product id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                a particular event\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        patchProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchProduct(productId: string, patchProductDto: PatchProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:productId')@Roles(Role.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patchProductDto\n                                            \n                                                            PatchProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                updated product\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  Query,\n  UploadedFiles,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { CreateProductDto } from './dtos/createProductDto';\nimport {\n  ApiConsumes,\n  ApiHeaders,\n  ApiOperation,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n} from '@nestjs/swagger';\nimport { FileFieldsInterceptor } from '@nestjs/platform-express';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { Role } from 'src/auth/enums/role-type.enum';\nimport { ProductsService } from './providers/products.service';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\nimport { Auth } from 'src/auth/decorator/auth.decorator';\nimport { GetProductsDto } from './dtos/get-product.dto';\nimport { PatchProductDto } from './dtos/patch-product.dto';\n\n@Controller('products')\nexport class ProductsController {\n  constructor(\n    /**\n     * injecting the products service\n     */\n    private readonly productsService: ProductsService,\n  ) {}\n\n  /**\n   * @function createProduct\n   * @param createProductDto\n   * @param user\n   * @param files\n   */\n  @ApiConsumes('multipart/form-data')\n  @UseInterceptors(\n    FileFieldsInterceptor(\n      // Dynamically generate interceptor fields\n      Array.from({ length: 10 }, (_, i) => ({\n        name: `variants[${i}][images]`,\n        maxCount: 6,\n      })),\n    ),\n  )\n  @Roles(Role.ADMIN)\n  @Post()\n  public createProduct(\n    @Body() createProductDto: CreateProductDto,\n    @UploadedFiles() files: { [key: string]: Express.Multer.File[] },\n  ) {\n    return this.productsService.createProduct(createProductDto, files);\n  }\n\n  /**\n   * route for getting a product by the product id\n   * @param eventId\n   * @returns a particular event\n   */\n  @ApiOperation({\n    summary: 'It finds a product based on its id',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Product is fetched successfully based on its id',\n  })\n  @ApiParam({\n    name: 'eventId',\n    required: true,\n    type: String,\n    description: 'The unique identifier of the product',\n    example: '12345',\n  })\n  @ApiHeaders([\n    {\n      name: 'Authorization',\n      required: true,\n      description: 'Bearer token for authorization',\n    },\n    {\n      name: 'X-Custom-Header',\n      required: false,\n      description: 'A custom optional header',\n    },\n  ])\n  @Auth(AuthType.None)\n  @Get('/:productId')\n  public findProductById(@Param('productId') productId: string) {\n    return this.productsService.findProductById(productId);\n  }\n\n  /**\n   * route for getting all products\n   * @param productQuery\n   * @returns all products\n   */\n  @ApiOperation({\n    summary: 'It finds all products ',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'All products are fetched and paginated',\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: 'number',\n    required: false,\n    description: 'The number of entries returned per query',\n    example: 10,\n  })\n  @ApiQuery({\n    name: 'page',\n    type: 'number',\n    required: false,\n    description:\n      'The position of the page number that you want the api to return',\n    example: 1,\n  })\n  @Auth(AuthType.None)\n  @Get('')\n  public findAllProducts(@Query() productQuery: GetProductsDto) {\n    return this.productsService.findAll(productQuery);\n  }\n\n  /**\n   * @function updates a product\n   * @param productId\n   * @param patchProductDto\n   * @returns updated product\n   */\n  @Patch('/:productId')\n  @Roles(Role.ADMIN)\n  public patchProduct(\n    @Param('productId') productId: string,\n    @Body() patchProductDto: PatchProductDto,\n  ) {\n    return this.productsService.updateProduct(productId, patchProductDto);\n  }\n\n  /**\n   * @function deletes a product\n   * @param productId\n   * @returns a message that the item was successfully deleted\n   */\n  @Delete('/:productId')\n  @Roles(Role.ADMIN)\n  @HttpCode(HttpStatus.NO_CONTENT) // This set\n  public deleteProduct(\n    @Param('productId') productId: string,\n  ): Promise {\n    return this.productsService.deleteProduct(productId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_ProductsModule_imports\n\n\n\ncluster_ProductsModule_exports\n\n\n\n\nPaginationModule\n\nPaginationModule\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nPaginationModule->ProductsModule\n\n\n\n\n\nProductVariantsModule\n\nProductVariantsModule\n\nProductsModule -->\n\nProductVariantsModule->ProductsModule\n\n\n\n\n\nUploadsModule\n\nUploadsModule\n\nProductsModule -->\n\nUploadsModule->ProductsModule\n\n\n\n\n\nProductsService \n\nProductsService \n\nProductsService  -->\n\nProductsModule->ProductsService \n\n\n\n\n\nCreateProductProvider\n\nCreateProductProvider\n\nProductsModule -->\n\nCreateProductProvider->ProductsModule\n\n\n\n\n\nFindAllProductsProvider\n\nFindAllProductsProvider\n\nProductsModule -->\n\nFindAllProductsProvider->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nUpdateProductProvider\n\nUpdateProductProvider\n\nProductsModule -->\n\nUpdateProductProvider->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateProductProvider\n                        \n                        \n                            FindAllProductsProvider\n                        \n                        \n                            ProductsService\n                        \n                        \n                            UpdateProductProvider\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PaginationModule\n                        \n                        \n                            ProductVariantsModule\n                        \n                        \n                            UploadsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductsController } from './products.controller';\nimport { ProductsService } from './providers/products.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Product } from './product.entity';\nimport { CreateProductProvider } from './providers/create-product.provider';\nimport { UploadsModule } from 'src/uploads/uploads.module';\nimport { PaginationModule } from 'src/common/pagination/pagination.module';\nimport { ProductVariantsModule } from 'src/product-variants/product-variants.module';\nimport { FindAllProductsProvider } from './providers/find-all-products.provider';\nimport { UpdateProductProvider } from './providers/update-product.provider';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Product]),\n    UploadsModule,\n    PaginationModule,\n    ProductVariantsModule,\n  ],\n  controllers: [ProductsController],\n  providers: [\n    ProductsService,\n    CreateProductProvider,\n    FindAllProductsProvider,\n    UpdateProductProvider,\n  ],\n  exports: [ProductsService],\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/providers/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createProduct\n                            \n                            \n                                    Public\n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findProductById\n                            \n                            \n                                    Public\n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createProductProvider: CreateProductProvider, productRepository: Repository, findAllProductsProvider: FindAllProductsProvider, updateProductProvider: UpdateProductProvider)\n                    \n                \n                        \n                            \n                                Defined in src/products/providers/products.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createProductProvider\n                                                  \n                                                        \n                                                                        CreateProductProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        findAllProductsProvider\n                                                  \n                                                        \n                                                                        FindAllProductsProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateProductProvider\n                                                  \n                                                        \n                                                                        UpdateProductProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProduct(createProductDto: CreateProductDto, files: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                files\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                the created product\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProduct(productId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a message that the item was successfully deleted\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(productQuery: GetProductsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productQuery\n                                            \n                                                            GetProductsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                all products\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductById(productId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                product by id\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProduct(id: string, patchProductDto: PatchProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patchProductDto\n                                            \n                                                            PatchProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                updated product\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { CreateProductProvider } from './create-product.provider';\nimport { CreateProductDto } from '../dtos/createProductDto';\nimport { Repository } from 'typeorm';\nimport { Product } from '../product.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { GetProductsDto } from '../dtos/get-product.dto';\nimport { Paginated } from 'src/common/pagination/interfaces/paginated.interface';\nimport { PatchProductDto } from '../dtos/patch-product.dto';\nimport { FindAllProductsProvider } from './find-all-products.provider';\nimport { UpdateProductProvider } from './update-product.provider';\n\n@Injectable()\nexport class ProductsService {\n  constructor(\n    /**\n     * injecting the create product provider\n     */\n\n    private readonly createProductProvider: CreateProductProvider,\n\n    /**\n     * injecting the product repository\n     */\n    @InjectRepository(Product)\n    private readonly productRepository: Repository,\n\n    /**\n     * injecting the find all products provider\n     */\n    private readonly findAllProductsProvider: FindAllProductsProvider,\n\n    /**\n     * injecting the update product provider\n     */\n    private readonly updateProductProvider: UpdateProductProvider,\n  ) {}\n\n  /**\n   * @function creates a product\n   * @param createProductDto\n   * @param files\n   * @returns the created product\n   */\n  public async createProduct(\n    createProductDto: CreateProductDto,\n    files: { [key: string]: Express.Multer.File[] },\n  ): Promise {\n    return this.createProductProvider.createProduct(createProductDto, files);\n  }\n\n  /**\n   * @function to get product by id\n   * @param productId\n   * @returns product by id\n   */\n  public async findProductById(productId: string): Promise {\n    try {\n      const product = await this.productRepository.findOneBy({\n        id: productId,\n      });\n\n      if (!product) {\n        throw new NotFoundException(`product with ${productId}  not found`);\n      }\n\n      return product;\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n\n  /**\n   * @function for getting all products\n   * @param productQuery\n   * @returns all products\n   */\n  public async findAll(\n    productQuery: GetProductsDto,\n  ): Promise> {\n    return await this.findAllProductsProvider.findAll(productQuery);\n  }\n\n  /**\n   * @function updates a product\n   * @param id\n   * @param patchProductDto\n   * @returns updated product\n   */\n  public async updateProduct(\n    id: string,\n    patchProductDto: PatchProductDto,\n  ): Promise {\n    return await this.updateProductProvider.updateProduct(id, patchProductDto);\n  }\n\n  /**\n   * @function deletes a product\n   * @param productId\n   * @returns a message that the item was successfully deleted\n   */\n  public async deleteProduct(productId: string): Promise {\n    try {\n      await this.productRepository.delete(productId);\n      return {\n        message: `Product ${productId}, was successfully deleted`,\n      };\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenDto.html":{"url":"classes/RefreshTokenDto.html","title":"class - RefreshTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/refresh-token.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                refresh token dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the refresh token', example: 'hdfbwojefbnqpkfbjoqfehfewfeqwf234jr'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/refresh-token.dto.ts:17\n                        \n                    \n\n            \n                \n                    refresh token\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\n/**\n * refresh token dto\n */\nexport class RefreshTokenDto {\n  /**\n   * refresh token\n   */\n  @ApiProperty({\n    description: 'This is the refresh token',\n    example: 'hdfbwojefbnqpkfbjoqfehfewfeqwf234jr',\n  })\n  @IsNotEmpty()\n  @IsString()\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RefreshTokenProvider.html":{"url":"injectables/RefreshTokenProvider.html","title":"injectable - RefreshTokenProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RefreshTokenProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/refresh-token.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for resfresh token\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                refreshTokens\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConfiguration: ConfigType<>, generateTokenProvider: GenerateTokensProvider, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/refresh-token.provider.ts:19\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        generateTokenProvider\n                                                  \n                                                        \n                                                                        GenerateTokensProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshTokens(refreshTokenDto: RefreshTokenDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/refresh-token.provider.ts:56\n                        \n                    \n\n\n            \n                \n                        function for using the refresh token to generate a new access and refresh token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshTokenDto\n                                            \n                                                            RefreshTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                access and refresh tokend\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  forwardRef,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { RefreshTokenDto } from '../dtos/refresh-token.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport jwtConfig from '../config/jwt.config';\nimport { ConfigType } from '@nestjs/config';\nimport { GenerateTokensProvider } from './generate-tokens.provider';\nimport { UsersService } from 'src/users/providers/users.service';\nimport { ActiveUserData } from '../interfaces/active-user-data.interface';\n\n/**\n * provider for resfresh token\n */\n@Injectable()\nexport class RefreshTokenProvider {\n  /**\n   * constructor\n   * @param jwtService\n   * @param jwtConfiguration\n   * @param generateTokenProvider\n   * @param usersService\n   */\n  constructor(\n    /**\n     * Injecting the jwt service\n     */\n    private readonly jwtService: JwtService,\n\n    /**\n     * Injecting the jwt config\n     */\n    @Inject(jwtConfig.KEY)\n    private readonly jwtConfiguration: ConfigType,\n\n    /**\n     * injecting the generate token provider\n     */\n    private readonly generateTokenProvider: GenerateTokensProvider,\n\n    /**\n     * Injecting the usersService\n     */\n    @Inject(forwardRef(() => UsersService))\n    private readonly usersService: UsersService,\n  ) {}\n\n  /**\n   * function for using the refresh token to generate a new access and refresh token\n   * @param refreshTokenDto\n   * @returns access and refresh tokend\n   */\n  public async refreshTokens(refreshTokenDto: RefreshTokenDto) {\n    try {\n      // verify the refresh token using the jwtService\n      const { sub } = await this.jwtService.verifyAsync\n      >(refreshTokenDto.refreshToken, {\n        secret: this.jwtConfiguration.secret,\n        audience: this.jwtConfiguration.audience,\n        issuer: this.jwtConfiguration.issuer,\n      });\n\n      // based on the id gotten, fetch the user from the db\n      const user = await this.usersService.findOneById(sub);\n\n      // generate the tokens\n      return await this.generateTokenProvider.generateTokens(user);\n    } catch (error) {\n      throw new UnauthorizedException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Review.html":{"url":"entities/Review.html","title":"entity - Review","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Review\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/reviews.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dateCreated\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                product\n                            \n                            \n                                    \n                                review\n                            \n                            \n                                    \n                                reviewer\n                            \n                            \n                                    \n                                    \n                                stars\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, product => product.reviews)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        review\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reviewer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        stars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})@Check('\"stars\" BETWEEN 1 AND 5')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Product } from 'src/products/product.entity';\nimport {\n  Check,\n  Column,\n  CreateDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Review {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  reviewer: string;\n\n  @Column('text')\n  review: string;\n\n  @Column({ type: 'int' })\n  @Check('\"stars\" BETWEEN 1 AND 5') // This ad\n  stars: number;\n\n  @CreateDateColumn()\n  dateCreated: Date;\n\n  @ManyToOne(() => Product, (product) => product.reviews)\n  product: Product;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ReviewsController.html":{"url":"controllers/ReviewsController.html","title":"controller - ReviewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ReviewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/reviews.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                reviews\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                createReview\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                deleteProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        createReview\n                        \n                    \n                \n            \n            \n                \n                        \n                    createReview(createReviewDto: CreateReviewDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('')@Auth(AuthType.None)\n                \n            \n\n                    \n                        \n                            Defined in src/reviews/reviews.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createReviewDto\n                                            \n                                                            CreateReviewDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                review\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProduct(reviewId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:reviewId')@Roles(Role.ADMIN)@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in src/reviews/reviews.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reviewId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a message that the item was successfully deleted\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Post,\n} from '@nestjs/common';\nimport { ReviewsService } from './providers/reviews.service';\nimport { CreateReviewDto } from './dtos/create-review.dto';\nimport { Auth } from 'src/auth/decorator/auth.decorator';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { Role } from 'src/auth/enums/role-type.enum';\n\n@Controller('reviews')\nexport class ReviewsController {\n  constructor(\n    /**\n     * injecting the reviews service\n     */\n    private readonly reviewsService: ReviewsService,\n  ) {}\n\n  /**\n   * @function creates a review\n   * @param createReviewDto\n   * @returns review\n   */\n  @Post('')\n  @Auth(AuthType.None)\n  public createReview(@Body() createReviewDto: CreateReviewDto): Promise {\n    return this.reviewsService.createReview(createReviewDto);\n  }\n\n  /**\n   * @function deletes a product\n   * @param productId\n   * @returns a message that the item was successfully deleted\n   */\n  @Delete('/:reviewId')\n  @Roles(Role.ADMIN)\n  @HttpCode(HttpStatus.NO_CONTENT) // This set\n  public deleteProduct(\n    @Param('reviewId') reviewId: string,\n  ): Promise {\n    return this.reviewsService.deleteReview(reviewId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReviewsModule.html":{"url":"modules/ReviewsModule.html","title":"module - ReviewsModule","body":"\n                   \n\n\n\n\n    Modules\n    ReviewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReviewsModule\n\n\n\ncluster_ReviewsModule_imports\n\n\n\ncluster_ReviewsModule_providers\n\n\n\n\nProductsModule\n\nProductsModule\n\n\n\nReviewsModule\n\nReviewsModule\n\nReviewsModule -->\n\nProductsModule->ReviewsModule\n\n\n\n\n\nCreateReviewProvider\n\nCreateReviewProvider\n\nReviewsModule -->\n\nCreateReviewProvider->ReviewsModule\n\n\n\n\n\nReviewsService\n\nReviewsService\n\nReviewsModule -->\n\nReviewsService->ReviewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/reviews/reviews.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateReviewProvider\n                        \n                        \n                            ReviewsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ReviewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProductsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ReviewsController } from './reviews.controller';\nimport { ReviewsService } from './providers/reviews.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Review } from './reviews.entity';\nimport { CreateReviewProvider } from './providers/create-review.provider';\nimport { ProductsModule } from 'src/products/products.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Review]), ProductsModule],\n  controllers: [ReviewsController],\n  providers: [ReviewsService, CreateReviewProvider],\n})\nexport class ReviewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReviewsService.html":{"url":"injectables/ReviewsService.html","title":"injectable - ReviewsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReviewsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/providers/reviews.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createReview\n                            \n                            \n                                    Public\n                                    Async\n                                deleteReview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createReviewProvider: CreateReviewProvider, reviewsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/reviews/providers/reviews.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createReviewProvider\n                                                  \n                                                        \n                                                                        CreateReviewProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reviewsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createReview\n                        \n                    \n                \n            \n            \n                \n                        \n                    createReview(createReviewDto: CreateReviewDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/reviews/providers/reviews.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createReviewDto\n                                            \n                                                            CreateReviewDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a review\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteReview\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteReview(reviewId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/reviews/providers/reviews.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reviewId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a message that the review was successfully deleted\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { CreateReviewProvider } from './create-review.provider';\nimport { CreateReviewDto } from '../dtos/create-review.dto';\nimport { Repository } from 'typeorm';\nimport { Review } from '../reviews.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class ReviewsService {\n  constructor(\n    /**\n     * injecting the create review provider\n     */\n    private readonly createReviewProvider: CreateReviewProvider,\n\n    /**\n     * injecting the reviews repository\n     */\n    @InjectRepository(Review)\n    private readonly reviewsRepository: Repository,\n  ) {}\n\n  /**\n   * @function creates a review\n   * @param createReviewDto\n   * @param productId\n   * @returns a review\n   */\n  public async createReview(createReviewDto: CreateReviewDto): Promise {\n    return this.createReviewProvider.createReview(createReviewDto);\n  }\n\n  /**\n   * @function deletes a review\n   * @param reviewId\n   * @returns a message that the review was successfully deleted\n   */\n  public async deleteReview(reviewId: string): Promise {\n    try {\n      await this.reviewsRepository.delete(reviewId);\n      return {\n        message: `Product ${reviewId}, was successfully deleted`,\n      };\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/roles/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    role guard\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/roles/roles.guard.ts:16\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/roles/roles.guard.ts:31\n                        \n                    \n\n\n            \n                \n                        function for validating role of user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true or false depending whether the users role meets the role requirements in the role decorator\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  ForbiddenException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { ROLES_KEY } from 'src/auth/constants/role.constant';\nimport { Role } from 'src/auth/enums/role-type.enum';\n\n/**\n * role guard\n */\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  // using static means you can use the name of the property of the class without the \"this\" keyword\n  //   private static readonly defaultRoleType: Role = Role.ADMIN;\n\n  /**\n   * constructor\n   * @param reflector\n   */\n  constructor(private reflector: Reflector) {}\n\n  /**\n   * function for validating role of user\n   * @param context\n   * @returns true or false depending whether the users role meets the role requirements in the role decorator\n   */\n  canActivate(context: ExecutionContext): boolean {\n    const requiredRoles = this.reflector.getAllAndOverride(ROLES_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    if (!requiredRoles) {\n      return true; //  allow access.\n    }\n\n    const { user } = context.switchToHttp().getRequest();\n\n    if (!user) {\n      throw new ForbiddenException('User not found.');\n    }\n\n    const hasRole = requiredRoles.some((role) => user.role === role);\n\n    if (!hasRole) {\n      throw new ForbiddenException(\n        'You do not have permission to access this resource.',\n      );\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/sign-in.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                sign in dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the email of the user', example: 'Favour@gmail.com'})@IsEmail()@MaxLength(96)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/sign-in.dto.ts:19\n                        \n                    \n\n            \n                \n                    user email address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the role of the user', example: 'Admin'})@IsEnum(Role)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/sign-in.dto.ts:30\n                        \n                    \n\n            \n                \n                    user role\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsEnum, IsNotEmpty, MaxLength } from 'class-validator';\nimport { Role } from '../enums/role-type.enum';\n\n/**\n * sign in dto\n */\nexport class SignInDto {\n  /**\n   * user email address\n   */\n  @ApiProperty({\n    description: 'This is the email of the user',\n    example: 'Favour@gmail.com',\n  })\n  @IsEmail()\n  @MaxLength(96)\n  @IsNotEmpty()\n  email: string;\n\n  /**\n   * user role\n   */\n  @ApiProperty({\n    description: 'This is the role of the user',\n    example: 'Admin',\n  })\n  @IsEnum(Role)\n  @IsNotEmpty()\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SignInProvider.html":{"url":"injectables/SignInProvider.html","title":"injectable - SignInProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SignInProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/sign-in.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for sigining in users\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, mailService: MailService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/sign-in.provider.ts:17\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: SignInDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/sign-in.provider.ts:42\n                        \n                    \n\n\n            \n                \n                        function for signing in users\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                access and refresh tokens\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  forwardRef,\n  Inject,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { SignInDto } from '../dtos/sign-in.dto';\nimport { UsersService } from 'src/users/providers/users.service';\nimport { randomInt } from 'crypto';\nimport * as crypto from 'crypto';\nimport { MailService } from 'src/mail/providers/mail.service';\n\n/**\n * provider for sigining in users\n */\n@Injectable()\nexport class SignInProvider {\n  /**\n   * constructor\n   * @param usersService\n   * @param hashingProvider\n   * @param generateTokenProvider\n   */\n  constructor(\n    /**\n     * injecting the user service\n     */\n    @Inject(forwardRef(() => UsersService))\n    private readonly usersService: UsersService,\n\n    /**\n     * injecting the mail service\n     */\n    private readonly mailService: MailService,\n  ) {}\n\n  /**\n   * function for signing in users\n   * @param signInDto\n   * @returns access and refresh tokens\n   */\n  public async signIn(signInDto: SignInDto) {\n    // find  the user using the email ID\n    // throw an exception if the user does not exist\n\n    let user: any;\n    user = await this.usersService.findOneByEmail(signInDto.email);\n\n    // if user does not exist already, create user\n    if (!user) {\n      user = await this.usersService.createUser({\n        email: signInDto.email,\n        role: signInDto.role,\n      });\n    }\n\n    // generate otp\n    const otp = randomInt(1000, 1000000);\n\n    const hashedOtp = crypto\n      .createHash('sha256')\n      .update(otp.toString())\n      .digest('hex');\n\n    // store the otp in the db\n    await this.usersService.storeTokenOtpAndOtpExpire(user, hashedOtp);\n\n    try {\n      await this.mailService.sendLoginOtp(user, otp.toString());\n    } catch (error) {\n      console.log(error);\n      throw new RequestTimeoutException(error);\n    }\n\n    return {\n      user: {\n        id: user.id,\n        role: user.role,\n        email: user.email,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StoreOtpAndExpireProvider.html":{"url":"injectables/StoreOtpAndExpireProvider.html","title":"injectable - StoreOtpAndExpireProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StoreOtpAndExpireProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/store-otp-and-expire.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider class for storing otp and expiry date\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                storeOtpAndExpire\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/store-otp-and-expire.provider.ts:10\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        storeOtpAndExpire\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeOtpAndExpire(user: User, otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/store-otp-and-expire.provider.ts:29\n                        \n                    \n\n\n            \n                \n                        function for storing otp and expiry date\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '../user.entity';\n\n/**\n * provider class for storing otp and expiry date\n */\n@Injectable()\nexport class StoreOtpAndExpireProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * Injecting the users repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for storing otp and expiry date\n   * @param user\n   * @param otp\n   * @returns user\n   */\n  public async storeOtpAndExpire(user: User, otp: string) {\n    const resetExpires = new Date(Date.now() + 5 * 60 * 1000);\n    const newUserObj = { ...user, otp: otp, otpExpire: resetExpires };\n    try {\n      return await this.usersRepository.save(newUserObj);\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Subscriber.html":{"url":"entities/Subscriber.html","title":"entity - Subscriber","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Subscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscriber.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                subscriber entity for the table in the database\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/subscriber.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/subscriber.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * subscriber entity for the table in the database\n */\n@Entity()\nexport class Subscriber {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: false,\n    unique: true,\n  })\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SubscribersController.html":{"url":"controllers/SubscribersController.html","title":"controller - SubscribersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SubscribersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                subscribers\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('subscribers')\nexport class SubscribersController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubscribersModule.html":{"url":"modules/SubscribersModule.html","title":"module - SubscribersModule","body":"\n                   \n\n\n\n\n    Modules\n    SubscribersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_imports\n\n\n\ncluster_SubscribersModule_providers\n\n\n\n\nMailModule\n\nMailModule\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nSubscribersModule -->\n\nMailModule->SubscribersModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/subscribers/subscribers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubscribersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SubscribersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MailModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SubscribersService } from './providers/subscribers.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Subscriber } from './subscriber.entity';\nimport { MailModule } from 'src/mail/mail.module';\nimport { SubscribersController } from './subscribers.controller';\n\n@Module({\n  controllers: [SubscribersController],\n  providers: [SubscribersService],\n  imports: [TypeOrmModule.forFeature([Subscriber]), MailModule],\n})\nexport class SubscribersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubscribersService.html":{"url":"injectables/SubscribersService.html","title":"injectable - SubscribersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubscribersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/providers/subscribers.service.ts\n        \n\n\n            \n                Description\n            \n            \n                service for the subscriber module\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createSubscriber\n                            \n                            \n                                    Public\n                                    Async\n                                unsubscribeEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subscriberRepository: Repository, mailService: MailService)\n                    \n                \n                        \n                            \n                                Defined in src/subscribers/providers/subscribers.service.ts:12\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subscriberRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createSubscriber\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSubscriber(createSubscriberDto: CreateSubscriberDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/providers/subscribers.service.ts:36\n                        \n                    \n\n\n            \n                \n                        function for creatng a subscriber\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                message that subscriber has successfully subscribed to the newsletter\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        unsubscribeEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    unsubscribeEmail(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/providers/subscribers.service.ts:55\n                        \n                    \n\n\n            \n                \n                        function for unsubscribing from newsletter\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                message that subscriber has unsubscribed from the newsletter\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { CreateSubscriberDto } from '../dtos/create-subscriber.dto';\nimport { Repository } from 'typeorm';\nimport { Subscriber } from '../subscriber.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { MailService } from 'src/mail/providers/mail.service';\n\n/**\n * service for the subscriber module\n */\n@Injectable()\nexport class SubscribersService {\n  /**\n   * constructor\n   * @param subscriberRepository\n   * @param mailService\n   */\n  constructor(\n    /**\n     * injecting the subscriber repository\n     */\n    @InjectRepository(Subscriber)\n    private readonly subscriberRepository: Repository,\n\n    /**\n     * injecting the mail service\n     */\n    private readonly mailService: MailService,\n  ) {}\n\n  /**\n   * function for creatng a subscriber\n   * @param createSubscriberDto\n   * @returns message that subscriber has successfully subscribed to the newsletter\n   */\n  public async createSubscriber(createSubscriberDto: CreateSubscriberDto) {\n    const subscriber = this.subscriberRepository.create(createSubscriberDto);\n\n    try {\n      await this.subscriberRepository.save(subscriber);\n      await this.mailService.sendSubscriberMail(subscriber);\n      return {\n        message: 'Subscribed to newsletter successfully',\n      };\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n\n  /**\n   * function for unsubscribing from newsletter\n   * @param id\n   * @returns message that subscriber has unsubscribed from the newsletter\n   */\n  public async unsubscribeEmail(id: number) {\n    try {\n      await this.subscriberRepository.delete(id);\n      return {\n        message: 'Unsubscribed from newsletter successfully',\n      };\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDeliveryStateDto.html":{"url":"classes/UpdateDeliveryStateDto.html","title":"class - UpdateDeliveryStateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDeliveryStateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery-states/dtos/update-delivery-state.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(\n  CreateDeliveryStateDto,\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateDeliveryStateDto } from './create-delivery-state.dto';\nimport { PartialType } from '@nestjs/mapped-types';\n\nexport class UpdateDeliveryStateDto extends PartialType(\n  CreateDeliveryStateDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateProductProvider.html":{"url":"injectables/UpdateProductProvider.html","title":"injectable - UpdateProductProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateProductProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/providers/update-product.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productRepository: Repository, productVariantsService: ProductVariantsService)\n                    \n                \n                        \n                            \n                                Defined in src/products/providers/update-product.provider.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productVariantsService\n                                                  \n                                                        \n                                                                        ProductVariantsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProduct(id: string, patchProductDto: PatchProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/update-product.provider.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patchProductDto\n                                            \n                                                            PatchProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { PatchProductDto } from '../dtos/patch-product.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Product } from '../product.entity';\nimport { ProductVariantsService } from 'src/product-variants/providers/product-variants.service';\n\n@Injectable()\nexport class UpdateProductProvider {\n  constructor(\n    /**\n     * injecting the product repository\n     */\n    @InjectRepository(Product)\n    private readonly productRepository: Repository,\n\n    /**\n     * injecting the product variant service\n     */\n    private readonly productVariantsService: ProductVariantsService,\n  ) {}\n\n  public async updateProduct(id: string, patchProductDto: PatchProductDto) {\n    let product;\n    // find the prd\n    try {\n      product = await this.productRepository.findOne({\n        where: { id },\n      });\n    } catch (err) {\n      throw new RequestTimeoutException(err);\n    }\n    if (!product) {\n      throw new BadRequestException('Product does not exist');\n    }\n    // update product\n    // Update top-level product fields (if provided)\n    let productUpdated = false;\n    if (patchProductDto.name !== undefined) {\n      product.name = patchProductDto.name;\n      productUpdated = true;\n    }\n    if (patchProductDto.price !== undefined) {\n      product.price = patchProductDto.price;\n      productUpdated = true;\n    }\n    if (patchProductDto.discount !== undefined) {\n      product.discount = patchProductDto.discount;\n      productUpdated = true;\n    }\n\n    if (patchProductDto.category !== undefined) {\n      product.category = patchProductDto.category;\n      productUpdated = true;\n    }\n\n    if (patchProductDto.dressStyle !== undefined) {\n      product.dressStyle = patchProductDto.dressStyle;\n      productUpdated = true;\n    }\n\n    if (patchProductDto.clothType !== undefined) {\n      product.clothType = patchProductDto.clothType;\n      productUpdated = true;\n    }\n\n    if (patchProductDto.material !== undefined) {\n      product.material = patchProductDto.material;\n      productUpdated = true;\n    }\n\n    if (patchProductDto.brand !== undefined) {\n      product.brand = patchProductDto.brand;\n      productUpdated = true;\n    }\n\n    try {\n      // Save product only if top-level fields were updated\n      if (productUpdated) {\n        await this.productRepository.save(product);\n      }\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error: any) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    // Update only the specified variants\n    if (patchProductDto.variants && patchProductDto.variants.length > 0) {\n      for (const variantDto of patchProductDto.variants) {\n        const variant =\n          await this.productVariantsService.findProductVariantById(\n            variantDto.id,\n            product.id,\n          );\n        // Manually update only the provided fields\n        if (variantDto.color !== undefined) variant.color = variantDto.color;\n        if (variantDto.size !== undefined) variant.size = variantDto.size;\n        if (variantDto.quantity !== undefined)\n          variant.quantity = variantDto.quantity;\n        if (variantDto.soldOut !== undefined)\n          variant.soldOut = variantDto.soldOut;\n\n        // Save the variant directly\n        await this.productVariantsService.saveProductVariant(variant);\n      }\n    }\n\n    // Return the updated product with its variants (for response)\n    return this.productRepository.findOne({\n      where: { id },\n      relations: ['variants'],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadToAwsProvider.html":{"url":"injectables/UploadToAwsProvider.html","title":"injectable - UploadToAwsProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadToAwsProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/uploads/providers/upload-to-aws.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                fileUpload\n                            \n                            \n                                    Private\n                                generateFileName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/uploads/providers/upload-to-aws.provider.ts:8\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        fileUpload\n                        \n                    \n                \n            \n            \n                \n                        \n                    fileUpload(file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/uploads/providers/upload-to-aws.provider.ts:25\n                        \n                    \n\n\n            \n                \n                        function for uploading image file to aws\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                stored file\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateFileName\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateFileName(file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/uploads/providers/upload-to-aws.provider.ts:49\n                        \n                    \n\n\n            \n                \n                        function for generating the image filename\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    function for generating the image file name\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                the image file name\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { S3 } from 'aws-sdk';\nimport * as path from 'path';\nimport { v4 as uuid4 } from 'uuid';\n\n@Injectable()\nexport class UploadToAwsProvider {\n  /**\n   * constructor\n   * @param configService\n   */\n  constructor(\n    /**\n     * injecting the config service\n     */\n    private readonly configService: ConfigService,\n  ) {}\n\n  /**\n   * function for uploading image file to aws\n   * @param file\n   * @returns stored file\n   */\n  public async fileUpload(file: Express.Multer.File) {\n    const s3 = new S3();\n\n    try {\n      const uploadResult = await s3\n        .upload({\n          Bucket: this.configService.get('appConfig.awsBucketName'),\n          Body: file.buffer,\n          Key: this.generateFileName(file),\n          ContentType: file.mimetype,\n        })\n        .promise();\n\n      return uploadResult.Key;\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n\n  /**\n   *function for generating the image filename\n   * @param file function for generating the image file name\n   * @returns the image file name\n   */\n  private generateFileName(file: Express.Multer.File) {\n    // extract file name\n    const name = file.originalname.split('.')[0];\n\n    // Remove white spaces\n    name.replace(/|s/g, '').trim();\n\n    // extract the extension\n    const extension = path.extname(file.originalname);\n\n    // generate time stamp\n    const timestamp = new Date().getTime().toString().trim();\n\n    // return file uuid\n    return `${name}-${timestamp}-${uuid4()}${extension}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UploadsModule.html":{"url":"modules/UploadsModule.html","title":"module - UploadsModule","body":"\n                   \n\n\n\n\n    Modules\n    UploadsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UploadsModule\n\n\n\ncluster_UploadsModule_exports\n\n\n\ncluster_UploadsModule_providers\n\n\n\n\nUploadsService \n\nUploadsService \n\n\n\nUploadsModule\n\nUploadsModule\n\nUploadsService  -->\n\nUploadsModule->UploadsService \n\n\n\n\n\nUploadToAwsProvider\n\nUploadToAwsProvider\n\nUploadsModule -->\n\nUploadToAwsProvider->UploadsModule\n\n\n\n\n\nUploadsService\n\nUploadsService\n\nUploadsModule -->\n\nUploadsService->UploadsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/uploads/uploads.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UploadToAwsProvider\n                        \n                        \n                            UploadsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UploadsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UploadsService } from './providers/uploads.service';\nimport { UploadToAwsProvider } from './providers/upload-to-aws.provider';\n\n@Module({\n  providers: [UploadsService, UploadToAwsProvider],\n  exports: [UploadsService],\n})\nexport class UploadsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadsService.html":{"url":"injectables/UploadsService.html","title":"injectable - UploadsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/uploads/providers/uploads.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uploadToAwsProvider: UploadToAwsProvider, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/uploads/providers/uploads.service.ts:10\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uploadToAwsProvider\n                                                  \n                                                        \n                                                                        UploadToAwsProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/uploads/providers/uploads.service.ts:33\n                        \n                    \n\n\n            \n                \n                        function for uploading image file\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                url for image file\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  Injectable,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { UploadToAwsProvider } from './upload-to-aws.provider';\n\n@Injectable()\nexport class UploadsService {\n  /**\n   * constructor\n   * @param uploadToAwsProvider\n   * @param configService\n   */\n  constructor(\n    /**\n     * injecting the upload to aws provider\n     */\n    private readonly uploadToAwsProvider: UploadToAwsProvider,\n\n    /**\n     * injecting config service\n     */\n    private readonly configService: ConfigService,\n  ) {}\n\n  /**\n   * function for uploading image file\n   * @param file\n   * @returns url for image file\n   */\n  public async uploadFile(file: Express.Multer.File) {\n    // throw error for unsupported mimetype\n    if (!['image/jpeg', 'image/png', 'image/jpg'].includes(file.mimetype)) {\n      throw new BadRequestException('mime type not supported');\n    }\n\n    try {\n      // upload the file to the aws s3 bucket and a url has been generated\n      const name = await this.uploadToAwsProvider.fileUpload(file);\n\n      return `${this.configService.get('appConfig.awsCloudFrontUrl')}/${name}`;\n    } catch (error) {\n      throw new ConflictException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                user entity for user table in the database\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    Optional\n                                country\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    Optional\n                                otp\n                            \n                            \n                                    \n                                    Optional\n                                otpExpire\n                            \n                            \n                                    \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                    Optional\n                                state\n                            \n                            \n                                    \n                                    Optional\n                                streetAddress\n                            \n                            \n                                    \n                                    Optional\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        otp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        otpExpire\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 20, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: Role, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        streetAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:67\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Role } from 'src/auth/enums/role-type.enum';\nimport { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n// import { Event } from 'src/events/event.entity';\n// import { accountType } from './enums/account-type.enum';\n// import { Role } from 'src/auth/enums/role-type.enum';\n\n/**\n * user entity for user table in the database\n */\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  firstName?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  lastName?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 20,\n    nullable: true,\n  })\n  phoneNumber?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  country?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  state?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  city?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  streetAddress?: string;\n\n  @Column({\n    nullable: true,\n  })\n  zipCode?: number;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: false,\n    unique: true,\n  })\n  email: string;\n\n  @Column({\n    type: 'enum',\n    enum: Role,\n    nullable: false,\n  })\n  role: Role;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  otp?: string;\n\n  @Column({\n    type: 'timestamp',\n    nullable: true,\n  })\n  otpExpire?: Date;\n\n  // @OneToMany(() => Event, (event) => event.owner)\n  // events: Event[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                findAllUsers\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                findUser\n                            \n                            \n                                    \n                                    \n                                    Public\n                                patchUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It deletes a user based on their id'})@ApiResponse({status: 204, description: 'User successfully deleted'})@ApiParam({name: 'userId', required: true, type: String, description: 'The unique identifier of the user', example: '12345'})@ApiHeaders(['undefined', 'undefined'])@Delete('/:userId')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:156\n                        \n                    \n\n\n            \n                \n                        route for deleting a user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                a message indicating user was deleted\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        findAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllUsers(usersQuery: GetUsersDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It finds all users '})@ApiResponse({status: 200, description: 'All users are fetched and paginated'})@ApiQuery({name: 'limit', type: 'number', required: false, description: 'The number of entries returned per query', example: 10})@ApiQuery({name: 'page', type: 'number', required: false, description: 'The position of the page number that you want the api to return', example: 1})@ApiHeaders(['undefined', 'undefined'])@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:111\n                        \n                    \n\n\n            \n                \n                        route for getting all users\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                usersQuery\n                                            \n                                                            GetUsersDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                all users\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        findUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUser(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It finds a user based on their id'})@ApiResponse({status: 200, description: 'User is fetched successfully based on user id'})@ApiParam({name: 'userId', required: true, type: String, description: 'The unique identifier of the user', example: '12345'})@ApiHeaders(['undefined', 'undefined'])@Get('/:userId')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:67\n                        \n                    \n\n\n            \n                \n                        route for getting a user by user id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                a user\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        patchUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchUsers(patchUserDto: PatchUserDto, user: ActiveUserData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@Roles(Role.USER, Role.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Query,\n} from '@nestjs/common';\n\nimport { UsersService } from './providers/users.service';\nimport { PatchUserDto } from './dtos/patch-user.dto';\nimport { Role } from 'src/auth/enums/role-type.enum';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { ActiveUser } from 'src/auth/decorator/active-user.decorator';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\nimport {\n  ApiHeaders,\n  ApiOperation,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n} from '@nestjs/swagger';\nimport { GetUsersDto } from './dtos/get-user.dto';\n\n@Controller('users')\nexport class UsersController {\n  constructor(\n    /**\n     * injecting the usersService\n     */\n    private readonly usersService: UsersService,\n  ) {}\n\n  /**\n   * route for getting a user by user id\n   * @param userId\n   * @returns a user\n   */\n  @ApiOperation({\n    summary: 'It finds a user based on their id',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'User is fetched successfully based on user id',\n  })\n  @ApiParam({\n    name: 'userId',\n    required: true,\n    type: String,\n    description: 'The unique identifier of the user',\n    example: '12345',\n  })\n  @ApiHeaders([\n    {\n      name: 'Authorization',\n      required: true,\n      description: 'Bearer token for authorization',\n    },\n    {\n      name: 'X-Custom-Header',\n      required: false,\n      description: 'A custom optional header',\n    },\n  ])\n  @Get('/:userId')\n  public findUser(@Param('userId') userId: string) {\n    return this.usersService.findOneById(userId);\n  }\n\n  /**\n   * route for getting all users\n   * @param usersQuery\n   * @returns all users\n   */\n  @ApiOperation({\n    summary: 'It finds all users ',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'All users are fetched and paginated',\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: 'number',\n    required: false,\n    description: 'The number of entries returned per query',\n    example: 10,\n  })\n  @ApiQuery({\n    name: 'page',\n    type: 'number',\n    required: false,\n    description:\n      'The position of the page number that you want the api to return',\n    example: 1,\n  })\n  @ApiHeaders([\n    {\n      name: 'Authorization',\n      required: true,\n      description: 'Bearer token for authorization',\n    },\n    {\n      name: 'X-Custom-Header',\n      required: false,\n      description: 'A custom optional header',\n    },\n  ])\n  @Get()\n  public findAllUsers(@Query() usersQuery: GetUsersDto) {\n    return this.usersService.findAll(usersQuery);\n  }\n\n  @Patch()\n  @Roles(Role.USER, Role.ADMIN)\n  public patchUsers(\n    @Body() patchUserDto: PatchUserDto,\n    @ActiveUser() user: ActiveUserData,\n  ) {\n    return this.usersService.updateUser(user.sub, patchUserDto);\n  }\n\n  /**\n   * route for deleting a user\n   * @param userId\n   * @returns a message indicating user was deleted\n   */\n  @ApiOperation({\n    summary: 'It deletes a user based on their id',\n  })\n  @ApiResponse({\n    status: 204,\n    description: 'User successfully deleted',\n  })\n  @ApiParam({\n    name: 'userId',\n    required: true,\n    type: String,\n    description: 'The unique identifier of the user',\n    example: '12345',\n  })\n  @ApiHeaders([\n    {\n      name: 'Authorization',\n      required: true,\n      description: 'Bearer token for authorization',\n    },\n    {\n      name: 'X-Custom-Header',\n      required: false,\n      description: 'A custom optional header',\n    },\n  ])\n  @Delete('/:userId')\n  public deleteUser(@Param('userId') userId: string) {\n    return this.usersService.deleteUser(userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nPaginationModule\n\nPaginationModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPaginationModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nClearOtpAndExpiryTimeProvider\n\nClearOtpAndExpiryTimeProvider\n\nUsersModule -->\n\nClearOtpAndExpiryTimeProvider->UsersModule\n\n\n\n\n\nCreateUsersProvider\n\nCreateUsersProvider\n\nUsersModule -->\n\nCreateUsersProvider->UsersModule\n\n\n\n\n\nFindOneByIdProvider\n\nFindOneByIdProvider\n\nUsersModule -->\n\nFindOneByIdProvider->UsersModule\n\n\n\n\n\nFindOneUserByEmailProvider\n\nFindOneUserByEmailProvider\n\nUsersModule -->\n\nFindOneUserByEmailProvider->UsersModule\n\n\n\n\n\nFindUserByOtpAndExpiryTimeProvider\n\nFindUserByOtpAndExpiryTimeProvider\n\nUsersModule -->\n\nFindUserByOtpAndExpiryTimeProvider->UsersModule\n\n\n\n\n\nStoreOtpAndExpireProvider\n\nStoreOtpAndExpireProvider\n\nUsersModule -->\n\nStoreOtpAndExpireProvider->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClearOtpAndExpiryTimeProvider\n                        \n                        \n                            CreateUsersProvider\n                        \n                        \n                            FindOneByIdProvider\n                        \n                        \n                            FindOneUserByEmailProvider\n                        \n                        \n                            FindUserByOtpAndExpiryTimeProvider\n                        \n                        \n                            StoreOtpAndExpireProvider\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PaginationModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { UsersService } from './providers/users.service';\nimport { UsersController } from './users.controller';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { CreateUsersProvider } from './providers/create-users.provider';\nimport { User } from './user.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { FindOneUserByEmailProvider } from './providers/find-one-user-by-email.provider';\nimport { StoreOtpAndExpireProvider } from './providers/store-otp-and-expire.provider';\nimport { FindUserByOtpAndExpiryTimeProvider } from './providers/find-user-by-reset-otp-and-expiry-time.provider';\nimport { FindOneByIdProvider } from './providers/find-one-by-id.provider';\nimport { PaginationModule } from 'src/common/pagination/pagination.module';\nimport { ClearOtpAndExpiryTimeProvider } from './providers/clear-otp-and-expiry-time.provider';\n\n@Module({\n  providers: [\n    UsersService,\n    CreateUsersProvider,\n    FindOneUserByEmailProvider,\n    StoreOtpAndExpireProvider,\n    FindUserByOtpAndExpiryTimeProvider,\n    FindOneByIdProvider,\n    ClearOtpAndExpiryTimeProvider,\n  ],\n  controllers: [UsersController],\n  imports: [\n    forwardRef(() => AuthModule),\n    TypeOrmModule.forFeature([User]),\n    PaginationModule,\n  ],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/users.service.ts\n        \n\n\n            \n                Description\n            \n            \n                service provider for the user module\ninjectable\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                clearOtpAndExpiryTime\n                            \n                            \n                                    Public\n                                    Async\n                                createUser\n                            \n                            \n                                    Public\n                                    Async\n                                deleteUser\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOneByEmail\n                            \n                            \n                                    Public\n                                    Async\n                                findOneById\n                            \n                            \n                                    Public\n                                    Async\n                                findUserByResetOtpAndExpiryTime\n                            \n                            \n                                    Public\n                                    Async\n                                storeTokenOtpAndOtpExpire\n                            \n                            \n                                    Public\n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createUserProvider: CreateUsersProvider, findOneUserByEmailProvider: FindOneUserByEmailProvider, storeOtpAndExpiresProvider: StoreOtpAndExpireProvider, findUserByOtpAndExpiresProvider: FindUserByOtpAndExpiryTimeProvider, findOneByIdProvider: FindOneByIdProvider, paginationprovider: PaginationProvider, usersRepository: Repository, clearOtpAndExpiryTimeProvider: ClearOtpAndExpiryTimeProvider)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/users.service.ts:27\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createUserProvider\n                                                  \n                                                        \n                                                                        CreateUsersProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        findOneUserByEmailProvider\n                                                  \n                                                        \n                                                                        FindOneUserByEmailProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storeOtpAndExpiresProvider\n                                                  \n                                                        \n                                                                        StoreOtpAndExpireProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        findUserByOtpAndExpiresProvider\n                                                  \n                                                        \n                                                                        FindUserByOtpAndExpiryTimeProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        findOneByIdProvider\n                                                  \n                                                        \n                                                                        FindOneByIdProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paginationprovider\n                                                  \n                                                        \n                                                                        PaginationProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clearOtpAndExpiryTimeProvider\n                                                  \n                                                        \n                                                                        ClearOtpAndExpiryTimeProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        clearOtpAndExpiryTime\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearOtpAndExpiryTime(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:126\n                        \n                    \n\n\n            \n                \n                        function for clearing otp after login\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:87\n                        \n                    \n\n\n            \n                \n                        function for creating a new user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                the create user\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:168\n                        \n                    \n\n\n            \n                \n                        a function for deleting a user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                a message on successful deletion\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(userQuery: GetUsersDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:144\n                        \n                    \n\n\n            \n                \n                        function for getting all users\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userQuery\n                                            \n                                                            GetUsersDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                all users\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:96\n                        \n                    \n\n\n            \n                \n                        function for getting the user based on the email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                a user based on the email\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:135\n                        \n                    \n\n\n            \n                \n                        function for getting the user based on id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user based on the user id\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findUserByResetOtpAndExpiryTime\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserByResetOtpAndExpiryTime(otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:115\n                        \n                    \n\n\n            \n                \n                        function for getting the user based on the stored reset token and expiry date\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                the user based on the stored reset token and expiry date\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        storeTokenOtpAndOtpExpire\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeTokenOtpAndOtpExpire(user: User, token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:106\n                        \n                    \n\n\n            \n                \n                        function for storing the reset token and expiry date of the token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                a user with stored reset token and expiry date\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(id: string, patchUserDto: PatchUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:179\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patchUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { CreateUsersProvider } from './create-users.provider';\nimport { CreateUserDto } from '../dtos/create-user.dto';\nimport { FindOneUserByEmailProvider } from './find-one-user-by-email.provider';\nimport { StoreOtpAndExpireProvider } from './store-otp-and-expire.provider';\nimport { User } from '../user.entity';\nimport { FindUserByOtpAndExpiryTimeProvider } from './find-user-by-reset-otp-and-expiry-time.provider';\n\nimport { FindOneByIdProvider } from './find-one-by-id.provider';\nimport { GetUsersDto } from '../dtos/get-user.dto';\nimport { Paginated } from 'src/common/pagination/interfaces/paginated.interface';\nimport { PaginationProvider } from 'src/common/pagination/providers/pagination.provider';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ClearOtpAndExpiryTimeProvider } from './clear-otp-and-expiry-time.provider';\nimport { PatchUserDto } from '../dtos/patch-user.dto';\n\n/**\n * service provider for the user module\n * injectable\n */\n@Injectable()\nexport class UsersService {\n  /**\n   * constructor\n   * @param createUserProvider\n   * @param findOneUserByEmailProvider\n   * @param storeOtpAndExpiresProvider\n   * @param findUserByResetOtpAndExpiresProvider\n   * @param changeUserPasswordProvider\n   * @param findOneByIdProvider\n   * @param paginationprovider\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * injecting the create user provider\n     */\n    private readonly createUserProvider: CreateUsersProvider,\n\n    /**\n     * Injecting the findOneUserByEmailProvider\n     */\n    private readonly findOneUserByEmailProvider: FindOneUserByEmailProvider,\n\n    /**\n     * injecting the store otp and expires provider\n     */\n    private readonly storeOtpAndExpiresProvider: StoreOtpAndExpireProvider,\n\n    /**\n     * injecting the find user by reset otp and expires provider\n     */\n    private readonly findUserByOtpAndExpiresProvider: FindUserByOtpAndExpiryTimeProvider,\n\n    /**\n     * injecting the find one by id provider\n     */\n    private readonly findOneByIdProvider: FindOneByIdProvider,\n\n    /**\n     * injecting the pagination provider\n     */\n    private readonly paginationprovider: PaginationProvider,\n\n    /**\n     * injecting the user repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n\n    /**\n     * injecting the clear otp and expiry time provider\n     */\n    private readonly clearOtpAndExpiryTimeProvider: ClearOtpAndExpiryTimeProvider,\n  ) {}\n\n  /**\n   * function for creating a new user\n   * @param createUserDto\n   * @returns the create user\n   */\n  public async createUser(createUserDto: CreateUserDto) {\n    return await this.createUserProvider.createUser(createUserDto);\n  }\n\n  /**\n   * function for getting the user based on the email\n   * @param email\n   * @returns a user based on the email\n   */\n  public async findOneByEmail(email: string) {\n    return this.findOneUserByEmailProvider.findOneByEmail(email);\n  }\n\n  /**\n   * function for storing the reset token and expiry date of the token\n   * @param user\n   * @param token\n   * @returns a user with stored reset token and expiry date\n   */\n  public async storeTokenOtpAndOtpExpire(user: User, token: string) {\n    return await this.storeOtpAndExpiresProvider.storeOtpAndExpire(user, token);\n  }\n\n  /**\n   * function for getting the user based on the stored reset token and expiry date\n   * @param otp\n   * @returns the user based on the stored reset token and expiry date\n   */\n  public async findUserByResetOtpAndExpiryTime(otp: string) {\n    return await this.findUserByOtpAndExpiresProvider.findUserByOtpAndExpiryTime(\n      otp,\n    );\n  }\n\n  /**\n   * function for clearing otp after login\n   * @param user\n   * @returns user\n   */\n  public async clearOtpAndExpiryTime(user: User) {\n    return await this.clearOtpAndExpiryTimeProvider.clearOtpAndExpiryTime(user);\n  }\n\n  /**\n   * function for getting the user based on id\n   * @param id\n   * @returns user based on the user id\n   */\n  public async findOneById(id: string) {\n    return await this.findOneByIdProvider.findById(id);\n  }\n\n  /**\n   * function for getting all users\n   * @param userQuery\n   * @returns all users\n   */\n  public async findAll(userQuery: GetUsersDto): Promise> {\n    try {\n      const user = this.paginationprovider.paginationQuery(\n        {\n          limit: userQuery.limit,\n          page: userQuery.page,\n        },\n        this.usersRepository,\n        {\n          relations: null,\n        },\n      );\n\n      return user;\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n\n  /**\n   * a function for deleting a user\n   * @param userId\n   * @returns a message on successful deletion\n   */\n  public async deleteUser(userId: string) {\n    try {\n      await this.usersRepository.delete(userId);\n      return {\n        message: `User ${userId}, was successfully deleted`,\n      };\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n\n  public async updateUser(id: string, patchUserDto: PatchUserDto) {\n    let user;\n    // find the user\n    try {\n      user = await this.usersRepository.findOneBy({\n        id: id,\n      });\n    } catch (err) {\n      throw new RequestTimeoutException(err);\n    }\n    if (!user) {\n      throw new BadRequestException('User does not exist');\n    }\n    // update user\n    user = { ...user, ...patchUserDto };\n\n    try {\n      await this.usersRepository.save(user);\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error: any) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app.module.ts\n            \n            variable\n            ENV\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/auth/constants/auth.constant.ts\n            \n            variable\n            AUTH_TYPE_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/constants/auth.constant.ts\n            \n            variable\n            REQUEST_USER_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/constants/role.constant.ts\n            \n            variable\n            ROLES_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/decorator/active-user.decorator.ts\n            \n            variable\n            ActiveUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/decorator/auth.decorator.ts\n            \n            variable\n            Auth\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/decorator/role.decorator.ts\n            \n            variable\n            Roles\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/auth/dtos/otpSignin.dto.ts\n            \n            class\n            OtpSigninDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/auth/dtos/refresh-token.dto.ts\n            \n            class\n            RefreshTokenDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/auth/dtos/sign-in.dto.ts\n            \n            class\n            SignInDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/guards/access-token/access-token.guard.ts\n            \n            guard\n            AccessTokenGuard\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/guards/authentication/authentication.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/auth/guards/roles/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/interfaces/active-user-data.interface.ts\n            \n            interface\n            ActiveUserData\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/providers/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/auth/providers/generate-tokens.provider.ts\n            \n            injectable\n            GenerateTokensProvider\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/providers/otp-signin.provider.ts\n            \n            injectable\n            OtpSigninProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/providers/refresh-token.provider.ts\n            \n            injectable\n            RefreshTokenProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/providers/sign-in.provider.ts\n            \n            injectable\n            SignInProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/common/interceptors/data-response/data-response.interceptor.ts\n            \n            injectable\n            DataResponseInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/common/pagination/dtos/pagination-query.dto.ts\n            \n            class\n            PaginationQueryDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/common/pagination/interfaces/paginated.interface.ts\n            \n            interface\n            Paginated\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/common/pagination/providers/pagination.provider.ts\n            \n            injectable\n            PaginationProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/config/paths.config.ts\n            \n            variable\n            ROOT_PATH\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/delivery-states/delivery-state.entity.ts\n            \n            entity\n            DeliveryState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/delivery-states/delivery-states.controller.ts\n            \n            controller\n            DeliveryStatesController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/delivery-states/dtos/create-delivery-state.dto.ts\n            \n            class\n            CreateDeliveryStateDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/delivery-states/dtos/update-delivery-state.dto.ts\n            \n            class\n            UpdateDeliveryStateDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/delivery-states/providers/delivery-states.service.ts\n            \n            injectable\n            DeliveryStatesService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/discounts-usage/discounts-usage.entity.ts\n            \n            entity\n            DiscountUsage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/discounts-usage/providers/discounts-usage.service.ts\n            \n            injectable\n            DiscountsUsageService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/discounts/discounts.controller.ts\n            \n            controller\n            DiscountsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/discounts/discounts.entity.ts\n            \n            entity\n            Discount\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/discounts/dtos/apply-for-discount.dto.ts\n            \n            class\n            ApplyForDiscountDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/discounts/dtos/create-discount.dto.ts\n            \n            class\n            CreateDiscountDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/discounts/providers/apply-for-discount.provider.ts\n            \n            injectable\n            ApplyForDiscountProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/discounts/providers/create-discount.provider.ts\n            \n            injectable\n            CreateDiscountProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/discounts/providers/discounts.service.ts\n            \n            injectable\n            DiscountsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/mail/providers/mail.service.ts\n            \n            injectable\n            MailService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/payment/payment.entity.ts\n            \n            entity\n            Payment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/paystack/dtos/initiate-payment.dto.ts\n            \n            class\n            InitiatePaymentDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/paystack/dtos/initiate-payment.dto.ts\n            \n            class\n            ProductWithVariantDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/paystack/paystack.controller.ts\n            \n            controller\n            PaystackController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/paystack/providers/initiate-payment.provider.ts\n            \n            injectable\n            InitiatePaymentProvider\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/paystack/providers/paystack.service.ts\n            \n            injectable\n            PaystackService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/product-images/product-image.entity.ts\n            \n            entity\n            ProductImage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product-images/providers/product-images.service.ts\n            \n            injectable\n            ProductImagesService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product-variants/dto/create-product-variant.dto.ts\n            \n            class\n            CreateProductVariantDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/product-variants/dto/patch-product-variant.dto.ts\n            \n            class\n            PatchProductVariantDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/product-variants/product-variants.entity.ts\n            \n            entity\n            ProductVariant\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product-variants/providers/product-variants.service.ts\n            \n            injectable\n            ProductVariantsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/products/dtos/createProductDto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/products/dtos/get-product.dto.ts\n            \n            class\n            GetProductsBaseDto\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/products/dtos/get-product.dto.ts\n            \n            class\n            GetProductsDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/products/dtos/patch-product.dto.ts\n            \n            class\n            PatchProductDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/products/product.entity.ts\n            \n            entity\n            Product\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/products/providers/create-product.provider.ts\n            \n            injectable\n            CreateProductProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/providers/find-all-products.provider.ts\n            \n            injectable\n            FindAllProductsProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/providers/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/products/providers/update-product.provider.ts\n            \n            injectable\n            UpdateProductProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/reviews/dtos/create-review.dto.ts\n            \n            class\n            CreateReviewDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/reviews/providers/create-review.provider.ts\n            \n            injectable\n            CreateReviewProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/reviews/providers/reviews.service.ts\n            \n            injectable\n            ReviewsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/reviews/reviews.controller.ts\n            \n            controller\n            ReviewsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/reviews/reviews.entity.ts\n            \n            entity\n            Review\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/dtos/create-subscriber.dto.ts\n            \n            class\n            CreateSubscriberDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/subscribers/providers/subscribers.service.ts\n            \n            injectable\n            SubscribersService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/subscribers/subscriber.entity.ts\n            \n            entity\n            Subscriber\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.controller.ts\n            \n            controller\n            SubscribersController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/uploads/providers/upload-to-aws.provider.ts\n            \n            injectable\n            UploadToAwsProvider\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/uploads/providers/uploads.service.ts\n            \n            injectable\n            UploadsService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/dtos/get-user.dto.ts\n            \n            class\n            GetUsersBaseDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/dtos/get-user.dto.ts\n            \n            class\n            GetUsersDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/users/dtos/patch-user.dto.ts\n            \n            class\n            PatchUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/providers/clear-otp-and-expiry-time.provider.ts\n            \n            injectable\n            ClearOtpAndExpiryTimeProvider\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/users/providers/create-users.provider.ts\n            \n            injectable\n            CreateUsersProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/providers/find-one-by-id.provider.ts\n            \n            injectable\n            FindOneByIdProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/providers/find-one-user-by-email.provider.ts\n            \n            injectable\n            FindOneUserByEmailProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/providers/find-user-by-reset-otp-and-expiry-time.provider.ts\n            \n            injectable\n            FindUserByOtpAndExpiryTimeProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/providers/store-otp-and-expire.provider.ts\n            \n            injectable\n            StoreOtpAndExpireProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/providers/users.service.ts\n            \n            injectable\n            UsersService\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/users/user.entity.ts\n            \n            entity\n            User\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                60 %\n                (3/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.26\n        \n            @nestjs-modules/mailer : ^2.0.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^4.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/platform-express : ^10.4.15\n        \n            @nestjs/swagger : ^11.0.6\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            @types/multer : ^1.4.12\n        \n            aws-sdk : ^2.1692.0\n        \n            axios : ^1.8.4\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            joi : ^17.13.3\n        \n            pg : ^8.13.3\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n        \n            uuid : ^11.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthType   (src/.../auth-type.enum.ts)\n                        \n                        \n                            paymentStatus   (src/.../paymentStatus.enum.ts)\n                        \n                        \n                            Role   (src/.../role-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/enums/auth-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthType\n                    \n                \n                        \n                            \n                                 Bearer\n                            \n                        \n                        \n                            \n                                 None\n                            \n                        \n            \n        \n\n    src/payment/enums/paymentStatus.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        paymentStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n                        \n                            \n                                Value : failed\n                            \n                        \n            \n        \n\n    src/auth/enums/role-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                        the boostrap nest function\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DeliveryStatesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DiscountsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DiscountsUsageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaginationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaystackModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductImagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductVariantsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReviewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubscribersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UploadsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_DeliveryStatesModule\n\n\n\ncluster_DeliveryStatesModule_providers\n\n\n\ncluster_DiscountsModule\n\n\n\ncluster_DiscountsModule_providers\n\n\n\ncluster_DiscountsUsageModule\n\n\n\ncluster_DiscountsUsageModule_exports\n\n\n\ncluster_DiscountsUsageModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_PaginationModule\n\n\n\ncluster_PaginationModule_exports\n\n\n\ncluster_PaginationModule_providers\n\n\n\ncluster_PaystackModule\n\n\n\ncluster_PaystackModule_providers\n\n\n\ncluster_ProductImagesModule\n\n\n\ncluster_ProductImagesModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_exports\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_ProductVariantsModule\n\n\n\ncluster_ProductVariantsModule_exports\n\n\n\ncluster_ProductVariantsModule_providers\n\n\n\ncluster_ReviewsModule\n\n\n\ncluster_ReviewsModule_providers\n\n\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\ncluster_UploadsModule\n\n\n\ncluster_UploadsModule_exports\n\n\n\ncluster_UploadsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDeliveryStatesModule\n\nDeliveryStatesModule\n\nAppModule -->\n\nDeliveryStatesModule->AppModule\n\n\n\n\n\nDiscountsModule\n\nDiscountsModule\n\nAppModule -->\n\nDiscountsModule->AppModule\n\n\n\n\n\nDiscountsUsageModule\n\nDiscountsUsageModule\n\nDiscountsModule -->\n\nDiscountsUsageModule->DiscountsModule\n\n\n\nAppModule -->\n\nDiscountsUsageModule->AppModule\n\n\n\n\n\nDiscountsUsageService \n\nDiscountsUsageService \n\nDiscountsUsageService  -->\n\nDiscountsUsageModule->DiscountsUsageService \n\n\n\n\n\nMailModule\n\nMailModule\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nSubscribersModule -->\n\nMailModule->SubscribersModule\n\n\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nAppModule -->\n\nPaymentModule->AppModule\n\n\n\n\n\nPaystackModule\n\nPaystackModule\n\nAppModule -->\n\nPaystackModule->AppModule\n\n\n\n\n\nProductImagesModule\n\nProductImagesModule\n\nAppModule -->\n\nProductImagesModule->AppModule\n\n\n\n\n\nProductVariantsModule\n\nProductVariantsModule\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nProductVariantsModule->ProductsModule\n\n\n\nAppModule -->\n\nProductVariantsModule->AppModule\n\n\n\n\n\nProductVariantsService \n\nProductVariantsService \n\nProductVariantsService  -->\n\nProductVariantsModule->ProductVariantsService \n\n\n\nPaystackModule -->\n\nProductsModule->PaystackModule\n\n\n\n\n\nReviewsModule\n\nReviewsModule\n\nReviewsModule -->\n\nProductsModule->ReviewsModule\n\n\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nProductsService \n\nProductsService \n\nProductsService  -->\n\nProductsModule->ProductsService \n\n\n\nAppModule -->\n\nReviewsModule->AppModule\n\n\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUploadsModule\n\nUploadsModule\n\nProductsModule -->\n\nUploadsModule->ProductsModule\n\n\n\nAppModule -->\n\nUploadsModule->AppModule\n\n\n\n\n\nUploadsService \n\nUploadsService \n\nUploadsService  -->\n\nUploadsModule->UploadsService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nPaystackModule -->\n\nUsersModule->PaystackModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nGenerateTokensProvider\n\nGenerateTokensProvider\n\nAuthModule -->\n\nGenerateTokensProvider->AuthModule\n\n\n\n\n\nOtpSigninProvider\n\nOtpSigninProvider\n\nAuthModule -->\n\nOtpSigninProvider->AuthModule\n\n\n\n\n\nRefreshTokenProvider\n\nRefreshTokenProvider\n\nAuthModule -->\n\nRefreshTokenProvider->AuthModule\n\n\n\n\n\nSignInProvider\n\nSignInProvider\n\nAuthModule -->\n\nSignInProvider->AuthModule\n\n\n\n\n\nDeliveryStatesService\n\nDeliveryStatesService\n\nDeliveryStatesModule -->\n\nDeliveryStatesService->DeliveryStatesModule\n\n\n\n\n\nApplyForDiscountProvider\n\nApplyForDiscountProvider\n\nDiscountsModule -->\n\nApplyForDiscountProvider->DiscountsModule\n\n\n\n\n\nCreateDiscountProvider\n\nCreateDiscountProvider\n\nDiscountsModule -->\n\nCreateDiscountProvider->DiscountsModule\n\n\n\n\n\nDiscountsService\n\nDiscountsService\n\nDiscountsModule -->\n\nDiscountsService->DiscountsModule\n\n\n\n\n\nDiscountsUsageService\n\nDiscountsUsageService\n\nDiscountsUsageModule -->\n\nDiscountsUsageService->DiscountsUsageModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nPaginationProvider \n\nPaginationProvider \n\n\n\nPaginationModule\n\nPaginationModule\n\nProductsModule -->\n\nPaginationModule->ProductsModule\n\n\n\nUsersModule -->\n\nPaginationModule->UsersModule\n\n\n\nPaginationProvider  -->\n\nPaginationModule->PaginationProvider \n\n\n\n\n\nPaginationProvider\n\nPaginationProvider\n\nPaginationModule -->\n\nPaginationProvider->PaginationModule\n\n\n\n\n\nInitiatePaymentProvider\n\nInitiatePaymentProvider\n\nPaystackModule -->\n\nInitiatePaymentProvider->PaystackModule\n\n\n\n\n\nPaystackService\n\nPaystackService\n\nPaystackModule -->\n\nPaystackService->PaystackModule\n\n\n\n\n\nProductImagesService\n\nProductImagesService\n\nProductImagesModule -->\n\nProductImagesService->ProductImagesModule\n\n\n\n\n\nCreateProductProvider\n\nCreateProductProvider\n\nProductsModule -->\n\nCreateProductProvider->ProductsModule\n\n\n\n\n\nFindAllProductsProvider\n\nFindAllProductsProvider\n\nProductsModule -->\n\nFindAllProductsProvider->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nUpdateProductProvider\n\nUpdateProductProvider\n\nProductsModule -->\n\nUpdateProductProvider->ProductsModule\n\n\n\n\n\nProductVariantsService\n\nProductVariantsService\n\nProductVariantsModule -->\n\nProductVariantsService->ProductVariantsModule\n\n\n\n\n\nCreateReviewProvider\n\nCreateReviewProvider\n\nReviewsModule -->\n\nCreateReviewProvider->ReviewsModule\n\n\n\n\n\nReviewsService\n\nReviewsService\n\nReviewsModule -->\n\nReviewsService->ReviewsModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\nUploadToAwsProvider\n\nUploadToAwsProvider\n\nUploadsModule -->\n\nUploadToAwsProvider->UploadsModule\n\n\n\n\n\nUploadsService\n\nUploadsService\n\nUploadsModule -->\n\nUploadsService->UploadsModule\n\n\n\n\n\nClearOtpAndExpiryTimeProvider\n\nClearOtpAndExpiryTimeProvider\n\nUsersModule -->\n\nClearOtpAndExpiryTimeProvider->UsersModule\n\n\n\n\n\nCreateUsersProvider\n\nCreateUsersProvider\n\nUsersModule -->\n\nCreateUsersProvider->UsersModule\n\n\n\n\n\nFindOneByIdProvider\n\nFindOneByIdProvider\n\nUsersModule -->\n\nFindOneByIdProvider->UsersModule\n\n\n\n\n\nFindOneUserByEmailProvider\n\nFindOneUserByEmailProvider\n\nUsersModule -->\n\nFindOneUserByEmailProvider->UsersModule\n\n\n\n\n\nFindUserByOtpAndExpiryTimeProvider\n\nFindUserByOtpAndExpiryTimeProvider\n\nUsersModule -->\n\nFindUserByOtpAndExpiryTimeProvider->UsersModule\n\n\n\n\n\nStoreOtpAndExpireProvider\n\nStoreOtpAndExpireProvider\n\nUsersModule -->\n\nStoreOtpAndExpireProvider->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    10 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    34 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    22 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActiveUser   (src/.../active-user.decorator.ts)\n                        \n                        \n                            Auth   (src/.../auth.decorator.ts)\n                        \n                        \n                            AUTH_TYPE_KEY   (src/.../auth.constant.ts)\n                        \n                        \n                            ENV   (src/.../app.module.ts)\n                        \n                        \n                            REQUEST_USER_KEY   (src/.../auth.constant.ts)\n                        \n                        \n                            Roles   (src/.../role.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../role.constant.ts)\n                        \n                        \n                            ROOT_PATH   (src/.../paths.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/decorator/active-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ActiveUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (field: keyof ActiveUserData | undefined, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user: ActiveUserData = request[REQUEST_USER_KEY];\n\n    return field ? user?.[field] : user;\n  },\n)\n                    \n                \n\n            \n                \n                    Custom param decorator for the active user\n\n                \n            \n\n        \n    \n\n    src/auth/decorator/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...authTypes: AuthType[]) =>\n  SetMetadata(AUTH_TYPE_KEY, authTypes)\n                    \n                \n\n            \n                \n                    decorator for guarding user authentication\n\n                \n            \n\n        \n    \n\n    src/auth/constants/auth.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_TYPE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'authType'\n                    \n                \n\n            \n                \n                    constant for auth type\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REQUEST_USER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n\n            \n                \n                    constant for request user\n\n                \n            \n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENV\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV\n                    \n                \n\n            \n                \n                    app environment\n\n                \n            \n\n        \n    \n\n    src/auth/decorator/role.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Role[]) => SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n            \n                \n                    decoraror for gaurding the user roles\n\n                \n            \n\n        \n    \n\n    src/auth/constants/role.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roles'\n                    \n                \n\n            \n                \n                    constant for the roles\n\n                \n            \n\n        \n    \n\n    src/config/paths.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROOT_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.cwd()\n                    \n                \n\n            \n                \n                    setting the default root\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
