var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AccessTokenGuard.html",[0,2.733,1,3.047]],["body/guards/AccessTokenGuard.html",[0,3.157,1,3.519,2,2.555,3,0.104,4,0.063,5,0.063,6,5.801,7,4.904,8,3.022,9,0.682,10,4.265,11,4.344,12,0.253,13,1.052,14,1.515,15,5.288,16,1.537,17,5.037,18,1.443,19,2.755,20,6.245,21,5.288,22,4.598,23,0.546,24,3.428,25,1.309,26,0.01,27,1.103,28,0.492,29,0.947,30,4.047,31,4.598,32,3.428,33,1.629,34,5.037,35,1.614,36,4.172,37,1.464,38,2.168,39,2.285,40,2.387,41,4.44,42,3.324,43,4.44,44,5.037,45,3.697,46,3.428,47,5.037,48,3.754,49,0.739,50,3.011,51,0.184,52,3.277,53,0.445,54,4.172,55,0.391,56,1.682,57,2.263,58,2.555,59,2.396,60,3.428,61,2.755,62,3.022,63,0.07,64,0.076,65,2.555,66,1.629,67,1.104,68,3.519,69,1.809,70,2.755,71,3.428,72,3.428,73,2.258,74,3.022,75,3.022,76,2.396,77,3.428,78,1.598,79,1.409,80,3.428,81,1.146,82,2.755,83,5.288,84,3.022,85,3.428,86,0.913,87,3.428,88,3.428,89,3.022,90,3.428,91,3.022,92,2.764,93,2.764,94,2.471,95,2.764,96,2.658,97,2.764,98,2.764,99,2.764,100,1.146,101,4.44,102,3.428,103,3.428,104,2.555,105,1.809,106,3.428,107,1.002,108,3.428,109,0.005,110,0.005]],["title/interfaces/ActiveUserData.html",[111,3.047,112,2.139]],["body/interfaces/ActiveUserData.html",[3,0.119,4,0.106,5,0.106,9,1.153,12,0.427,26,0.009,28,0.645,35,2.023,49,1.3,63,0.119,83,4.659,109,0.007,110,0.007,111,5.029,112,3.531,113,4.659,114,3.316,115,5.111,116,5.111,117,1.917,118,3.933,119,3.582,120,6.578,121,2.014]],["title/controllers/AppController.html",[122,1.578,123,3.249]],["body/controllers/AppController.html",[3,0.127,4,0.113,5,0.113,12,0.456,13,1.564,23,0.566,26,0.009,37,1.292,49,1.099,51,0.188,55,0.705,63,0.127,64,0.137,67,1.357,107,1.231,109,0.008,110,0.008,122,2.712,123,5.583,124,2.24,125,5.455,126,7.381,127,1.532,128,6.188,129,5.317,130,5.455,131,5.455,132,6.188]],["title/modules/AppModule.html",[133,1.054,134,3.249]],["body/modules/AppModule.html",[1,3.118,3,0.06,4,0.053,5,0.053,7,2.174,26,0.01,28,0.24,39,1.116,40,2.115,51,0.222,52,1.601,55,0.333,56,1.431,57,1.926,59,2.039,63,0.06,64,0.065,68,2.039,69,2.355,73,1.001,107,0.58,109,0.005,110,0.005,123,4.039,124,1.616,129,4.553,130,2.572,133,1.667,134,6.655,135,1.149,136,1.182,137,1.256,138,1.256,139,1.182,140,2.333,141,1.256,142,2.572,143,2.572,144,2.572,145,4.553,146,4.821,147,4.821,148,4.553,149,4.553,150,4.821,151,4.821,152,4.821,153,4.821,154,4.324,155,4.324,156,4.821,157,4.821,158,4.553,159,4.324,160,1.921,161,1.056,162,1.182,163,2.344,164,2.485,165,2.917,166,3.586,167,4.007,168,4.463,169,2.917,170,4.463,171,2.917,172,4.463,173,2.917,174,1.483,175,0.858,176,2.917,177,2.917,178,2.917,179,2.917,180,5.42,181,4.463,182,2.039,183,3.326,184,2.917,185,2.344,186,2.917,187,3.326,188,2.917,189,3.326,190,2.917,191,2.917,192,2.572,193,2.917,194,2.572,195,2.917,196,1.346,197,1.54,198,2.344,199,1.926,200,2.917,201,2.917,202,2.917,203,2.917,204,1.926,205,1.829,206,2.572,207,1.669,208,2.039,209,2.917,210,2.917,211,2.917,212,2.917,213,2.572,214,2.572,215,4.355,216,4.778,217,2.917,218,2.917,219,2.917,220,2.917,221,2.917,222,2.917,223,2.917,224,2.572,225,2.917,226,2.917,227,2.917,228,2.917,229,2.917,230,2.572,231,2.917,232,2.917,233,2.917,234,2.174,235,2.917,236,2.572,237,2.917,238,1.431,239,2.917,240,2.917,241,2.572,242,2.572,243,2.917,244,2.572,245,2.917,246,2.917,247,2.572,248,2.572,249,2.572,250,2.572,251,2.572,252,2.572,253,5.42,254,5.42]],["title/injectables/AppService.html",[53,0.385,129,2.878]],["body/injectables/AppService.html",[3,0.131,4,0.117,5,0.117,12,0.471,13,1.596,23,0.585,26,0.009,37,1.335,49,1.12,51,0.161,53,0.675,55,0.729,63,0.131,64,0.142,107,1.272,109,0.008,110,0.008,126,7.462,129,5.042,255,1.622,256,5.637,257,6.394,258,6.394,259,6.394]],["title/classes/ApplyForDiscountDto.html",[64,0.097,260,3.249]],["body/classes/ApplyForDiscountDto.html",[3,0.131,4,0.116,5,0.116,12,0.468,23,0.581,26,0.009,28,0.524,49,1.116,51,0.16,63,0.131,64,0.169,109,0.008,110,0.008,117,2.028,127,1.574,260,5.673,261,2.301,262,6.711,263,5.107,264,5.694,265,3.984,266,5.603,267,3.734,268,3.608,269,2.365]],["title/injectables/ApplyForDiscountProvider.html",[53,0.385,270,2.878]],["body/injectables/ApplyForDiscountProvider.html",[3,0.083,4,0.074,5,0.074,9,0.806,12,0.299,13,1.186,14,1.663,16,1.245,18,1.245,23,0.519,25,1.245,26,0.01,27,1.049,28,0.468,29,0.901,33,1.003,35,1.636,37,1.186,45,1.858,49,0.962,51,0.195,53,0.502,55,0.462,63,0.083,64,0.09,66,1.406,67,1.245,73,1.39,78,1.802,79,1.589,81,1.898,86,1.513,100,1.354,107,1.13,109,0.006,110,0.006,112,3.486,114,2.318,175,1.192,204,3.749,238,1.988,255,1.028,264,5.564,270,3.749,271,5.78,272,3.257,273,1.584,274,4.564,275,3.573,276,2.946,277,5.256,278,4.053,279,5.007,280,4.564,281,4.053,282,1.39,283,3.966,284,3.395,285,2.173,286,4.053,287,4.053,288,1.106,289,3.02,290,1.692,291,2.318,292,2.423,293,3.257,294,3.573,295,1.339,296,3.573,297,4.564,298,1.428,299,3.257,300,3.573,301,3.573,302,3.573,303,3.573,304,4.053,305,3.573,306,4.053,307,2.604,308,3.257,309,4.053,310,1.949,311,3.02,312,2.318,313,2.318,314,2.318,315,2.224,316,2.318,317,2.318,318,3.02,319,3.56,320,4.053,321,2.54,322,3.573,323,5.007,324,4.053,325,3.573,326,4.053,327,4.053,328,2.832]],["title/controllers/AuthController.html",[122,1.578,329,3.249]],["body/controllers/AuthController.html",[3,0.055,4,0.049,5,0.049,9,1.503,10,3.814,11,3.655,12,0.197,13,0.87,14,1.299,16,0.585,18,0.913,23,0.468,25,1.123,26,0.01,27,0.946,28,0.609,29,0.813,35,1.655,37,1.209,39,2.546,43,3.671,45,3.05,51,0.181,55,0.304,63,0.055,64,0.059,66,1.031,67,0.585,79,1.165,82,5.584,84,5.102,86,0.71,107,1.019,109,0.004,110,0.004,118,2.654,122,1.854,124,0.966,127,1.268,234,3.817,273,1.785,282,0.915,295,0.629,298,0.94,329,3.103,330,2.351,331,1.464,332,3.192,333,5.777,334,3.671,335,3.346,336,4.958,337,2.351,338,4.746,339,4.116,340,5.865,341,2.667,342,5.346,343,3.817,344,3.975,345,4.474,346,5.122,347,3.409,348,5.346,349,6.653,350,2.667,351,2.667,352,2.143,353,4.877,354,2.285,355,4.903,356,2.667,357,4.649,358,3.103,359,2.667,360,2.667,361,2.667,362,2.143,363,4.877,364,2.667,365,2.667,366,2.667,367,2.667,368,2.909,369,1.464,370,1.864,371,1.76,372,1.988,373,1.76,374,2.351,375,2.143,376,3.82,377,2.351,378,2.667,379,1.594,380,2.667,381,1.356,382,2.351,383,2.143,384,5.788,385,4.651,386,4.651,387,2.667,388,1.308,389,2.143,390,2.667,391,2.667,392,6.072,393,3.381,394,5.507,395,3.346,396,5.788,397,3.817,398,5.122,399,4.164,400,2.667,401,5.122,402,5.122,403,5.122,404,2.667,405,3.579,406,4.116,407,2.667,408,2.667,409,1.464,410,2.667,411,2.667,412,2.667,413,2.667,414,2.667,415,2.667,416,2.667,417,2.667,418,2.667]],["title/modules/AuthModule.html",[133,1.054,145,2.878]],["body/modules/AuthModule.html",[3,0.097,4,0.087,5,0.087,26,0.01,51,0.218,55,0.54,56,2.322,57,3.124,59,3.307,63,0.097,64,0.105,68,3.307,69,2.498,109,0.007,110,0.007,124,2.287,133,1.909,135,1.864,136,1.918,137,2.037,138,2.037,139,1.918,140,3.059,141,2.718,145,5.843,159,3.959,160,2.718,161,1.714,162,1.918,164,2.17,166,3.803,194,4.173,248,4.173,249,4.173,250,4.173,251,4.173,252,4.173,329,5.298,376,5.364,377,4.173,419,4.173,420,4.173,421,5.095,422,5.364,423,5.364,424,5.364,425,4.733,426,4.413,427,4.733,428,4.173,429,4.733,430,4.173,431,4.733,432,3.803,433,3.803,434,4.733,435,4.173,436,4.733,437,4.173]],["title/injectables/AuthService.html",[53,0.385,376,2.878]],["body/injectables/AuthService.html",[3,0.075,4,0.067,5,0.067,9,0.723,10,4.106,11,3.139,12,0.268,13,1.098,14,2.042,16,1.354,18,1.483,23,0.619,25,1.483,26,0.01,27,1.249,28,0.557,29,1.073,33,1.852,35,1.557,37,1.562,51,0.194,53,0.465,55,0.414,63,0.075,64,0.081,66,1.91,67,1.354,86,1.645,107,1.228,109,0.005,110,0.005,133,1.27,234,3.917,255,0.922,273,1.945,282,2.118,295,1.456,298,1.852,332,3.439,334,4.633,335,4.223,336,3.917,337,4.633,338,4.737,347,2.578,352,4.223,353,4.937,355,4.689,357,4.727,362,4.223,363,4.937,368,4.314,375,2.921,376,3.469,383,2.921,389,2.921,422,5.091,423,5.213,424,5.091,430,3.204,435,3.204,437,3.204,438,3.204,439,3.635,440,3.635,441,3.635,442,5.256,443,3.635,444,5.256,445,4.633,446,3.635,447,4.633,448,2.921,449,2.921,450,3.635,451,3.635,452,2.363,453,3.635,454,3.635,455,3.635,456,3.635]],["title/guards/AuthenticationGuard.html",[0,2.733,187,3.249]],["body/guards/AuthenticationGuard.html",[0,3.818,1,5.483,2,5.529,3,0.073,4,0.065,5,0.065,7,2.645,9,0.706,10,3.343,11,1.804,12,0.262,13,1.079,14,1.545,15,6.429,16,1.627,18,1.467,23,0.472,25,1.133,26,0.01,27,1.125,28,0.502,29,0.82,30,4.151,31,4.675,33,1.279,35,1.54,36,4.256,37,1.272,38,2.223,39,2.56,40,2.449,42,3.41,51,0.186,53,0.457,54,3.61,55,0.405,62,3.129,63,0.073,64,0.165,65,2.645,66,1.508,67,1.627,73,2.295,78,1.639,79,0.993,81,1.186,86,0.945,100,1.186,105,2.726,107,0.706,109,0.005,110,0.005,116,4.554,117,0.945,182,2.48,187,3.85,192,3.129,247,3.129,295,1.218,310,2.09,332,3.401,379,2.122,381,1.804,457,3.129,458,4.554,459,5.166,460,5.37,461,5.166,462,3.129,463,7.166,464,3.549,465,3.549,466,5.166,467,3.129,468,2.852,469,2.343,470,2.852,471,2.343,472,3.129,473,3.85,474,3.129,475,3.129,476,3.129,477,2.835,478,5.166,479,2.645,480,4.539,481,3.129,482,3.549,483,3.549,484,3.129,485,3.549,486,2.48,487,3.129,488,4.554,489,3.129,490,3.129,491,3.549,492,3.129,493,3.129,494,3.549,495,1.627,496,3.549,497,3.549,498,2.645,499,2.645,500,3.549,501,2.645,502,3.549,503,3.41]],["title/injectables/ClearOtpAndExpiryTimeProvider.html",[53,0.385,504,2.878]],["body/injectables/ClearOtpAndExpiryTimeProvider.html",[3,0.098,4,0.088,5,0.088,12,0.353,13,1.329,14,1.813,16,1.05,18,1.67,23,0.582,25,1.395,26,0.01,27,1.175,28,0.524,29,1.01,33,1.575,35,1.969,37,1.329,51,0.191,53,0.562,55,0.546,63,0.098,64,0.106,66,1.575,67,1.05,73,1.642,78,1.519,79,1.34,81,1.6,86,1.275,100,1.6,107,0.952,109,0.007,110,0.007,175,1.408,255,1.214,273,1.727,276,3.122,282,1.642,285,1.832,288,1.307,290,1.999,295,1.129,310,1.642,328,4.446,343,4.743,347,4,504,4.2,505,6.302,506,4.481,507,3.846,508,5.61,509,3.159,510,4.787,511,4.481,512,5.61,513,4.787,514,5.61,515,2.862,516,2.738,517,3.001,518,4.22,519,3.568,520,4.22,521,2.627]],["title/classes/CreateDeliveryStateDto.html",[64,0.097,522,2.878]],["body/classes/CreateDeliveryStateDto.html",[3,0.123,4,0.109,5,0.109,12,0.439,23,0.67,26,0.009,28,0.603,49,1.074,51,0.15,63,0.123,64,0.162,109,0.008,110,0.008,117,1.951,127,1.813,207,4.534,261,2.158,265,3.737,267,3.888,268,3.471,269,2.218,522,4.833,523,4.968,524,6.987,525,4.79,526,6.987,527,5.231,528,2.384,529,4.443,530,5.961,531,5.961,532,4.019]],["title/classes/CreateDiscountDto.html",[64,0.097,533,2.878]],["body/classes/CreateDiscountDto.html",[3,0.119,4,0.106,5,0.106,12,0.427,23,0.716,26,0.009,28,0.645,49,1.056,51,0.146,63,0.119,64,0.16,109,0.007,110,0.007,117,1.917,127,1.938,261,2.099,263,4.659,264,5.47,265,3.634,266,5.111,267,4.016,268,3.412,269,2.157,307,3.3,308,6.29,528,2.344,529,4.321,532,3.95,533,4.751,534,7.216,535,6.9,536,5.798,537,5.798,538,5.798,539,5.784]],["title/injectables/CreateDiscountProvider.html",[53,0.385,540,2.878]],["body/injectables/CreateDiscountProvider.html",[3,0.095,4,0.085,5,0.085,9,0.921,12,0.341,13,1.3,14,1.783,16,1.015,18,1.365,23,0.569,25,1.365,26,0.01,27,1.149,28,0.513,29,0.987,33,1.146,37,1.3,38,2.678,45,2.123,51,0.197,53,0.55,55,0.528,63,0.095,64,0.103,66,1.146,67,1.015,78,1.469,79,1.296,81,2.08,86,1.233,92,2.541,93,2.541,94,2.271,95,2.541,96,2.443,97,2.541,98,2.541,99,2.541,100,1.547,107,0.921,109,0.006,110,0.006,175,1.362,204,3.056,238,2.271,255,1.174,272,3.72,273,1.699,275,4.081,276,3.088,279,5.486,283,3.976,285,2.381,288,1.264,289,3.45,290,1.933,295,1.092,296,4.081,310,2.135,312,2.648,313,2.648,314,2.648,315,2.541,316,2.648,317,2.648,354,2.541,533,5.446,540,4.107,541,6.197,542,5.648,543,4.63,544,3.72,545,4.63,546,6.223,547,2.443,548,3.72,549,4.63,550,3.056,551,2.902,552,4.63]],["title/classes/CreateProductDto.html",[64,0.097,553,2.878]],["body/classes/CreateProductDto.html",[3,0.086,4,0.077,5,0.077,12,0.31,23,0.779,26,0.01,27,1.235,28,0.713,39,1.609,49,1.29,51,0.181,63,0.086,64,0.148,109,0.006,110,0.006,117,1.553,127,2.108,196,1.268,197,2.22,261,1.523,265,5.141,267,4.214,268,3.947,269,1.565,283,3.17,528,2.351,529,4.344,532,3.671,553,3.847,554,3.708,555,5.374,556,4.414,557,4.414,558,4.414,559,5.374,560,5.374,561,3.998,562,5.374,563,3.53,564,4.206,565,4.206,566,4.206,567,4.206,568,4.206,569,4.206,570,4.206,571,4.206,572,4.206,573,4.206,574,3.671,575,3.38,576,3.135,577,4.206,578,2.939,579,4.073,580,4.344,581,4.073,582,2.23,583,3.38,584,2.939,585,2.636,586,2.776]],["title/injectables/CreateProductProvider.html",[53,0.385,587,2.878]],["body/injectables/CreateProductProvider.html",[3,0.062,4,0.055,5,0.055,9,0.908,12,0.407,13,0.953,14,1.4,16,1.001,18,1.001,23,0.417,25,1.001,26,0.01,27,0.843,28,0.508,29,0.724,33,0.744,37,0.953,38,1.964,42,1.983,49,0.669,51,0.182,53,0.403,55,0.342,63,0.062,64,0.067,66,1.366,67,1.001,73,2.678,78,1.751,79,1.544,81,1.844,86,2.039,92,2.505,93,2.505,94,2.239,95,2.505,96,2.408,97,2.505,98,2.505,99,2.505,100,1.844,107,0.908,109,0.005,110,0.005,196,2.425,197,1.586,199,1.983,255,0.762,273,1.334,285,1.15,288,0.82,295,1.076,298,1.059,310,1.893,354,1.649,488,2.649,495,2.826,498,4.113,499,4.113,501,2.239,550,1.983,551,1.883,553,4.932,563,3.253,574,2.505,582,1.746,585,1.883,587,3.012,588,4.865,589,2.414,590,4.434,591,3.004,592,6.15,593,4.787,594,3.004,595,2.414,596,5.608,597,3.401,598,3.004,599,2.239,600,2.099,601,2.414,602,3.004,603,1.983,604,2.414,605,3.004,606,3.189,607,2.099,608,3.012,609,3.459,610,4.434,611,3.667,612,2.414,613,2.414,614,3.667,615,2.414,616,2.414,617,3.667,618,3.004,619,5.519,620,3.004,621,3.667,622,3.004,623,3.004,624,3.004,625,3.004,626,4.564,627,2.414,628,1.796,629,3.004,630,3.004,631,3.004,632,2.861,633,3.004,634,1.059,635,1.586,636,3.004,637,3.004,638,2.649,639,3.004,640,3.004,641,3.401,642,3.004,643,3.004,644,3.004,645,3.004,646,3.004,647,2.649,648,3.004,649,2.649,650,3.004,651,2.649,652,3.004,653,3.004,654,4.113,655,2.649,656,2.649,657,4.023,658,2.649,659,2.414,660,3.004,661,3.667,662,2.414,663,2.414,664,2.414,665,2.414,666,3.667,667,2.414,668,2.414,669,4.434,670,3.667,671,2.414]],["title/classes/CreateProductVariantDto.html",[64,0.097,581,3.047]],["body/classes/CreateProductVariantDto.html",[3,0.106,4,0.094,5,0.094,12,0.38,23,0.717,26,0.009,28,0.686,29,1.061,39,1.975,49,1.243,51,0.168,63,0.106,64,0.165,109,0.007,110,0.007,117,1.781,127,1.942,196,2.451,261,1.868,265,4.191,267,3.848,268,3.515,269,1.92,528,2.177,532,3.669,576,3.846,578,3.606,579,4.671,580,4.983,581,4.671,582,3.109,583,6.529,586,3.406,596,5.959,672,4.147,673,5.527,674,5.182,675,5.527,676,5.161,677,5.161,678,5.161,679,4.55,680,5.161,681,5.161,682,3.528,683,4.55,684,4.55]],["title/classes/CreateReviewDto.html",[64,0.097,685,2.878]],["body/classes/CreateReviewDto.html",[3,0.107,4,0.096,5,0.096,12,0.385,23,0.721,26,0.009,28,0.649,49,1.225,51,0.131,63,0.107,64,0.149,109,0.007,110,0.007,117,1.795,127,1.951,261,1.892,265,4.676,267,4.002,268,3.735,269,1.944,409,4.325,528,2.194,532,3.698,679,4.606,683,4.606,684,4.606,685,4.448,686,7.191,687,4.606,688,3.792,689,4.267,690,5.994,691,6.555,692,5.225,693,5.225,694,5.225,695,7.881,696,4.029,697,5.225,698,6.739,699,5.022,700,5.225,701,5.225,702,5.225,703,5.225]],["title/injectables/CreateReviewProvider.html",[53,0.385,704,2.878]],["body/injectables/CreateReviewProvider.html",[3,0.085,4,0.076,5,0.076,9,0.823,12,0.305,13,1.204,14,1.683,16,1.264,18,1.264,23,0.527,25,1.264,26,0.01,27,1.065,28,0.475,29,0.915,33,1.025,37,1.204,38,2.481,45,1.898,51,0.196,53,0.51,55,0.472,63,0.085,64,0.092,66,1.427,67,1.264,73,1.42,78,1.314,79,1.613,81,1.927,86,1.536,92,2.272,93,2.272,94,2.031,95,2.272,96,2.185,97,2.272,98,2.272,99,2.272,100,1.384,107,0.823,109,0.006,110,0.006,121,1.159,175,1.218,196,2.274,238,2.031,255,1.05,273,1.603,276,2.969,285,2.206,288,1.13,290,1.728,295,1.36,298,1.459,310,1.978,312,2.368,313,2.368,314,2.368,315,2.272,316,2.368,317,2.368,354,2.272,495,1.898,547,2.185,550,2.732,551,2.595,685,5.153,688,2.105,689,4.673,690,4.632,691,4.632,704,3.805,705,5.847,706,3.65,707,4.632,708,4.14,709,4.789,710,4.14,711,5.082,712,4.632,713,4.14,714,3.327,715,3.327,716,3.65,717,3.085,718,3.65,719,2.105,720,2.368,721,4.14,722,4.14,723,5.765,724,4.14,725,4.14,726,4.14,727,4.14,728,4.14,729,4.14,730,4.14,731,4.14,732,4.14,733,3.327,734,4.14,735,4.14]],["title/classes/CreateSubscriberDto.html",[64,0.097,736,3.249]],["body/classes/CreateSubscriberDto.html",[3,0.118,4,0.105,5,0.105,9,1.424,12,0.424,23,0.526,26,0.009,28,0.474,49,1.05,51,0.18,63,0.118,64,0.159,109,0.007,110,0.007,117,1.908,118,3.981,127,1.424,261,2.082,267,3.513,269,2.14,345,4.096,388,2.821,635,3.779,736,5.337,737,6.313,738,5.069,739,5.337,740,5.116,741,4.018,742,4.621,743,5.75,744,5.337,745,5.004,746,5.754,747,4.621,748,4.621,749,4.621]],["title/classes/CreateUserDto.html",[64,0.097,750,2.878]],["body/classes/CreateUserDto.html",[3,0.102,4,0.09,5,0.09,9,1.444,12,0.364,23,0.594,26,0.01,28,0.536,35,2,49,0.953,51,0.201,63,0.102,64,0.171,109,0.007,110,0.007,117,1.732,118,3.846,119,3.656,127,1.609,261,1.79,267,3.563,269,1.84,345,4.413,381,3.692,388,2.425,635,4.072,739,4.845,741,4.542,742,3.972,744,4.845,745,5.075,746,5.223,747,3.972,748,3.972,749,3.972,750,4.29,751,6.403,752,3.454,753,4.358,754,4.358,755,4.358,756,4.358,757,4.944,758,4.944,759,3.568,760,3.972,761,4.358]],["title/injectables/CreateUsersProvider.html",[53,0.385,762,2.878]],["body/injectables/CreateUsersProvider.html",[3,0.089,4,0.079,5,0.079,9,1.18,12,0.318,13,1.239,14,1.72,16,0.947,18,1.601,23,0.543,25,1.301,26,0.01,27,1.096,28,0.489,29,0.942,33,1.469,35,1.951,37,1.239,45,1.98,51,0.192,52,2.37,53,0.525,55,0.492,63,0.089,64,0.15,66,1.808,67,0.947,78,1.37,79,1.661,81,1.983,86,1.15,100,1.443,107,0.859,109,0.006,110,0.006,118,1.98,119,1.803,121,1.208,175,1.27,238,2.118,255,1.095,273,1.639,276,3.014,282,1.481,284,2.581,285,2.271,288,1.179,290,1.803,310,2.036,312,2.47,313,2.47,314,2.47,315,2.37,316,2.47,317,2.47,358,4.423,426,3.017,452,2.271,495,1.98,509,2.85,511,4.251,515,2.581,517,2.706,547,2.279,550,2.85,551,2.706,739,5.442,750,5.348,762,3.917,763,5.978,764,3.806,765,5.232,766,4.318,767,5.232,768,4.318,769,3.218,770,3.806,771,2.47,772,4.318,773,5.935,774,4.318,775,4.318,776,4.318,777,4.318,778,4.318]],["title/injectables/DataResponseInterceptor.html",[53,0.385,183,3.249]],["body/injectables/DataResponseInterceptor.html",[3,0.094,4,0.084,5,0.084,9,0.911,12,0.338,13,1.29,16,1.004,18,1.641,23,0.565,25,1.355,26,0.01,27,1.141,28,0.509,29,0.98,31,5.229,33,1.529,36,4.317,37,1.29,51,0.176,53,0.546,55,0.522,56,2.246,63,0.094,64,0.102,65,3.413,66,1.731,67,1.004,69,2.417,94,3.671,107,0.911,109,0.006,110,0.006,167,5.431,183,4.604,185,5.617,255,1.162,295,1.08,298,1.614,452,2.364,467,6.163,468,3.68,479,3.413,487,5.446,489,5.446,779,6.163,780,4.037,781,5.847,782,5.625,783,5.446,784,6.177,785,4.037,786,4.579,787,6.177,788,7.483,789,4.579,790,6.177,791,6.991,792,6.177,793,6.177,794,6.177,795,4.579,796,4.579,797,4.579,798,4.579,799,4.579]],["title/entities/DeliveryState.html",[634,1.536,800,3.047]],["body/entities/DeliveryState.html",[3,0.11,4,0.098,5,0.098,12,0.396,23,0.728,26,0.009,28,0.656,49,1.168,51,0.135,63,0.11,64,0.119,109,0.007,110,0.007,117,1.827,121,2.115,127,1.971,208,5.749,288,1.466,307,3.145,523,5.157,526,6.662,527,4.988,528,2.233,634,2.417,733,6.072,800,4.793,801,2.73,802,4.734,803,4.988,804,5.371,805,4.515,806,5.371,807,3.764,808,5.371,809,5.371,810,6.047,811,6.047,812,2.834,813,4.734,814,6.859,815,5.371]],["title/controllers/DeliveryStatesController.html",[122,1.578,816,3.249]],["body/controllers/DeliveryStatesController.html",[3,0.081,4,0.072,5,0.072,12,0.289,13,1.16,16,0.861,18,0.861,23,0.589,25,1.413,26,0.01,27,1.294,28,0.531,29,1.022,33,1.595,37,1.544,49,1.126,51,0.202,55,0.447,63,0.081,64,0.087,66,1.735,67,0.861,107,1.282,109,0.006,110,0.006,119,1.639,122,1.421,124,1.421,127,1.595,207,4.808,208,4.895,273,1.981,295,0.926,298,1.383,331,2.154,332,1.995,354,2.154,369,3.537,372,2.925,373,3.665,379,2.346,381,2.823,405,2.742,469,2.59,522,5.32,523,4.392,527,5.485,547,2.071,759,2.154,816,4.138,817,3.46,818,5.681,819,5.681,820,5.553,821,5.681,822,3.46,823,3.46,824,3.925,825,3.925,826,3.925,827,3.925,828,3.46,829,5.728,830,3.925,831,3.925,832,5.681,833,3.665,834,4.253,835,3.46,836,3.46,837,4.462,838,2.346,839,2.59,840,2.925,841,3.46,842,3.925,843,4.138,844,3.925,845,2.59,846,3.925,847,3.925,848,3.925,849,2.742,850,3.925,851,3.925,852,3.925]],["title/modules/DeliveryStatesModule.html",[133,1.054,146,3.047]],["body/modules/DeliveryStatesModule.html",[3,0.118,4,0.105,5,0.105,26,0.009,51,0.211,55,0.654,63,0.118,64,0.127,109,0.007,110,0.007,124,2.588,133,1.882,135,2.258,136,2.324,137,2.468,138,2.468,139,2.324,140,3.352,141,2.468,146,5.978,160,3.077,161,2.076,162,2.324,164,2.63,174,2.916,175,1.687,207,4.089,208,4.007,523,3.595,800,4.007,816,5.805,834,5.647,835,5.056,836,5.056,853,5.056,854,5.056,855,5.735,856,5.735,857,5.056,858,5.735]],["title/injectables/DeliveryStatesService.html",[53,0.385,834,2.878]],["body/injectables/DeliveryStatesService.html",[3,0.062,4,0.055,5,0.055,9,1.098,12,0.221,13,0.953,14,1.942,16,0.659,18,1.001,23,0.564,25,1.351,26,0.01,27,1.138,28,0.508,29,0.978,33,1.366,35,1.051,37,1.457,45,2.53,49,1.023,51,0.175,53,0.403,55,0.342,63,0.062,64,0.067,66,1.366,67,0.659,78,2.214,79,1.953,81,2.424,86,1.642,92,3.029,93,3.029,94,2.707,95,3.029,96,2.912,97,3.029,98,3.029,99,3.029,100,2.06,105,1.586,107,1.098,109,0.005,110,0.005,121,0.841,175,0.884,207,4.745,238,2.707,255,0.762,273,1.849,276,2.609,282,1.893,284,1.796,285,2.358,288,0.82,290,1.254,295,0.709,310,2.274,312,3.157,313,3.157,314,3.157,315,3.029,316,3.157,317,3.157,318,2.239,319,3.459,354,1.649,503,3.012,522,4.787,523,4.155,527,5.557,547,1.586,720,1.719,800,5.842,818,2.649,819,4.865,821,4.865,822,2.649,828,2.649,829,5.348,832,4.865,833,3.012,834,3.012,837,3.667,841,2.649,845,1.983,849,2.099,857,2.649,859,5.843,860,2.649,861,4.564,862,3.004,863,3.004,864,4.564,865,3.004,866,4.564,867,3.004,868,3.004,869,3.004,870,2.649,871,3.004,872,4.564,873,4.564,874,2.649,875,2.414,876,3.004,877,2.099]],["title/entities/Discount.html",[283,2.067,634,1.536]],["body/entities/Discount.html",[3,0.104,4,0.093,5,0.093,12,0.374,23,0.758,26,0.009,28,0.705,39,2.53,49,1.143,50,3.033,51,0.127,63,0.104,64,0.113,79,1.42,109,0.007,110,0.007,117,1.761,121,2.058,127,2.052,264,5.14,283,3.134,288,1.385,305,6.484,307,3.706,308,5.911,477,4.037,528,2.538,535,6.484,634,2.33,696,3.953,801,2.58,805,4.697,807,3.629,812,2.678,878,4.473,879,7.355,880,5.074,881,5.074,882,5.074,883,4.473,884,5.074,885,4.364,886,5.808,887,5.074,888,4.364,889,5.074]],["title/entities/DiscountUsage.html",[634,1.536,890,2.733]],["body/entities/DiscountUsage.html",[3,0.101,4,0.09,5,0.09,12,0.361,23,0.731,26,0.01,28,0.658,35,1.926,39,1.874,49,0.947,51,0.193,63,0.101,64,0.109,109,0.007,110,0.007,117,1.721,121,2.023,127,1.978,205,5.144,283,3.966,288,1.337,292,4.906,307,2.962,634,2.277,801,2.49,803,4.772,807,3.546,812,2.585,888,4.264,890,4.05,891,4.318,892,5.672,893,7.23,894,4.815,895,4.898,896,4.898,897,4.318,898,5.695,899,4.898,900,4.898,901,4.898,902,4.898,903,4.318,904,4.318,905,3.65,906,4.514,907,5.388,908,5.695]],["title/controllers/DiscountsController.html",[122,1.578,909,3.249]],["body/controllers/DiscountsController.html",[3,0.097,4,0.086,5,0.086,12,0.347,13,1.315,16,1.033,18,1.033,23,0.576,25,1.381,26,0.01,27,1.163,28,0.519,29,0.999,35,1.743,37,1.315,51,0.212,55,0.537,63,0.097,64,0.105,67,1.033,107,1.252,109,0.007,110,0.007,112,3.714,114,2.696,119,1.967,122,1.706,124,1.706,127,1.559,204,4.156,260,6.177,273,1.961,274,5.699,280,3.786,291,2.696,295,1.111,298,1.66,331,2.586,369,3.456,370,3.293,371,3.11,373,4.156,381,2.396,406,3.786,533,5.358,542,5.06,544,3.786,547,2.487,548,5.06,759,2.586,823,4.154,838,2.817,839,3.11,843,3.512,909,4.693,910,4.154,911,4.712,912,4.712,913,4.712,914,4.681,915,4.154,916,4.4,917,3.293,918,3.786,919,4.712,920,4.712,921,4.712,922,4.712,923,4.712,924,3.786,925,4.712,926,4.712]],["title/modules/DiscountsModule.html",[133,1.054,147,3.047]],["body/modules/DiscountsModule.html",[3,0.106,4,0.094,5,0.094,26,0.01,51,0.216,55,0.587,63,0.106,64,0.114,109,0.007,110,0.007,124,2.417,133,1.79,135,2.027,136,2.087,137,2.216,138,2.216,139,2.087,140,3.188,141,2.216,147,6.195,148,5.491,160,2.873,161,1.864,162,2.087,164,3.061,174,2.617,175,1.514,205,3.227,206,4.538,270,5.491,283,2.44,289,3.837,292,3.078,540,5.491,909,5.52,914,5.491,915,4.538,927,4.538,928,4.538,929,5.148,930,5.148,931,5.148,932,5.148,933,5.884,934,3.837,935,5.148]],["title/injectables/DiscountsService.html",[53,0.385,914,2.878]],["body/injectables/DiscountsService.html",[3,0.088,4,0.079,5,0.079,12,0.316,13,1.234,14,2.003,16,1.296,18,1.296,23,0.618,25,1.482,26,0.01,27,1.248,28,0.557,29,1.072,33,1.463,35,1.677,37,1.521,38,2.544,49,0.991,51,0.198,53,0.522,55,0.489,63,0.088,64,0.095,66,1.674,67,1.296,86,1.574,107,1.175,109,0.006,110,0.006,112,3.573,114,2.455,255,1.089,264,5.517,270,5.339,273,1.908,274,4.749,280,4.749,282,1.472,283,3.906,289,3.198,291,2.455,295,1.394,299,3.448,300,3.783,301,3.783,302,3.783,303,3.783,354,2.355,358,4.404,452,2.261,495,2.71,533,5.339,540,5.211,542,5.432,544,3.448,547,2.265,548,3.448,914,3.901,933,5.21,936,3.783,937,4.291,938,4.291,939,4.291,940,4.291,941,5.21,942,5.91,943,4.291,944,4.291]],["title/modules/DiscountsUsageModule.html",[133,1.054,148,2.878]],["body/modules/DiscountsUsageModule.html",[3,0.118,4,0.105,5,0.105,26,0.009,51,0.205,55,0.652,63,0.118,64,0.127,109,0.007,110,0.007,133,1.88,135,2.252,136,2.318,137,2.462,138,2.462,139,2.318,140,3.348,141,3.348,148,5.724,160,3.072,161,2.071,162,2.318,164,2.622,174,2.908,175,1.682,204,3.775,205,3.585,277,5.937,292,3.419,294,5.042,890,3.585,945,5.042,946,5.042,947,5.042,948,5.719,949,5.719,950,4.262,951,5.719]],["title/injectables/DiscountsUsageService.html",[53,0.385,277,2.878]],["body/injectables/DiscountsUsageService.html",[3,0.091,4,0.081,5,0.081,9,0.877,12,0.325,13,1.257,14,1.739,16,0.966,18,1.32,23,0.55,25,1.32,26,0.01,27,1.112,28,0.496,29,0.955,33,1.091,35,1.696,37,1.257,45,2.021,49,1.167,51,0.185,53,0.532,55,0.502,63,0.091,64,0.098,66,1.49,67,0.966,78,1.399,79,1.233,81,2.012,86,1.174,92,2.419,93,2.419,94,2.162,95,2.419,96,2.326,97,2.419,98,2.419,99,2.419,100,1.473,107,0.877,109,0.006,110,0.006,121,1.684,175,1.296,204,3.973,238,2.162,255,1.118,273,1.656,276,3.036,277,3.973,282,1.512,283,3.491,285,2.303,288,1.203,290,1.84,292,4.098,293,5.508,295,1.039,297,6.196,310,2.065,312,2.521,313,2.521,314,2.521,315,2.419,316,2.521,317,2.521,321,2.763,322,6.043,323,6.043,890,2.763,950,3.285,952,3.886,953,6.019,954,4.408,955,4.408,956,6.019,957,6.019,958,4.61,959,4.408,960,5.508,961,4.408,962,4.408,963,2.909,964,4.408]],["title/injectables/FindAllProductsProvider.html",[53,0.385,965,2.878]],["body/injectables/FindAllProductsProvider.html",[3,0.071,4,0.063,5,0.063,12,0.254,13,1.056,14,1.519,16,1.108,18,1.108,23,0.462,25,1.108,26,0.01,27,1.106,28,0.417,29,0.802,33,0.853,37,1.056,38,2.176,50,4.998,51,0.191,53,0.447,55,0.393,63,0.071,64,0.076,66,0.853,67,1.108,73,2.603,78,1.093,79,0.964,81,1.151,86,0.918,92,1.891,93,1.891,94,1.69,95,1.891,96,1.818,97,1.891,98,1.891,99,1.891,100,1.151,107,1.005,109,0.005,110,0.005,175,1.013,196,1.525,255,0.874,273,1.447,276,2.765,288,0.941,290,1.438,295,1.192,310,1.182,318,2.568,328,2.407,452,1.318,556,2.274,557,2.274,558,2.274,561,2.06,563,3.16,600,2.407,606,3.532,628,2.06,673,2.568,675,2.568,696,2.06,719,3.733,845,2.274,963,4.353,965,3.336,966,5.278,967,3.037,968,4.462,969,3.037,970,4.756,971,3.445,972,4.062,973,3.037,974,4.135,975,3.445,976,5.3,977,3.425,978,5.055,979,2.768,980,2.407,981,2.568,982,2.768,983,4.456,984,3.037,985,2.768,986,2.568,987,2.768,988,3.445,989,4.609,990,5.055,991,3.445,992,3.445,993,5.987,994,3.445,995,3.445,996,3.445,997,5.055,998,3.445,999,3.445,1000,3.445,1001,3.445,1002,3.445,1003,3.445,1004,2.768,1005,3.445,1006,3.445,1007,3.445,1008,3.445,1009,4.456,1010,3.445,1011,3.445,1012,3.445,1013,3.445,1014,3.445,1015,3.445,1016,3.445,1017,5.055,1018,3.445,1019,5.055,1020,3.445,1021,4.062,1022,2.568,1023,3.445,1024,3.037,1025,3.445,1026,3.445]],["title/injectables/FindOneByIdProvider.html",[53,0.385,1027,2.878]],["body/injectables/FindOneByIdProvider.html",[3,0.089,4,0.079,5,0.079,9,1.179,12,0.318,13,1.238,14,1.718,16,0.945,18,1.6,23,0.542,25,1.3,26,0.01,27,1.094,28,0.488,29,0.94,33,1.467,35,2.011,37,1.238,45,1.976,49,0.993,51,0.183,53,0.524,55,0.491,63,0.089,64,0.15,66,1.467,67,0.945,78,1.881,79,1.658,81,1.981,86,1.148,92,2.365,93,2.365,94,2.114,95,2.365,96,2.274,97,2.365,98,2.365,99,2.365,100,1.44,105,3.128,107,0.857,109,0.006,110,0.006,121,2.266,175,1.267,238,2.114,255,1.093,273,1.637,276,3.012,282,1.478,284,2.576,285,2.268,288,1.176,290,1.799,295,1.016,310,1.478,312,2.465,313,2.465,314,2.465,315,2.365,316,2.465,317,2.465,318,3.211,319,3.715,452,2.268,503,2.844,509,2.844,511,4.246,515,2.576,517,2.701,874,3.798,1027,3.912,1028,5.049,1029,4.795,1030,3.798,1031,5.863,1032,5.926,1033,4.309,1034,5.926,1035,4.309,1036,3.798]],["title/injectables/FindOneUserByEmailProvider.html",[53,0.385,1037,2.878]],["body/injectables/FindOneUserByEmailProvider.html",[3,0.09,4,0.08,5,0.08,9,1.194,12,0.324,13,1.254,14,1.735,16,0.962,18,1.612,23,0.549,25,1.316,26,0.01,27,1.108,28,0.495,29,0.952,33,1.486,35,2.036,37,1.254,49,1.003,50,3.588,51,0.185,53,0.53,54,3.067,55,0.5,63,0.09,64,0.097,66,1.486,67,0.962,78,1.905,79,1.68,81,1.467,86,1.169,100,1.467,105,3.88,107,0.873,109,0.006,110,0.006,118,3.853,119,1.833,121,1.228,175,1.291,255,1.113,273,1.653,276,2.895,282,1.506,285,1.68,288,1.198,290,1.833,295,1.035,310,1.506,319,2.751,452,2.297,509,2.897,511,4.609,515,2.624,517,2.751,521,2.409,1028,5.098,1029,4.288,1031,5.909,1037,3.962,1038,3.869,1039,5.291,1040,4.389,1041,5.291,1042,4.389,1043,4.389,1044,3.869,1045,3.271,1046,4.389]],["title/injectables/FindUserByOtpAndExpiryTimeProvider.html",[53,0.385,1047,2.878]],["body/injectables/FindUserByOtpAndExpiryTimeProvider.html",[3,0.087,4,0.078,5,0.078,9,1.166,11,3.684,12,0.312,13,1.224,14,1.704,16,0.93,18,1.589,23,0.536,25,1.285,26,0.01,27,1.082,28,0.483,29,0.93,33,1.451,35,1.994,37,1.224,49,0.985,51,0.182,53,0.518,54,2.962,55,0.483,63,0.087,64,0.149,66,1.451,67,0.93,78,1.86,79,1.64,81,1.417,82,3.407,86,1.129,100,1.417,105,3.824,107,0.843,109,0.006,110,0.006,161,2.919,175,1.247,255,1.076,273,1.623,276,2.994,282,1.455,285,1.622,288,1.157,290,1.77,295,1,307,1.944,310,1.455,347,3.955,452,2.243,506,5.054,507,3.407,509,2.798,511,4.21,515,2.535,516,2.425,517,2.658,519,3.16,521,2.327,1028,5.006,1031,5.822,1045,3.16,1047,3.868,1048,5.822,1049,5.063,1050,5.861,1051,4.24,1052,5.861,1053,4.24,1054,4.24,1055,4.24,1056,4.24,1057,5.861,1058,4.24,1059,4.24]],["title/injectables/GenerateTokensProvider.html",[53,0.385,421,2.733]],["body/injectables/GenerateTokensProvider.html",[3,0.127,4,0.067,5,0.067,9,0.723,10,3.388,11,2.672,12,0.268,13,1.098,14,1.898,16,1.152,18,1.483,19,2.921,20,6.198,21,5.436,22,4.727,23,0.565,25,1.483,26,0.01,27,1.14,28,0.557,29,0.979,33,1.675,35,1.905,37,1.413,49,0.905,51,0.188,52,1.995,53,0.465,55,0.414,56,1.783,57,2.399,59,2.54,63,0.075,64,0.081,66,1.852,67,1.152,68,4.727,69,1.918,70,2.921,73,1.247,83,6.198,86,1.4,107,1.045,109,0.005,110,0.005,112,1.783,118,1.667,119,1.517,120,2.921,255,0.922,273,1.808,282,1.803,291,2.079,295,1.24,298,1.281,340,4.633,355,3.87,357,5.227,368,3.673,395,4.223,397,3.917,421,3.295,433,2.921,452,2.011,471,3.469,528,2.01,905,2.709,941,4.633,958,3.691,1060,5.964,1061,3.204,1062,5.964,1063,5.256,1064,5.256,1065,3.635,1066,5.256,1067,3.635,1068,5.256,1069,7.177,1070,5.436,1071,3.635,1072,2.921,1073,5.256,1074,3.204,1075,3.635,1076,3.204,1077,3.204,1078,3.204,1079,3.204,1080,3.204,1081,3.204,1082,2.921,1083,3.469,1084,3.635,1085,2.709,1086,3.635,1087,2.709,1088,2.709,1089,3.635,1090,3.635]],["title/classes/GetProductsBaseDto.html",[64,0.097,1091,3.249]],["body/classes/GetProductsBaseDto.html",[3,0.083,4,0.074,5,0.074,9,0.806,12,0.299,23,0.728,26,0.01,27,1.382,28,0.656,29,1.374,49,1.27,51,0.165,63,0.083,64,0.145,109,0.006,110,0.006,117,1.513,127,1.971,196,2.574,261,1.467,268,3.852,269,1.508,388,1.988,556,4.938,557,4.328,558,4.328,561,4.473,635,3.46,682,4.288,719,2.888,974,2.54,1091,4.887,1092,6.53,1093,3.02,1094,4.233,1095,5.007,1096,6.596,1097,6.596,1098,5.935,1099,4.053,1100,4.053,1101,5.007,1102,4.053,1103,4.053,1104,5.007,1105,5.007,1106,4.053,1107,3.573,1108,4.053,1109,4.233,1110,3.395,1111,2.675,1112,2.832,1113,3.573,1114,2.54]],["title/classes/GetProductsDto.html",[64,0.097,974,2.733]],["body/classes/GetProductsDto.html",[3,0.104,4,0.093,5,0.093,9,1.009,26,0.01,27,1.221,49,1.238,51,0.185,63,0.104,64,0.163,109,0.007,110,0.007,196,2.499,261,1.837,268,4.056,269,1.888,388,2.489,556,4.364,557,3.349,558,3.349,561,3.953,635,3.882,682,4.516,719,2.58,974,4.145,1091,5.482,1092,4.077,1093,3.782,1094,3.782,1095,4.473,1096,5.829,1097,5.829,1101,4.473,1104,4.473,1105,4.473,1109,5.482,1110,4.397,1111,3.349,1112,3.546,1113,5.829,1114,4.145]],["title/classes/GetUsersBaseDto.html",[64,0.097,1115,3.249]],["body/classes/GetUsersBaseDto.html",[3,0.108,4,0.096,5,0.096,9,1.042,12,0.386,23,0.617,26,0.01,28,0.556,29,1.251,35,1.719,51,0.188,63,0.139,64,0.185,109,0.007,110,0.007,117,1.798,127,1.671,261,1.896,269,1.949,307,3.95,388,2.569,539,6.001,608,4.455,635,3.941,682,3.941,752,3.66,753,4.617,1094,5.03,1109,5.03,1110,4.035,1111,3.457,1112,3.66,1114,3.283,1115,5.566,1116,6.001,1117,6.584,1118,6.584,1119,6.749,1120,5.95,1121,5.237,1122,3.457]],["title/classes/GetUsersDto.html",[64,0.097,1122,2.878]],["body/classes/GetUsersDto.html",[3,0.116,4,0.103,5,0.103,9,1.122,26,0.01,35,1.78,51,0.194,63,0.145,64,0.189,109,0.007,110,0.007,261,2.043,269,2.1,307,3.717,388,2.768,539,6.213,608,3.724,635,4.081,682,4.081,752,3.943,1094,4.206,1109,5.763,1110,4.622,1111,3.724,1112,3.943,1114,4.436,1115,5.763,1116,4.534,1117,4.975,1118,4.975,1120,4.975,1122,4.671]],["title/classes/InitiatePaymentDto.html",[64,0.097,1123,2.733]],["body/classes/InitiatePaymentDto.html",[3,0.1,4,0.089,5,0.089,12,0.36,23,0.702,26,0.009,28,0.689,29,1.301,39,2.469,49,1.227,51,0.181,63,0.1,64,0.17,109,0.007,110,0.007,117,1.718,127,1.902,196,1.474,261,1.769,267,3.917,268,3.785,269,1.818,528,1.591,532,3.54,561,2.921,563,2.579,575,3.926,576,3.642,578,3.414,579,5.046,580,5.382,582,1.87,584,3.414,586,4.258,682,4.053,688,2.484,719,3.671,960,5.803,1098,5.382,1123,4.044,1124,6.416,1125,3.926,1126,5.046,1127,5.046,1128,4.886,1129,4.886,1130,4.886,1131,5.724,1132,4.886,1133,4.766,1134,3.414]],["title/injectables/InitiatePaymentProvider.html",[53,0.385,1135,2.878]],["body/injectables/InitiatePaymentProvider.html",[3,0.079,4,0.044,5,0.044,9,0.761,12,0.177,13,0.799,14,1.383,16,1.518,18,0.839,22,3.81,23,0.437,25,0.839,26,0.01,27,0.706,28,0.315,29,0.607,33,0.947,35,1.685,37,0.997,42,1.581,45,1.098,48,1.785,49,0.351,51,0.194,52,1.315,53,0.338,55,0.273,56,1.175,63,0.049,64,0.053,67,1.307,69,2.018,73,2.512,76,3.81,78,1.515,79,1.336,81,1.596,86,2.027,100,1.596,107,0.95,109,0.004,110,0.004,112,2.675,114,1.37,118,1.098,121,1.07,167,4.401,196,1.797,207,1.37,255,0.608,273,1.154,282,0.822,283,3.16,285,0.917,288,0.654,291,1.37,295,1.405,298,1.683,310,1.638,311,1.785,321,1.501,332,1.945,393,1.581,452,0.917,473,1.785,479,1.785,481,2.111,486,1.674,495,1.754,498,1.785,499,3.559,501,1.785,516,1.37,551,1.501,563,3.353,582,0.917,586,2.524,592,5.882,599,1.785,608,2.524,609,2.398,610,3.837,611,3.073,612,1.925,613,1.925,614,3.073,615,1.925,616,1.925,617,3.073,628,2.287,632,1.501,638,2.111,651,2.111,654,3.559,655,2.111,656,2.111,657,3.372,658,2.111,659,1.925,661,1.925,662,1.925,663,1.925,664,1.925,665,1.925,666,3.073,667,1.925,668,1.925,669,3.837,670,3.073,671,1.925,674,2.673,688,1.945,719,1.218,720,2.188,744,2.851,782,2.673,903,2.111,905,1.785,958,1.432,1029,1.501,1082,1.925,1123,3.982,1126,2.673,1127,2.673,1135,2.524,1136,4.806,1137,1.925,1138,4.806,1139,4.775,1140,2.111,1141,3.659,1142,3.986,1143,2.395,1144,3.372,1145,2.395,1146,2.398,1147,4.063,1148,4.788,1149,2.395,1150,2.395,1151,1.925,1152,1.925,1153,1.925,1154,1.925,1155,3.073,1156,1.785,1157,2.731,1158,2.111,1159,1.785,1160,2.111,1161,1.674,1162,1.785,1163,2.111,1164,1.674,1165,2.111,1166,3.825,1167,2.395,1168,4.775,1169,2.395,1170,2.395,1171,1.925,1172,2.395,1173,2.395,1174,2.395,1175,2.395,1176,2.395,1177,2.395,1178,2.395,1179,3.372,1180,5.452,1181,2.111,1182,3.073,1183,2.851,1184,1.925,1185,2.395,1186,2.111,1187,3.825,1188,3.372,1189,3.825,1190,2.395,1191,2.395,1192,2.395,1193,4.209,1194,5.565,1195,2.395,1196,3.825,1197,2.395,1198,2.395,1199,3.825,1200,5.452,1201,3.825,1202,2.395,1203,2.111,1204,3.372,1205,2.395,1206,2.395,1207,2.395,1208,2.395,1209,2.395,1210,2.395,1211,2.395,1212,2.395,1213,2.395,1214,2.111,1215,2.111,1216,2.395,1217,1.925,1218,2.395,1219,2.111,1220,2.111,1221,2.395,1222,2.111]],["title/modules/MailModule.html",[133,1.054,149,2.878]],["body/modules/MailModule.html",[3,0.093,4,0.083,5,0.083,14,1.144,26,0.01,35,1.038,39,2.34,40,2.898,51,0.201,52,3.356,55,0.514,56,2.213,63,0.093,64,0.1,69,3.227,79,1.262,107,0.897,109,0.006,110,0.006,133,1.981,135,1.776,136,1.828,137,1.942,138,1.942,139,1.828,140,2.986,141,2.986,149,5.41,160,2.632,161,1.633,162,1.828,164,2.068,167,4.579,224,5.391,230,3.977,236,3.977,242,3.977,298,1.59,332,2.293,473,3.362,477,2.476,484,3.977,771,4.971,1004,3.625,1021,3.625,1223,3.977,1224,3.977,1225,3.977,1226,4.511,1227,6.115,1228,4.511,1229,4.511,1230,4.557,1231,3.625,1232,3.625,1233,6.115,1234,4.511,1235,4.511,1236,3.152,1237,4.511,1238,3.977,1239,4.511,1240,5.391,1241,4.511,1242,6.115,1243,6.115,1244,6.115,1245,4.511,1246,4.511,1247,4.511,1248,4.511,1249,4.511,1250,3.977,1251,3.977,1252,3.977,1253,4.511,1254,4.511,1255,4.511,1256,4.511,1257,4.511,1258,4.511]],["title/injectables/MailService.html",[53,0.385,771,2.494]],["body/injectables/MailService.html",[3,0.064,4,0.057,5,0.057,9,0.616,12,0.228,13,0.975,14,2.054,16,0.679,18,1.372,23,0.614,25,1.473,26,0.01,27,1.24,28,0.553,29,1.066,33,1.748,35,1.997,36,4.374,37,1.307,38,3.246,49,1.035,51,0.184,53,0.413,55,0.353,63,0.064,64,0.069,66,1.748,86,1.667,109,0.005,110,0.005,118,2.87,121,0.867,133,1.128,161,2.432,196,1.888,234,2.308,255,0.786,273,1.956,295,0.73,298,1.981,343,2.308,347,4.123,719,3.415,740,4.426,771,2.671,905,2.308,1087,5.262,1230,2.308,1231,2.488,1232,3.752,1236,5.27,1240,2.73,1250,5.518,1251,5.518,1252,5.518,1259,2.73,1260,4.67,1261,5.621,1262,4.67,1263,4.67,1264,3.097,1265,7.328,1266,3.097,1267,4.67,1268,3.097,1269,7.06,1270,3.097,1271,3.097,1272,4.67,1273,3.097,1274,4.67,1275,3.097,1276,4.67,1277,4.956,1278,2.488,1279,3.097,1280,2.308,1281,3.097,1282,6.259,1283,5.621,1284,4.67,1285,2.488,1286,6.259,1287,6.259,1288,3.097,1289,3.097,1290,3.097,1291,6.259,1292,3.097,1293,3.097,1294,3.097,1295,3.097,1296,3.097,1297,3.097,1298,3.097,1299,2.73,1300,3.097,1301,3.097,1302,2.488,1303,3.097,1304,4.67,1305,3.097,1306,3.097,1307,3.097,1308,3.097]],["title/entities/Order.html",[634,1.536,892,2.878]],["body/entities/Order.html",[3,0.073,4,0.065,5,0.065,12,0.261,23,0.775,26,0.01,27,1.123,28,0.703,29,1.244,39,3,40,2.443,49,1.22,50,3.634,51,0.168,63,0.073,64,0.078,109,0.005,110,0.005,117,1.373,121,1.987,127,2.097,196,2.014,205,2.217,288,0.966,292,2.115,307,3.398,477,2.828,528,2.175,634,1.816,688,1.798,719,3.091,801,1.798,803,4.012,805,4.611,807,2.828,812,1.867,885,2.335,888,5.049,890,5.011,892,3.401,897,3.118,906,3.601,908,4.543,950,2.636,958,3.634,1126,4.248,1127,4.248,1194,4.885,1280,2.636,1309,3.118,1310,6.079,1311,6.079,1312,4.885,1313,6.079,1314,6.079,1315,6.911,1316,4.885,1317,4.885,1318,3.537,1319,3.537,1320,3.537,1321,3.537,1322,3.537,1323,4.141,1324,3.537,1325,5.153,1326,3.537,1327,3.537,1328,3.537,1329,5.367,1330,3.537,1331,3.118,1332,5.153,1333,4.543,1334,3.537,1335,3.537,1336,4.885,1337,3.537,1338,3.537,1339,4.543,1340,4.543,1341,3.537,1342,3.537,1343,3.537,1344,3.537,1345,4.543]],["title/controllers/OrdersController.html",[122,1.578,1346,3.249]],["body/controllers/OrdersController.html",[3,0.139,4,0.123,5,0.123,26,0.009,51,0.169,55,0.768,63,0.139,64,0.15,109,0.008,110,0.008,122,2.44,124,2.44,331,3.699,1346,5.874,1347,5.942,1348,6.74,1349,6.74]],["title/modules/OrdersModule.html",[133,1.054,150,3.047]],["body/modules/OrdersModule.html",[3,0.119,4,0.106,5,0.106,26,0.009,51,0.212,55,0.663,63,0.119,64,0.129,109,0.007,110,0.007,124,2.61,133,1.894,135,2.289,136,2.356,137,2.502,138,2.502,139,2.356,140,3.373,141,2.502,150,5.998,160,3.103,161,2.105,162,2.356,164,2.666,174,2.956,175,1.71,892,3.837,1346,5.841,1350,5.125,1351,5.125,1352,5.998,1353,5.814,1354,5.814,1355,5.814,1356,5.814,1357,5.814]],["title/injectables/OrdersService.html",[53,0.385,1352,3.047]],["body/injectables/OrdersService.html",[3,0.139,4,0.124,5,0.124,26,0.009,51,0.17,53,0.699,55,0.773,63,0.139,64,0.15,109,0.008,110,0.008,255,1.721,1352,5.528,1358,5.98]],["title/classes/OtpSigninDto.html",[64,0.097,338,2.878]],["body/classes/OtpSigninDto.html",[3,0.119,4,0.106,5,0.106,9,1.434,12,0.428,23,0.532,26,0.009,28,0.479,51,0.181,63,0.119,64,0.16,109,0.007,110,0.007,117,1.921,127,1.439,161,2.61,261,2.105,267,3.537,269,2.163,336,5.373,338,4.759,345,4.124,347,4.349,368,5.038,388,2.852,528,2.348,532,3.957,635,3.805,741,4.062,745,5.038,1359,5.125,1360,5.814,1361,5.814,1362,5.814]],["title/injectables/OtpSigninProvider.html",[53,0.385,422,2.878]],["body/injectables/OtpSigninProvider.html",[3,0.093,4,0.083,5,0.083,10,3.371,11,3.538,12,0.335,13,1.283,14,1.766,16,1.347,18,1.347,23,0.562,25,1.347,26,0.01,27,1.134,28,0.506,29,0.974,35,1.602,37,0.948,51,0.196,53,0.543,55,0.518,63,0.093,64,0.101,67,1.347,73,2.388,86,1.854,105,2.396,107,0.903,109,0.006,110,0.006,118,2.082,119,1.896,121,1.27,255,1.152,273,1.682,282,1.558,295,1.448,298,1.6,338,5.142,347,3.414,355,2.846,389,3.648,395,4.935,397,4.577,421,4.674,422,4.054,432,3.648,452,1.737,506,2.846,516,2.597,720,2.597,886,3.384,1049,3.172,1083,4.054,1085,3.384,1087,3.384,1088,3.384,1141,4.407,1156,3.384,1363,6.136,1364,4.002,1365,6.142,1366,4.002,1367,5.593,1368,4.54,1369,6.142,1370,4.54,1371,5.593,1372,4.54,1373,4.002,1374,4.002,1375,4.002,1376,4.54,1377,3.648,1378,4.54,1379,4.54,1380,4.002,1381,4.54,1382,4.002,1383,4.002]],["title/interfaces/Paginated.html",[111,3.047,977,2.494]],["body/interfaces/Paginated.html",[3,0.111,4,0.099,5,0.099,9,1.076,12,0.399,26,0.009,28,0.706,49,1.209,63,0.111,94,2.655,109,0.007,110,0.007,111,4.816,113,4.349,117,1.836,486,4.816,528,2.6,597,5.951,781,6.166,782,3.782,977,4.338,987,4.349,1070,6.094,1384,4.771,1385,7.432,1386,7.039,1387,5.538,1388,6.892,1389,6.892,1390,4.771,1391,4.771,1392,4.771,1393,4.771,1394,4.771,1395,4.771,1396,4.771,1397,4.771]],["title/modules/PaginationModule.html",[133,1.054,1398,2.878]],["body/modules/PaginationModule.html",[3,0.123,4,0.109,5,0.109,26,0.009,51,0.184,55,0.681,63,0.123,64,0.133,109,0.008,110,0.008,133,1.917,135,2.354,136,2.423,137,2.573,138,2.573,139,2.423,140,3.415,141,3.415,160,3.157,161,2.164,162,2.423,970,5.67,1398,5.778,1399,5.27,1400,5.27,1401,5.27,1402,5.978,1403,5.978]],["title/injectables/PaginationProvider.html",[53,0.385,970,2.733]],["body/injectables/PaginationProvider.html",[3,0.074,4,0.066,5,0.066,9,0.719,12,0.267,13,1.094,14,1.562,16,0.793,18,1.48,23,0.479,25,1.35,26,0.01,27,0.967,28,0.507,29,0.831,33,1.296,37,1.094,38,2.254,45,3.791,51,0.188,52,2.874,53,0.463,55,0.412,58,2.695,63,0.074,64,0.08,66,1.671,67,0.793,73,2.706,79,1.012,86,1.395,94,1.774,107,0.719,109,0.007,110,0.005,182,2.527,255,0.917,273,1.488,276,3.105,288,0.987,295,0.853,452,2.356,486,3.659,495,1.658,609,3.282,696,4.034,720,2.995,781,4.302,968,3.903,970,3.282,977,2.995,986,3.903,987,5.423,1021,5.423,1022,2.695,1029,3.282,1044,3.188,1070,2.906,1072,2.906,1110,4.034,1112,2.527,1385,5.427,1386,3.188,1390,3.188,1391,5.427,1392,3.188,1393,5.949,1394,3.188,1395,3.188,1396,3.188,1397,3.188,1404,3.188,1405,7.467,1406,3.616,1407,3.616,1408,3.616,1409,3.616,1410,5.236,1411,3.616,1412,3.616,1413,3.616,1414,3.616,1415,3.616,1416,3.616,1417,4.616,1418,5.236,1419,7.887,1420,6.749,1421,5.236,1422,3.616,1423,3.616,1424,3.616,1425,3.616,1426,5.236,1427,3.616,1428,3.616,1429,3.616,1430,3.616,1431,3.616,1432,3.616,1433,3.616,1434,3.616,1435,3.616,1436,5.236,1437,3.616,1438,3.616,1439,3.616,1440,3.616,1441,3.616]],["title/classes/PaginationQueryDto.html",[64,0.097,1110,2.606]],["body/classes/PaginationQueryDto.html",[3,0.111,4,0.099,5,0.099,9,1.071,12,0.397,23,0.628,26,0.01,28,0.566,29,1.264,51,0.135,63,0.111,64,0.152,109,0.007,110,0.007,117,1.83,127,1.701,261,1.949,269,2.004,394,5.12,477,3.771,528,2.821,609,4.306,628,4.107,635,3.626,682,4.206,696,4.107,963,5.434,986,5.12,989,5.753,1110,4.107,1111,4.994,1417,6.056,1442,4.747,1443,5.384,1444,7.97,1445,5.384,1446,5.384,1447,6.87]],["title/classes/PatchProductDto.html",[64,0.097,1448,2.878]],["body/classes/PatchProductDto.html",[3,0.083,4,0.074,5,0.074,12,0.298,23,0.78,26,0.009,27,1.208,28,0.703,29,1.388,49,1.304,51,0.142,63,0.083,64,0.126,109,0.006,110,0.006,117,1.509,121,1.831,127,2.112,196,1.218,261,1.462,268,4.006,269,1.502,283,3.102,528,1.844,532,3.109,555,5.258,556,4.319,557,4.319,558,4.319,559,5.258,560,5.258,561,3.912,562,5.258,563,3.453,579,3.958,582,1.545,584,2.821,682,4.536,1093,3.009,1098,6.23,1107,3.559,1133,4.319,1134,2.821,1448,3.739,1449,7.578,1450,4.037,1451,4.037,1452,4.037,1453,4.037,1454,4.037,1455,4.037,1456,4.037,1457,4.037,1458,4.037,1459,4.037,1460,4.037,1461,4.037,1462,4.037]],["title/classes/PatchProductVariantDto.html",[64,0.097,1133,2.878]],["body/classes/PatchProductVariantDto.html",[3,0.114,4,0.102,5,0.102,12,0.41,23,0.642,26,0.009,28,0.578,29,1.28,49,1.029,51,0.193,63,0.114,64,0.156,109,0.007,110,0.007,117,1.87,121,2.151,127,1.738,196,2.433,261,2.016,268,3.327,269,2.072,480,4.15,495,2.553,581,5.37,582,2.941,584,3.891,672,4.475,682,4.056,1098,4.15,1114,4.399,1133,4.632,1134,5.37,1463,6.176,1464,6.176,1465,5.569,1466,5.64,1467,5.569,1468,5.569,1469,4.475,1470,7.018]],["title/classes/PatchUserDto.html",[64,0.097,1471,3.047]],["body/classes/PatchUserDto.html",[3,0.092,4,0.082,5,0.082,12,0.331,23,0.762,26,0.009,28,0.686,29,1.408,49,1.289,51,0.174,63,0.092,64,0.135,109,0.006,110,0.006,117,1.624,127,2.062,261,1.626,268,3.949,269,1.672,480,3.348,495,2.06,527,4.569,528,1.985,532,3.346,682,4.457,750,2.965,752,3.139,755,3.96,769,3.348,1114,3.822,1302,5.562,1463,3.609,1469,3.609,1471,4.261,1472,7.445,1473,6.097,1474,6.102,1475,6.102,1476,6.922,1477,6.102,1478,6.102,1479,6.102,1480,8.188,1481,4.492,1482,4.492,1483,4.492,1484,4.492,1485,4.492,1486,4.492,1487,4.492,1488,4.492]],["title/entities/Payment.html",[634,1.536,1157,2.494]],["body/entities/Payment.html",[3,0.082,4,0.073,5,0.073,9,0.789,12,0.293,23,0.762,26,0.01,27,1.197,28,0.694,29,0.888,39,2.694,40,2.653,49,1.222,50,3.876,51,0.163,63,0.082,64,0.088,109,0.006,110,0.006,117,1.491,121,2.077,127,2.062,197,2.095,288,1.084,307,3.228,393,4.279,452,2.481,477,3.072,528,1.822,563,3.421,574,3.864,582,1.519,585,2.488,634,2.481,801,2.018,803,4.279,805,4.345,807,3.072,812,2.095,885,2.62,888,3.694,906,3.911,958,3.876,1157,4.028,1159,5.533,1183,2.958,1193,5.715,1217,5.21,1219,3.499,1220,5.715,1312,5.21,1316,5.21,1317,4.497,1323,4.497,1329,5.658,1331,3.499,1333,4.934,1336,5.21,1339,4.934,1340,4.934,1345,4.934,1489,3.499,1490,4.934,1491,4.171,1492,4.934,1493,4.497,1494,3.969,1495,3.969,1496,3.969,1497,3.969,1498,3.969,1499,3.969,1500,3.969,1501,3.969,1502,3.969,1503,3.969,1504,5.597,1505,3.969,1506,3.969,1507,2.773,1508,3.969]],["title/controllers/PaymentController.html",[122,1.578,1509,3.249]],["body/controllers/PaymentController.html",[3,0.139,4,0.123,5,0.123,26,0.009,51,0.169,55,0.768,63,0.139,64,0.15,109,0.008,110,0.008,122,2.44,124,2.44,331,3.699,1157,3.856,1509,5.874,1510,5.942,1511,6.74]],["title/modules/PaymentModule.html",[133,1.054,151,3.047]],["body/modules/PaymentModule.html",[3,0.13,4,0.116,5,0.116,26,0.009,51,0.212,55,0.722,63,0.13,64,0.141,109,0.008,110,0.008,124,2.751,133,1.836,135,2.495,151,5.31,164,2.905,174,3.221,175,1.864,1157,3.625,1509,6.066,1512,6.336,1513,6.336,1514,6.336,1515,6.336]],["title/controllers/PaystackController.html",[122,1.578,1516,3.249]],["body/controllers/PaystackController.html",[3,0.092,4,0.082,5,0.082,12,0.33,13,1.27,14,1.752,16,0.981,18,0.981,23,0.556,25,1.333,26,0.01,27,1.123,28,0.501,29,0.965,35,1.784,37,1.27,48,3.334,49,1.013,51,0.212,55,0.51,63,0.092,64,0.099,67,0.981,104,5.958,107,1.209,109,0.006,110,0.006,112,3.636,114,2.559,119,1.867,122,1.619,124,1.619,127,1.505,273,1.669,282,1.535,291,2.559,295,1.055,298,1.576,331,2.455,332,2.274,369,4.254,370,3.125,371,2.952,373,2.952,379,2.674,381,3.091,405,4.248,406,3.594,469,2.952,759,2.455,838,2.674,839,2.952,840,3.334,916,4.248,917,3.125,918,3.594,924,3.594,1123,5.011,1148,5.55,1151,3.594,1152,3.594,1157,2.559,1516,4.531,1517,3.943,1518,6.907,1519,6.089,1520,4.473,1521,6.228,1522,4.473,1523,4.473,1524,3.943,1525,6.08,1526,4.473,1527,4.473,1528,4.559,1529,3.943,1530,4.473,1531,4.473,1532,4.473,1533,4.473,1534,4.473]],["title/modules/PaystackModule.html",[133,1.054,152,3.047]],["body/modules/PaystackModule.html",[3,0.1,4,0.089,5,0.089,26,0.01,51,0.218,55,0.554,56,2.386,63,0.1,64,0.108,109,0.007,110,0.007,124,2.328,133,1.741,135,1.915,136,1.971,137,2.093,138,2.093,139,1.971,140,3.101,141,2.093,152,6.258,154,5.134,155,5.134,159,5.134,160,2.768,161,1.761,162,1.971,164,2.949,166,3.908,197,2.567,198,3.908,428,4.288,582,1.861,1135,5.406,1153,3.908,1154,3.908,1516,5.37,1528,5.406,1529,4.288,1535,4.288,1536,4.288,1537,4.864,1538,5.406,1539,4.864,1540,4.864,1541,4.864,1542,5.669,1543,4.288,1544,4.864,1545,4.864]],["title/injectables/PaystackService.html",[53,0.385,1528,2.878]],["body/injectables/PaystackService.html",[3,0.094,4,0.084,5,0.084,12,0.338,13,1.292,14,2.044,16,1.357,18,1.357,23,0.64,25,1.535,26,0.01,27,1.292,28,0.577,29,1.11,35,1.8,37,1.292,49,1.026,51,0.196,53,0.547,55,0.523,63,0.094,64,0.102,67,1.357,86,1.648,104,5.582,107,1.23,109,0.006,110,0.006,112,3.674,114,2.625,255,1.164,273,1.947,282,2.123,291,2.625,295,1.459,369,3.395,452,2.367,1123,5.161,1135,5.317,1151,3.688,1152,3.688,1157,3.539,1519,6.169,1521,6.018,1524,4.046,1528,4.083,1538,5.434,1542,5.454,1546,4.046,1547,5.454,1548,4.589,1549,4.589,1550,4.589,1551,6.187,1552,4.589,1553,6.187,1554,4.971,1555,4.589,1556,4.589]],["title/entities/Product.html",[196,1.315,634,1.536]],["body/entities/Product.html",[3,0.07,4,0.062,5,0.062,12,0.25,23,0.775,26,0.01,27,1.096,28,0.698,29,1.039,39,2.966,49,1.265,51,0.149,63,0.07,64,0.075,109,0.005,110,0.005,117,1.332,121,1.661,127,2.098,196,1.508,197,1.792,283,2.814,288,0.927,307,3.003,477,2.745,528,2.133,555,4.771,556,3.919,557,3.919,558,3.919,559,4.771,560,4.771,561,3.549,562,4.771,563,3.133,574,3.595,582,1.299,585,2.128,628,2.99,632,3.135,634,1.762,689,4.178,699,3.727,717,4.425,801,1.726,803,3.919,805,4.71,807,2.745,810,4.409,811,4.409,812,1.792,813,2.993,1312,4.771,1316,4.771,1323,5.263,1336,4.771,1490,5.774,1491,3.727,1492,5.774,1493,5.263,1557,2.993,1558,3.395,1559,3.395,1560,3.395,1561,3.395,1562,3.395,1563,3.395,1564,3.395,1565,3.395,1566,3.395,1567,3.395,1568,3.395,1569,4.409,1570,5.001,1571,5.263,1572,5.774,1573,3.395,1574,3.395,1575,3.395,1576,5.001,1577,3.395,1578,3.395,1579,5.234,1580,5.001,1581,3.395,1582,5.001,1583,3.395,1584,5.001,1585,3.395,1586,5.001,1587,3.395]],["title/entities/ProductImage.html",[603,2.878,634,1.536]],["body/entities/ProductImage.html",[3,0.106,4,0.094,5,0.094,12,0.38,23,0.717,26,0.009,28,0.646,49,1.15,51,0.168,63,0.106,64,0.114,109,0.007,110,0.007,117,1.781,121,2.075,127,1.942,197,2.724,199,5.363,288,1.409,477,3.669,528,2.177,574,4.651,582,3.186,585,3.235,603,4.413,628,3.997,632,4.191,634,2.356,647,6.537,649,6.537,801,2.624,805,4.07,807,3.669,812,2.724,894,3.846,906,4.671,907,4.983,1571,4.147,1588,4.55,1589,5.894,1590,5.161,1591,5.161,1592,5.161,1593,6.685,1594,5.894,1595,4.55,1596,5.161]],["title/modules/ProductImagesModule.html",[133,1.054,153,3.047]],["body/modules/ProductImagesModule.html",[3,0.121,4,0.108,5,0.108,26,0.009,51,0.207,55,0.672,63,0.121,64,0.131,109,0.008,110,0.008,133,1.906,135,2.321,136,2.389,137,2.537,138,2.537,139,2.389,140,3.394,141,2.537,153,6.019,160,3.13,161,2.134,162,2.389,164,2.703,174,2.997,175,1.734,196,1.778,199,3.891,582,2.256,603,3.891,604,4.737,1597,5.197,1598,5.197,1599,6.019,1600,5.895,1601,5.197,1602,5.895,1603,5.895]],["title/injectables/ProductImagesService.html",[53,0.385,1599,3.047]],["body/injectables/ProductImagesService.html",[3,0.139,4,0.123,5,0.123,26,0.009,51,0.169,53,0.697,55,0.768,63,0.139,64,0.15,109,0.008,110,0.008,255,1.71,582,2.579,1599,5.507,1604,5.942,1605,5.942]],["title/entities/ProductVariant.html",[574,2.393,634,1.536]],["body/entities/ProductVariant.html",[3,0.091,4,0.081,5,0.081,12,0.326,23,0.745,26,0.01,28,0.672,29,0.956,39,2.821,40,2.857,49,1.168,51,0.172,63,0.091,64,0.098,109,0.006,110,0.006,117,1.606,121,1.92,127,2.018,196,2.538,197,4.379,199,2.915,288,1.206,477,2.424,528,1.963,574,3.308,582,3.22,596,5.514,603,4.866,604,3.549,634,2.124,641,4.492,673,5.114,674,4.795,675,5.114,801,2.246,805,4.371,807,3.308,812,2.331,883,3.894,894,3.292,906,4.212,907,4.492,1280,3.292,1464,5.514,1466,4.844,1569,3.894,1571,5.514,1572,5.314,1579,5.314,1589,5.314,1594,5.314,1595,3.894,1606,3.894,1607,4.417,1608,4.417,1609,6.028,1610,4.417,1611,6.028,1612,4.417,1613,4.417,1614,4.417,1615,4.417]],["title/modules/ProductVariantsModule.html",[133,1.054,154,2.733]],["body/modules/ProductVariantsModule.html",[3,0.118,4,0.105,5,0.105,26,0.009,51,0.205,55,0.652,63,0.118,64,0.127,109,0.007,110,0.007,133,1.88,135,2.252,136,2.318,137,2.462,138,2.462,139,2.318,140,3.348,141,3.348,154,5.436,160,3.072,161,2.071,162,2.318,164,2.622,174,2.908,175,1.682,196,1.725,197,3.018,574,3.139,582,2.189,585,3.585,1142,5.377,1162,4.262,1601,5.042,1616,5.042,1617,5.042,1618,5.042,1619,5.719,1620,5.719]],["title/injectables/ProductVariantsService.html",[53,0.385,1142,2.606]],["body/injectables/ProductVariantsService.html",[3,0.057,4,0.051,5,0.051,10,1.525,12,0.205,13,0.898,14,1.974,16,0.609,18,0.943,23,0.585,25,1.403,26,0.01,27,1.182,28,0.527,29,1.073,33,1.302,37,1.413,38,2.754,40,1.317,49,1.209,51,0.149,53,0.38,55,0.317,63,0.057,64,0.062,66,1.747,67,0.609,73,1.804,78,1.878,79,1.656,86,1.705,107,0.855,109,0.004,110,0.004,121,2.094,161,1.006,162,1.743,175,0.817,196,2.347,238,1.363,255,0.705,273,1.808,276,2.519,284,3.538,288,0.759,290,1.16,295,0.655,299,2.233,321,3.296,328,1.942,528,2.084,574,3.248,582,2.589,585,1.742,632,5.491,673,2.071,674,5.711,675,2.071,688,4.254,845,1.834,979,3.455,1045,3.919,1072,2.233,1142,2.57,1161,4.728,1183,6.091,1184,2.233,1464,2.233,1621,2.45,1622,5.258,1623,5.258,1624,4.299,1625,5.258,1626,2.779,1627,2.779,1628,4.299,1629,2.779,1630,6.766,1631,2.779,1632,7.055,1633,2.779,1634,2.779,1635,2.779,1636,2.779,1637,2.779,1638,2.779,1639,2.779,1640,2.779,1641,3.204,1642,2.779,1643,2.779,1644,2.779,1645,2.779,1646,2.45,1647,2.779,1648,5.258,1649,2.779,1650,2.779,1651,4.299,1652,4.299,1653,2.779,1654,4.299,1655,4.299,1656,4.299,1657,2.779,1658,4.299,1659,3.79,1660,2.45,1661,2.45,1662,4.299,1663,4.299,1664,3.79,1665,5.258,1666,5.641,1667,2.779,1668,2.779,1669,2.779,1670,2.779,1671,2.779,1672,2.779]],["title/classes/ProductWithVariantDto.html",[64,0.097,1131,3.249]],["body/classes/ProductWithVariantDto.html",[3,0.105,4,0.093,5,0.093,12,0.375,23,0.673,26,0.009,28,0.683,39,2.534,49,1.186,51,0.185,63,0.105,64,0.173,109,0.007,110,0.007,117,1.764,127,1.823,196,1.534,261,1.841,265,3.188,267,3.968,268,3.834,269,1.893,528,2.156,529,3.791,532,3.635,561,4.402,563,3.886,575,4.087,576,3.791,578,3.554,579,5.146,580,5.488,582,1.946,584,3.554,586,4.371,682,4.117,688,3.744,719,2.586,960,4.087,1123,3.188,1124,6.268,1125,4.087,1126,3.554,1127,3.554,1131,5.814,1133,5.149,1134,3.554,1673,5.086,1674,5.086,1675,5.086]],["title/controllers/ProductsController.html",[122,1.578,1676,3.249]],["body/controllers/ProductsController.html",[3,0.051,4,0.045,5,0.045,9,1.526,11,1.256,12,0.182,13,0.819,16,0.542,18,0.542,23,0.553,25,1.327,26,0.01,27,1.393,28,0.642,29,1.022,33,1.207,35,0.569,37,1.506,38,1.687,39,1.865,40,2.868,49,1.125,51,0.189,55,0.282,58,1.841,63,0.051,64,0.055,66,1.786,67,0.542,76,2.74,101,2.178,105,2.928,107,1.342,109,0.004,110,0.004,119,1.032,121,1.553,122,0.894,124,0.894,127,1.498,196,2.379,273,1.928,295,0.583,298,0.871,331,1.356,332,1.256,333,4.459,339,3.15,342,4.459,344,3.174,345,3.684,348,5.627,369,2.675,370,1.726,371,1.631,372,1.841,373,2.588,379,1.477,381,1.993,385,3.916,386,3.916,388,1.212,392,3.15,393,2.588,405,2.74,409,2.152,469,1.631,528,2.28,553,4.455,590,4.459,595,1.985,597,2.922,601,1.985,606,1.726,607,1.726,609,3.055,627,4.862,688,3.56,696,1.477,709,2.914,719,3.757,759,1.356,781,1.726,783,2.178,833,2.588,838,1.477,839,1.631,840,1.841,843,3.632,845,3.662,849,1.726,963,2.588,974,3.478,976,3.916,977,1.413,980,1.726,981,2.922,989,3.877,1083,1.631,1146,3.478,1147,2.922,1164,1.726,1171,1.985,1387,3.15,1448,4.76,1491,2.922,1507,2.74,1676,2.922,1677,2.178,1678,3.916,1679,3.921,1680,3.456,1681,4.874,1682,3.921,1683,2.471,1684,2.471,1685,2.178,1686,2.471,1687,2.471,1688,3.15,1689,2.588,1690,2.471,1691,2.178,1692,4.891,1693,2.178,1694,3.456,1695,3.456,1696,2.178,1697,3.456,1698,3.456,1699,3.456,1700,2.471,1701,2.471,1702,2.178,1703,2.178,1704,2.178,1705,4.874,1706,3.15,1707,2.178,1708,2.471,1709,2.471,1710,3.921,1711,3.456,1712,2.471,1713,2.471,1714,2.471,1715,1.985,1716,3.921,1717,3.921,1718,2.471,1719,3.456,1720,3.456,1721,4.297,1722,3.921,1723,2.178,1724,2.178,1725,1.726,1726,2.471,1727,2.471,1728,2.178,1729,2.471,1730,1.985,1731,2.471,1732,2.471,1733,2.471,1734,2.471,1735,2.178,1736,1.985,1737,3.15,1738,2.471,1739,2.471,1740,2.471,1741,2.471,1742,2.471,1743,2.471,1744,3.921,1745,2.471,1746,1.726,1747,2.471,1748,2.178,1749,2.471]],["title/modules/ProductsModule.html",[133,1.054,155,2.733]],["body/modules/ProductsModule.html",[3,0.094,4,0.083,5,0.083,26,0.01,51,0.217,55,0.52,63,0.094,64,0.101,109,0.006,110,0.006,124,2.23,133,1.685,135,1.795,136,1.848,137,1.962,138,1.962,139,1.848,140,3.002,141,3.002,154,5.04,155,5.628,158,5.307,160,2.651,161,1.651,162,1.848,164,2.824,174,2.318,175,1.341,196,1.375,197,2.406,198,3.664,582,1.745,587,5.307,600,3.186,709,5.204,934,3.398,965,5.307,1398,5.307,1676,5.199,1724,4.02,1750,4.02,1751,4.02,1752,4.02,1753,4.56,1754,5.307,1755,4.56,1756,4.56,1757,5.43,1758,4.56,1759,4.02,1760,4.02,1761,4.02,1762,4.56,1763,4.56]],["title/injectables/ProductsService.html",[53,0.385,709,2.606]],["body/injectables/ProductsService.html",[3,0.058,4,0.052,5,0.052,12,0.21,13,0.914,14,2.083,16,1.313,18,0.959,23,0.624,25,1.497,26,0.01,27,1.261,28,0.605,29,1.083,33,1.601,37,1.606,38,3.31,49,1.128,51,0.197,53,0.387,55,0.324,63,0.058,64,0.063,66,1.761,67,1.313,73,0.975,78,1.692,79,1.492,81,1.462,86,1.595,100,1.462,107,1.286,109,0.005,110,0.005,121,1.991,175,0.836,196,2.533,255,0.721,273,1.984,276,2.546,285,1.088,288,0.776,290,1.187,295,1.412,310,1.501,344,3.051,354,1.56,358,3.261,409,2.927,452,2.041,495,2.006,521,2.401,553,4.695,587,4.507,590,4.285,595,2.284,597,3.261,600,1.986,601,2.284,606,1.986,607,1.986,627,5.195,688,3.616,709,2.615,719,3.045,720,2.503,833,2.888,849,1.986,877,3.057,965,4.695,968,3.975,972,4.285,973,2.506,974,3.754,976,4.285,977,1.626,979,2.284,980,1.986,981,3.261,982,2.284,985,2.284,1146,1.782,1448,4.971,1641,2.119,1678,3.515,1680,3.857,1685,3.857,1688,3.515,1689,3.52,1702,3.857,1725,1.986,1746,1.986,1754,4.695,1757,3.857,1761,2.506,1764,2.506,1765,4.701,1766,2.843,1767,2.843,1768,2.843,1769,2.843,1770,2.843,1771,2.843,1772,2.506,1773,2.843,1774,2.843,1775,2.843,1776,2.843,1777,2.843,1778,2.843,1779,2.843]],["title/classes/RefreshTokenDto.html",[64,0.097,353,2.878]],["body/classes/RefreshTokenDto.html",[3,0.119,4,0.106,5,0.106,9,1.429,11,4.358,12,0.426,23,0.529,26,0.009,28,0.476,49,1.054,51,0.18,63,0.119,64,0.159,109,0.007,110,0.007,117,1.914,127,1.431,261,2.093,267,3.525,268,3.406,269,2.152,345,4.11,353,4.742,355,5.374,388,2.836,397,5.827,449,5.774,635,3.792,741,4.04,745,5.021,1780,5.097,1781,5.782,1782,5.782,1783,5.782]],["title/injectables/RefreshTokenProvider.html",[53,0.385,423,2.878]],["body/injectables/RefreshTokenProvider.html",[3,0.077,4,0.069,5,0.069,9,0.745,10,3.764,11,4.048,12,0.276,13,1.121,14,1.593,16,1.504,18,1.504,19,3.009,20,6.398,21,5.511,22,4.792,23,0.491,25,1.177,26,0.01,27,0.992,28,0.442,29,0.852,33,1.329,35,1.445,37,1.121,51,0.2,52,2.055,53,0.475,54,2.616,55,0.427,56,1.837,57,2.471,59,2.616,63,0.077,64,0.083,66,1.798,67,1.504,68,3.752,69,1.976,70,3.009,73,1.842,78,1.188,79,1.757,81,1.251,86,1.672,100,1.251,105,1.976,107,0.745,109,0.006,110,0.006,112,1.837,120,3.009,121,1.048,255,0.95,273,1.517,282,1.285,291,2.142,295,1.617,298,1.319,310,1.285,335,4.315,352,4.315,353,4.987,355,4.879,357,2.616,382,3.301,383,3.009,421,4.299,423,3.544,426,2.616,432,3.009,433,3.009,452,2.402,471,4.144,551,2.347,1045,2.79,1074,3.301,1076,3.301,1077,3.301,1078,3.301,1079,3.301,1080,3.301,1081,3.301,1083,4.792,1141,4.515,1156,2.79,1367,5.511,1383,3.301,1554,3.009,1784,5.534,1785,3.301,1786,5.369,1787,3.744,1788,3.744,1789,5.369,1790,3.301,1791,3.744,1792,3.744,1793,3.744,1794,3.744,1795,3.744]],["title/entities/Review.html",[634,1.536,689,2.494]],["body/entities/Review.html",[3,0.102,4,0.091,5,0.091,12,0.367,23,0.754,26,0.009,28,0.692,49,1.209,51,0.164,63,0.102,64,0.11,109,0.007,110,0.007,117,1.74,121,2.039,127,2.041,196,2.6,288,1.359,307,2.994,321,3.121,528,2.126,634,2.301,689,4.595,690,5.856,691,5.856,696,3.904,699,4.867,733,5.856,801,2.531,803,4.81,805,4.246,807,3.584,812,2.627,885,3.286,894,3.71,907,4.867,983,5.757,1280,3.71,1796,4.389,1797,4.978,1798,4.978,1799,6.531,1800,4.978,1801,6.531,1802,4.978,1803,4.978,1804,4.978,1805,4.978,1806,4.978,1807,4.978,1808,4.978]],["title/controllers/ReviewsController.html",[122,1.578,1809,3.249]],["body/controllers/ReviewsController.html",[3,0.092,4,0.082,5,0.082,12,0.331,13,1.273,16,0.985,18,0.985,23,0.558,25,1.337,26,0.01,27,1.126,28,0.502,29,0.967,33,1.51,37,1.551,38,3.195,49,1.015,51,0.206,55,0.512,63,0.092,64,0.1,66,1.714,67,0.985,107,1.213,109,0.006,110,0.006,119,1.875,122,1.626,124,1.626,127,1.51,196,1.355,273,1.934,295,1.059,298,1.583,331,2.465,332,2.284,344,3.488,354,2.465,369,2.465,370,3.139,371,2.965,373,4.024,379,2.685,381,3.1,405,3.139,409,3.346,469,2.965,547,2.371,685,5.404,688,2.284,689,3.96,707,4.899,712,3.609,714,3.609,717,4.544,759,2.465,838,2.685,839,2.965,840,3.348,843,3.348,1171,3.609,1678,5.562,1688,4.899,1689,4.024,1715,3.609,1746,3.139,1748,3.96,1809,4.544,1810,3.96,1811,4.492,1812,4.492,1813,4.492,1814,4.492,1815,4.492,1816,5.375,1817,4.569,1818,3.96,1819,4.492,1820,4.492,1821,4.492,1822,4.492,1823,4.492,1824,4.492]],["title/modules/ReviewsModule.html",[133,1.054,156,3.047]],["body/modules/ReviewsModule.html",[3,0.111,4,0.099,5,0.099,26,0.009,51,0.215,55,0.614,63,0.111,64,0.119,109,0.007,110,0.007,124,2.487,133,1.828,135,2.12,136,2.182,137,2.317,138,2.317,139,2.182,140,3.256,141,2.317,155,5.277,156,6.161,160,2.957,161,1.949,162,2.182,164,3.15,174,2.737,175,1.584,689,3.08,704,5.557,715,4.326,934,4.013,1543,4.747,1809,5.639,1817,5.557,1818,4.747,1825,4.747,1826,5.384,1827,4.747,1828,5.384,1829,5.384,1830,4.747,1831,5.384]],["title/injectables/ReviewsService.html",[53,0.385,1817,2.878]],["body/injectables/ReviewsService.html",[3,0.088,4,0.078,5,0.078,12,0.314,13,1.229,14,1.999,16,1.29,18,1.29,23,0.616,25,1.477,26,0.01,27,1.244,28,0.555,29,1.069,33,1.457,37,1.517,38,3.127,49,0.988,51,0.198,53,0.52,55,0.486,63,0.088,64,0.095,66,1.668,67,1.29,78,1.353,79,1.194,81,1.425,86,1.136,100,1.425,107,1.17,109,0.006,110,0.006,175,1.254,196,1.286,255,1.082,273,1.904,276,3.001,285,1.632,288,1.165,290,1.781,295,1.388,310,1.463,344,3.854,354,2.341,409,3.698,452,1.632,495,2.699,521,2.341,547,2.251,685,5.201,688,2.168,689,4.707,704,5.201,707,4.729,711,5.94,712,4.729,714,3.427,715,3.427,717,3.179,718,3.76,1689,4.447,1746,2.98,1816,5.94,1817,3.884,1830,3.76,1832,3.76,1833,5.885,1834,4.265,1835,4.265,1836,4.265,1837,5.885,1838,4.265,1839,4.265,1840,4.265]],["title/guards/RolesGuard.html",[0,2.733,189,3.249]],["body/guards/RolesGuard.html",[0,3.694,2,3.185,3,0.088,4,0.078,5,0.078,9,0.85,10,3.234,12,0.315,13,1.231,15,5.842,16,0.937,18,1.479,23,0.539,25,1.292,26,0.01,27,1.246,28,0.486,29,0.935,30,4.736,31,5.081,33,1.459,35,1.674,36,4.118,37,1.231,39,2.782,40,2.793,41,5.195,42,3.89,51,0.183,53,0.521,55,0.487,63,0.088,64,0.131,65,3.185,66,1.459,67,0.937,73,2.314,74,3.768,78,1.87,79,1.649,107,1.172,109,0.006,110,0.006,119,3.622,131,3.768,182,2.986,189,4.392,381,2.173,460,5.195,462,3.768,463,7.123,471,2.821,472,3.768,473,3.185,474,3.768,475,3.768,476,3.768,492,3.768,493,3.768,516,3.371,759,2.346,870,3.768,1088,3.185,1466,4.736,1641,3.185,1841,3.768,1842,4.274,1843,4.274,1844,5.893,1845,5.893,1846,5.893,1847,5.195,1848,5.893,1849,3.434,1850,4.274,1851,4.274,1852,3.768,1853,5.893,1854,4.274,1855,4.274,1856,4.274,1857,5.893,1858,4.274,1859,4.274]],["title/classes/SignInDto.html",[64,0.097,363,2.878]],["body/classes/SignInDto.html",[3,0.107,4,0.095,5,0.095,9,1.478,12,0.382,23,0.613,26,0.01,28,0.553,35,1.979,49,0.984,51,0.187,63,0.107,64,0.149,109,0.007,110,0.007,117,1.787,118,3.89,119,3.658,127,1.66,261,1.878,267,3.646,269,1.93,345,4.495,363,4.427,368,4.686,381,2.637,388,2.544,448,5.973,635,3.539,741,4.686,742,4.167,744,4.998,745,5.194,746,5.389,747,4.167,748,4.167,749,4.167,754,4.572,756,4.572,760,4.167,761,4.572,1860,4.572,1861,5.186,1862,5.186,1863,5.186]],["title/injectables/SignInProvider.html",[53,0.385,424,2.878]],["body/injectables/SignInProvider.html",[3,0.08,4,0.072,5,0.072,9,0.778,10,3.04,12,0.288,13,1.157,14,1.631,16,1.214,18,1.534,23,0.506,25,1.214,26,0.01,27,1.023,28,0.456,29,0.879,33,1.371,35,1.911,37,1.157,51,0.193,52,2.146,53,0.489,55,0.446,63,0.08,64,0.087,66,1.732,67,1.214,73,1.9,78,1.757,79,1.094,81,1.307,86,1.863,100,1.307,107,0.778,109,0.006,110,0.006,118,2.949,119,2.312,121,1.55,255,0.992,273,1.554,282,1.342,285,1.496,295,1.306,298,1.952,310,1.342,311,2.914,319,3.472,336,4.128,347,3.155,355,3.472,357,3.87,362,4.45,363,5.06,374,3.447,375,3.142,424,3.655,426,2.732,447,4.882,452,2.119,471,2.581,495,1.793,516,4.001,521,2.146,551,2.451,720,2.237,770,3.447,771,4.509,1083,2.581,1085,2.914,1087,2.914,1088,2.914,1141,4.42,1156,2.914,1236,2.732,1366,3.447,1367,3.142,1371,5.62,1374,4.882,1375,3.447,1377,3.142,1790,3.447,1864,5.669,1865,3.447,1866,5.538,1867,3.91,1868,3.91,1869,3.91,1870,3.142,1871,3.91,1872,3.91,1873,3.91,1874,3.91,1875,3.91,1876,3.91,1877,3.91,1878,3.91,1879,3.91,1880,3.447,1881,3.91,1882,3.91,1883,3.91]],["title/injectables/StoreOtpAndExpireProvider.html",[53,0.385,1884,2.878]],["body/injectables/StoreOtpAndExpireProvider.html",[3,0.091,4,0.081,5,0.081,9,0.882,12,0.327,13,1.263,14,1.745,16,0.973,18,1.619,23,0.553,25,1.326,26,0.01,27,1.116,28,0.498,29,0.959,33,1.497,35,1.939,37,1.263,49,1.009,51,0.186,53,0.534,55,0.506,63,0.091,64,0.153,66,1.703,67,0.973,73,2.074,78,1.407,79,1.692,81,1.482,86,1.182,100,1.482,107,0.882,109,0.006,110,0.006,175,1.304,255,1.125,273,1.662,276,3.042,282,1.522,285,1.697,288,1.211,290,1.852,295,1.046,307,3.386,310,1.522,347,4.28,452,2.313,506,4.629,509,2.927,511,4.311,515,2.652,516,2.537,517,2.78,518,3.91,519,3.306,520,3.91,521,2.434,699,3.306,1884,3.99,1885,6.062,1886,3.91,1887,6.51,1888,6.045,1889,4.435,1890,6.045,1891,4.435,1892,6.045,1893,4.435,1894,3.91,1895,4.435]],["title/entities/Subscriber.html",[634,1.536,740,2.733]],["body/entities/Subscriber.html",[3,0.117,4,0.104,5,0.104,9,1.131,12,0.419,23,0.65,26,0.009,28,0.639,39,2.722,40,3.371,49,1.043,51,0.143,63,0.117,64,0.126,109,0.007,110,0.007,117,1.895,118,3.558,121,2.172,127,1.761,238,3.489,288,1.553,528,2.316,634,2.865,740,5.097,801,2.892,805,3.904,812,4.096,885,3.755,888,4.695,1507,4.97,1730,5.715,1896,5.015,1897,5.715,1898,6.27,1899,6.27,1900,5.688,1901,5.688]],["title/controllers/SubscribersController.html",[122,1.578,1902,3.249]],["body/controllers/SubscribersController.html",[3,0.139,4,0.123,5,0.123,26,0.009,51,0.169,55,0.768,63,0.139,64,0.15,109,0.008,110,0.008,122,2.44,124,2.44,331,3.699,1902,5.874,1903,5.942,1904,6.74,1905,6.74]],["title/modules/SubscribersModule.html",[133,1.054,157,3.047]],["body/modules/SubscribersModule.html",[3,0.115,4,0.102,5,0.102,26,0.009,51,0.213,55,0.636,63,0.115,64,0.124,109,0.007,110,0.007,124,2.545,133,1.859,135,2.198,136,2.263,137,2.403,138,2.403,139,2.263,140,3.312,141,2.403,149,5.609,157,6.097,160,3.026,161,2.021,162,2.263,164,3.223,174,2.839,175,1.642,740,3.5,1902,5.735,1906,4.922,1907,4.922,1908,5.583,1909,5.938,1910,5.583,1911,5.583,1912,4.922,1913,5.583,1914,5.583,1915,5.583]],["title/injectables/SubscribersService.html",[53,0.385,1909,3.047]],["body/injectables/SubscribersService.html",[3,0.08,4,0.071,5,0.071,9,0.771,12,0.286,13,1.149,14,1.939,16,1.206,18,1.527,23,0.585,25,1.403,26,0.01,27,1.182,28,0.527,29,1.015,33,1.725,37,1.455,51,0.192,53,0.486,55,0.442,63,0.08,64,0.086,66,1.725,67,1.206,73,1.329,78,1.746,79,1.54,81,1.839,86,1.704,100,1.839,107,1.094,109,0.006,110,0.006,121,1.54,133,1.33,175,1.14,255,0.983,273,1.847,276,2.896,282,1.888,285,1.483,288,1.058,290,1.618,295,1.298,298,2.255,310,1.888,344,3.984,409,4.195,521,3.02,528,2.083,547,2.045,736,5.696,740,5.256,771,4.595,1236,2.707,1277,7.082,1870,3.113,1909,3.845,1912,3.416,1916,3.416,1917,5.502,1918,5.502,1919,3.874,1920,3.874,1921,6.398,1922,5.502,1923,3.874,1924,5.502,1925,6.398,1926,5.502,1927,3.874,1928,5.502,1929,6.398,1930,3.874,1931,3.874,1932,3.874,1933,3.874,1934,3.874,1935,3.874]],["title/classes/UpdateDeliveryStateDto.html",[64,0.097,829,3.047]],["body/classes/UpdateDeliveryStateDto.html",[3,0.132,4,0.117,5,0.117,26,0.009,51,0.192,63,0.132,64,0.142,109,0.008,110,0.008,207,4.378,261,2.322,480,4.78,495,2.941,522,5.4,523,4.02,525,5.153,829,5.348,837,5.153,1114,4.798,1463,6.574,1469,5.153,1936,5.654]],["title/injectables/UpdateProductProvider.html",[53,0.385,1754,2.878]],["body/injectables/UpdateProductProvider.html",[3,0.065,4,0.058,5,0.058,9,0.628,12,0.233,13,0.989,14,1.443,16,1.039,18,1.039,23,0.433,25,1.039,26,0.01,27,0.875,28,0.39,29,0.752,37,0.659,39,2.903,40,1.496,45,1.448,49,0.834,50,4.86,51,0.179,53,0.419,55,0.36,63,0.065,64,0.07,67,1.039,73,1.626,78,1.805,79,1.591,81,1.9,86,1.684,92,1.733,93,1.733,94,1.549,95,1.733,96,1.666,97,1.733,98,1.733,99,1.733,100,1.583,107,0.942,109,0.005,110,0.005,121,1.591,175,0.929,196,2.384,238,1.549,255,0.801,273,1.374,276,2.666,282,1.083,284,1.887,285,1.813,288,0.862,290,1.318,295,1.117,298,1.112,310,1.626,312,1.806,313,1.806,314,1.806,315,1.733,316,1.806,317,1.806,319,1.979,503,2.084,550,3.127,563,3.001,582,1.208,589,2.537,600,2.206,628,1.887,632,3.565,720,1.806,782,2.206,833,3.127,875,2.537,877,4.416,969,2.783,972,3.807,981,2.353,985,2.537,1022,2.353,1142,4.409,1161,2.206,1162,2.353,1182,2.537,1448,4.868,1646,2.783,1659,2.783,1660,2.783,1661,2.783,1666,2.783,1725,2.206,1728,5.013,1754,3.127,1765,4.177,1772,4.177,1937,5.013,1938,3.157,1939,3.157,1940,3.157,1941,4.738,1942,3.157,1943,4.738,1944,4.738,1945,4.738,1946,7.904,1947,4.738,1948,3.157,1949,4.738,1950,3.157,1951,4.738,1952,3.157,1953,4.738,1954,3.157,1955,4.738,1956,3.157,1957,4.738,1958,3.157,1959,4.738,1960,3.157,1961,4.738,1962,3.157,1963,3.157,1964,4.738,1965,3.157,1966,3.157,1967,3.157,1968,3.157,1969,3.157,1970,4.738,1971,4.738,1972,4.738,1973,4.738,1974,3.157,1975,3.157]],["title/injectables/UploadToAwsProvider.html",[53,0.385,1976,2.878]],["body/injectables/UploadToAwsProvider.html",[3,0.079,4,0.071,5,0.158,9,0.766,12,0.284,13,1.145,14,1.618,16,1.524,18,1.524,23,0.583,25,1.399,26,0.01,27,1.529,28,0.526,29,1.012,33,1.889,37,1.451,38,1.658,49,0.565,51,0.184,53,0.484,55,0.439,56,1.89,63,0.079,64,0.085,66,1.579,67,0.845,69,2.034,73,2.519,75,4.832,78,1.223,79,1.785,81,1.288,86,1.026,100,1.288,107,1.269,109,0.006,110,0.006,167,5.18,255,0.978,273,1.541,282,1.322,285,1.475,295,0.909,298,1.358,310,1.322,369,2.115,521,2.115,606,2.692,607,5.331,621,3.096,641,5.979,785,3.397,886,4.085,1009,3.397,1048,4.404,1049,2.692,1062,6.125,1083,2.543,1232,4.404,1976,3.617,1977,6.125,1978,3.397,1979,5.481,1980,5.481,1981,3.853,1982,5.481,1983,3.853,1984,4.832,1985,5.126,1986,5.481,1987,3.853,1988,5.481,1989,6.125,1990,3.397,1991,3.853,1992,3.853,1993,4.832,1994,3.853,1995,3.397,1996,3.853,1997,3.853,1998,3.853,1999,3.853,2000,3.853,2001,3.853,2002,3.853,2003,3.853,2004,3.853,2005,3.853,2006,3.853,2007,5.481,2008,3.853,2009,3.853,2010,3.853,2011,3.853]],["title/modules/UploadsModule.html",[133,1.054,158,2.878]],["body/modules/UploadsModule.html",[3,0.118,4,0.105,5,0.105,26,0.009,51,0.196,55,0.656,63,0.118,64,0.128,109,0.007,110,0.007,133,1.884,135,2.264,136,2.331,137,2.475,138,2.475,139,2.331,140,3.357,141,3.357,158,5.841,160,3.082,161,2.082,162,2.331,593,5.941,1976,5.651,2012,5.069,2013,5.069,2014,5.069,2015,5.75,2016,5.75,2017,5.75,2018,5.069]],["title/injectables/UploadsService.html",[53,0.385,593,2.878]],["body/injectables/UploadsService.html",[3,0.093,4,0.083,5,0.153,12,0.333,13,1.279,14,1.762,16,1.343,18,1.632,23,0.56,25,1.343,26,0.01,27,1.283,28,0.572,29,0.972,33,1.516,37,1.279,51,0.174,53,0.541,55,0.515,56,2.218,63,0.093,64,0.1,66,1.719,67,1.343,69,2.386,73,1.551,78,2.204,79,1.714,81,1.511,86,1.204,100,1.511,107,0.899,109,0.006,110,0.006,167,5.506,255,1.147,273,1.678,282,1.551,284,2.703,295,1.444,298,1.593,310,2.101,452,1.73,593,4.042,599,3.369,607,4.853,621,5.58,641,5.548,1976,5.413,1984,5.399,1985,4.921,1989,3.985,1995,3.985,2018,3.985,2019,3.985,2020,6.124,2021,4.521,2022,4.521,2023,6.124,2024,4.521,2025,6.945,2026,4.521,2027,4.521,2028,4.521,2029,4.521,2030,4.521,2031,4.521,2032,4.521,2033,4.521,2034,4.521,2035,4.521,2036,4.521]],["title/entities/User.html",[35,1.004,634,1.536]],["body/entities/User.html",[3,0.066,4,0.058,5,0.058,9,0.634,12,0.235,23,0.753,26,0.009,28,0.722,29,1.37,35,1.643,39,3.332,40,3.011,49,1.267,51,0.12,63,0.066,64,0.071,109,0.005,110,0.005,117,1.272,118,2.624,119,3.177,121,1.601,127,2.04,238,2.342,288,0.871,307,2.19,347,2.807,381,1.622,519,4.265,527,3.777,528,1.555,634,2.239,759,1.751,801,1.622,805,4.521,807,2.621,812,1.684,885,5.31,886,3.559,888,5.768,1302,4.598,1317,2.564,1329,5.105,1474,5.045,1475,5.045,1477,5.045,1478,5.045,1479,5.045,1507,3.337,1730,6.871,1897,3.837,1898,7.538,1899,7.446,2037,2.812,2038,5.723,2039,3.19,2040,3.19,2041,3.19,2042,3.19,2043,3.19,2044,3.19,2045,3.19,2046,3.19,2047,4.775,2048,3.19,2049,3.19,2050,3.19,2051,3.19,2052,3.19]],["title/controllers/UsersController.html",[122,1.578,2053,3.249]],["body/controllers/UsersController.html",[3,0.052,4,0.047,5,0.047,9,1.66,11,2.524,12,0.187,13,0.837,16,0.557,18,0.557,23,0.515,25,1.236,26,0.01,27,1.466,28,0.637,29,1.083,35,1.99,37,1.425,39,2.611,40,3.235,49,1.093,51,0.183,55,0.29,63,0.052,64,0.056,66,1.396,67,0.557,76,4.555,105,3.441,107,1.297,109,0.004,110,0.004,112,2.765,114,1.454,119,1.061,121,1.717,122,0.92,124,0.92,127,1.396,273,1.868,291,1.454,295,0.6,331,1.395,333,5.239,339,3.99,342,4.53,344,3.225,345,4.046,348,6.379,369,2.201,372,2.988,381,1.292,385,4.53,386,4.53,388,1.247,392,3.99,393,3.277,409,2.201,516,4.164,528,2.303,609,3.113,696,1.52,759,1.395,769,2.988,838,1.52,839,1.678,845,3.721,916,2.802,917,1.776,918,2.043,924,2.043,958,4.455,963,2.647,977,1.454,980,1.776,989,3.939,1122,3.721,1141,3.094,1146,3.534,1147,4.859,1164,3.47,1387,3.222,1471,4.769,1491,1.895,1507,3.939,1689,3.277,1691,2.241,1692,4.97,1693,2.241,1694,3.535,1695,3.535,1696,2.241,1697,3.535,1698,3.535,1699,3.535,1703,3.535,1704,2.241,1706,4.53,1707,3.535,1715,2.043,1719,4.97,1720,4.377,1721,4.377,1725,1.776,1735,3.535,1736,3.99,1737,5.239,1746,2.802,1852,3.535,2053,2.988,2054,2.241,2055,3.535,2056,4.01,2057,4.01,2058,4.966,2059,2.241,2060,4.01,2061,2.542,2062,2.542,2063,2.542,2064,3.535,2065,4.01,2066,2.542,2067,2.542,2068,2.542,2069,2.542,2070,4.966,2071,2.542,2072,2.542,2073,2.542,2074,2.542,2075,2.542,2076,2.542,2077,2.241,2078,2.542,2079,2.542,2080,2.542,2081,2.542,2082,2.542,2083,2.542,2084,2.542,2085,2.542,2086,2.542,2087,2.542]],["title/modules/UsersModule.html",[133,1.054,159,2.733]],["body/modules/UsersModule.html",[3,0.087,4,0.078,5,0.078,26,0.01,35,1.549,51,0.218,55,0.485,63,0.087,64,0.094,109,0.006,110,0.006,124,2.128,133,1.626,135,1.676,136,1.725,137,1.832,138,1.832,139,1.725,140,2.897,141,2.897,145,3.879,159,5.619,160,2.529,161,2.128,162,1.725,164,2.695,174,2.164,175,1.252,347,3.302,426,4.107,504,5.198,506,3.684,515,2.545,762,5.198,934,3.172,1027,5.198,1029,3.684,1037,5.198,1047,5.198,1141,4.724,1398,5.198,1759,3.753,1760,5.934,1884,5.198,2053,5.016,2077,3.753,2088,3.753,2089,3.753,2090,3.753,2091,4.257,2092,4.257,2093,4.257,2094,4.257,2095,3.753,2096,3.753,2097,4.257,2098,3.753,2099,5.181,2100,3.753,2101,4.257,2102,4.257]],["title/injectables/UsersService.html",[53,0.385,1141,2.393]],["body/injectables/UsersService.html",[3,0.037,4,0.033,5,0.033,9,0.601,11,3.754,12,0.133,13,0.631,14,2.078,16,1.356,18,1.006,23,0.608,25,1.457,26,0.01,27,1.227,28,0.548,29,1.054,33,1.854,35,2.021,37,1.583,38,1.301,45,0.825,49,1.124,51,0.185,53,0.405,55,0.205,63,0.037,64,0.04,66,1.877,67,1.356,73,0.617,78,1.623,79,1.648,81,1.709,86,1.647,92,0.987,93,0.987,94,0.882,95,0.987,96,0.949,97,0.987,98,0.987,99,0.987,100,1.532,105,3.692,107,1.279,109,0.003,110,0.003,118,2.54,121,1.86,133,0.731,161,2.406,175,0.529,238,0.882,255,0.456,273,1.979,276,2.013,282,2.121,284,1.075,285,1.157,288,0.491,290,0.751,295,1.458,298,1.065,307,2.835,310,1.573,312,1.029,313,1.029,314,1.029,315,0.987,316,1.029,317,1.029,319,1.127,328,1.256,343,2.253,344,1.029,347,3.352,409,2.147,445,2.665,452,2.366,495,2.103,503,1.187,504,3.888,506,4.283,508,2.665,511,2.875,512,2.665,514,2.665,515,1.075,516,2.623,517,1.127,521,1.659,547,0.949,654,2.253,720,3.169,739,2.253,750,3.656,762,3.027,765,2.665,767,2.665,769,2.915,875,1.445,877,1.256,958,2.339,963,1.187,968,2.253,970,3.876,977,1.029,980,1.256,982,1.445,984,1.585,986,1.34,989,1.256,1022,1.34,1024,1.585,1027,4.081,1029,2.452,1036,1.585,1037,4.245,1039,2.665,1041,2.665,1047,3.027,1048,4.452,1049,1.256,1122,3.027,1141,1.659,1146,3.876,1380,2.665,1471,4.321,1689,1.187,1725,1.256,1880,2.665,1884,3.027,1887,2.665,2055,2.665,2059,2.665,2064,2.665,2095,1.585,2096,1.585,2098,1.585,2099,2.665,2100,1.585,2103,1.585,2104,3.023,2105,3.023,2106,3.023,2107,3.023,2108,1.798,2109,4.586,2110,3.912,2111,1.798,2112,3.912,2113,1.798,2114,1.798,2115,1.798,2116,3.023,2117,3.023,2118,1.798,2119,3.023,2120,1.798,2121,3.023,2122,1.798,2123,3.023,2124,1.798,2125,3.023,2126,1.798,2127,3.023,2128,1.798,2129,1.798,2130,1.798,2131,1.798,2132,1.798,2133,1.798,2134,1.798,2135,1.798,2136,1.798,2137,1.798,2138,1.798,2139,1.798,2140,1.798,2141,1.798,2142,1.798]],["title/injectables/VerifyPaymentProvider.html",[53,0.385,1538,2.878]],["body/injectables/VerifyPaymentProvider.html",[3,0.043,4,0.039,5,0.039,9,0.688,12,0.156,13,0.722,14,1.607,16,1.58,18,0.758,22,3.542,23,0.464,25,0.962,26,0.01,27,0.81,28,0.418,29,0.696,33,1.384,35,1.458,37,1.253,38,1.489,42,1.396,45,0.97,48,1.576,49,0.929,51,0.188,52,1.161,53,0.306,55,0.241,56,1.037,63,0.043,64,0.047,66,1.255,67,1.226,69,1.116,73,2.606,76,3.066,78,2.097,79,1.849,81,1.694,86,2.098,100,1.694,104,3.778,107,0.873,109,0.004,110,0.004,121,0.592,196,1.323,205,1.326,255,0.536,273,1.06,282,0.726,283,3.242,285,0.809,288,0.577,292,1.264,295,1.318,297,4.074,298,1.546,310,1.506,311,1.576,321,1.326,325,1.864,332,1.075,344,1.21,369,2.408,371,1.396,393,1.396,409,1.161,479,1.576,495,2.012,499,1.576,501,1.576,503,1.396,550,2.283,563,2.316,582,0.809,586,1.396,592,5.653,599,1.576,608,1.396,609,2.168,610,2.779,611,2.779,612,1.699,613,1.699,614,2.779,615,1.699,616,1.699,617,2.779,632,1.326,654,2.578,659,1.699,661,1.699,663,1.699,664,1.699,665,1.699,666,2.779,667,1.699,668,1.699,669,3.526,670,2.779,671,1.699,674,2.417,688,1.758,709,3.786,716,1.864,719,2.842,771,3.623,781,3.066,782,1.478,833,1.396,877,1.478,890,3.178,892,4.644,898,1.864,904,1.864,950,1.576,958,1.264,1082,1.699,1085,1.576,1126,3.066,1127,3.066,1137,1.699,1138,4.469,1140,1.864,1142,3.786,1144,3.049,1146,1.326,1147,3.778,1148,4.492,1153,1.699,1154,1.699,1155,2.779,1157,4.504,1158,1.864,1159,1.576,1160,1.864,1161,1.478,1162,1.576,1163,1.864,1164,1.478,1165,3.049,1179,1.864,1181,1.864,1182,2.779,1183,2.578,1184,1.699,1186,1.864,1188,1.864,1194,3.526,1203,1.864,1214,1.864,1215,1.864,1217,1.699,1222,1.864,1236,2.417,1299,1.864,1371,3.526,1373,3.049,1377,1.699,1382,3.049,1521,5.089,1538,2.283,1547,3.049,1554,2.779,1641,1.576,1711,3.869,1870,1.699,2143,4.928,2144,3.459,2145,2.115,2146,2.115,2147,3.459,2148,2.115,2149,3.459,2150,3.049,2151,3.459,2152,6.001,2153,3.459,2154,2.115,2155,3.459,2156,3.459,2157,2.115,2158,2.115,2159,2.115,2160,4.388,2161,2.115,2162,2.115,2163,2.115,2164,2.115,2165,2.115,2166,2.115,2167,3.049,2168,3.459,2169,2.115,2170,2.115,2171,3.459,2172,4.388,2173,3.459,2174,2.115,2175,2.115,2176,2.115,2177,3.049,2178,2.115,2179,2.115,2180,2.115,2181,2.115,2182,2.115,2183,2.115,2184,2.115,2185,2.115,2186,3.459,2187,2.115,2188,2.115,2189,3.459,2190,3.459,2191,2.115,2192,2.115,2193,2.115,2194,2.115,2195,2.115,2196,2.115]],["title/coverage.html",[2197,4.801]],["body/coverage.html",[0,2.847,1,1.554,5,0.041,6,1.96,7,1.657,8,1.96,26,0.01,28,0.183,33,0.551,35,1.202,53,0.769,61,1.787,64,0.183,79,0.622,109,0.004,110,0.004,111,2.518,112,1.091,114,1.272,115,1.96,122,2.649,123,1.657,125,1.96,129,1.468,139,0.901,161,0.805,163,1.787,183,1.657,185,1.787,187,1.657,189,1.657,196,1.37,197,1.174,199,1.468,205,1.394,207,2.061,208,2.518,215,1.787,256,1.96,260,1.657,262,1.96,263,2.895,270,1.468,271,1.96,272,2.895,277,1.468,283,1.054,292,2.154,293,1.787,329,1.657,330,1.96,332,1.131,338,1.468,347,2.228,353,1.468,363,1.468,376,1.468,421,1.394,422,1.468,423,1.468,424,1.468,438,1.96,448,1.787,449,1.787,457,1.96,470,1.787,504,1.468,505,1.96,506,2.259,507,2.895,522,1.468,523,3.597,524,1.96,525,2.895,533,1.468,534,1.96,540,1.468,541,1.96,553,1.468,554,1.96,574,1.22,581,1.554,582,2.351,583,1.787,587,1.468,588,1.96,589,2.895,593,1.468,603,1.468,628,5.289,634,2.578,672,2.895,685,1.468,686,1.96,687,1.96,689,1.272,704,1.468,705,1.96,706,1.96,709,1.329,736,1.657,737,1.96,738,1.96,740,1.394,750,1.468,751,1.96,752,3.65,762,1.468,763,1.96,764,1.96,771,1.272,779,1.96,780,1.96,800,1.554,802,1.96,816,1.657,817,1.96,829,1.554,834,1.468,838,1.329,859,1.96,860,1.96,878,1.96,890,1.394,891,1.96,892,1.468,909,1.657,910,1.96,914,1.468,916,1.554,917,1.554,936,1.96,952,1.96,965,1.468,966,1.96,967,1.96,970,1.394,974,1.394,977,1.272,1027,1.468,1028,3.385,1029,2.259,1030,1.96,1037,1.468,1038,1.96,1047,1.468,1060,1.96,1061,1.96,1091,1.657,1092,2.895,1093,3.385,1110,1.329,1111,1.468,1115,1.657,1116,2.895,1122,1.468,1123,1.394,1124,2.895,1125,2.895,1131,1.657,1133,1.468,1134,1.554,1135,1.468,1136,1.96,1137,2.895,1141,1.22,1142,1.329,1157,1.272,1161,1.554,1204,7.733,1259,1.96,1278,1.787,1309,1.96,1346,1.657,1347,1.96,1352,1.554,1358,1.96,1359,1.96,1363,1.96,1364,1.96,1384,1.96,1404,1.96,1442,1.96,1448,1.468,1449,1.96,1471,1.554,1472,1.96,1489,1.96,1509,1.657,1510,1.96,1516,1.657,1517,1.96,1528,1.468,1538,1.468,1546,1.96,1557,1.96,1588,1.96,1599,1.554,1604,1.96,1605,1.96,1606,1.96,1621,1.96,1676,1.657,1677,1.96,1706,1.787,1754,1.468,1764,1.96,1780,1.96,1784,1.96,1785,1.96,1796,1.96,1809,1.657,1810,1.96,1817,1.468,1832,1.96,1841,1.96,1849,1.787,1860,1.96,1864,1.96,1865,1.96,1884,1.468,1885,1.96,1886,1.96,1894,1.96,1896,1.96,1897,1.787,1902,1.657,1903,1.96,1909,1.554,1916,1.96,1936,1.96,1937,1.96,1976,1.468,1977,1.96,1978,1.96,2019,1.96,2037,1.96,2053,1.657,2054,1.96,2103,1.96,2143,1.96,2197,1.787,2198,1.96,2199,2.224,2200,4.542,2201,6.737,2202,7.693,2203,6.144,2204,3.176,2205,1.96,2206,1.96,2207,1.96,2208,1.96,2209,4.542,2210,7.693,2211,3.603,2212,7.583,2213,1.96,2214,7.693,2215,6.144,2216,5.223,2217,2.224,2218,2.224,2219,1.96,2220,2.224,2221,2.224,2222,2.224,2223,2.224,2224,2.224,2225,2.224,2226,2.224,2227,2.224,2228,2.224,2229,2.224,2230,2.224,2231,2.224,2232,2.224,2233,3.603,2234,3.603,2235,2.224,2236,2.224,2237,2.224,2238,2.224,2239,2.224]],["title/dependencies.html",[136,2.128,2240,3.199]],["body/dependencies.html",[26,0.01,55,0.659,56,2.836,57,3.816,58,4.309,64,0.159,109,0.007,110,0.007,136,2.343,175,1.7,182,4.04,269,2.152,288,1.579,388,2.836,468,4.646,486,4.04,578,4.04,1155,4.646,1230,4.309,1231,4.646,1723,5.097,1985,4.646,1990,5.097,1993,5.097,2241,5.782,2242,5.782,2243,5.782,2244,7.185,2245,5.782,2246,7.185,2247,5.782,2248,5.782,2249,5.782,2250,5.782,2251,5.782,2252,5.782,2253,5.782,2254,5.782,2255,5.782,2256,5.782,2257,5.782,2258,5.782,2259,5.782,2260,5.782,2261,5.782,2262,5.782,2263,5.782,2264,5.782,2265,5.782]],["title/miscellaneous/enumerations.html",[2266,2.395,2267,4.629]],["body/miscellaneous/enumerations.html",[12,0.43,26,0.009,35,1.662,109,0.007,110,0.007,119,3.015,207,4.131,379,4.318,394,6.654,469,3.848,759,3.199,760,5.803,1159,5.383,1164,4.073,1315,6.367,2167,6.367,2177,6.367,2266,3.848,2267,5.139,2268,5.83,2269,8.202,2270,5.83,2271,7.222,2272,5.83,2273,5.83,2274,5.83,2275,5.83,2276,7.222,2277,7.222,2278,7.222,2279,7.222,2280,5.83,2281,7.222]],["title/miscellaneous/functions.html",[2266,2.395,2282,4.629]],["body/miscellaneous/functions.html",[12,0.508,26,0.008,33,1.707,109,0.008,110,0.008,139,3.417,2219,6.078,2266,4.55,2282,6.078,2283,6.894,2284,6.894,2285,6.078]],["title/index.html",[12,0.267,1146,2.275,2286,3.629]],["body/index.html",[4,0.084,9,0.909,26,0.009,96,2.412,109,0.006,110,0.006,162,3.03,241,4.028,244,4.028,276,1.799,315,3.385,321,4.687,345,3.994,471,3.016,498,3.406,608,3.016,662,3.672,849,3.193,1004,3.672,1049,4.879,1230,5.572,1238,4.028,1285,6.008,1736,3.672,2150,4.028,2197,3.672,2198,4.028,2285,6.156,2287,4.57,2288,4.57,2289,6.983,2290,4.57,2291,4.57,2292,4.57,2293,4.57,2294,4.57,2295,4.57,2296,7.477,2297,4.57,2298,8.224,2299,4.57,2300,8.224,2301,4.57,2302,6.168,2303,4.57,2304,4.57,2305,6.983,2306,4.57,2307,6.168,2308,4.57,2309,4.57,2310,4.57,2311,4.57,2312,4.57,2313,4.57,2314,4.57,2315,4.57,2316,6.168,2317,4.57,2318,6.983,2319,4.57,2320,4.57,2321,4.57,2322,4.57,2323,4.57,2324,4.57,2325,4.57,2326,6.983,2327,4.57,2328,4.57,2329,4.57,2330,6.168,2331,4.028,2332,4.57,2333,4.57,2334,4.57,2335,4.57,2336,4.57,2337,4.57,2338,4.57,2339,6.168,2340,4.57,2341,4.57,2342,4.57,2343,6.168,2344,4.57,2345,4.57,2346,4.57,2347,6.168,2348,6.168,2349,4.57,2350,4.57,2351,4.57,2352,4.57,2353,4.57,2354,4.57,2355,4.57,2356,4.57,2357,4.57,2358,4.028,2359,4.57,2360,4.57,2361,4.57,2362,4.57,2363,4.57,2364,4.57,2365,4.028]],["title/modules.html",[135,2.352]],["body/modules.html",[26,0.007,109,0.007,110,0.007,134,4.139,135,2.187,145,3.666,146,3.881,147,3.881,148,3.666,149,3.666,150,3.881,151,3.881,152,3.881,153,3.881,154,3.481,155,3.481,156,3.881,157,3.881,158,3.666,159,3.481,1285,7.301,1398,3.666,1664,4.896,2331,4.896,2366,9.086,2367,9.086,2368,9.109]],["title/overview.html",[2369,5.267]],["body/overview.html",[2,2.107,26,0.01,109,0.005,110,0.005,113,2.272,124,1.024,129,3.508,133,0.683,134,6.614,135,1.113,136,1.146,137,1.217,138,1.217,139,1.146,140,1.217,141,1.217,142,2.493,143,2.493,144,2.493,145,5.302,146,4.507,147,5.461,148,4.686,149,4.686,150,4.507,151,3.714,152,5.73,153,4.507,154,4.595,155,5.321,156,5.255,157,4.961,158,4.964,159,5.348,160,1.875,161,1.024,162,1.146,255,0.717,261,1.024,270,3.508,277,4.686,376,3.508,419,2.493,420,2.493,421,3.332,422,3.508,423,3.508,424,3.508,504,3.508,540,3.508,587,3.508,593,4.686,704,3.508,709,4.244,762,3.508,771,4.061,801,1.438,834,3.508,853,2.493,854,2.493,914,3.508,927,2.493,928,2.493,945,2.493,946,2.493,947,2.493,965,3.508,970,4.45,1027,3.508,1037,3.508,1047,3.508,1135,3.508,1141,3.896,1142,4.244,1223,2.493,1224,2.493,1225,2.493,1350,2.493,1351,2.493,1352,3.714,1398,4.686,1399,2.493,1400,2.493,1401,2.493,1493,2.272,1528,3.508,1535,2.493,1536,2.493,1538,3.508,1597,2.493,1598,2.493,1599,3.714,1616,2.493,1617,2.493,1618,2.493,1750,2.493,1751,2.493,1752,2.493,1754,3.508,1817,3.508,1825,2.493,1827,2.493,1884,3.508,1906,2.493,1907,2.493,1909,3.714,1976,3.508,2012,2.493,2013,2.493,2014,2.493,2088,2.493,2089,2.493,2090,2.493,2369,2.493,2370,2.828,2371,4.357,2372,2.828,2373,2.828,2374,2.828]],["title/properties.html",[117,1.399,2240,3.199]],["body/properties.html",[9,1.371,26,0.009,109,0.008,110,0.008,117,1.837,2358,6.078,2365,6.078,2375,6.894,2376,6.894,2377,6.894]],["title/miscellaneous/variables.html",[2266,2.395,2378,4.629]],["body/miscellaneous/variables.html",[12,0.36,26,0.009,28,0.633,31,3.414,35,1.925,45,2.958,49,1.059,50,2.921,61,5.184,66,1.21,73,2.213,89,4.308,91,4.308,107,0.972,109,0.007,110,0.007,112,3.165,119,2.04,163,3.926,213,4.308,214,4.308,215,5.184,216,4.308,332,3.671,379,3.856,394,6.327,458,4.308,470,5.184,477,4.714,490,5.687,838,5,916,4.508,917,3.414,1278,5.184,1737,3.926,1847,5.687,1849,5.184,2204,4.308,2205,4.308,2206,5.687,2207,4.308,2208,4.308,2213,4.308,2266,3.225,2378,4.308,2379,4.886,2380,4.886,2381,6.451,2382,4.886,2383,4.886,2384,4.886,2385,4.886,2386,4.886,2387,6.451,2388,4.886,2389,4.886,2390,4.886,2391,4.886,2392,4.886,2393,4.886,2394,4.886,2395,7.221,2396,4.886,2397,4.886,2398,4.886,2399,4.886,2400,4.886]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":628,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"classes/PaginationQueryDto.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"injectables/UpdateProductProvider.html":{},"coverage.html":{}}}],["0.0.1",{"_index":2376,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":2256,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":2262,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":2264,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":2255,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2214,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2225,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2227,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2200,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2212,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2215,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2216,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2224,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2230,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2235,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":696,"title":{},"body":{"classes/CreateReviewDto.html":{},"entities/Discount.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"controllers/ProductsController.html":{},"entities/Review.html":{},"controllers/UsersController.html":{}}}],["1.0.0",{"_index":792,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["1.1.26",{"_index":2242,"title":{},"body":{"dependencies.html":{}}}],["1.4.12",{"_index":2250,"title":{},"body":{"dependencies.html":{}}}],["1.8.4",{"_index":2252,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2202,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2221,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1491,"title":{},"body":{"entities/Payment.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["10.0.0",{"_index":2244,"title":{},"body":{"dependencies.html":{}}}],["10.4.15",{"_index":2247,"title":{},"body":{"dependencies.html":{}}}],["10/11",{"_index":2237,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1204,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"coverage.html":{}}}],["1000",{"_index":1895,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["1000000",{"_index":1878,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["10})@apiquery({name",{"_index":1696,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["11",{"_index":2371,"title":{},"body":{"overview.html":{}}}],["11.0.0",{"_index":2246,"title":{},"body":{"dependencies.html":{}}}],["11.0.6",{"_index":2248,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":2265,"title":{},"body":{"dependencies.html":{}}}],["12345",{"_index":1735,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["12345'})@apiheaders(['undefined",{"_index":1707,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["17",{"_index":2370,"title":{},"body":{"overview.html":{}}}],["17.13.3",{"_index":2258,"title":{},"body":{"dependencies.html":{}}}],["1})@apiheaders(['undefined",{"_index":2067,"title":{},"body":{"controllers/UsersController.html":{}}}],["1})@auth(authtype.none)@get",{"_index":1700,"title":{},"body":{"controllers/ProductsController.html":{}}}],["2",{"_index":1493,"title":{},"body":{"entities/Payment.html":{},"entities/Product.html":{},"overview.html":{}}}],["2.0.2",{"_index":2243,"title":{},"body":{"dependencies.html":{}}}],["2.1692.0",{"_index":2251,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":2209,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":2234,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":2223,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":2229,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2047,"title":{},"body":{"entities/User.html":{}}}],["200",{"_index":342,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["204",{"_index":2060,"title":{},"body":{"controllers/UsersController.html":{}}}],["22",{"_index":2373,"title":{},"body":{"overview.html":{}}}],["2343",{"_index":1362,"title":{},"body":{"classes/OtpSigninDto.html":{}}}],["2343})@isint()@isnotempty",{"_index":1360,"title":{},"body":{"classes/OtpSigninDto.html":{}}}],["2354",{"_index":410,"title":{},"body":{"controllers/AuthController.html":{}}}],["25",{"_index":2220,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":2374,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":2210,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":2232,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":2238,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":2228,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":2372,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":2245,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":2203,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":2222,"title":{},"body":{"coverage.html":{}}}],["465",{"_index":1247,"title":{},"body":{"modules/MailModule.html":{}}}],["5",{"_index":699,"title":{},"body":{"classes/CreateReviewDto.html":{},"entities/Product.html":{},"entities/Review.html":{},"injectables/StoreOtpAndExpireProvider.html":{}}}],["5.1.1",{"_index":2254,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":2211,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":2218,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1733,"title":{},"body":{"controllers/ProductsController.html":{}}}],["60",{"_index":1894,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{},"coverage.html":{}}}],["66",{"_index":2233,"title":{},"body":{"coverage.html":{}}}],["7.8.1",{"_index":2263,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":2231,"title":{},"body":{"coverage.html":{}}}],["8.13.3",{"_index":2260,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":2226,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":2217,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":2236,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":1899,"title":{},"body":{"entities/Subscriber.html":{},"entities/User.html":{}}}],["_",{"_index":101,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/ProductsController.html":{}}}],["acc",{"_index":1201,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["accept",{"_index":102,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["accepts",{"_index":1211,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["access",{"_index":10,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/RefreshTokenProvider.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{}}}],["accesstoken",{"_index":395,"title":{},"body":{"controllers/AuthController.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{}}}],["accesstokenguard",{"_index":1,"title":{"guards/AccessTokenGuard.html":{}},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["accounttype",{"_index":757,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["active",{"_index":2392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activeuser",{"_index":916,"title":{},"body":{"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["activeuserdata",{"_index":112,"title":{"interfaces/ActiveUserData.html":{}},"body":{"interfaces/ActiveUserData.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ad",{"_index":1808,"title":{},"body":{"entities/Review.html":{}}}],["adapter",{"_index":1256,"title":{},"body":{"modules/MailModule.html":{}}}],["add",{"_index":2172,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["address",{"_index":744,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/InitiatePaymentProvider.html":{},"classes/SignInDto.html":{}}}],["admin",{"_index":760,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"miscellaneous/enumerations.html":{}}}],["admin'})@isenum(role)@isnotempty",{"_index":754,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["allow",{"_index":1855,"title":{},"body":{"guards/RolesGuard.html":{}}}],["already",{"_index":1873,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["amazing",{"_index":2353,"title":{},"body":{"index.html":{}}}],["amount",{"_index":1193,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{}}}],["amounts",{"_index":1212,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["api",{"_index":1699,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apibody",{"_index":384,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes",{"_index":1718,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiconsumes('multipart/form",{"_index":1682,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiheaders",{"_index":1719,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apioperation",{"_index":385,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":339,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apiparam",{"_index":1720,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":745,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/OtpSigninDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{}}}],["apiproperty({description",{"_index":741,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/OtpSigninDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{}}}],["apiquery",{"_index":1721,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apiresponse",{"_index":386,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apiresponse({status",{"_index":1691,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":387,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('auth",{"_index":390,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiversion",{"_index":791,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["app",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["app.controller",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":130,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["app_interceptor",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["appconfig",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":123,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":2330,"title":{},"body":{"index.html":{}}}],["applications",{"_index":2294,"title":{},"body":{"index.html":{}}}],["applied",{"_index":2174,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["apply",{"_index":942,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["applyfordiscount",{"_index":274,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{}}}],["applyfordiscount(user",{"_index":280,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{}}}],["applyfordiscountdto",{"_index":260,"title":{"classes/ApplyForDiscountDto.html":{}},"body":{"classes/ApplyForDiscountDto.html":{},"controllers/DiscountsController.html":{},"coverage.html":{}}}],["applyfordiscountdto.code",{"_index":926,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["applyfordiscountprovider",{"_index":270,"title":{"injectables/ApplyForDiscountProvider.html":{}},"body":{"injectables/ApplyForDiscountProvider.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":134,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":129,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":488,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{}}}],["array.from",{"_index":1729,"title":{},"body":{"controllers/ProductsController.html":{}}}],["async",{"_index":14,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["asynchrousnously",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["audience",{"_index":1076,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["auth",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/DeliveryStatesController.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth(authtype.none",{"_index":405,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["auth(authtype.none)@get('/:state",{"_index":826,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["auth.controller",{"_index":427,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/config/jwt.config",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/access",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/authentication/authentication.guard",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/roles/roles.guard",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["auth_type_key",{"_index":470,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":329,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticating",{"_index":466,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authentication",{"_index":458,"title":{},"body":{"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["authenticationguard",{"_index":187,"title":{"guards/AuthenticationGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["authenticationguard.defaultauthtype",{"_index":494,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authmodule",{"_index":145,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2358,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":1147,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["authorizationurl",{"_index":1220,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{}}}],["authservice",{"_index":376,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authtype",{"_index":379,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"controllers/DeliveryStatesController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["authtype.bearer",{"_index":478,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtype.none",{"_index":483,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtypeguardmap",{"_index":459,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtypes",{"_index":490,"title":{},"body":{"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["authtypes.map((type",{"_index":496,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["autoloadentities",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["availability",{"_index":1184,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["available",{"_index":1664,"title":{},"body":{"injectables/ProductVariantsService.html":{},"modules.html":{}}}],["await",{"_index":86,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["aws",{"_index":1985,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"dependencies.html":{}}}],["aws.provider",{"_index":2018,"title":{},"body":{"modules/UploadsModule.html":{},"injectables/UploadsService.html":{}}}],["aws.provider.ts",{"_index":1978,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"coverage.html":{}}}],["aws.provider.ts:25",{"_index":1983,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["aws.provider.ts:49",{"_index":1987,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["aws.provider.ts:8",{"_index":1981,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["axios",{"_index":1155,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"dependencies.html":{}}}],["axios.get",{"_index":2157,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["axios.post",{"_index":1206,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["back",{"_index":1289,"title":{},"body":{"injectables/MailService.html":{}}}],["backers",{"_index":2354,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":284,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('delivery",{"_index":876,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["badrequestexception('mime",{"_index":2031,"title":{},"body":{"injectables/UploadsService.html":{}}}],["badrequestexception('product",{"_index":1942,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["badrequestexception('the",{"_index":874,"title":{},"body":{"injectables/DeliveryStatesService.html":{},"injectables/FindOneByIdProvider.html":{}}}],["badrequestexception('user",{"_index":2141,"title":{},"body":{"injectables/UsersService.html":{}}}],["base",{"_index":1094,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["based",{"_index":105,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/DeliveryStatesService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/OtpSigninProvider.html":{},"controllers/ProductsController.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["baseurl",{"_index":1426,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["bcrypt",{"_index":2253,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":1164,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"injectables/VerifyPaymentProvider.html":{},"miscellaneous/enumerations.html":{}}}],["becomes",{"_index":1670,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["before",{"_index":796,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["beforeinsert",{"_index":810,"title":{},"body":{"entities/DeliveryState.html":{},"entities/Product.html":{}}}],["beforeupdate",{"_index":811,"title":{},"body":{"entities/DeliveryState.html":{},"entities/Product.html":{}}}],["belongs",{"_index":1645,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["best",{"_index":1295,"title":{},"body":{"injectables/MailService.html":{}}}],["between",{"_index":983,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"entities/Review.html":{}}}],["board",{"_index":2346,"title":{},"body":{"index.html":{}}}],["body",{"_index":369,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"injectables/UploadToAwsProvider.html":{},"controllers/UsersController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["boolean",{"_index":1466,"title":{},"body":{"classes/PatchProductVariantDto.html":{},"entities/ProductVariant.html":{},"guards/RolesGuard.html":{}}}],["boostrap",{"_index":2284,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["both",{"_index":2176,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["brand",{"_index":555,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["browse",{"_index":2368,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2366,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":1995,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["building",{"_index":2290,"title":{},"body":{"index.html":{}}}],["buy",{"_index":1181,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["buyer",{"_index":1166,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["buyer.city",{"_index":1174,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["buyer.email",{"_index":1208,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["buyer.firstname",{"_index":1177,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["buyer.id",{"_index":1216,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["buyer.lastname",{"_index":1178,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["buyer.state",{"_index":1175,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["buyer.streetaddress",{"_index":1173,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["calculate",{"_index":1191,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["callback_url",{"_index":1209,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["called",{"_index":2149,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["callhandler",{"_index":788,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["canactivate",{"_index":15,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":30,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["carrier",{"_index":1310,"title":{},"body":{"entities/Order.html":{}}}],["carrierphonenumber",{"_index":1311,"title":{},"body":{"entities/Order.html":{}}}],["cascade",{"_index":1571,"title":{},"body":{"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{}}}],["cascade'})@joincolumn",{"_index":1595,"title":{},"body":{"entities/ProductImage.html":{},"entities/ProductVariant.html":{}}}],["catch",{"_index":100,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["category",{"_index":556,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["changeuserpasswordprovider",{"_index":2130,"title":{},"body":{"injectables/UsersService.html":{}}}],["channel",{"_index":2321,"title":{},"body":{"index.html":{}}}],["charge.success",{"_index":2188,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["check",{"_index":321,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsUsageService.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/ProductVariantsService.html":{},"entities/Review.html":{},"injectables/VerifyPaymentProvider.html":{},"index.html":{}}}],["check('\"stars",{"_index":1807,"title":{},"body":{"entities/Review.html":{}}}],["checking",{"_index":34,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["checks",{"_index":299,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsService.html":{},"injectables/ProductVariantsService.html":{}}}],["checkvariantavailability",{"_index":1622,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["checkvariantavailability(manager",{"_index":1629,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["checkwhereoptions",{"_index":1019,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["city",{"_index":1474,"title":{},"body":{"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["class",{"_index":64,"title":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/OtpSigninDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{},"classes/UpdateDeliveryStateDto.html":{}},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":261,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/OtpSigninDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{},"classes/UpdateDeliveryStateDto.html":{},"overview.html":{}}}],["clear",{"_index":1380,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/UsersService.html":{}}}],["clearing",{"_index":514,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/UsersService.html":{}}}],["clearotpandexpirytime",{"_index":508,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/UsersService.html":{}}}],["clearotpandexpirytime(user",{"_index":512,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/UsersService.html":{}}}],["clearotpandexpirytimeprovider",{"_index":504,"title":{"injectables/ClearOtpAndExpiryTimeProvider.html":{}},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["clothtype",{"_index":557,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["cluster_appmodule",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":419,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":420,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_deliverystatesmodule",{"_index":853,"title":{},"body":{"modules/DeliveryStatesModule.html":{},"overview.html":{}}}],["cluster_deliverystatesmodule_providers",{"_index":854,"title":{},"body":{"modules/DeliveryStatesModule.html":{},"overview.html":{}}}],["cluster_discountsmodule",{"_index":927,"title":{},"body":{"modules/DiscountsModule.html":{},"overview.html":{}}}],["cluster_discountsmodule_imports",{"_index":929,"title":{},"body":{"modules/DiscountsModule.html":{}}}],["cluster_discountsmodule_providers",{"_index":928,"title":{},"body":{"modules/DiscountsModule.html":{},"overview.html":{}}}],["cluster_discountsusagemodule",{"_index":945,"title":{},"body":{"modules/DiscountsUsageModule.html":{},"overview.html":{}}}],["cluster_discountsusagemodule_exports",{"_index":947,"title":{},"body":{"modules/DiscountsUsageModule.html":{},"overview.html":{}}}],["cluster_discountsusagemodule_providers",{"_index":946,"title":{},"body":{"modules/DiscountsUsageModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":1223,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":1225,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":1224,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_ordersmodule",{"_index":1350,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_ordersmodule_providers",{"_index":1351,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_paginationmodule",{"_index":1399,"title":{},"body":{"modules/PaginationModule.html":{},"overview.html":{}}}],["cluster_paginationmodule_exports",{"_index":1401,"title":{},"body":{"modules/PaginationModule.html":{},"overview.html":{}}}],["cluster_paginationmodule_providers",{"_index":1400,"title":{},"body":{"modules/PaginationModule.html":{},"overview.html":{}}}],["cluster_paystackmodule",{"_index":1535,"title":{},"body":{"modules/PaystackModule.html":{},"overview.html":{}}}],["cluster_paystackmodule_imports",{"_index":1537,"title":{},"body":{"modules/PaystackModule.html":{}}}],["cluster_paystackmodule_providers",{"_index":1536,"title":{},"body":{"modules/PaystackModule.html":{},"overview.html":{}}}],["cluster_productimagesmodule",{"_index":1597,"title":{},"body":{"modules/ProductImagesModule.html":{},"overview.html":{}}}],["cluster_productimagesmodule_providers",{"_index":1598,"title":{},"body":{"modules/ProductImagesModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":1750,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_exports",{"_index":1751,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_imports",{"_index":1753,"title":{},"body":{"modules/ProductsModule.html":{}}}],["cluster_productsmodule_providers",{"_index":1752,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productvariantsmodule",{"_index":1616,"title":{},"body":{"modules/ProductVariantsModule.html":{},"overview.html":{}}}],["cluster_productvariantsmodule_exports",{"_index":1617,"title":{},"body":{"modules/ProductVariantsModule.html":{},"overview.html":{}}}],["cluster_productvariantsmodule_providers",{"_index":1618,"title":{},"body":{"modules/ProductVariantsModule.html":{},"overview.html":{}}}],["cluster_reviewsmodule",{"_index":1825,"title":{},"body":{"modules/ReviewsModule.html":{},"overview.html":{}}}],["cluster_reviewsmodule_imports",{"_index":1826,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["cluster_reviewsmodule_providers",{"_index":1827,"title":{},"body":{"modules/ReviewsModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule",{"_index":1906,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule_imports",{"_index":1908,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["cluster_subscribersmodule_providers",{"_index":1907,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_uploadsmodule",{"_index":2012,"title":{},"body":{"modules/UploadsModule.html":{},"overview.html":{}}}],["cluster_uploadsmodule_exports",{"_index":2013,"title":{},"body":{"modules/UploadsModule.html":{},"overview.html":{}}}],["cluster_uploadsmodule_providers",{"_index":2014,"title":{},"body":{"modules/UploadsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":2088,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":2089,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":2091,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":2090,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":264,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"classes/CreateDiscountDto.html":{},"entities/Discount.html":{},"injectables/DiscountsService.html":{}}}],["color",{"_index":673,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"injectables/FindAllProductsProvider.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{}}}],["colors",{"_index":1096,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["column",{"_index":805,"title":{},"body":{"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{}}}],["column('decimal",{"_index":1323,"title":{},"body":{"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{}}}],["column('int",{"_index":1589,"title":{},"body":{"entities/ProductImage.html":{},"entities/ProductVariant.html":{}}}],["column('text",{"_index":1801,"title":{},"body":{"entities/Review.html":{}}}],["column({default",{"_index":883,"title":{},"body":{"entities/Discount.html":{},"entities/ProductVariant.html":{}}}],["column({nullable",{"_index":1317,"title":{},"body":{"entities/Order.html":{},"entities/Payment.html":{},"entities/User.html":{}}}],["column({type",{"_index":885,"title":{},"body":{"entities/Discount.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{}}}],["column({unique",{"_index":1499,"title":{},"body":{"entities/Payment.html":{}}}],["come",{"_index":2313,"title":{},"body":{"index.html":{}}}],["commit",{"_index":655,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["committed",{"_index":658,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["common/interceptors/data",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["complete",{"_index":665,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["compodoc/compodoc",{"_index":2241,"title":{},"body":{"dependencies.html":{}}}],["concurrent",{"_index":1650,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["conditions",{"_index":993,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["conditions.variants",{"_index":1013,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["conditions.variants.color",{"_index":1011,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["conditions.variants.size",{"_index":1012,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["config",{"_index":69,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["config.get('appconfig.mailhost",{"_index":1242,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('appconfig.smtppassword",{"_index":1244,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('appconfig.smtpusername",{"_index":1243,"title":{},"body":{"modules/MailModule.html":{}}}],["config/app.config",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["config/database.config",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["config/enviroment.validation",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["config/jwt.config",{"_index":433,"title":{},"body":{"modules/AuthModule.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["config/paths.config",{"_index":1279,"title":{},"body":{"injectables/MailService.html":{}}}],["config/paystack.config",{"_index":1154,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"modules/PaystackModule.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["configmodule",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PaystackModule.html":{}}}],["configmodule.forfeature(jwtconfig",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forfeature(paystackconfig",{"_index":1545,"title":{},"body":{"modules/PaystackModule.html":{}}}],["configmodule.forroot",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["configservice.get('database.autoloadentities",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.host",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.name",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.password",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.port",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.synchronize",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.user",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["configtype",{"_index":22,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["configure",{"_index":1239,"title":{},"body":{"modules/MailModule.html":{}}}],["confirmation",{"_index":1300,"title":{},"body":{"injectables/MailService.html":{}}}],["conflictexception",{"_index":599,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/UploadsService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["conflictexception('could",{"_index":664,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["conflictexception(err",{"_index":2182,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["conflictexception(error",{"_index":2036,"title":{},"body":{"injectables/UploadsService.html":{}}}],["connect",{"_index":614,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["connecting",{"_index":317,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["connection",{"_index":669,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["console.log",{"_index":1241,"title":{},"body":{"modules/MailModule.html":{}}}],["console.log('before",{"_index":795,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["console.log('createing",{"_index":2170,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["console.log('payment",{"_index":2192,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["console.log('re",{"_index":417,"title":{},"body":{"controllers/AuthController.html":{}}}],["console.log(error",{"_index":311,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/SignInProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["console.log(newurl",{"_index":1431,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["const",{"_index":73,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"injectables/ApplyForDiscountProvider.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"miscellaneous/variables.html":{}}}],["constant",{"_index":2395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["constructor(configservice",{"_index":785,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"injectables/UploadToAwsProvider.html":{}}}],["constructor(creatediscountprovider",{"_index":937,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["constructor(createproductprovider",{"_index":1766,"title":{},"body":{"injectables/ProductsService.html":{}}}],["constructor(createreviewprovider",{"_index":1834,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["constructor(createuserprovider",{"_index":2108,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(datasource",{"_index":591,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["constructor(deliverystaterepository",{"_index":862,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["constructor(discountsrepository",{"_index":275,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{}}}],["constructor(discountsusagerepository",{"_index":954,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["constructor(initiatepaymentprovider",{"_index":1548,"title":{},"body":{"injectables/PaystackService.html":{}}}],["constructor(jwtservice",{"_index":19,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["constructor(mailerservice",{"_index":1264,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(paystackconfiguration",{"_index":1140,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["constructor(private",{"_index":131,"title":{},"body":{"controllers/AppController.html":{},"guards/RolesGuard.html":{}}}],["constructor(productrepository",{"_index":969,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/UpdateProductProvider.html":{}}}],["constructor(productvariantrepository",{"_index":1626,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["constructor(reflector",{"_index":462,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["constructor(request",{"_index":1406,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["constructor(reviewsrepository",{"_index":708,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["constructor(signinprovider",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(subscriberrepository",{"_index":1919,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["constructor(uploadtoawsprovider",{"_index":2021,"title":{},"body":{"injectables/UploadsService.html":{}}}],["constructor(usersrepository",{"_index":509,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{}}}],["constructor(usersservice",{"_index":1366,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{}}}],["containing",{"_index":1073,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["contains",{"_index":84,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{}}}],["contenttype",{"_index":1999,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["context",{"_index":36,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{}}}],["context.getclass",{"_index":493,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":492,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":74,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/RolesGuard.html":{}}}],["controller",{"_index":122,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":391,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('delivery",{"_index":842,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["controller('discounts",{"_index":920,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["controller('orders",{"_index":1349,"title":{},"body":{"controllers/OrdersController.html":{}}}],["controller('payment",{"_index":1511,"title":{},"body":{"controllers/PaymentController.html":{}}}],["controller('paystack",{"_index":1530,"title":{},"body":{"controllers/PaystackController.html":{}}}],["controller('products",{"_index":1726,"title":{},"body":{"controllers/ProductsController.html":{}}}],["controller('reviews",{"_index":1819,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["controller('subscribers",{"_index":1905,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["controller('users",{"_index":2078,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":124,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["count",{"_index":322,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsUsageService.html":{}}}],["countdiscountusage",{"_index":953,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["countdiscountusage(discountid",{"_index":957,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["country",{"_index":1475,"title":{},"body":{"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["courses",{"_index":2328,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":2197,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":495,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DiscountsService.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["created",{"_index":358,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DiscountsService.html":{},"injectables/ProductsService.html":{}}}],["createdat",{"_index":1312,"title":{},"body":{"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{}}}],["createdatecolumn",{"_index":803,"title":{},"body":{"entities/DeliveryState.html":{},"entities/DiscountUsage.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/Review.html":{}}}],["createdeliverystate",{"_index":819,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{}}}],["createdeliverystate(createdeliverystatedto",{"_index":822,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{}}}],["createdeliverystatedto",{"_index":522,"title":{"classes/CreateDeliveryStateDto.html":{}},"body":{"classes/CreateDeliveryStateDto.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"classes/UpdateDeliveryStateDto.html":{},"coverage.html":{}}}],["creatediscount",{"_index":542,"title":{},"body":{"injectables/CreateDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{}}}],["creatediscount(@body",{"_index":921,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["creatediscount(creatediscountdto",{"_index":544,"title":{},"body":{"injectables/CreateDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{}}}],["creatediscountdto",{"_index":533,"title":{"classes/CreateDiscountDto.html":{}},"body":{"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"coverage.html":{}}}],["creatediscountprovider",{"_index":540,"title":{"injectables/CreateDiscountProvider.html":{}},"body":{"injectables/CreateDiscountProvider.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"coverage.html":{},"overview.html":{}}}],["createhash('sha256",{"_index":1375,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{}}}],["createhmac('sha512",{"_index":2184,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["createparamdecorator",{"_index":2386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproduct",{"_index":590,"title":{},"body":{"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createproduct(createproductdto",{"_index":595,"title":{},"body":{"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createproductdto",{"_index":553,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["createproductdto.variants",{"_index":633,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["createproductprovider",{"_index":587,"title":{"injectables/CreateProductProvider.html":{}},"body":{"injectables/CreateProductProvider.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["createproductvariantdto",{"_index":581,"title":{"classes/CreateProductVariantDto.html":{}},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/PatchProductVariantDto.html":{},"coverage.html":{}}}],["createquerybuilder(productvariant",{"_index":1651,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["createreview",{"_index":707,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["createreview(@body",{"_index":1820,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["createreview(createreviewdto",{"_index":712,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["createreviewdto",{"_index":685,"title":{"classes/CreateReviewDto.html":{}},"body":{"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"coverage.html":{}}}],["createreviewdto.productid",{"_index":722,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["createreviewdto.review",{"_index":726,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["createreviewdto.reviewer",{"_index":725,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["createreviewdto.stars",{"_index":727,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["createreviewprovider",{"_index":704,"title":{"injectables/CreateReviewProvider.html":{}},"body":{"injectables/CreateReviewProvider.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"coverage.html":{},"overview.html":{}}}],["creates",{"_index":354,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["createsubscriber",{"_index":1917,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["createsubscriber(createsubscriberdto",{"_index":1922,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["createsubscriberdto",{"_index":736,"title":{"classes/CreateSubscriberDto.html":{}},"body":{"classes/CreateSubscriberDto.html":{},"injectables/SubscribersService.html":{},"coverage.html":{}}}],["createuser",{"_index":765,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"injectables/UsersService.html":{}}}],["createuser(createuserdto",{"_index":767,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"injectables/UsersService.html":{}}}],["createuserdto",{"_index":750,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"classes/PatchUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserprovider",{"_index":2112,"title":{},"body":{"injectables/UsersService.html":{}}}],["createusersprovider",{"_index":762,"title":{"injectables/CreateUsersProvider.html":{}},"body":{"injectables/CreateUsersProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["creating",{"_index":739,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/UsersService.html":{}}}],["creatng",{"_index":1924,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["crypto",{"_index":1371,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["ctx",{"_index":2389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":2390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cur",{"_index":1200,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["current",{"_index":1396,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["currentpage",{"_index":1392,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["custom",{"_index":1737,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":781,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"controllers/ProductsController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["data')@useinterceptors(undefined)@roles(role.admin)@post",{"_index":1683,"title":{},"body":{"controllers/ProductsController.html":{}}}],["data.interface",{"_index":291,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/UsersController.html":{}}}],["data.interface.ts",{"_index":115,"title":{},"body":{"interfaces/ActiveUserData.html":{},"coverage.html":{}}}],["database",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/ProductVariantsService.html":{},"entities/Subscriber.html":{},"injectables/UpdateProductProvider.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["databaseconfig",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["dataresponseinterceptor",{"_index":183,"title":{"injectables/DataResponseInterceptor.html":{}},"body":{"modules/AppModule.html":{},"injectables/DataResponseInterceptor.html":{},"coverage.html":{}}}],["datasource",{"_index":592,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["date",{"_index":307,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"classes/CreateDiscountDto.html":{},"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/Review.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["date().gettime().tostring().trim",{"_index":2010,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["date(date.now",{"_index":1893,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["datecreated",{"_index":733,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"entities/DeliveryState.html":{},"entities/Review.html":{}}}],["db",{"_index":551,"title":{},"body":{"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["declarations",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decoraror",{"_index":2397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorator",{"_index":1847,"title":{},"body":{"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["decorator/auth.decorator",{"_index":378,"title":{},"body":{"controllers/AuthController.html":{}}}],["decorators",{"_index":127,"title":{},"body":{"controllers/AppController.html":{},"classes/ApplyForDiscountDto.html":{},"controllers/AuthController.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/InitiatePaymentDto.html":{},"entities/Order.html":{},"classes/OtpSigninDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaystackController.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"classes/RefreshTokenDto.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"classes/SignInDto.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["decrementing",{"_index":1668,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["deeper",{"_index":2323,"title":{},"body":{"index.html":{}}}],["default",{"_index":477,"title":{},"body":{"guards/AuthenticationGuard.html":{},"entities/Discount.html":{},"modules/MailModule.html":{},"entities/Order.html":{},"classes/PaginationQueryDto.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"miscellaneous/variables.html":{}}}],["defaultauthtype",{"_index":461,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["defaultroletype",{"_index":1851,"title":{},"body":{"guards/RolesGuard.html":{}}}],["defined",{"_index":23,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["delete",{"_index":1715,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{}}}],["delete('/:productid",{"_index":1747,"title":{},"body":{"controllers/ProductsController.html":{}}}],["delete('/:productid')@roles(role.admin)@httpcode(httpstatus.no_content",{"_index":1686,"title":{},"body":{"controllers/ProductsController.html":{}}}],["delete('/:reviewid",{"_index":1822,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["delete('/:reviewid')@roles(role.admin)@httpcode(httpstatus.no_content",{"_index":1814,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["delete('/:userid",{"_index":2085,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleted",{"_index":1689,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleted'})@apiparam({name",{"_index":2061,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteproduct",{"_index":1678,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{}}}],["deleteproduct(productid",{"_index":1685,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["deleteproduct(reviewid",{"_index":1813,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["deletereview",{"_index":1833,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["deletereview(reviewid",{"_index":1837,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["deletes",{"_index":1746,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/UsersController.html":{}}}],["deleteuser",{"_index":2055,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteuser(@param('userid",{"_index":2086,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser(userid",{"_index":2059,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleting",{"_index":2064,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deletion",{"_index":2116,"title":{},"body":{"injectables/UsersService.html":{}}}],["delivered",{"_index":2279,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["delivery",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateDeliveryStateDto.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"injectables/InitiatePaymentProvider.html":{},"classes/UpdateDeliveryStateDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["deliveryaddress",{"_index":1126,"title":{},"body":{"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/Order.html":{},"classes/ProductWithVariantDto.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["deliverypicker",{"_index":1127,"title":{},"body":{"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/Order.html":{},"classes/ProductWithVariantDto.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["deliverystate",{"_index":800,"title":{"entities/DeliveryState.html":{}},"body":{"entities/DeliveryState.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"coverage.html":{}}}],["deliverystaterepository",{"_index":864,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["deliverystatescontroller",{"_index":816,"title":{"controllers/DeliveryStatesController.html":{}},"body":{"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"coverage.html":{}}}],["deliverystatesmodule",{"_index":146,"title":{"modules/DeliveryStatesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DeliveryStatesModule.html":{},"modules.html":{},"overview.html":{}}}],["deliverystatesservice",{"_index":834,"title":{"injectables/DeliveryStatesService.html":{}},"body":{"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"coverage.html":{},"overview.html":{}}}],["deny",{"_index":103,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["dependencies",{"_index":136,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":41,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/RolesGuard.html":{}}}],["description",{"_index":9,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"entities/Payment.html":{},"controllers/ProductsController.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"index.html":{},"properties.html":{}}}],["details",{"_index":1170,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["development",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["devtools",{"_index":2334,"title":{},"body":{"index.html":{}}}],["diff",{"_index":485,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["digest('hex",{"_index":1377,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["dir",{"_index":1253,"title":{},"body":{"modules/MailModule.html":{}}}],["directly",{"_index":1974,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["disable",{"_index":93,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["discord",{"_index":2320,"title":{},"body":{"index.html":{}}}],["discount",{"_index":283,"title":{"entities/Discount.html":{}},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/InitiatePaymentProvider.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["discount.dto",{"_index":548,"title":{},"body":{"injectables/CreateDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{}}}],["discount.dto.ts",{"_index":263,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDiscountDto.html":{},"coverage.html":{}}}],["discount.dto.ts:10",{"_index":536,"title":{},"body":{"classes/CreateDiscountDto.html":{}}}],["discount.dto.ts:14",{"_index":538,"title":{},"body":{"classes/CreateDiscountDto.html":{}}}],["discount.dto.ts:6",{"_index":266,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDiscountDto.html":{}}}],["discount.id",{"_index":325,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["discount.percentoff",{"_index":1203,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["discount.provider",{"_index":933,"title":{},"body":{"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{}}}],["discount.provider.ts",{"_index":272,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"coverage.html":{}}}],["discount.provider.ts:13",{"_index":278,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["discount.provider.ts:22",{"_index":545,"title":{},"body":{"injectables/CreateDiscountProvider.html":{}}}],["discount.provider.ts:33",{"_index":281,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["discount.provider.ts:8",{"_index":543,"title":{},"body":{"injectables/CreateDiscountProvider.html":{}}}],["discount.usagelimit",{"_index":327,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["discountapplied",{"_index":1313,"title":{},"body":{"entities/Order.html":{}}}],["discountid",{"_index":960,"title":{},"body":{"injectables/DiscountsUsageService.html":{},"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["discounts",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{}}}],["discounts.controller",{"_index":931,"title":{},"body":{"modules/DiscountsModule.html":{}}}],["discounts.entity",{"_index":289,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{}}}],["discounts/discounts.module",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["discountscontroller",{"_index":909,"title":{"controllers/DiscountsController.html":{}},"body":{"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"coverage.html":{}}}],["discountsmodule",{"_index":147,"title":{"modules/DiscountsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DiscountsModule.html":{},"modules.html":{},"overview.html":{}}}],["discountsrepository",{"_index":279,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{}}}],["discountsservice",{"_index":914,"title":{"injectables/DiscountsService.html":{}},"body":{"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"coverage.html":{},"overview.html":{}}}],["discountsusagemodule",{"_index":148,"title":{"modules/DiscountsUsageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules.html":{},"overview.html":{}}}],["discountsusagerepository",{"_index":956,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["discountsusageservice",{"_index":277,"title":{"injectables/DiscountsUsageService.html":{}},"body":{"injectables/ApplyForDiscountProvider.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"coverage.html":{},"overview.html":{}}}],["discountusage",{"_index":890,"title":{"entities/DiscountUsage.html":{}},"body":{"entities/DiscountUsage.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"entities/Order.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["discountusage.order",{"_index":1325,"title":{},"body":{"entities/Order.html":{}}}],["displayorder",{"_index":649,"title":{},"body":{"injectables/CreateProductProvider.html":{},"entities/ProductImage.html":{}}}],["dive",{"_index":2322,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":2198,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dressing",{"_index":1104,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["dressstyle",{"_index":558,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["dto",{"_index":635,"title":{},"body":{"injectables/CreateProductProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/OtpSigninDto.html":{},"classes/PaginationQueryDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{}}}],["dtos/apply",{"_index":919,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["dtos/create",{"_index":547,"title":{},"body":{"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["dtos/createproductdto",{"_index":601,"title":{},"body":{"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["dtos/get",{"_index":980,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/initiate",{"_index":1151,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{}}}],["dtos/otpsignin.dto",{"_index":389,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/OtpSigninProvider.html":{}}}],["dtos/pagination",{"_index":1411,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["dtos/patch",{"_index":1725,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/refresh",{"_index":382,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RefreshTokenProvider.html":{}}}],["dtos/sign",{"_index":374,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SignInProvider.html":{}}}],["dtos/update",{"_index":841,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{}}}],["dynamically",{"_index":1727,"title":{},"body":{"controllers/ProductsController.html":{}}}],["e2e",{"_index":2308,"title":{},"body":{"index.html":{}}}],["each",{"_index":586,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"classes/ProductWithVariantDto.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["eager",{"_index":1572,"title":{},"body":{"entities/Product.html":{},"entities/ProductVariant.html":{}}}],["efficient",{"_index":2291,"title":{},"body":{"index.html":{}}}],["ejsadapter",{"_index":1233,"title":{},"body":{"modules/MailModule.html":{}}}],["email",{"_index":118,"title":{},"body":{"interfaces/ActiveUserData.html":{},"controllers/AuthController.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["email.provider",{"_index":2096,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["email.provider.ts",{"_index":1038,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"coverage.html":{}}}],["email.provider.ts:14",{"_index":1040,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{}}}],["email.provider.ts:32",{"_index":1042,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{}}}],["end",{"_index":1120,"title":{},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["enddate",{"_index":1117,"title":{},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["ensures",{"_index":656,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["ensuring",{"_index":1644,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["enterprise",{"_index":2338,"title":{},"body":{"index.html":{}}}],["entities",{"_index":801,"title":{},"body":{"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"overview.html":{}}}],["entity",{"_index":634,"title":{"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{}},"body":{"injectables/CreateProductProvider.html":{},"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"coverage.html":{}}}],["entitymanager",{"_index":1630,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["entries",{"_index":1694,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["enum",{"_index":1329,"title":{},"body":{"entities/Order.html":{},"entities/Payment.html":{},"entities/User.html":{}}}],["enumerations",{"_index":2267,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/account",{"_index":758,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["enums/auth",{"_index":380,"title":{},"body":{"controllers/AuthController.html":{}}}],["enums/order",{"_index":1341,"title":{},"body":{"entities/Order.html":{}}}],["enums/paymentstatus.enum",{"_index":1506,"title":{},"body":{"entities/Payment.html":{}}}],["enums/role",{"_index":1863,"title":{},"body":{"classes/SignInDto.html":{}}}],["env",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["env.${env",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["enviroment",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["enviromentvalidation",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":503,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DeliveryStatesService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["error",{"_index":310,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["error('purchase",{"_index":2165,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["eslint",{"_index":92,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["eslint/no",{"_index":97,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["estimateddeliverydate",{"_index":1314,"title":{},"body":{"entities/Order.html":{}}}],["event",{"_index":1711,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["eventid",{"_index":1705,"title":{},"body":{"controllers/ProductsController.html":{}}}],["events",{"_index":1113,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["example",{"_index":345,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/OtpSigninDto.html":{},"controllers/ProductsController.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["example1",{"_index":398,"title":{},"body":{"controllers/AuthController.html":{}}}],["example2",{"_index":401,"title":{},"body":{"controllers/AuthController.html":{}}}],["examples",{"_index":349,"title":{},"body":{"controllers/AuthController.html":{}}}],["exceed",{"_index":698,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["exceeds",{"_index":1663,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["exception",{"_index":1871,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["excetion",{"_index":72,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["execution",{"_index":487,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{}}}],["executioncontext",{"_index":31,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":319,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/SignInProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["exists",{"_index":1657,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["experience",{"_index":2325,"title":{},"body":{"index.html":{}}}],["expire.provider",{"_index":2098,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["expire.provider.ts",{"_index":1886,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{},"coverage.html":{}}}],["expire.provider.ts:10",{"_index":1889,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["expire.provider.ts:29",{"_index":1891,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["expired",{"_index":320,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["expires",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["expiresin",{"_index":1069,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["expiry",{"_index":506,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["export",{"_index":63,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["exports",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":58,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/PaginationProvider.html":{},"controllers/ProductsController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":607,"title":{},"body":{"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["extends",{"_index":1114,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/UpdateDeliveryStateDto.html":{}}}],["extension",{"_index":2007,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["extract",{"_index":75,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/UploadToAwsProvider.html":{}}}],["extracting",{"_index":47,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["extractrequestfromheader",{"_index":17,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["extractrequestfromheader(request",{"_index":44,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["failed",{"_index":2177,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{},"miscellaneous/enumerations.html":{}}}],["false",{"_index":40,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"modules/MailModule.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"guards/RolesGuard.html":{},"entities/Subscriber.html":{},"injectables/UpdateProductProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["fashion",{"_index":1251,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["favour@gmail.com",{"_index":748,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["favour@gmail.com'})@isemail()@maxlength(96)@isnotempty",{"_index":742,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["fee",{"_index":526,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"entities/DeliveryState.html":{}}}],["fetch",{"_index":1045,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/RefreshTokenProvider.html":{}}}],["fetched",{"_index":1692,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["few",{"_index":2311,"title":{},"body":{"index.html":{}}}],["field",{"_index":2387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fields",{"_index":1728,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/UpdateProductProvider.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["file.buffer",{"_index":1997,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["file.mimetype",{"_index":2000,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["file.originalname.split('.')[0",{"_index":2002,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["filearray",{"_index":624,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["filefieldsinterceptor",{"_index":1722,"title":{},"body":{"controllers/ProductsController.html":{}}}],["filename",{"_index":1988,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["files",{"_index":627,"title":{},"body":{"injectables/CreateProductProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["fileupload",{"_index":1979,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["fileupload(file",{"_index":1982,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["filteredconditions",{"_index":1014,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["filtering",{"_index":988,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["finally",{"_index":667,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["finalresponse",{"_index":1436,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["find",{"_index":720,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductsService.html":{},"injectables/SignInProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["findall",{"_index":968,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["findall(productquery",{"_index":973,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/ProductsService.html":{}}}],["findall(userquery",{"_index":2117,"title":{},"body":{"injectables/UsersService.html":{}}}],["findallproducts",{"_index":1679,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findallproducts(@query",{"_index":1741,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findallproducts(productquery",{"_index":1690,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findallproductsprovider",{"_index":965,"title":{"injectables/FindAllProductsProvider.html":{}},"body":{"injectables/FindAllProductsProvider.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["findallusers",{"_index":2056,"title":{},"body":{"controllers/UsersController.html":{}}}],["findallusers(@query",{"_index":2082,"title":{},"body":{"controllers/UsersController.html":{}}}],["findallusers(usersquery",{"_index":2066,"title":{},"body":{"controllers/UsersController.html":{}}}],["findbyid",{"_index":1032,"title":{},"body":{"injectables/FindOneByIdProvider.html":{}}}],["findbyid(id",{"_index":1034,"title":{},"body":{"injectables/FindOneByIdProvider.html":{}}}],["finddeliverystatebyname",{"_index":861,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["finddeliverystatebyname(state",{"_index":866,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["finddeliverystatebystate",{"_index":820,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["finddeliverystatebystate(@param('state",{"_index":847,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["finddeliverystatebystate(state",{"_index":825,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["finding",{"_index":1031,"title":{},"body":{"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["findonebyemail",{"_index":1039,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"injectables/UsersService.html":{}}}],["findonebyemail(email",{"_index":1041,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"injectables/UsersService.html":{}}}],["findonebyid",{"_index":2104,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyid(id",{"_index":2121,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyidprovider",{"_index":1027,"title":{"injectables/FindOneByIdProvider.html":{}},"body":{"injectables/FindOneByIdProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["findoneuserbyemailprovider",{"_index":1037,"title":{"injectables/FindOneUserByEmailProvider.html":{}},"body":{"injectables/FindOneUserByEmailProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["findproductbyid",{"_index":1680,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findproductbyid(@param('productid",{"_index":1739,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findproductbyid(productid",{"_index":1702,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findproductvariantbyid",{"_index":1623,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["findproductvariantbyid(variantid",{"_index":1633,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["finds",{"_index":845,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["finduser",{"_index":2057,"title":{},"body":{"controllers/UsersController.html":{}}}],["finduser(@param('userid",{"_index":2080,"title":{},"body":{"controllers/UsersController.html":{}}}],["finduser(userid",{"_index":2071,"title":{},"body":{"controllers/UsersController.html":{}}}],["finduserbyotpandexpiresprovider",{"_index":2110,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyotpandexpirytime",{"_index":1050,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["finduserbyotpandexpirytime(otp",{"_index":1052,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["finduserbyotpandexpirytimeprovider",{"_index":1047,"title":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["finduserbyresetotpandexpiresprovider",{"_index":2129,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyresetotpandexpirytime",{"_index":2105,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyresetotpandexpirytime(otp",{"_index":2123,"title":{},"body":{"injectables/UsersService.html":{}}}],["fire",{"_index":500,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["first",{"_index":1394,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["firstname",{"_index":1302,"title":{},"body":{"injectables/MailService.html":{},"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["flat",{"_index":651,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["follow",{"_index":2340,"title":{},"body":{"index.html":{}}}],["forbiddenexception",{"_index":1848,"title":{},"body":{"guards/RolesGuard.html":{}}}],["forbiddenexception('user",{"_index":1856,"title":{},"body":{"guards/RolesGuard.html":{}}}],["forgotpasswordprovider",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["format",{"_index":793,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["formatting",{"_index":790,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["forwardref",{"_index":426,"title":{},"body":{"modules/AuthModule.html":{},"injectables/CreateUsersProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{},"modules/UsersModule.html":{}}}],["fot",{"_index":1095,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["found",{"_index":1641,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"guards/RolesGuard.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["framework",{"_index":2289,"title":{},"body":{"index.html":{}}}],["full",{"_index":2337,"title":{},"body":{"index.html":{}}}],["fullname",{"_index":1293,"title":{},"body":{"injectables/MailService.html":{}}}],["function",{"_index":33,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":2282,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gaurding",{"_index":2398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generate",{"_index":1083,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"controllers/ProductsController.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{},"injectables/UploadToAwsProvider.html":{}}}],["generated",{"_index":2033,"title":{},"body":{"injectables/UploadsService.html":{}}}],["generatefilename",{"_index":1980,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["generatefilename(file",{"_index":1986,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["generatetoken",{"_index":1372,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["generatetokenprovider",{"_index":1367,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["generatetokens",{"_index":1063,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["generatetokens(user",{"_index":1066,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["generatetokensprovider",{"_index":421,"title":{"injectables/GenerateTokensProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{},"coverage.html":{},"overview.html":{}}}],["generating",{"_index":1062,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/UploadToAwsProvider.html":{}}}],["get('/:productid",{"_index":1738,"title":{},"body":{"controllers/ProductsController.html":{}}}],["get('/:state",{"_index":846,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["get('/:userid",{"_index":2079,"title":{},"body":{"controllers/UsersController.html":{}}}],["getauthheader",{"_index":1138,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["gethello",{"_index":126,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getone",{"_index":1656,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["getproductsbasedto",{"_index":1091,"title":{"classes/GetProductsBaseDto.html":{}},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"coverage.html":{}}}],["getproductsdto",{"_index":974,"title":{"classes/GetProductsDto.html":{}},"body":{"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["gets",{"_index":962,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["getting",{"_index":1146,"title":{"index.html":{}},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["getusersbasedto",{"_index":1115,"title":{"classes/GetUsersBaseDto.html":{}},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"coverage.html":{}}}],["getusersdto",{"_index":1122,"title":{"classes/GetUsersDto.html":{}},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["global",{"_index":1227,"title":{},"body":{"modules/MailModule.html":{}}}],["gotten",{"_index":1793,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["grab",{"_index":71,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["graph",{"_index":2331,"title":{},"body":{"index.html":{},"modules.html":{}}}],["grow",{"_index":2350,"title":{},"body":{"index.html":{}}}],["guard",{"_index":0,"title":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["guarding",{"_index":2394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["handle",{"_index":318,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{}}}],["handlepaymentwebhook",{"_index":1518,"title":{},"body":{"controllers/PaystackController.html":{}}}],["handlepaymentwebhook(body",{"_index":1520,"title":{},"body":{"controllers/PaystackController.html":{}}}],["hands",{"_index":2324,"title":{},"body":{"index.html":{}}}],["handy",{"_index":2314,"title":{},"body":{"index.html":{}}}],["hased",{"_index":1378,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["hash",{"_index":1373,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["hashedotp",{"_index":1374,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{}}}],["hashingprovider",{"_index":770,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"injectables/SignInProvider.html":{}}}],["hasrole",{"_index":1857,"title":{},"body":{"guards/RolesGuard.html":{}}}],["hdfbwojefbnqpkfbjoqfehfewfeqwf234jr",{"_index":1783,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["hdfbwojefbnqpkfbjoqfehfewfeqwf234jr'})@isnotempty()@isstring",{"_index":1781,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["header",{"_index":76,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/InitiatePaymentProvider.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["headers",{"_index":48,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["headers('x",{"_index":1533,"title":{},"body":{"controllers/PaystackController.html":{}}}],["hello",{"_index":258,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":2335,"title":{},"body":{"index.html":{}}}],["here",{"_index":662,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"index.html":{}}}],["hive",{"_index":1284,"title":{},"body":{"injectables/MailService.html":{}}}],["hive's",{"_index":1306,"title":{},"body":{"injectables/MailService.html":{}}}],["host",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["httpcode",{"_index":370,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":1748,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["httpcode(httpstatus.ok",{"_index":406,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{}}}],["httpexception",{"_index":2156,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["httpexception('invalid",{"_index":2186,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["https://nestjs.com",{"_index":2362,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":371,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["httpstatus.bad_request",{"_index":2189,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["httpstatus.forbidden",{"_index":2187,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["id",{"_index":121,"title":{},"body":{"interfaces/ActiveUserData.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"entities/DeliveryState.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"injectables/OtpSigninProvider.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"injectables/SignInProvider.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["id'})@apiparam({name",{"_index":1704,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["id'})@apiresponse({status",{"_index":1703,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["id.provider",{"_index":2100,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["id.provider.ts",{"_index":1030,"title":{},"body":{"injectables/FindOneByIdProvider.html":{},"coverage.html":{}}}],["id.provider.ts:14",{"_index":1033,"title":{},"body":{"injectables/FindOneByIdProvider.html":{}}}],["id.provider.ts:32",{"_index":1035,"title":{},"body":{"injectables/FindOneByIdProvider.html":{}}}],["identifier",{"_index":1706,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["iloghaluagneskc@gmail.com",{"_index":399,"title":{},"body":{"controllers/AuthController.html":{}}}],["image",{"_index":641,"title":{},"body":{"injectables/CreateProductProvider.html":{},"entities/ProductVariant.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["image.entity",{"_index":604,"title":{},"body":{"injectables/CreateProductProvider.html":{},"modules/ProductImagesModule.html":{},"entities/ProductVariant.html":{}}}],["image.entity.ts",{"_index":1588,"title":{},"body":{"entities/ProductImage.html":{},"coverage.html":{}}}],["image.entity.ts:13",{"_index":1591,"title":{},"body":{"entities/ProductImage.html":{}}}],["image.entity.ts:16",{"_index":1592,"title":{},"body":{"entities/ProductImage.html":{}}}],["image.entity.ts:19",{"_index":1590,"title":{},"body":{"entities/ProductImage.html":{}}}],["image.entity.ts:25",{"_index":1596,"title":{},"body":{"entities/ProductImage.html":{}}}],["image.productvariant",{"_index":1609,"title":{},"body":{"entities/ProductVariant.html":{}}}],["image/jpeg",{"_index":2028,"title":{},"body":{"injectables/UploadsService.html":{}}}],["image/jpg'].includes(file.mimetype",{"_index":2030,"title":{},"body":{"injectables/UploadsService.html":{}}}],["image/png",{"_index":2029,"title":{},"body":{"injectables/UploadsService.html":{}}}],["imagepath",{"_index":647,"title":{},"body":{"injectables/CreateProductProvider.html":{},"entities/ProductImage.html":{}}}],["images",{"_index":596,"title":{},"body":{"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"entities/ProductVariant.html":{}}}],["images.module",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["images.module.ts",{"_index":1600,"title":{},"body":{"modules/ProductImagesModule.html":{}}}],["images.service",{"_index":1602,"title":{},"body":{"modules/ProductImagesModule.html":{}}}],["images.service.ts",{"_index":1605,"title":{},"body":{"injectables/ProductImagesService.html":{},"coverage.html":{}}}],["images/product",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"injectables/CreateProductProvider.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"entities/ProductVariant.html":{},"coverage.html":{}}}],["images/providers/product",{"_index":1604,"title":{},"body":{"injectables/ProductImagesService.html":{},"coverage.html":{}}}],["imgurl",{"_index":648,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["imgurls.map((imgurl",{"_index":645,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["implements",{"_index":65,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{},"guards/RolesGuard.html":{}}}],["import",{"_index":51,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["importation",{"_index":1235,"title":{},"body":{"modules/MailModule.html":{}}}],["importing",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["imports",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaymentModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["in')@auth(authtype.none)@httpcode(httpstatus.ok",{"_index":366,"title":{},"body":{"controllers/AuthController.html":{}}}],["in(productquery['category'].slice().split",{"_index":995,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["in(productquery['clothtype'].slice().split",{"_index":999,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["in(productquery['colors'].slice().split",{"_index":1006,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["in(productquery['dressstyle'].slice().split",{"_index":1001,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["in(productquery['sizes'].slice().split",{"_index":1008,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["in.dto",{"_index":375,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["in.dto.ts",{"_index":1860,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["in.dto.ts:19",{"_index":1861,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.dto.ts:30",{"_index":1862,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.provider",{"_index":430,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["in.provider.ts",{"_index":1865,"title":{},"body":{"injectables/SignInProvider.html":{},"coverage.html":{}}}],["in.provider.ts:17",{"_index":1867,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["in.provider.ts:42",{"_index":1868,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["indetifying",{"_index":85,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":2065,"title":{},"body":{"controllers/UsersController.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["inhjecting",{"_index":772,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["initialize",{"_index":1205,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initializepayment",{"_index":1139,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initializepayment(initiatepaymentdto",{"_index":1149,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initiate",{"_index":1553,"title":{},"body":{"injectables/PaystackService.html":{}}}],["initiatepayment",{"_index":1519,"title":{},"body":{"controllers/PaystackController.html":{},"injectables/PaystackService.html":{}}}],["initiatepayment(initiatepaymentdto",{"_index":1524,"title":{},"body":{"controllers/PaystackController.html":{},"injectables/PaystackService.html":{}}}],["initiatepaymentdto",{"_index":1123,"title":{"classes/InitiatePaymentDto.html":{}},"body":{"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"classes/ProductWithVariantDto.html":{},"coverage.html":{}}}],["initiatepaymentdto.deliveryaddress",{"_index":1172,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initiatepaymentdto.deliverypicker",{"_index":1176,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initiatepaymentdto.discountid",{"_index":1168,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initiatepaymentdto.products",{"_index":1180,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["initiatepaymentprovider",{"_index":1135,"title":{"injectables/InitiatePaymentProvider.html":{}},"body":{"injectables/InitiatePaymentProvider.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"coverage.html":{},"overview.html":{}}}],["inject",{"_index":52,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"injectables/CreateUsersProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/PaginationProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["inject(forwardref",{"_index":1790,"title":{},"body":{"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["inject(jwtconfig.key",{"_index":70,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["inject(paystackconfig.key",{"_index":1163,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["inject(request",{"_index":1415,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["injectable",{"_index":53,"title":{"injectables/AppService.html":{},"injectables/ApplyForDiscountProvider.html":{},"injectables/AuthService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/PaystackService.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}},"body":{"guards/AccessTokenGuard.html":{},"injectables/AppService.html":{},"injectables/ApplyForDiscountProvider.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/PaystackService.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["injectables",{"_index":255,"title":{},"body":{"injectables/AppService.html":{},"injectables/ApplyForDiscountProvider.html":{},"injectables/AuthService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/PaystackService.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"overview.html":{}}}],["injecting",{"_index":295,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["injectrepository",{"_index":290,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["injectrepository(deliverystate",{"_index":869,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["injectrepository(discount",{"_index":296,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{}}}],["injectrepository(discountusage",{"_index":961,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["injectrepository(product",{"_index":985,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["injectrepository(productvariant",{"_index":1639,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["injectrepository(review",{"_index":718,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/ReviewsService.html":{}}}],["injectrepository(subscriber",{"_index":1931,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["injectrepository(user",{"_index":517,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/UsersService.html":{}}}],["inlinecssenabled",{"_index":1257,"title":{},"body":{"modules/MailModule.html":{}}}],["inner",{"_index":1195,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["inorder",{"_index":1413,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["installcompile",{"_index":2299,"title":{},"body":{"index.html":{}}}],["instance",{"_index":501,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["int",{"_index":1806,"title":{},"body":{"entities/Review.html":{}}}],["int'})@check('\"stars",{"_index":1804,"title":{},"body":{"entities/Review.html":{}}}],["interact",{"_index":2332,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":784,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["intercept(context",{"_index":787,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["interceptor",{"_index":783,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"controllers/ProductsController.html":{}}}],["interface",{"_index":111,"title":{"interfaces/ActiveUserData.html":{},"interfaces/Paginated.html":{}},"body":{"interfaces/ActiveUserData.html":{},"interfaces/Paginated.html":{},"coverage.html":{}}}],["interfaces",{"_index":113,"title":{},"body":{"interfaces/ActiveUserData.html":{},"interfaces/Paginated.html":{},"overview.html":{}}}],["interfaces/active",{"_index":1074,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["interfaces/paginated.interface",{"_index":1414,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["intersectiontype",{"_index":1109,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["invalid",{"_index":402,"title":{},"body":{"controllers/AuthController.html":{}}}],["inversejoincolumn",{"_index":1333,"title":{},"body":{"entities/Order.html":{},"entities/Payment.html":{}}}],["isarray",{"_index":579,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/PatchProductDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["isarray()@isnotempty()@validatenested({each",{"_index":575,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["isarray()@isoptional",{"_index":1461,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["isboolean",{"_index":1470,"title":{},"body":{"classes/PatchProductVariantDto.html":{}}}],["isboolean()@isoptional",{"_index":1467,"title":{},"body":{"classes/PatchProductVariantDto.html":{}}}],["isdate",{"_index":539,"title":{},"body":{"classes/CreateDiscountDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["isdate()@isnotempty",{"_index":537,"title":{},"body":{"classes/CreateDiscountDto.html":{}}}],["isdate()@isoptional",{"_index":1119,"title":{},"body":{"classes/GetUsersBaseDto.html":{}}}],["isemail",{"_index":746,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["isenum",{"_index":756,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["isenum(role",{"_index":761,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["isglobal",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":532,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/OtpSigninDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchUserDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["isint()@isnotempty",{"_index":529,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["isint()@isnotempty()@min(1",{"_index":679,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{}}}],["isint()@isoptional",{"_index":1458,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["isnotempty",{"_index":267,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/OtpSigninDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{}}}],["isoptional",{"_index":682,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["isoptional()@isarray()@validatenested({each",{"_index":677,"title":{},"body":{"classes/CreateProductVariantDto.html":{}}}],["isoptional()@isint",{"_index":1487,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["isoptional()@ispositive",{"_index":1445,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["isoptional()@isstring",{"_index":1480,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["ispositive",{"_index":1447,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["isstring",{"_index":268,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/RefreshTokenDto.html":{}}}],["isstring()@isnotempty",{"_index":265,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["isstring()@isoptional",{"_index":1098,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{}}}],["issuer",{"_index":1078,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["item",{"_index":1688,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{}}}],["items",{"_index":1417,"title":{},"body":{"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{}}}],["itemsperpage",{"_index":1390,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["iterate",{"_index":1179,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["jbfwihfubfjkebiejhfbw",{"_index":414,"title":{},"body":{"controllers/AuthController.html":{}}}],["job",{"_index":2343,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":2345,"title":{},"body":{"index.html":{}}}],["joi",{"_index":2257,"title":{},"body":{"dependencies.html":{}}}],["join",{"_index":1004,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"modules/MailModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":1254,"title":{},"body":{"modules/MailModule.html":{}}}],["joincolumn",{"_index":906,"title":{},"body":{"entities/DiscountUsage.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{}}}],["jointable",{"_index":1339,"title":{},"body":{"entities/Order.html":{},"entities/Payment.html":{}}}],["jsbfiwhvfquobdfj",{"_index":396,"title":{},"body":{"controllers/AuthController.html":{}}}],["jwt",{"_index":68,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["jwtconfig",{"_index":59,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["jwtconfiguration",{"_index":21,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["jwtmodule",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtmodule.registerasync(jwtconfig.asprovider",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtservice",{"_index":20,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["kamil",{"_index":2359,"title":{},"body":{"index.html":{}}}],["key",{"_index":606,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/FindAllProductsProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UploadToAwsProvider.html":{}}}],["keyof",{"_index":2388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keyword",{"_index":476,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["kobo",{"_index":1213,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["last",{"_index":1395,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["lastname",{"_index":2038,"title":{},"body":{"entities/User.html":{}}}],["lasttname",{"_index":1476,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["later",{"_index":316,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["learn",{"_index":2317,"title":{},"body":{"index.html":{}}}],["legend",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":1730,"title":{},"body":{"controllers/ProductsController.html":{},"entities/Subscriber.html":{},"entities/User.html":{}}}],["lessthanorequal",{"_index":286,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["lessthanorequal(new",{"_index":306,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["let's",{"_index":1288,"title":{},"body":{"injectables/MailService.html":{}}}],["level",{"_index":1944,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["license",{"_index":2365,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":2348,"title":{},"body":{"index.html":{}}}],["like(`%${productquery['name'].slice().split",{"_index":1003,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["limit",{"_index":963,"title":{},"body":{"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"classes/PaginationQueryDto.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["line",{"_index":95,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["linkedin",{"_index":2341,"title":{},"body":{"index.html":{}}}],["links",{"_index":1385,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["list",{"_index":978,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["literal",{"_index":597,"title":{},"body":{"injectables/CreateProductProvider.html":{},"interfaces/Paginated.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["load",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["lock",{"_index":1648,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["logged",{"_index":116,"title":{},"body":{"interfaces/ActiveUserData.html":{},"guards/AuthenticationGuard.html":{}}}],["logging",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":343,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/MailService.html":{},"injectables/UsersService.html":{}}}],["longdescription",{"_index":559,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["longer",{"_index":1059,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["looking",{"_index":2342,"title":{},"body":{"index.html":{}}}],["loop",{"_index":498,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"index.html":{}}}],["mail",{"_index":1236,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/SignInProvider.html":{},"injectables/SubscribersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["mail/mail.module",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["mailer",{"_index":1240,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["mailermodule",{"_index":1229,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":1237,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":1265,"title":{},"body":{"injectables/MailService.html":{}}}],["mailmodule",{"_index":149,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules/SubscribersModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":771,"title":{"injectables/MailService.html":{}},"body":{"injectables/CreateUsersProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/SignInProvider.html":{},"injectables/SubscribersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"overview.html":{}}}],["makes",{"_index":484,"title":{},"body":{"guards/AuthenticationGuard.html":{},"modules/MailModule.html":{}}}],["manager",{"_index":1632,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["manager.save(variant",{"_index":1672,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["manually",{"_index":1969,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["many",{"_index":301,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsService.html":{}}}],["manytomany",{"_index":1340,"title":{},"body":{"entities/Order.html":{},"entities/Payment.html":{}}}],["manytomany(undefined)@jointable({name",{"_index":1331,"title":{},"body":{"entities/Order.html":{},"entities/Payment.html":{}}}],["manytoone",{"_index":907,"title":{},"body":{"entities/DiscountUsage.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{}}}],["manytoone(undefined",{"_index":894,"title":{},"body":{"entities/DiscountUsage.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{}}}],["map",{"_index":479,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["map((data",{"_index":798,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["map((imgurls",{"_index":643,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["map((prd",{"_index":1188,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["map((vr",{"_index":1197,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["matching",{"_index":110,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":560,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["math.ceil(totalitems",{"_index":1433,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["max",{"_index":701,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["max(5",{"_index":703,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["maxcount",{"_index":1732,"title":{},"body":{"controllers/ProductsController.html":{}}}],["maxlength",{"_index":747,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["maxlength(96",{"_index":749,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["means",{"_index":472,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["meets",{"_index":1845,"title":{},"body":{"guards/RolesGuard.html":{}}}],["message",{"_index":409,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateReviewDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["meta",{"_index":1386,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["metadata",{"_index":486,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/InitiatePaymentProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"dependencies.html":{}}}],["method",{"_index":489,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{}}}],["methods",{"_index":13,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["mimetype",{"_index":2027,"title":{},"body":{"injectables/UploadsService.html":{}}}],["min",{"_index":683,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{}}}],["min(1",{"_index":684,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{}}}],["miscellaneous",{"_index":2266,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":403,"title":{},"body":{"controllers/AuthController.html":{}}}],["mit",{"_index":2347,"title":{},"body":{"index.html":{}}}],["mode",{"_index":2302,"title":{},"body":{"index.html":{}}}],["module",{"_index":133,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaymentModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaymentModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["modules",{"_index":135,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaymentModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":1231,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/ejs.adapter",{"_index":1234,"title":{},"body":{"modules/MailModule.html":{}}}],["moment",{"_index":314,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["more",{"_index":2318,"title":{},"body":{"index.html":{}}}],["morethan",{"_index":1054,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["morethan(new",{"_index":1056,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["morethanorequal",{"_index":287,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["morethanorequal(new",{"_index":309,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["myśliwiec",{"_index":2360,"title":{},"body":{"index.html":{}}}],["name",{"_index":27,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PatchProductDto.html":{},"entities/Payment.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["name.replace(/|s/g",{"_index":2005,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["need",{"_index":1238,"title":{},"body":{"modules/MailModule.html":{},"index.html":{}}}],["nest",{"_index":2285,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["nested",{"_index":1010,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["nestframework",{"_index":2364,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":794,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["nestjs",{"_index":1230,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/common",{"_index":55,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"injectables/OtpSigninProvider.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":56,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"modules/PaystackModule.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/VerifyPaymentProvider.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/PaginationProvider.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":57,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1469,"title":{},"body":{"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/UpdateDeliveryStateDto.html":{}}}],["nestjs/platform",{"_index":1723,"title":{},"body":{"controllers/ProductsController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":388,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/OtpSigninDto.html":{},"controllers/ProductsController.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplyForDiscountProvider.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"modules/OrdersModule.html":{},"modules/PaymentModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":79,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["newreview",{"_index":723,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newreview.datecreated",{"_index":734,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newreview.id",{"_index":729,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newreview.product.id",{"_index":735,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newreview.review",{"_index":732,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newreview.reviewer",{"_index":730,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newreview.stars",{"_index":731,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["newsletter",{"_index":1277,"title":{},"body":{"injectables/MailService.html":{},"injectables/SubscribersService.html":{}}}],["newurl",{"_index":1429,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?limit=${paginationquery.limit}&page=${nextpage",{"_index":1440,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?limit=${paginationquery.limit}&page=${paginationquery.page",{"_index":1439,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?limit=${paginationquery.limit}&page=${prevpage",{"_index":1441,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?limit=${paginationquery.limit}&page=${totalpages",{"_index":1438,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newurl.origin}${newurl.pathname}?limit=${paginationquery.limit}&page=1",{"_index":1437,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["newuser",{"_index":773,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["newuser.email",{"_index":777,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["newuser.id",{"_index":776,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["newuser.role",{"_index":778,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["newuserobj",{"_index":518,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{}}}],["next",{"_index":94,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["next.handle().pipe",{"_index":797,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["nextpage",{"_index":1434,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["nich",{"_index":1250,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["node.js",{"_index":2288,"title":{},"body":{"index.html":{}}}],["none",{"_index":2274,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notfoundexception",{"_index":979,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{}}}],["notfoundexception(`product",{"_index":1776,"title":{},"body":{"injectables/ProductsService.html":{}}}],["notfoundexception(error",{"_index":1026,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["npm",{"_index":2298,"title":{},"body":{"index.html":{}}}],["null",{"_index":328,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/UsersService.html":{}}}],["nullable",{"_index":888,"title":{},"body":{"entities/Discount.html":{},"entities/DiscountUsage.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Subscriber.html":{},"entities/User.html":{}}}],["number",{"_index":528,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"entities/DeliveryState.html":{},"entities/Discount.html":{},"injectables/GenerateTokensProvider.html":{},"classes/InitiatePaymentDto.html":{},"entities/Order.html":{},"classes/OtpSigninDto.html":{},"interfaces/Paginated.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["obj",{"_index":546,"title":{},"body":{"injectables/CreateDiscountProvider.html":{}}}],["object",{"_index":941,"title":{},"body":{"injectables/DiscountsService.html":{},"injectables/GenerateTokensProvider.html":{}}}],["object.entries(conditions).filter(([_",{"_index":1016,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["object.entries(images).foreach",{"_index":623,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["object.fromentries",{"_index":1015,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["object.keys(productquery).foreach((key",{"_index":991,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["object.keys(whereoptions).length",{"_index":1020,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["objectliteral",{"_index":1412,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["observable",{"_index":467,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{}}}],["offer",{"_index":2344,"title":{},"body":{"index.html":{}}}],["official",{"_index":2326,"title":{},"body":{"index.html":{}}}],["ondelete",{"_index":1594,"title":{},"body":{"entities/ProductImage.html":{},"entities/ProductVariant.html":{}}}],["one",{"_index":1029,"title":{},"body":{"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/PaginationProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["onetomany",{"_index":1579,"title":{},"body":{"entities/Product.html":{},"entities/ProductVariant.html":{}}}],["onetomany(undefined",{"_index":1569,"title":{},"body":{"entities/Product.html":{},"entities/ProductVariant.html":{}}}],["onetoone",{"_index":908,"title":{},"body":{"entities/DiscountUsage.html":{},"entities/Order.html":{}}}],["onetoone(undefined",{"_index":897,"title":{},"body":{"entities/DiscountUsage.html":{},"entities/Order.html":{}}}],["open",{"_index":2349,"title":{},"body":{"index.html":{}}}],["optional",{"_index":29,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["options",{"_index":1021,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"modules/MailModule.html":{},"injectables/PaginationProvider.html":{}}}],["options.relations",{"_index":1422,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["options.select",{"_index":1423,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["options.where",{"_index":1424,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["order",{"_index":892,"title":{"entities/Order.html":{}},"body":{"entities/DiscountUsage.html":{},"entities/Order.html":{},"modules/OrdersModule.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["order.discountapplied",{"_index":2175,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["order.discountusage",{"_index":898,"title":{},"body":{"entities/DiscountUsage.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["order.entity",{"_index":1356,"title":{},"body":{"modules/OrdersModule.html":{}}}],["orderid",{"_index":1344,"title":{},"body":{"entities/Order.html":{}}}],["orders",{"_index":1348,"title":{},"body":{"controllers/OrdersController.html":{}}}],["orders.controller",{"_index":1354,"title":{},"body":{"modules/OrdersModule.html":{}}}],["orders/orders.module",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["orders_products",{"_index":1332,"title":{},"body":{"entities/Order.html":{}}}],["orderscontroller",{"_index":1346,"title":{"controllers/OrdersController.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"coverage.html":{}}}],["ordersmodule",{"_index":150,"title":{"modules/OrdersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"modules.html":{},"overview.html":{}}}],["ordersservice",{"_index":1352,"title":{"injectables/OrdersService.html":{}},"body":{"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"overview.html":{}}}],["orderstatus",{"_index":1315,"title":{},"body":{"entities/Order.html":{},"miscellaneous/enumerations.html":{}}}],["orderstatus.placed",{"_index":1343,"title":{},"body":{"entities/Order.html":{}}}],["otp",{"_index":347,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/MailService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["otp'})@apiresponse({status",{"_index":341,"title":{},"body":{"controllers/AuthController.html":{}}}],["otp.tostring",{"_index":1883,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["otpexpire",{"_index":519,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/User.html":{}}}],["otpsignin",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["otpsignin(@body",{"_index":412,"title":{},"body":{"controllers/AuthController.html":{}}}],["otpsignin(otpsignindto",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["otpsignindto",{"_index":338,"title":{"classes/OtpSigninDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"coverage.html":{}}}],["otpsigninprovider",{"_index":422,"title":{"injectables/OtpSigninProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/OtpSigninProvider.html":{},"coverage.html":{},"overview.html":{}}}],["out",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":2369,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":2240,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":989,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"classes/PaginationQueryDto.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["pages",{"_index":1389,"title":{},"body":{"interfaces/Paginated.html":{}}}],["paginated",{"_index":977,"title":{"interfaces/Paginated.html":{}},"body":{"injectables/FindAllProductsProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["paginated'})@apiquery({name",{"_index":1693,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["paginating",{"_index":1410,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["pagination",{"_index":986,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"injectables/UsersService.html":{}}}],["paginationmodule",{"_index":1398,"title":{"modules/PaginationModule.html":{}},"body":{"modules/PaginationModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["paginationprovider",{"_index":970,"title":{"injectables/PaginationProvider.html":{}},"body":{"injectables/FindAllProductsProvider.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["paginationquery",{"_index":1405,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["paginationquery(paginationquery",{"_index":1408,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["paginationquery.limit",{"_index":1420,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["paginationquery.page",{"_index":1419,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["paginationquerydto",{"_index":1110,"title":{"classes/PaginationQueryDto.html":{}},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"coverage.html":{}}}],["param",{"_index":66,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/MailService.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"miscellaneous/variables.html":{}}}],["param('productid",{"_index":1744,"title":{},"body":{"controllers/ProductsController.html":{}}}],["param('reviewid",{"_index":1823,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["param('stateid",{"_index":851,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["parsefloat(productquery['price'].slice().split",{"_index":997,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["part",{"_index":2336,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":1463,"title":{},"body":{"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/UpdateDeliveryStateDto.html":{}}}],["partialtype(createuserdto",{"_index":1473,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["particular",{"_index":1710,"title":{},"body":{"controllers/ProductsController.html":{}}}],["pass",{"_index":1248,"title":{},"body":{"modules/MailModule.html":{}}}],["passing",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["password",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{}}}],["password'})@apiresponse({status",{"_index":364,"title":{},"body":{"controllers/AuthController.html":{}}}],["password1",{"_index":400,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch",{"_index":372,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["patch('/:productid",{"_index":1743,"title":{},"body":{"controllers/ProductsController.html":{}}}],["patch('/:productid')@roles(role.admin",{"_index":1713,"title":{},"body":{"controllers/ProductsController.html":{}}}],["patch('/:stateid",{"_index":850,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["patch('/otp",{"_index":411,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch()@roles(role.user",{"_index":2075,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchproduct",{"_index":1681,"title":{},"body":{"controllers/ProductsController.html":{}}}],["patchproduct(productid",{"_index":1712,"title":{},"body":{"controllers/ProductsController.html":{}}}],["patchproductdto",{"_index":1448,"title":{"classes/PatchProductDto.html":{}},"body":{"classes/PatchProductDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{},"coverage.html":{}}}],["patchproductdto.brand",{"_index":1961,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.category",{"_index":1953,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.clothtype",{"_index":1957,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.discount",{"_index":1951,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.dressstyle",{"_index":1955,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.material",{"_index":1959,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.name",{"_index":1947,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.price",{"_index":1949,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.variants",{"_index":1964,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductdto.variants.length",{"_index":1965,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["patchproductvariantdto",{"_index":1133,"title":{"classes/PatchProductVariantDto.html":{}},"body":{"classes/InitiatePaymentDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/ProductWithVariantDto.html":{},"coverage.html":{}}}],["patchuserdto",{"_index":1471,"title":{"classes/PatchUserDto.html":{}},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["patchusers",{"_index":2058,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchusers(patchuserdto",{"_index":2074,"title":{},"body":{"controllers/UsersController.html":{}}}],["path",{"_index":1232,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/UploadToAwsProvider.html":{}}}],["path.extname(file.originalname",{"_index":2008,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["path.join(root_path",{"_index":1291,"title":{},"body":{"injectables/MailService.html":{}}}],["payload",{"_index":83,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"injectables/GenerateTokensProvider.html":{}}}],["payment",{"_index":1157,"title":{"entities/Payment.html":{}},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["payment')@roles(role.user",{"_index":1526,"title":{},"body":{"controllers/PaystackController.html":{}}}],["payment.controller",{"_index":1514,"title":{},"body":{"modules/PaymentModule.html":{}}}],["payment.dto",{"_index":1152,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{}}}],["payment.dto.ts",{"_index":1125,"title":{},"body":{"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{},"coverage.html":{}}}],["payment.dto.ts:17",{"_index":1674,"title":{},"body":{"classes/ProductWithVariantDto.html":{}}}],["payment.dto.ts:21",{"_index":1673,"title":{},"body":{"classes/ProductWithVariantDto.html":{}}}],["payment.dto.ts:27",{"_index":1675,"title":{},"body":{"classes/ProductWithVariantDto.html":{}}}],["payment.dto.ts:33",{"_index":1129,"title":{},"body":{"classes/InitiatePaymentDto.html":{}}}],["payment.dto.ts:37",{"_index":1128,"title":{},"body":{"classes/InitiatePaymentDto.html":{}}}],["payment.dto.ts:41",{"_index":1130,"title":{},"body":{"classes/InitiatePaymentDto.html":{}}}],["payment.dto.ts:47",{"_index":1132,"title":{},"body":{"classes/InitiatePaymentDto.html":{}}}],["payment.entity",{"_index":1513,"title":{},"body":{"modules/PaymentModule.html":{}}}],["payment.provider",{"_index":1542,"title":{},"body":{"modules/PaystackModule.html":{},"injectables/PaystackService.html":{}}}],["payment.provider.ts",{"_index":1137,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["payment.provider.ts:206",{"_index":2148,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["payment.provider.ts:21",{"_index":1143,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["payment.provider.ts:23",{"_index":2145,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["payment.provider.ts:54",{"_index":1145,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["payment.provider.ts:56",{"_index":2146,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["payment.provider.ts:58",{"_index":1150,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["payment.provider.ts:65",{"_index":2154,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["payment.status",{"_index":2168,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["payment/payment.module",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["payment_variants",{"_index":1504,"title":{},"body":{"entities/Payment.html":{}}}],["paymentcontroller",{"_index":1509,"title":{"controllers/PaymentController.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"coverage.html":{}}}],["paymentdata",{"_index":2190,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["paymentdata.data.status",{"_index":2193,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["paymentid",{"_index":1508,"title":{},"body":{"entities/Payment.html":{}}}],["paymentmodule",{"_index":151,"title":{"modules/PaymentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaymentModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentstatus",{"_index":1159,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{},"injectables/VerifyPaymentProvider.html":{},"miscellaneous/enumerations.html":{}}}],["paymentstatus.failed",{"_index":2178,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["paymentstatus.pending",{"_index":1219,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{}}}],["paymentstatus.success",{"_index":2169,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["paymentwebhook",{"_index":2144,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["paymentwebhook(body",{"_index":2147,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["paymet",{"_index":2180,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["pays",{"_index":2151,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["paystack",{"_index":1148,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["paystack.controller",{"_index":1540,"title":{},"body":{"modules/PaystackModule.html":{}}}],["paystack/paystack.module",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["paystackconfig",{"_index":1153,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"modules/PaystackModule.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["paystackconfiguration",{"_index":1144,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["paystackcontroller",{"_index":1516,"title":{"controllers/PaystackController.html":{}},"body":{"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"coverage.html":{}}}],["paystackmodule",{"_index":152,"title":{"modules/PaystackModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaystackModule.html":{},"modules.html":{},"overview.html":{}}}],["paystackservice",{"_index":1528,"title":{"injectables/PaystackService.html":{}},"body":{"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"coverage.html":{},"overview.html":{}}}],["pending",{"_index":2281,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["per",{"_index":1695,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["percentoff",{"_index":535,"title":{},"body":{"classes/CreateDiscountDto.html":{},"entities/Discount.html":{}}}],["permission",{"_index":1859,"title":{},"body":{"guards/RolesGuard.html":{}}}],["pessimistic",{"_index":1647,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["pg",{"_index":2259,"title":{},"body":{"dependencies.html":{}}}],["phonenumber",{"_index":1477,"title":{},"body":{"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["placed",{"_index":2276,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["please",{"_index":315,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["port",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["position",{"_index":1697,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["positive",{"_index":1671,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["post",{"_index":373,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["post('')@auth(authtype.none",{"_index":1811,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["post('/apply",{"_index":923,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["post('/apply')@roles(role.user)@httpcode(httpstatus.ok",{"_index":911,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["post('/initiate",{"_index":1525,"title":{},"body":{"controllers/PaystackController.html":{}}}],["post('/sign",{"_index":404,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/webhook",{"_index":1532,"title":{},"body":{"controllers/PaystackController.html":{}}}],["post('/webhook')@auth(authtype.none)@httpcode(httpstatus.ok",{"_index":1522,"title":{},"body":{"controllers/PaystackController.html":{}}}],["post('refresh",{"_index":415,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@roles(role.admin",{"_index":823,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{}}}],["postgres",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["prd",{"_index":1940,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["prd.price",{"_index":1202,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["prd.productid",{"_index":2161,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["prd.variants",{"_index":1189,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["prdid",{"_index":2162,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["prdsdb",{"_index":2160,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["prdvariants",{"_index":1187,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["precision",{"_index":1490,"title":{},"body":{"entities/Payment.html":{},"entities/Product.html":{}}}],["prefix",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["prevent",{"_index":1649,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["previous",{"_index":1397,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["prevpage",{"_index":1435,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["price",{"_index":561,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{},"classes/ProductWithVariantDto.html":{}}}],["primarygeneratedcolumn",{"_index":812,"title":{},"body":{"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/Subscriber.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":807,"title":{},"body":{"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{},"entities/User.html":{}}}],["private",{"_index":16,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["process",{"_index":313,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["process.cwd",{"_index":2399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["processed",{"_index":2195,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["processing",{"_index":2277,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["product",{"_index":196,"title":{"entities/Product.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"injectables/CreateReviewProvider.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"entities/Product.html":{},"modules/ProductImagesModule.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["product(s",{"_index":1298,"title":{},"body":{"injectables/MailService.html":{}}}],["product.brand",{"_index":1962,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.category",{"_index":1954,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.clothtype",{"_index":1958,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.discount",{"_index":1952,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.dressstyle",{"_index":1956,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.dto",{"_index":981,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["product.dto.ts",{"_index":1093,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/PatchProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:11",{"_index":1457,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:14",{"_index":1106,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:15",{"_index":1459,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:19",{"_index":1453,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:21",{"_index":1099,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:23",{"_index":1451,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:27",{"_index":1454,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:28",{"_index":1100,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:31",{"_index":1452,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:35",{"_index":1107,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/PatchProductDto.html":{}}}],["product.dto.ts:39",{"_index":1450,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:42",{"_index":1102,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:43",{"_index":1460,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:47",{"_index":1456,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:49",{"_index":1108,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:51",{"_index":1462,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.dto.ts:56",{"_index":1103,"title":{},"body":{"classes/GetProductsBaseDto.html":{}}}],["product.dto.ts:7",{"_index":1455,"title":{},"body":{"classes/PatchProductDto.html":{}}}],["product.entity",{"_index":600,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/FindAllProductsProvider.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["product.id",{"_index":1968,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.material",{"_index":1960,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.name",{"_index":1948,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.price",{"_index":1950,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.provider",{"_index":1757,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["product.provider.ts",{"_index":589,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/UpdateProductProvider.html":{},"coverage.html":{}}}],["product.provider.ts:13",{"_index":1938,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.provider.ts:14",{"_index":594,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["product.provider.ts:27",{"_index":1939,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["product.provider.ts:33",{"_index":598,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["product.reviews",{"_index":1799,"title":{},"body":{"entities/Review.html":{}}}],["product.variants",{"_index":1611,"title":{},"body":{"entities/ProductVariant.html":{}}}],["productclothtype",{"_index":1101,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["productid",{"_index":688,"title":{},"body":{"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/Order.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["productimage",{"_index":603,"title":{"entities/ProductImage.html":{}},"body":{"injectables/CreateProductProvider.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"entities/ProductVariant.html":{},"coverage.html":{}}}],["productimages",{"_index":642,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["productimages.map(async",{"_index":652,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["productimagesmodule",{"_index":153,"title":{"modules/ProductImagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductImagesModule.html":{},"modules.html":{},"overview.html":{}}}],["productimagesservice",{"_index":1599,"title":{"injectables/ProductImagesService.html":{}},"body":{"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"coverage.html":{},"overview.html":{}}}],["production",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["productquery",{"_index":976,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["productquery['category",{"_index":994,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['clothtype",{"_index":998,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['colors",{"_index":1005,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['dressstyle",{"_index":1000,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['name",{"_index":1002,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['price",{"_index":996,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery['sizes",{"_index":1007,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productquery[key",{"_index":992,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["productrepository",{"_index":972,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["products",{"_index":719,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/FindAllProductsProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["products.controller",{"_index":1756,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.provider",{"_index":1761,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["products.provider.ts",{"_index":967,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"coverage.html":{}}}],["products.provider.ts:10",{"_index":971,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["products.provider.ts:29",{"_index":975,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["products/products.module",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["productscontroller",{"_index":1676,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsmodule",{"_index":155,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaystackModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsservice",{"_index":709,"title":{"injectables/ProductsService.html":{}},"body":{"injectables/CreateReviewProvider.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"overview.html":{}}}],["productupdated",{"_index":1946,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["productvariant",{"_index":574,"title":{"entities/ProductVariant.html":{}},"body":{"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"coverage.html":{}}}],["productvariantrepository",{"_index":1628,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["productvariantsmodule",{"_index":154,"title":{"modules/ProductVariantsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaystackModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productvariantsservice",{"_index":1142,"title":{"injectables/ProductVariantsService.html":{}},"body":{"injectables/InitiatePaymentProvider.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"overview.html":{}}}],["productwithvariantdto",{"_index":1131,"title":{"classes/ProductWithVariantDto.html":{}},"body":{"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{},"coverage.html":{}}}],["progressive",{"_index":2287,"title":{},"body":{"index.html":{}}}],["project",{"_index":2296,"title":{},"body":{"index.html":{}}}],["promise",{"_index":38,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DiscountsService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/MailService.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["promise.all",{"_index":1082,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["promise.resolve(instance.canactivate(context",{"_index":502,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["properties",{"_index":117,"title":{"properties.html":{}},"body":{"interfaces/ActiveUserData.html":{},"classes/ApplyForDiscountDto.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"entities/DeliveryState.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/InitiatePaymentDto.html":{},"entities/Order.html":{},"classes/OtpSigninDto.html":{},"interfaces/Paginated.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"classes/ProductWithVariantDto.html":{},"classes/RefreshTokenDto.html":{},"entities/Review.html":{},"classes/SignInDto.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"properties.html":{}}}],["property",{"_index":474,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["provide",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":1945,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["provider",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"injectables/DiscountsService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"entities/Payment.html":{},"injectables/PaystackService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{}}}],["providerreference",{"_index":1217,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["providers",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers/apply",{"_index":932,"title":{},"body":{"modules/DiscountsModule.html":{}}}],["providers/auth.service",{"_index":377,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["providers/clear",{"_index":2101,"title":{},"body":{"modules/UsersModule.html":{}}}],["providers/create",{"_index":934,"title":{},"body":{"modules/DiscountsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/UsersModule.html":{}}}],["providers/delivery",{"_index":835,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{}}}],["providers/discounts",{"_index":949,"title":{},"body":{"modules/DiscountsUsageModule.html":{}}}],["providers/discounts.service",{"_index":915,"title":{},"body":{"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{}}}],["providers/find",{"_index":1760,"title":{},"body":{"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["providers/generate",{"_index":431,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/initiate",{"_index":1541,"title":{},"body":{"modules/PaystackModule.html":{}}}],["providers/mail.service",{"_index":1228,"title":{},"body":{"modules/MailModule.html":{}}}],["providers/orders.service",{"_index":1355,"title":{},"body":{"modules/OrdersModule.html":{}}}],["providers/otp",{"_index":436,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/pagination.provider",{"_index":1403,"title":{},"body":{"modules/PaginationModule.html":{}}}],["providers/paystack.service",{"_index":1529,"title":{},"body":{"controllers/PaystackController.html":{},"modules/PaystackModule.html":{}}}],["providers/product",{"_index":1601,"title":{},"body":{"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{}}}],["providers/products.service",{"_index":1724,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{}}}],["providers/refresh",{"_index":434,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/reviews.service",{"_index":1818,"title":{},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{}}}],["providers/sign",{"_index":429,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/store",{"_index":2097,"title":{},"body":{"modules/UsersModule.html":{}}}],["providers/subscribers.service",{"_index":1911,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["providers/update",{"_index":1762,"title":{},"body":{"modules/ProductsModule.html":{}}}],["providers/upload",{"_index":2017,"title":{},"body":{"modules/UploadsModule.html":{}}}],["providers/uploads.service",{"_index":2016,"title":{},"body":{"modules/UploadsModule.html":{}}}],["providers/users.service",{"_index":2077,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["providers/verify",{"_index":1544,"title":{},"body":{"modules/PaystackModule.html":{}}}],["prvariant",{"_index":636,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["public",{"_index":273,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["purchase",{"_index":1299,"title":{},"body":{"injectables/MailService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["quantity",{"_index":674,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queries",{"_index":987,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["query",{"_index":609,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["query.dto",{"_index":1112,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"injectables/PaginationProvider.html":{}}}],["query.dto.ts",{"_index":1442,"title":{},"body":{"classes/PaginationQueryDto.html":{},"coverage.html":{}}}],["query.dto.ts:12",{"_index":1443,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["query.dto.ts:19",{"_index":1446,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["queryrunner",{"_index":612,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.committransaction",{"_index":659,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.connect",{"_index":615,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.manager",{"_index":1186,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.manager.create(product",{"_index":618,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.manager.create(productimage",{"_index":646,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.manager.create(productvariant",{"_index":637,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.manager.findone(discount",{"_index":1169,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["queryrunner.manager.findone(payment",{"_index":2164,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.manager.save(discountusage",{"_index":2173,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.manager.save(image",{"_index":653,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.manager.save(order",{"_index":2171,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.manager.save(payment",{"_index":1215,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.manager.save(product",{"_index":620,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.manager.save(prvariant",{"_index":639,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["queryrunner.release",{"_index":671,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.rollbacktransaction",{"_index":663,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["queryrunner.starttransaction",{"_index":616,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["questions",{"_index":2319,"title":{},"body":{"index.html":{}}}],["randomint",{"_index":1869,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["randomint(1000",{"_index":1877,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["rating",{"_index":695,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["read",{"_index":2356,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":67,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["real",{"_index":2333,"title":{},"body":{"index.html":{}}}],["record",{"_index":481,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["reduce((acc",{"_index":1199,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["reference",{"_index":2152,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["referencedcolumnname",{"_index":1345,"title":{},"body":{"entities/Order.html":{},"entities/Payment.html":{}}}],["reflect",{"_index":2261,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":463,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["refresh",{"_index":355,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["refreshing",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":397,"title":{},"body":{"controllers/AuthController.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"classes/RefreshTokenDto.html":{}}}],["refreshtokendto",{"_index":353,"title":{"classes/RefreshTokenDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"coverage.html":{}}}],["refreshtokendto.refreshtoken",{"_index":1792,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["refreshtokenprovider",{"_index":423,"title":{"injectables/RefreshTokenProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenProvider.html":{},"coverage.html":{},"overview.html":{}}}],["refreshtokens",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenProvider.html":{}}}],["refreshtokens(@body",{"_index":416,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokens(refreshtokendto",{"_index":352,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenProvider.html":{}}}],["regenerate",{"_index":2183,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["registering",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["rejectunauthorized",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["relations",{"_index":1022,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["release",{"_index":670,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["relsease",{"_index":668,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["remove",{"_index":1009,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/UploadToAwsProvider.html":{}}}],["repository",{"_index":276,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["repository.count",{"_index":1432,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["repository.find",{"_index":1416,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["req",{"_index":104,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["request",{"_index":45,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"miscellaneous/variables.html":{}}}],["request.headers.authorization?.split",{"_index":108,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["request.user",{"_index":90,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["request[request_user_key",{"_index":91,"title":{},"body":{"guards/AccessTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["request_user_key",{"_index":61,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":1662,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["requests",{"_index":1444,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["requesttimeoutexception",{"_index":285,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["requesttimeoutexception('could",{"_index":617,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["requesttimeoutexception(err",{"_index":875,"title":{},"body":{"injectables/DeliveryStatesService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["requesttimeoutexception(error",{"_index":521,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UsersService.html":{}}}],["required",{"_index":348,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["requiredroles",{"_index":1853,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.some((role",{"_index":1858,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requirements",{"_index":1846,"title":{},"body":{"guards/RolesGuard.html":{}}}],["reserve",{"_index":1667,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["reset",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/OrdersModule.html":{},"classes/OtpSigninDto.html":{},"modules/PaginationModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["resetexpires",{"_index":1892,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["resetpassworddto",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpasswordprovider",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetting",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["resfresh",{"_index":1786,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["resource",{"_index":870,"title":{},"body":{"injectables/DeliveryStatesService.html":{},"guards/RolesGuard.html":{}}}],["resources",{"_index":2312,"title":{},"body":{"index.html":{}}}],["response",{"_index":782,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"injectables/InitiatePaymentProvider.html":{},"interfaces/Paginated.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["response.data",{"_index":1222,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["response.data.data.authorization_url",{"_index":1221,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["response.data.data.metadata",{"_index":2159,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["response.data.data.reference",{"_index":1218,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["response.data.data.status",{"_index":2166,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["response.interceptor",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["response.interceptor.ts",{"_index":780,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"coverage.html":{}}}],["response.interceptor.ts:14",{"_index":786,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["response.interceptor.ts:32",{"_index":789,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["response/data",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataResponseInterceptor.html":{},"coverage.html":{}}}],["restore",{"_index":1669,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["results",{"_index":109,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":107,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":1387,"title":{},"body":{"interfaces/Paginated.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["returns",{"_index":37,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/PaginationProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/ProductVariantsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["review",{"_index":689,"title":{"entities/Review.html":{}},"body":{"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"entities/Product.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"coverage.html":{}}}],["review.dto",{"_index":714,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["review.dto.ts",{"_index":687,"title":{},"body":{"classes/CreateReviewDto.html":{},"coverage.html":{}}}],["review.dto.ts:12",{"_index":700,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.dto.ts:16",{"_index":693,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.dto.ts:20",{"_index":692,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.dto.ts:6",{"_index":694,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.product",{"_index":1570,"title":{},"body":{"entities/Product.html":{}}}],["review.provider",{"_index":1830,"title":{},"body":{"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{}}}],["review.provider.ts",{"_index":706,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"coverage.html":{}}}],["review.provider.ts:29",{"_index":713,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["review.provider.ts:9",{"_index":710,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["reviewer",{"_index":690,"title":{},"body":{"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"entities/Review.html":{}}}],["reviewid",{"_index":1816,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["reviews",{"_index":717,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"entities/Product.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["reviews.controller",{"_index":1829,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["reviews.entity",{"_index":715,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{}}}],["reviews/reviews.module",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["reviewscontroller",{"_index":1809,"title":{"controllers/ReviewsController.html":{}},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"coverage.html":{}}}],["reviewsmodule",{"_index":156,"title":{"modules/ReviewsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ReviewsModule.html":{},"modules.html":{},"overview.html":{}}}],["reviewsrepository",{"_index":711,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/ReviewsService.html":{}}}],["reviewsservice",{"_index":1817,"title":{"injectables/ReviewsService.html":{}},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"coverage.html":{},"overview.html":{}}}],["role",{"_index":119,"title":{},"body":{"interfaces/ActiveUserData.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["role.admin",{"_index":1852,"title":{},"body":{"guards/RolesGuard.html":{},"controllers/UsersController.html":{}}}],["roles",{"_index":838,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(role.admin",{"_index":843,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["roles(role.admin)@patch('/:stateid",{"_index":830,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["roles(role.user",{"_index":924,"title":{},"body":{"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/UsersController.html":{}}}],["roles_key",{"_index":1849,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":189,"title":{"guards/RolesGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["rollback",{"_index":661,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["rollbackstock",{"_index":1624,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["rollbackstock(variantid",{"_index":1635,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["root",{"_index":2400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root_path",{"_index":1278,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["route",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["row",{"_index":1653,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["run",{"_index":2300,"title":{},"body":{"index.html":{}}}],["runner",{"_index":611,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["rxjs",{"_index":468,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/DataResponseInterceptor.html":{},"dependencies.html":{}}}],["s3",{"_index":1989,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["save",{"_index":550,"title":{},"body":{"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["savedproduct",{"_index":619,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["savedvariants",{"_index":631,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["savedvariants.push(vr",{"_index":640,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["savedvariants[urlsindex",{"_index":650,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["saveproductvariant",{"_index":1625,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["saveproductvariant(variant",{"_index":1637,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["saves",{"_index":1642,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["scalable",{"_index":2292,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1492,"title":{},"body":{"entities/Payment.html":{},"entities/Product.html":{}}}],["sdk",{"_index":1990,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"dependencies.html":{}}}],["secret",{"_index":1080,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["secure",{"_index":1246,"title":{},"body":{"modules/MailModule.html":{}}}],["select",{"_index":1044,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{},"injectables/PaginationProvider.html":{}}}],["send",{"_index":1382,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["sending",{"_index":1269,"title":{},"body":{"injectables/MailService.html":{}}}],["sendloginotp",{"_index":1260,"title":{},"body":{"injectables/MailService.html":{}}}],["sendloginotp(user",{"_index":1267,"title":{},"body":{"injectables/MailService.html":{}}}],["sendproductpurchasemail",{"_index":1261,"title":{},"body":{"injectables/MailService.html":{}}}],["sendproductpurchasemail(user",{"_index":1270,"title":{},"body":{"injectables/MailService.html":{}}}],["sendresetotp",{"_index":1262,"title":{},"body":{"injectables/MailService.html":{}}}],["sendresetotp(user",{"_index":1272,"title":{},"body":{"injectables/MailService.html":{}}}],["sendsubscribermail",{"_index":1263,"title":{},"body":{"injectables/MailService.html":{}}}],["sendsubscribermail(subscriber",{"_index":1274,"title":{},"body":{"injectables/MailService.html":{}}}],["server",{"_index":2150,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{},"index.html":{}}}],["service",{"_index":298,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DataResponseInterceptor.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/ReviewsController.html":{},"injectables/SignInProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["set",{"_index":1171,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["setlock('pessimistic_write",{"_index":1652,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["setmetadata(auth_type_key",{"_index":2393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(roles_key",{"_index":2396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setting",{"_index":89,"title":{},"body":{"guards/AccessTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["setup",{"_index":2297,"title":{},"body":{"index.html":{}}}],["shipped",{"_index":2278,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["shortdescription",{"_index":562,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/PatchProductDto.html":{},"entities/Product.html":{}}}],["side",{"_index":2293,"title":{},"body":{"index.html":{}}}],["sigining",{"_index":1866,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["sign",{"_index":368,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GenerateTokensProvider.html":{},"classes/OtpSigninDto.html":{},"classes/SignInDto.html":{}}}],["signature",{"_index":1521,"title":{},"body":{"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["signed",{"_index":43,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{}}}],["signin",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/OtpSigninDto.html":{},"injectables/SignInProvider.html":{}}}],["signin(@body",{"_index":407,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(signindto",{"_index":362,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["signin.provider",{"_index":437,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["signin.provider.ts",{"_index":1364,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"coverage.html":{}}}],["signin.provider.ts:21",{"_index":1370,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["signin.provider.ts:8",{"_index":1368,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["signindto",{"_index":363,"title":{"classes/SignInDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"coverage.html":{}}}],["signindto.email",{"_index":1875,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["signindto.role",{"_index":1876,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["signing",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SignInProvider.html":{}}}],["signinprovider",{"_index":424,"title":{"injectables/SignInProvider.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/SignInProvider.html":{},"coverage.html":{},"overview.html":{}}}],["signinwithotp",{"_index":1365,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["signinwithotp(otpsignindto",{"_index":1369,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["signs",{"_index":340,"title":{},"body":{"controllers/AuthController.html":{},"injectables/GenerateTokensProvider.html":{}}}],["signtoken",{"_index":1064,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["signtoken(userid",{"_index":1068,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["size",{"_index":675,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"injectables/FindAllProductsProvider.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{}}}],["sizes",{"_index":1097,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["skip",{"_index":1418,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["sold",{"_index":1658,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["soldout",{"_index":1464,"title":{},"body":{"classes/PatchProductVariantDto.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"modules/DiscountsModule.html":{},"injectables/DiscountsService.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"modules/PaginationModule.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateDeliveryStateDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"index.html":{}}}],["spaces",{"_index":2004,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["specific",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{}}}],["specified",{"_index":1646,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["sponsors",{"_index":2352,"title":{},"body":{"index.html":{}}}],["src/.../active",{"_index":2379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":2382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":2268,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../auth.constant.ts",{"_index":2381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.decorator.ts",{"_index":2380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2283,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../order",{"_index":2270,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../paths.config.ts",{"_index":2385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../paymentstatus.enum.ts",{"_index":2272,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role",{"_index":2273,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role.constant.ts",{"_index":2384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.decorator.ts",{"_index":2383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":125,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":128,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":256,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":257,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:115",{"_index":351,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:155",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:76",{"_index":367,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":2094,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/auth/auth.module.ts",{"_index":425,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/config/jwt.config",{"_index":60,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["src/auth/constants/auth.constant",{"_index":62,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["src/auth/constants/auth.constant.ts",{"_index":2204,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/constants/role.constant",{"_index":1850,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/constants/role.constant.ts",{"_index":2205,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorator/active",{"_index":917,"title":{},"body":{"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorator/auth.decorator",{"_index":840,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["src/auth/decorator/auth.decorator.ts",{"_index":2207,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorator/role.decorator",{"_index":839,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{}}}],["src/auth/decorator/role.decorator.ts",{"_index":2208,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dtos/otpsignin.dto.ts",{"_index":1359,"title":{},"body":{"classes/OtpSigninDto.html":{},"coverage.html":{}}}],["src/auth/dtos/otpsignin.dto.ts:17",{"_index":1361,"title":{},"body":{"classes/OtpSigninDto.html":{}}}],["src/auth/dtos/refresh",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{},"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["src/auth/dtos/sign",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"classes/SignInDto.html":{},"coverage.html":{}}}],["src/auth/enums/auth",{"_index":469,"title":{},"body":{"guards/AuthenticationGuard.html":{},"controllers/DeliveryStatesController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"miscellaneous/enumerations.html":{}}}],["src/auth/enums/role",{"_index":759,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"guards/RolesGuard.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{}}}],["src/auth/guards/access",{"_index":6,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{}}}],["src/auth/guards/authentication/authentication.guard.ts",{"_index":457,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/auth/guards/authentication/authentication.guard.ts:33",{"_index":464,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/authentication/authentication.guard.ts:59",{"_index":465,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/roles/roles.guard.ts",{"_index":1841,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles/roles.guard.ts:16",{"_index":1842,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/guards/roles/roles.guard.ts:31",{"_index":1843,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/interfaces/active",{"_index":114,"title":{},"body":{"interfaces/ActiveUserData.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/InitiatePaymentProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts:13",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:43",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:52",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:61",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/generate",{"_index":1060,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"coverage.html":{}}}],["src/auth/providers/otp",{"_index":1363,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"coverage.html":{}}}],["src/auth/providers/refresh",{"_index":1784,"title":{},"body":{"injectables/RefreshTokenProvider.html":{},"coverage.html":{}}}],["src/auth/providers/sign",{"_index":1864,"title":{},"body":{"injectables/SignInProvider.html":{},"coverage.html":{}}}],["src/common/interceptors/data",{"_index":779,"title":{},"body":{"injectables/DataResponseInterceptor.html":{},"coverage.html":{}}}],["src/common/pagination/dtos/pagination",{"_index":1111,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/PaginationQueryDto.html":{},"coverage.html":{}}}],["src/common/pagination/interfaces/paginated.interface",{"_index":982,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["src/common/pagination/interfaces/paginated.interface.ts",{"_index":1384,"title":{},"body":{"interfaces/Paginated.html":{},"coverage.html":{}}}],["src/common/pagination/pagination.module",{"_index":1759,"title":{},"body":{"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["src/common/pagination/pagination.module.ts",{"_index":1402,"title":{},"body":{"modules/PaginationModule.html":{}}}],["src/common/pagination/providers/pagination.provider",{"_index":984,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/UsersService.html":{}}}],["src/common/pagination/providers/pagination.provider.ts",{"_index":1404,"title":{},"body":{"injectables/PaginationProvider.html":{},"coverage.html":{}}}],["src/common/pagination/providers/pagination.provider.ts:14",{"_index":1407,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["src/common/pagination/providers/pagination.provider.ts:34",{"_index":1409,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["src/config/paths.config.ts",{"_index":2213,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/delivery",{"_index":523,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{},"classes/UpdateDeliveryStateDto.html":{},"coverage.html":{}}}],["src/discounts",{"_index":292,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"entities/DiscountUsage.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"entities/Order.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["src/discounts/discounts.controller.ts",{"_index":910,"title":{},"body":{"controllers/DiscountsController.html":{},"coverage.html":{}}}],["src/discounts/discounts.controller.ts:21",{"_index":913,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["src/discounts/discounts.controller.ts:28",{"_index":912,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["src/discounts/discounts.entity",{"_index":903,"title":{},"body":{"entities/DiscountUsage.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["src/discounts/discounts.entity.ts",{"_index":878,"title":{},"body":{"entities/Discount.html":{},"coverage.html":{}}}],["src/discounts/discounts.entity.ts:12",{"_index":882,"title":{},"body":{"entities/Discount.html":{}}}],["src/discounts/discounts.entity.ts:15",{"_index":884,"title":{},"body":{"entities/Discount.html":{}}}],["src/discounts/discounts.entity.ts:18",{"_index":887,"title":{},"body":{"entities/Discount.html":{}}}],["src/discounts/discounts.entity.ts:21",{"_index":889,"title":{},"body":{"entities/Discount.html":{}}}],["src/discounts/discounts.entity.ts:6",{"_index":881,"title":{},"body":{"entities/Discount.html":{}}}],["src/discounts/discounts.entity.ts:9",{"_index":880,"title":{},"body":{"entities/Discount.html":{}}}],["src/discounts/discounts.module.ts",{"_index":930,"title":{},"body":{"modules/DiscountsModule.html":{}}}],["src/discounts/dtos/apply",{"_index":262,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"coverage.html":{}}}],["src/discounts/dtos/create",{"_index":534,"title":{},"body":{"classes/CreateDiscountDto.html":{},"coverage.html":{}}}],["src/discounts/providers/apply",{"_index":271,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"coverage.html":{}}}],["src/discounts/providers/create",{"_index":541,"title":{},"body":{"injectables/CreateDiscountProvider.html":{},"coverage.html":{}}}],["src/discounts/providers/discounts.service.ts",{"_index":936,"title":{},"body":{"injectables/DiscountsService.html":{},"coverage.html":{}}}],["src/discounts/providers/discounts.service.ts:27",{"_index":940,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["src/discounts/providers/discounts.service.ts:39",{"_index":939,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["src/discounts/providers/discounts.service.ts:9",{"_index":938,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["src/mail/mail.module",{"_index":1913,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["src/mail/mail.module.ts",{"_index":1226,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/providers/mail.service",{"_index":1870,"title":{},"body":{"injectables/SignInProvider.html":{},"injectables/SubscribersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["src/mail/providers/mail.service.ts",{"_index":1259,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/mail/providers/mail.service.ts:13",{"_index":1266,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/providers/mail.service.ts:30",{"_index":1273,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/providers/mail.service.ts:49",{"_index":1268,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/providers/mail.service.ts:62",{"_index":1271,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/providers/mail.service.ts:83",{"_index":1275,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/templates/loginotp.ejs",{"_index":1297,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/templates/productbought.ejs",{"_index":1301,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/templates/resetotp.ejs",{"_index":1292,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/templates/subscription.ejs",{"_index":1307,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":2219,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/orders/enums/order",{"_index":2275,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/orders/order.entity",{"_index":904,"title":{},"body":{"entities/DiscountUsage.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["src/orders/order.entity.ts",{"_index":1309,"title":{},"body":{"entities/Order.html":{},"coverage.html":{}}}],["src/orders/order.entity.ts:18",{"_index":1328,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:21",{"_index":1320,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:24",{"_index":1337,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:32",{"_index":1330,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:35",{"_index":1318,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:38",{"_index":1319,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:41",{"_index":1321,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:44",{"_index":1322,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:47",{"_index":1327,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:50",{"_index":1338,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:53",{"_index":1324,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:56",{"_index":1326,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:59",{"_index":1335,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:67",{"_index":1334,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/orders.controller.ts",{"_index":1347,"title":{},"body":{"controllers/OrdersController.html":{},"coverage.html":{}}}],["src/orders/orders.module.ts",{"_index":1353,"title":{},"body":{"modules/OrdersModule.html":{}}}],["src/orders/providers/orders.service.ts",{"_index":1358,"title":{},"body":{"injectables/OrdersService.html":{},"coverage.html":{}}}],["src/payment/enums/paymentstatus.enum",{"_index":1160,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["src/payment/enums/paymentstatus.enum.ts",{"_index":2280,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/payment/payment.controller.ts",{"_index":1510,"title":{},"body":{"controllers/PaymentController.html":{},"coverage.html":{}}}],["src/payment/payment.entity",{"_index":1158,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["src/payment/payment.entity.ts",{"_index":1489,"title":{},"body":{"entities/Payment.html":{},"coverage.html":{}}}],["src/payment/payment.entity.ts:19",{"_index":1497,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.entity.ts:26",{"_index":1501,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.entity.ts:29",{"_index":1498,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.entity.ts:32",{"_index":1500,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.entity.ts:35",{"_index":1495,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.entity.ts:38",{"_index":1494,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.entity.ts:41",{"_index":1503,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.entity.ts:44",{"_index":1496,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.entity.ts:47",{"_index":1502,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.entity.ts:55",{"_index":1505,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.module.ts",{"_index":1512,"title":{},"body":{"modules/PaymentModule.html":{}}}],["src/paystack/dtos/initiate",{"_index":1124,"title":{},"body":{"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{},"coverage.html":{}}}],["src/paystack/paystack.controller.ts",{"_index":1517,"title":{},"body":{"controllers/PaystackController.html":{},"coverage.html":{}}}],["src/paystack/paystack.controller.ts:31",{"_index":1527,"title":{},"body":{"controllers/PaystackController.html":{}}}],["src/paystack/paystack.controller.ts:41",{"_index":1523,"title":{},"body":{"controllers/PaystackController.html":{}}}],["src/paystack/paystack.module.ts",{"_index":1539,"title":{},"body":{"modules/PaystackModule.html":{}}}],["src/paystack/providers/initiate",{"_index":1136,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"coverage.html":{}}}],["src/paystack/providers/paystack.service.ts",{"_index":1546,"title":{},"body":{"injectables/PaystackService.html":{},"coverage.html":{}}}],["src/paystack/providers/paystack.service.ts:21",{"_index":1550,"title":{},"body":{"injectables/PaystackService.html":{}}}],["src/paystack/providers/paystack.service.ts:31",{"_index":1552,"title":{},"body":{"injectables/PaystackService.html":{}}}],["src/paystack/providers/paystack.service.ts:8",{"_index":1549,"title":{},"body":{"injectables/PaystackService.html":{}}}],["src/paystack/providers/verify",{"_index":2143,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["src/product",{"_index":582,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"entities/Payment.html":{},"modules/PaystackModule.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductImagesModule.html":{},"injectables/ProductImagesService.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"modules/ProductsModule.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["src/products/dtos/createproductdto.ts",{"_index":554,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/products/dtos/createproductdto.ts:15",{"_index":571,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:19",{"_index":572,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:23",{"_index":567,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:27",{"_index":565,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:31",{"_index":568,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:35",{"_index":566,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:39",{"_index":570,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:43",{"_index":564,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:47",{"_index":573,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:51",{"_index":569,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproductdto.ts:57",{"_index":577,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/get",{"_index":1092,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"coverage.html":{}}}],["src/products/dtos/patch",{"_index":1449,"title":{},"body":{"classes/PatchProductDto.html":{},"coverage.html":{}}}],["src/products/product.entity",{"_index":1280,"title":{},"body":{"injectables/MailService.html":{},"entities/Order.html":{},"entities/ProductVariant.html":{},"entities/Review.html":{}}}],["src/products/product.entity.ts",{"_index":1557,"title":{},"body":{"entities/Product.html":{},"coverage.html":{}}}],["src/products/product.entity.ts:17",{"_index":1564,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:20",{"_index":1567,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:23",{"_index":1568,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:26",{"_index":1562,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:29",{"_index":1559,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:32",{"_index":1563,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:35",{"_index":1560,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:38",{"_index":1566,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:41",{"_index":1558,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:44",{"_index":1574,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:47",{"_index":1565,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:53",{"_index":1577,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:59",{"_index":1573,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:62",{"_index":1561,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:65",{"_index":1575,"title":{},"body":{"entities/Product.html":{}}}],["src/products/products.controller.ts",{"_index":1677,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/products/products.controller.ts:100",{"_index":1709,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:133",{"_index":1701,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:145",{"_index":1714,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:160",{"_index":1687,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:60",{"_index":1684,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.module",{"_index":1543,"title":{},"body":{"modules/PaystackModule.html":{},"modules/ReviewsModule.html":{}}}],["src/products/products.module.ts",{"_index":1755,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/providers/create",{"_index":588,"title":{},"body":{"injectables/CreateProductProvider.html":{},"coverage.html":{}}}],["src/products/providers/find",{"_index":966,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"coverage.html":{}}}],["src/products/providers/products.service",{"_index":716,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["src/products/providers/products.service.ts",{"_index":1764,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/products/providers/products.service.ts:106",{"_index":1769,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:18",{"_index":1767,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:49",{"_index":1768,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:61",{"_index":1771,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:82",{"_index":1770,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:94",{"_index":1773,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/update",{"_index":1937,"title":{},"body":{"injectables/UpdateProductProvider.html":{},"coverage.html":{}}}],["src/reviews/dtos/create",{"_index":686,"title":{},"body":{"classes/CreateReviewDto.html":{},"coverage.html":{}}}],["src/reviews/providers/create",{"_index":705,"title":{},"body":{"injectables/CreateReviewProvider.html":{},"coverage.html":{}}}],["src/reviews/providers/reviews.service.ts",{"_index":1832,"title":{},"body":{"injectables/ReviewsService.html":{},"coverage.html":{}}}],["src/reviews/providers/reviews.service.ts:29",{"_index":1836,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/providers/reviews.service.ts:45",{"_index":1838,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/providers/reviews.service.ts:9",{"_index":1835,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/reviews.controller.ts",{"_index":1810,"title":{},"body":{"controllers/ReviewsController.html":{},"coverage.html":{}}}],["src/reviews/reviews.controller.ts:33",{"_index":1812,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/reviews/reviews.controller.ts:52",{"_index":1815,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/reviews/reviews.entity",{"_index":1578,"title":{},"body":{"entities/Product.html":{}}}],["src/reviews/reviews.entity.ts",{"_index":1796,"title":{},"body":{"entities/Review.html":{},"coverage.html":{}}}],["src/reviews/reviews.entity.ts:14",{"_index":1798,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.entity.ts:17",{"_index":1803,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.entity.ts:20",{"_index":1802,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.entity.ts:24",{"_index":1805,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.entity.ts:27",{"_index":1797,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.entity.ts:30",{"_index":1800,"title":{},"body":{"entities/Review.html":{}}}],["src/reviews/reviews.module.ts",{"_index":1828,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["src/subscribers/dtos/create",{"_index":737,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/providers/subscribers.service.ts",{"_index":1916,"title":{},"body":{"injectables/SubscribersService.html":{},"coverage.html":{}}}],["src/subscribers/providers/subscribers.service.ts:12",{"_index":1920,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/providers/subscribers.service.ts:36",{"_index":1923,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/providers/subscribers.service.ts:55",{"_index":1927,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscriber.entity",{"_index":1281,"title":{},"body":{"injectables/MailService.html":{}}}],["src/subscribers/subscriber.entity.ts",{"_index":1896,"title":{},"body":{"entities/Subscriber.html":{},"coverage.html":{}}}],["src/subscribers/subscriber.entity.ts:17",{"_index":1900,"title":{},"body":{"entities/Subscriber.html":{}}}],["src/subscribers/subscriber.entity.ts:9",{"_index":1901,"title":{},"body":{"entities/Subscriber.html":{}}}],["src/subscribers/subscribers.controller.ts",{"_index":1903,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.module.ts",{"_index":1910,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["src/uploads/providers/upload",{"_index":1977,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"coverage.html":{}}}],["src/uploads/providers/uploads.service",{"_index":602,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["src/uploads/providers/uploads.service.ts",{"_index":2019,"title":{},"body":{"injectables/UploadsService.html":{},"coverage.html":{}}}],["src/uploads/providers/uploads.service.ts:10",{"_index":2022,"title":{},"body":{"injectables/UploadsService.html":{}}}],["src/uploads/providers/uploads.service.ts:33",{"_index":2024,"title":{},"body":{"injectables/UploadsService.html":{}}}],["src/uploads/uploads.module",{"_index":1758,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/uploads/uploads.module.ts",{"_index":2015,"title":{},"body":{"modules/UploadsModule.html":{}}}],["src/users/dtos/create",{"_index":751,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/get",{"_index":1116,"title":{},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"coverage.html":{}}}],["src/users/dtos/patch",{"_index":1472,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["src/users/providers/clear",{"_index":505,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"coverage.html":{}}}],["src/users/providers/create",{"_index":763,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"coverage.html":{}}}],["src/users/providers/find",{"_index":1028,"title":{},"body":{"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"coverage.html":{}}}],["src/users/providers/store",{"_index":1885,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{},"coverage.html":{}}}],["src/users/providers/users.service",{"_index":1156,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["src/users/providers/users.service.ts",{"_index":2103,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/providers/users.service.ts:106",{"_index":2126,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:115",{"_index":2124,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:126",{"_index":2113,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:135",{"_index":2122,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:144",{"_index":2118,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:168",{"_index":2115,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:179",{"_index":2128,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:27",{"_index":2111,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:87",{"_index":2114,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:96",{"_index":2120,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/user.entity",{"_index":905,"title":{},"body":{"entities/DiscountUsage.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{}}}],["src/users/user.entity.ts",{"_index":2037,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/user.entity.ts:10",{"_index":2043,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:17",{"_index":2042,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:24",{"_index":2044,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:31",{"_index":2048,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:38",{"_index":2040,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:45",{"_index":2050,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:52",{"_index":2039,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:59",{"_index":2051,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:64",{"_index":2052,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:72",{"_index":2041,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:79",{"_index":2049,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:86",{"_index":2045,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:92",{"_index":2046,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.controller.ts",{"_index":2054,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:111",{"_index":2069,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:117",{"_index":2076,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:156",{"_index":2063,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:67",{"_index":2073,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":428,"title":{},"body":{"modules/AuthModule.html":{},"modules/PaystackModule.html":{}}}],["src/users/users.module.ts",{"_index":2092,"title":{},"body":{"modules/UsersModule.html":{}}}],["ssl",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["stamp",{"_index":2009,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["star",{"_index":702,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["star'})@max(5",{"_index":697,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["stars",{"_index":691,"title":{},"body":{"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"entities/Review.html":{}}}],["start",{"_index":608,"title":{},"body":{"injectables/CreateProductProvider.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"index.html":{}}}],["start:dev",{"_index":2303,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":2304,"title":{},"body":{"index.html":{}}}],["startdate",{"_index":1118,"title":{},"body":{"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{}}}],["started",{"_index":2286,"title":{"index.html":{}},"body":{}}],["starter",{"_index":2295,"title":{},"body":{"index.html":{}}}],["state",{"_index":527,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["state.dto",{"_index":837,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"classes/UpdateDeliveryStateDto.html":{}}}],["state.dto.ts",{"_index":525,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"classes/UpdateDeliveryStateDto.html":{},"coverage.html":{}}}],["state.dto.ts:10",{"_index":530,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{}}}],["state.dto.ts:6",{"_index":531,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{}}}],["state.entity",{"_index":857,"title":{},"body":{"modules/DeliveryStatesModule.html":{},"injectables/DeliveryStatesService.html":{}}}],["state.entity.ts",{"_index":802,"title":{},"body":{"entities/DeliveryState.html":{},"coverage.html":{}}}],["state.entity.ts:13",{"_index":808,"title":{},"body":{"entities/DeliveryState.html":{}}}],["state.entity.ts:16",{"_index":809,"title":{},"body":{"entities/DeliveryState.html":{}}}],["state.entity.ts:19",{"_index":806,"title":{},"body":{"entities/DeliveryState.html":{}}}],["state.entity.ts:22",{"_index":804,"title":{},"body":{"entities/DeliveryState.html":{}}}],["stateid",{"_index":832,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{}}}],["statements",{"_index":2199,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":818,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{}}}],["states.controller",{"_index":856,"title":{},"body":{"modules/DeliveryStatesModule.html":{}}}],["states.controller.ts",{"_index":817,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"coverage.html":{}}}],["states.controller.ts:25",{"_index":824,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["states.controller.ts:40",{"_index":827,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["states.controller.ts:51",{"_index":831,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["states.module",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["states.module.ts",{"_index":855,"title":{},"body":{"modules/DeliveryStatesModule.html":{}}}],["states.service",{"_index":836,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{}}}],["states.service.ts",{"_index":860,"title":{},"body":{"injectables/DeliveryStatesService.html":{},"coverage.html":{}}}],["states.service.ts:13",{"_index":863,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["states.service.ts:27",{"_index":865,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["states.service.ts:54",{"_index":867,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["states.service.ts:84",{"_index":868,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["states/delivery",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"modules/DeliveryStatesModule.html":{},"coverage.html":{}}}],["states/dtos/create",{"_index":524,"title":{},"body":{"classes/CreateDeliveryStateDto.html":{},"coverage.html":{}}}],["states/dtos/update",{"_index":1936,"title":{},"body":{"classes/UpdateDeliveryStateDto.html":{},"coverage.html":{}}}],["states/providers/delivery",{"_index":859,"title":{},"body":{"injectables/DeliveryStatesService.html":{},"coverage.html":{}}}],["static",{"_index":460,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["status",{"_index":393,"title":{},"body":{"controllers/AuthController.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["status.enum",{"_index":1342,"title":{},"body":{"entities/Order.html":{}}}],["status.enum.ts",{"_index":2271,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stay",{"_index":2339,"title":{},"body":{"index.html":{}}}],["stock",{"_index":1665,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["store",{"_index":1880,"title":{},"body":{"injectables/SignInProvider.html":{},"injectables/UsersService.html":{}}}],["stored",{"_index":1048,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UsersService.html":{}}}],["storedimagesurls",{"_index":626,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["storedimagesurls.push(urls",{"_index":630,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["storeotpandexpire",{"_index":1888,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["storeotpandexpire(user",{"_index":1890,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{}}}],["storeotpandexpireprovider",{"_index":1884,"title":{"injectables/StoreOtpAndExpireProvider.html":{}},"body":{"injectables/StoreOtpAndExpireProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["storeotpandexpiresprovider",{"_index":2109,"title":{},"body":{"injectables/UsersService.html":{}}}],["storetokenotpandotpexpire",{"_index":2106,"title":{},"body":{"injectables/UsersService.html":{}}}],["storetokenotpandotpexpire(user",{"_index":2125,"title":{},"body":{"injectables/UsersService.html":{}}}],["storing",{"_index":1887,"title":{},"body":{"injectables/StoreOtpAndExpireProvider.html":{},"injectables/UsersService.html":{}}}],["streetaddress",{"_index":1478,"title":{},"body":{"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["strict",{"_index":1258,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":49,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"interfaces/Paginated.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/SignInDto.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"miscellaneous/variables.html":{}}}],["string(error",{"_index":666,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["style",{"_index":1105,"title":{},"body":{"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{}}}],["sub",{"_index":120,"title":{},"body":{"interfaces/ActiveUserData.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["subject",{"_index":1287,"title":{},"body":{"injectables/MailService.html":{}}}],["subscribe",{"_index":1276,"title":{},"body":{"injectables/MailService.html":{}}}],["subscribed",{"_index":1925,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["subscriber",{"_index":740,"title":{"entities/Subscriber.html":{}},"body":{"classes/CreateSubscriberDto.html":{},"injectables/MailService.html":{},"entities/Subscriber.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{}}}],["subscriber.dto",{"_index":1930,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["subscriber.dto.ts",{"_index":738,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"coverage.html":{}}}],["subscriber.dto.ts:18",{"_index":743,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.email",{"_index":1304,"title":{},"body":{"injectables/MailService.html":{}}}],["subscriber.entity",{"_index":1912,"title":{},"body":{"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{}}}],["subscriber.id",{"_index":1308,"title":{},"body":{"injectables/MailService.html":{}}}],["subscriberrepository",{"_index":1921,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["subscribers",{"_index":1904,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["subscribers.controller",{"_index":1914,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["subscribers/subscribers.module",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["subscriberscontroller",{"_index":1902,"title":{"controllers/SubscribersController.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"coverage.html":{}}}],["subscribersmodule",{"_index":157,"title":{"modules/SubscribersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SubscribersModule.html":{},"modules.html":{},"overview.html":{}}}],["subscribersservice",{"_index":1909,"title":{"injectables/SubscribersService.html":{}},"body":{"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"overview.html":{}}}],["success",{"_index":2167,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{},"miscellaneous/enumerations.html":{}}}],["successful",{"_index":654,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["successfully",{"_index":344,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["summary",{"_index":392,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["support",{"_index":1285,"title":{},"body":{"injectables/MailService.html":{},"index.html":{},"modules.html":{}}}],["supported",{"_index":2032,"title":{},"body":{"injectables/UploadsService.html":{}}}],["svg",{"_index":2367,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["t",{"_index":1070,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["table",{"_index":1897,"title":{},"body":{"entities/Subscriber.html":{},"entities/User.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2239,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1421,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["team",{"_index":1286,"title":{},"body":{"injectables/MailService.html":{}}}],["template",{"_index":1252,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["templates",{"_index":1255,"title":{},"body":{"modules/MailModule.html":{}}}],["test",{"_index":2307,"title":{},"body":{"index.html":{}}}],["test:covresources",{"_index":2310,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":2309,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2305,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":2351,"title":{},"body":{"index.html":{}}}],["this.accesstokenguard",{"_index":482,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.applyfordiscountprovider.applyfordiscount(user",{"_index":944,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["this.appservice.gethello",{"_index":132,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.otpsignin(otpsignindto",{"_index":413,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.refreshtokens(refreshtokendto",{"_index":418,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signin(signindto",{"_index":408,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authtypeguardmap[type]).flat",{"_index":497,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.category",{"_index":1582,"title":{},"body":{"entities/Product.html":{}}}],["this.category.tolowercase",{"_index":1583,"title":{},"body":{"entities/Product.html":{}}}],["this.clearotpandexpirytimeprovider.clearotpandexpirytime(user",{"_index":2135,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.clothtype",{"_index":1586,"title":{},"body":{"entities/Product.html":{}}}],["this.clothtype.tolowercase",{"_index":1587,"title":{},"body":{"entities/Product.html":{}}}],["this.configservice.get('appconfig.apiversion",{"_index":799,"title":{},"body":{"injectables/DataResponseInterceptor.html":{}}}],["this.configservice.get('appconfig.awsbucketname",{"_index":1996,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["this.configservice.get('appconfig.awscloudfronturl')}/${name",{"_index":2035,"title":{},"body":{"injectables/UploadsService.html":{}}}],["this.configservice.get('appconfig.host')}/collections?success=yes",{"_index":1210,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["this.creatediscountprovider.creatediscount(creatediscountdto",{"_index":943,"title":{},"body":{"injectables/DiscountsService.html":{}}}],["this.createproductprovider.createproduct(createproductdto",{"_index":1774,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.createreviewprovider.createreview(createreviewdto",{"_index":1839,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.createuserprovider.createuser(createuserdto",{"_index":2131,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.datasource.createqueryrunner",{"_index":613,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["this.deliverystaterepository.create(createdeliverystatedto",{"_index":871,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["this.deliverystaterepository.findoneby",{"_index":873,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["this.deliverystaterepository.save(deliverystate",{"_index":872,"title":{},"body":{"injectables/DeliveryStatesService.html":{}}}],["this.deliverystatesservice.createdeliverystate",{"_index":844,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["this.deliverystatesservice.finddeliverystatebyname(state",{"_index":848,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["this.deliverystatesservice.updatedeliverystate",{"_index":852,"title":{},"body":{"controllers/DeliveryStatesController.html":{}}}],["this.discountsrepository.create(creatediscountdto",{"_index":549,"title":{},"body":{"injectables/CreateDiscountProvider.html":{}}}],["this.discountsrepository.findone",{"_index":304,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["this.discountsrepository.save(discount",{"_index":552,"title":{},"body":{"injectables/CreateDiscountProvider.html":{}}}],["this.discountsservice.applyfordiscount",{"_index":925,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["this.discountsservice.creatediscount(creatediscountdto",{"_index":922,"title":{},"body":{"controllers/DiscountsController.html":{}}}],["this.discountsusagerepository.count",{"_index":964,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["this.discountsusageservice.countdiscountusage",{"_index":324,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["this.dressstyle",{"_index":1584,"title":{},"body":{"entities/Product.html":{}}}],["this.dressstyle.tolowercase",{"_index":1585,"title":{},"body":{"entities/Product.html":{}}}],["this.extractrequestfromheader(request",{"_index":77,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.findallproductsprovider.findall(productquery",{"_index":1777,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.findonebyidprovider.findbyid(id",{"_index":2136,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.findoneuserbyemailprovider.findonebyemail(email",{"_index":2132,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.finduserbyotpandexpiresprovider.finduserbyotpandexpirytime",{"_index":2134,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.generatefilename(file",{"_index":1998,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["this.generatetokenprovider.generatetokens(user",{"_index":1383,"title":{},"body":{"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["this.getauthheader",{"_index":1214,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["this.initiatepaymentprovider.initializepayment",{"_index":1555,"title":{},"body":{"injectables/PaystackService.html":{}}}],["this.jwtconfiguration",{"_index":88,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.jwtconfiguration.accesstokenttl",{"_index":1086,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.jwtconfiguration.audience",{"_index":1077,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["this.jwtconfiguration.issuer",{"_index":1079,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["this.jwtconfiguration.refreshtokenttl",{"_index":1090,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.jwtconfiguration.secret",{"_index":1081,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["this.jwtservice.signasync",{"_index":1075,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.jwtservice.verify",{"_index":87,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.jwtservice.verifyasync",{"_index":1791,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["this.mailerservice.sendmail",{"_index":1282,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailservice.sendloginotp(user",{"_index":1882,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.mailservice.sendproductpurchasemail(user",{"_index":2181,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["this.mailservice.sendsubscribermail(subscriber",{"_index":1934,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.name",{"_index":1580,"title":{},"body":{"entities/Product.html":{}}}],["this.name.tolowercase",{"_index":1581,"title":{},"body":{"entities/Product.html":{}}}],["this.otpsigninprovider.signinwithotp(otpsignindto",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.paginationprovider.paginationquery",{"_index":1024,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/UsersService.html":{}}}],["this.paystackconfiguration.baseurl}/transaction/initialize",{"_index":1207,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["this.paystackconfiguration.baseurl}/transaction/verify/${reference",{"_index":2158,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["this.paystackconfiguration.secret",{"_index":1165,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["this.paystackservice.initiatepayment(initiatepaymentdto",{"_index":1531,"title":{},"body":{"controllers/PaystackController.html":{}}}],["this.paystackservice.verifypayment(body",{"_index":1534,"title":{},"body":{"controllers/PaystackController.html":{}}}],["this.productrepository",{"_index":1025,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["this.productrepository.delete(productid",{"_index":1779,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productrepository.findone",{"_index":1941,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["this.productrepository.findoneby",{"_index":1775,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productrepository.save(product",{"_index":1963,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["this.productsservice.createproduct(createproductdto",{"_index":1734,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.deleteproduct(productid",{"_index":1749,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findall(productquery",{"_index":1742,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findproductbyid",{"_index":721,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["this.productsservice.findproductbyid(prdid",{"_index":2163,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["this.productsservice.findproductbyid(productid",{"_index":1740,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.updateproduct(productid",{"_index":1745,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productvariantrepository.findone",{"_index":1640,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["this.productvariantrepository.save(variant",{"_index":1643,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["this.productvariantsservice.checkvariantavailability",{"_index":1185,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["this.productvariantsservice.findproductvariantbyid",{"_index":1966,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["this.productvariantsservice.findproductvariantbyid(vr.id",{"_index":1190,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["this.productvariantsservice.rollbackstock",{"_index":2179,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["this.productvariantsservice.saveproductvariant(variant",{"_index":1975,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["this.reflector.getallandoverride(auth_type_key",{"_index":491,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.reflector.getallandoverride(roles_key",{"_index":1854,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.refreshtokenprovider.refreshtokens(refreshtokendto",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.request.headers.host",{"_index":1428,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["this.request.protocol",{"_index":1427,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["this.reviewsrepository.create",{"_index":724,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["this.reviewsrepository.delete(reviewid",{"_index":1840,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.reviewsrepository.save(newreview",{"_index":728,"title":{},"body":{"injectables/CreateReviewProvider.html":{}}}],["this.reviewsservice.createreview(createreviewdto",{"_index":1821,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.reviewsservice.deletereview(reviewid",{"_index":1824,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.signinprovider.signin(signindto",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.signtoken",{"_index":1084,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.signtoken(user.id",{"_index":1089,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["this.state",{"_index":814,"title":{},"body":{"entities/DeliveryState.html":{}}}],["this.state.tolowercase",{"_index":815,"title":{},"body":{"entities/DeliveryState.html":{}}}],["this.storeotpandexpiresprovider.storeotpandexpire(user",{"_index":2133,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.subscriberrepository.create(createsubscriberdto",{"_index":1932,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscriberrepository.delete(id",{"_index":1935,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscriberrepository.save(subscriber",{"_index":1933,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.updateproductprovider.updateproduct(id",{"_index":1778,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.uploadsservice.uploadfile(file",{"_index":629,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["this.uploadtoawsprovider.fileupload(file",{"_index":2034,"title":{},"body":{"injectables/UploadsService.html":{}}}],["this.usersrepository",{"_index":2139,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.create",{"_index":774,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["this.usersrepository.delete(userid",{"_index":2140,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.find",{"_index":1055,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["this.usersrepository.findone",{"_index":1043,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{}}}],["this.usersrepository.findoneby",{"_index":1036,"title":{},"body":{"injectables/FindOneByIdProvider.html":{},"injectables/UsersService.html":{}}}],["this.usersrepository.save(newuser",{"_index":775,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["this.usersrepository.save(newuserobj",{"_index":520,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{}}}],["this.usersrepository.save(user",{"_index":2142,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.clearotpandexpirytime(user",{"_index":1381,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["this.usersservice.createuser",{"_index":1874,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.usersservice.deleteuser(userid",{"_index":2087,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(usersquery",{"_index":2083,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyemail(signindto.email",{"_index":1872,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.usersservice.findonebyid(sub",{"_index":1794,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["this.usersservice.findonebyid(user.sub",{"_index":1167,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["this.usersservice.findonebyid(userid",{"_index":2081,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.finduserbyresetotpandexpirytime(hashedotp",{"_index":1379,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["this.usersservice.storetokenotpandotpexpire(user",{"_index":1881,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["this.usersservice.updateuser(user.sub",{"_index":2084,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.verifypayment(data.reference",{"_index":2191,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["this.verifypaymentprovider.paymentwebhook",{"_index":1556,"title":{},"body":{"injectables/PaystackService.html":{}}}],["through",{"_index":499,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["throw",{"_index":78,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["ticket",{"_index":1283,"title":{},"body":{"injectables/MailService.html":{}}}],["time",{"_index":1049,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["time.provider",{"_index":2099,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["time.provider.ts",{"_index":507,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"coverage.html":{}}}],["time.provider.ts:14",{"_index":1051,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["time.provider.ts:25",{"_index":513,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{}}}],["time.provider.ts:32",{"_index":1053,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["time.provider.ts:7",{"_index":510,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{}}}],["times",{"_index":302,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsService.html":{}}}],["timestamp",{"_index":886,"title":{},"body":{"entities/Discount.html":{},"injectables/OtpSigninProvider.html":{},"injectables/UploadToAwsProvider.html":{},"entities/User.html":{}}}],["tls",{"_index":1249,"title":{},"body":{"modules/MailModule.html":{}}}],["token",{"_index":11,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"controllers/ProductsController.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["token.dto",{"_index":383,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenProvider.html":{}}}],["token.dto.ts",{"_index":1780,"title":{},"body":{"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["token.dto.ts:17",{"_index":1782,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["token.guard",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{}}}],["token.guard.ts",{"_index":8,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{}}}],["token.guard.ts:18",{"_index":24,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard.ts:42",{"_index":32,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard.ts:77",{"_index":46,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.provider",{"_index":435,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["token.provider.ts",{"_index":1785,"title":{},"body":{"injectables/RefreshTokenProvider.html":{},"coverage.html":{}}}],["token.provider.ts:19",{"_index":1787,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["token.provider.ts:56",{"_index":1788,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["token/access",{"_index":7,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["tokend",{"_index":1789,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["tokens",{"_index":357,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{}}}],["tokens')@httpcode(httpstatus.ok)@auth(authtype.none",{"_index":360,"title":{},"body":{"controllers/AuthController.html":{}}}],["tokens'})@apiresponse({status",{"_index":356,"title":{},"body":{"controllers/AuthController.html":{}}}],["tokens.provider",{"_index":432,"title":{},"body":{"modules/AuthModule.html":{},"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["tokens.provider.ts",{"_index":1061,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"coverage.html":{}}}],["tokens.provider.ts:12",{"_index":1065,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["tokens.provider.ts:38",{"_index":1071,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["tokens.provider.ts:58",{"_index":1067,"title":{},"body":{"injectables/GenerateTokensProvider.html":{}}}],["top",{"_index":1943,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["total",{"_index":1192,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["totalamount",{"_index":1194,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Order.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["totalitems",{"_index":1391,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["totalpages",{"_index":1393,"title":{},"body":{"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{}}}],["totalqty",{"_index":1196,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["touch",{"_index":2357,"title":{},"body":{"index.html":{}}}],["track",{"_index":1290,"title":{},"body":{"injectables/MailService.html":{}}}],["transaction",{"_index":610,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["transformer",{"_index":578,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{},"dependencies.html":{}}}],["transformtolowercase",{"_index":813,"title":{},"body":{"entities/DeliveryState.html":{},"entities/Product.html":{}}}],["transport",{"_index":1245,"title":{},"body":{"modules/MailModule.html":{}}}],["trim",{"_index":2006,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["true",{"_index":39,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"classes/InitiatePaymentDto.html":{},"modules/MailModule.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductVariant.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"guards/RolesGuard.html":{},"entities/Subscriber.html":{},"injectables/UpdateProductProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["true})@joincolumn",{"_index":899,"title":{},"body":{"entities/DiscountUsage.html":{}}}],["true})@type(undefined",{"_index":576,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["try",{"_index":81,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/ApplyForDiscountProvider.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/ProductsService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/ReviewsService.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["twitter",{"_index":2363,"title":{},"body":{"index.html":{}}}],["txn",{"_index":657,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["type",{"_index":28,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"modules/AppModule.html":{},"classes/ApplyForDiscountDto.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"injectables/CreateDiscountProvider.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"injectables/CreateReviewProvider.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DataResponseInterceptor.html":{},"entities/DeliveryState.html":{},"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/MailService.html":{},"entities/Order.html":{},"classes/OtpSigninDto.html":{},"injectables/OtpSigninProvider.html":{},"interfaces/Paginated.html":{},"injectables/PaginationProvider.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"entities/Payment.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"classes/ProductWithVariantDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenProvider.html":{},"entities/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":381,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateUserDto.html":{},"controllers/DeliveryStatesController.html":{},"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["type.enum.ts",{"_index":2269,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typeorm",{"_index":288,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"entities/DeliveryState.html":{},"injectables/DeliveryStatesService.html":{},"entities/Discount.html":{},"entities/DiscountUsage.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/Order.html":{},"injectables/PaginationProvider.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"injectables/ProductVariantsService.html":{},"injectables/ProductsService.html":{},"entities/Review.html":{},"injectables/ReviewsService.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/OrdersModule.html":{},"modules/PaymentModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([deliverystate",{"_index":858,"title":{},"body":{"modules/DeliveryStatesModule.html":{}}}],["typeormmodule.forfeature([discount",{"_index":935,"title":{},"body":{"modules/DiscountsModule.html":{}}}],["typeormmodule.forfeature([discountusage",{"_index":951,"title":{},"body":{"modules/DiscountsUsageModule.html":{}}}],["typeormmodule.forfeature([order",{"_index":1357,"title":{},"body":{"modules/OrdersModule.html":{}}}],["typeormmodule.forfeature([payment",{"_index":1515,"title":{},"body":{"modules/PaymentModule.html":{}}}],["typeormmodule.forfeature([product",{"_index":1763,"title":{},"body":{"modules/ProductsModule.html":{}}}],["typeormmodule.forfeature([productimage",{"_index":1603,"title":{},"body":{"modules/ProductImagesModule.html":{}}}],["typeormmodule.forfeature([productvariant",{"_index":1620,"title":{},"body":{"modules/ProductVariantsModule.html":{}}}],["typeormmodule.forfeature([review",{"_index":1831,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["typeormmodule.forfeature([subscriber",{"_index":1915,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":2102,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":480,"title":{},"body":{"guards/AuthenticationGuard.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/UpdateDeliveryStateDto.html":{}}}],["types/multer",{"_index":2249,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":96,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["unable",{"_index":312,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["unauthorizedexception",{"_index":54,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/RefreshTokenProvider.html":{}}}],["unauthorizedexception('otp",{"_index":1058,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["unauthorizedexception('user",{"_index":1046,"title":{},"body":{"injectables/FindOneUserByEmailProvider.html":{}}}],["unauthorizedexception(error",{"_index":1795,"title":{},"body":{"injectables/RefreshTokenProvider.html":{}}}],["undefined",{"_index":50,"title":{},"body":{"guards/AccessTokenGuard.html":{},"entities/Discount.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"entities/Order.html":{},"entities/Payment.html":{},"injectables/UpdateProductProvider.html":{},"miscellaneous/variables.html":{}}}],["undefined'])@auth(authtype.none)@get('/:productid",{"_index":1708,"title":{},"body":{"controllers/ProductsController.html":{}}}],["undefined'])@delete('/:userid",{"_index":2062,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined'])@get",{"_index":2068,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined'])@get('/:userid",{"_index":2072,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined})@apibody({description",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{}}}],["undefined})@httpcode(httpstatus.ok)@auth(authtype.none)@patch('/otp",{"_index":350,"title":{},"body":{"controllers/AuthController.html":{}}}],["undefined})@post('/sign",{"_index":365,"title":{},"body":{"controllers/AuthController.html":{}}}],["undefined})@post('refresh",{"_index":359,"title":{},"body":{"controllers/AuthController.html":{}}}],["unique",{"_index":1507,"title":{},"body":{"entities/Payment.html":{},"controllers/ProductsController.html":{},"entities/Subscriber.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["unit",{"_index":2306,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":282,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OtpSigninProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/SubscribersService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["unlicensed",{"_index":2377,"title":{},"body":{"properties.html":{}}}],["unsubscribed",{"_index":1929,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["unsubscribeemail",{"_index":1918,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["unsubscribeemail(id",{"_index":1926,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["unsubscribing",{"_index":1928,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["unsuccessful",{"_index":660,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["unsupported",{"_index":2026,"title":{},"body":{"injectables/UploadsService.html":{}}}],["unused",{"_index":98,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["update",{"_index":877,"title":{},"body":{"injectables/DeliveryStatesService.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["update(json.stringify(req.body",{"_index":2185,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["update(otp.tostring",{"_index":1879,"title":{},"body":{"injectables/SignInProvider.html":{}}}],["update(otpsignindto.otp.tostring",{"_index":1376,"title":{},"body":{"injectables/OtpSigninProvider.html":{}}}],["updated",{"_index":833,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["updatedat",{"_index":1316,"title":{},"body":{"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{}}}],["updatedatecolumn",{"_index":1336,"title":{},"body":{"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{}}}],["updatedeliverystate",{"_index":821,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{}}}],["updatedeliverystate(stateid",{"_index":828,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{}}}],["updatedeliverystatedto",{"_index":829,"title":{"classes/UpdateDeliveryStateDto.html":{}},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"classes/UpdateDeliveryStateDto.html":{},"coverage.html":{}}}],["updateproduct",{"_index":1765,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["updateproduct(id",{"_index":1772,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["updateproductprovider",{"_index":1754,"title":{"injectables/UpdateProductProvider.html":{}},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/UpdateProductProvider.html":{},"coverage.html":{},"overview.html":{}}}],["updates",{"_index":849,"title":{},"body":{"controllers/DeliveryStatesController.html":{},"injectables/DeliveryStatesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"index.html":{}}}],["updateuser",{"_index":2107,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuser(id",{"_index":2127,"title":{},"body":{"injectables/UsersService.html":{}}}],["upload",{"_index":621,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["uploadedfiles",{"_index":1716,"title":{},"body":{"controllers/ProductsController.html":{}}}],["uploadfile",{"_index":2020,"title":{},"body":{"injectables/UploadsService.html":{}}}],["uploadfile(file",{"_index":2023,"title":{},"body":{"injectables/UploadsService.html":{}}}],["uploading",{"_index":1984,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"injectables/UploadsService.html":{}}}],["uploadresult",{"_index":1994,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["uploadresult.key",{"_index":2001,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["uploads",{"_index":605,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["uploads/uploads.module",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["uploadsmodule",{"_index":158,"title":{"modules/UploadsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/UploadsModule.html":{},"modules.html":{},"overview.html":{}}}],["uploadsservice",{"_index":593,"title":{"injectables/UploadsService.html":{}},"body":{"injectables/CreateProductProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"coverage.html":{},"overview.html":{}}}],["uploadtoawsprovider",{"_index":1976,"title":{"injectables/UploadToAwsProvider.html":{}},"body":{"injectables/UploadToAwsProvider.html":{},"modules/UploadsModule.html":{},"injectables/UploadsService.html":{},"coverage.html":{},"overview.html":{}}}],["url",{"_index":2025,"title":{},"body":{"injectables/UploadsService.html":{}}}],["url(this.request.url",{"_index":1430,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["urls",{"_index":1425,"title":{},"body":{"injectables/PaginationProvider.html":{}}}],["urlsindex",{"_index":644,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["usage",{"_index":297,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsUsageService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["usage.entity",{"_index":950,"title":{},"body":{"modules/DiscountsUsageModule.html":{},"injectables/DiscountsUsageService.html":{},"entities/Order.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["usage.entity.ts",{"_index":891,"title":{},"body":{"entities/DiscountUsage.html":{},"coverage.html":{}}}],["usage.entity.ts:16",{"_index":896,"title":{},"body":{"entities/DiscountUsage.html":{}}}],["usage.entity.ts:19",{"_index":902,"title":{},"body":{"entities/DiscountUsage.html":{}}}],["usage.entity.ts:22",{"_index":895,"title":{},"body":{"entities/DiscountUsage.html":{}}}],["usage.entity.ts:26",{"_index":900,"title":{},"body":{"entities/DiscountUsage.html":{}}}],["usage.entity.ts:29",{"_index":901,"title":{},"body":{"entities/DiscountUsage.html":{}}}],["usage.module",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"modules/DiscountsModule.html":{}}}],["usage.module.ts",{"_index":948,"title":{},"body":{"modules/DiscountsUsageModule.html":{}}}],["usage.service",{"_index":294,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"modules/DiscountsUsageModule.html":{}}}],["usage.service.ts",{"_index":952,"title":{},"body":{"injectables/DiscountsUsageService.html":{},"coverage.html":{}}}],["usage.service.ts:22",{"_index":959,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["usage.service.ts:7",{"_index":955,"title":{},"body":{"injectables/DiscountsUsageService.html":{}}}],["usage/discounts",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"entities/DiscountUsage.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"entities/Order.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["usage/providers/discounts",{"_index":293,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsUsageService.html":{},"coverage.html":{}}}],["usagecount",{"_index":323,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsUsageService.html":{}}}],["usagelimit",{"_index":879,"title":{},"body":{"entities/Discount.html":{}}}],["use",{"_index":473,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"guards/RolesGuard.html":{}}}],["useclass",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":303,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsService.html":{}}}],["usedat",{"_index":893,"title":{},"body":{"entities/DiscountUsage.html":{}}}],["usefactory",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["useinterceptors",{"_index":1717,"title":{},"body":{"controllers/ProductsController.html":{}}}],["user",{"_index":35,"title":{"entities/User.html":{}},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"injectables/ApplyForDiscountProvider.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/ClearOtpAndExpiryTimeProvider.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersProvider.html":{},"injectables/DeliveryStatesService.html":{},"entities/DiscountUsage.html":{},"controllers/DiscountsController.html":{},"injectables/DiscountsService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/GenerateTokensProvider.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"injectables/InitiatePaymentProvider.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ProductsController.html":{},"injectables/RefreshTokenProvider.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user.decorator",{"_index":918,"title":{},"body":{"controllers/DiscountsController.html":{},"controllers/PaystackController.html":{},"controllers/UsersController.html":{}}}],["user.decorator.ts",{"_index":2206,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":769,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":752,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/PatchUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":1484,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:14",{"_index":1121,"title":{},"body":{"classes/GetUsersBaseDto.html":{}}}],["user.dto.ts:16",{"_index":1482,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:20",{"_index":1485,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:21",{"_index":753,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUsersBaseDto.html":{}}}],["user.dto.ts:24",{"_index":1486,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:28",{"_index":1481,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:32",{"_index":755,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{}}}],["user.dto.ts:36",{"_index":1488,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:8",{"_index":1483,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.email",{"_index":1087,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/MailService.html":{},"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{}}}],["user.entity",{"_index":515,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.firstname",{"_index":1303,"title":{},"body":{"injectables/MailService.html":{}}}],["user.fullname",{"_index":1294,"title":{},"body":{"injectables/MailService.html":{}}}],["user.id",{"_index":1085,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/SignInProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["user.role",{"_index":1088,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/OtpSigninProvider.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{}}}],["user.sub",{"_index":326,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{}}}],["user?.[field",{"_index":2391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user[0",{"_index":1057,"title":{},"body":{"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["userid",{"_index":958,"title":{},"body":{"injectables/DiscountsUsageService.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/Order.html":{},"entities/Payment.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["username",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["userquery",{"_index":2119,"title":{},"body":{"injectables/UsersService.html":{}}}],["userquery.limit",{"_index":2137,"title":{},"body":{"injectables/UsersService.html":{}}}],["userquery.page",{"_index":2138,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":516,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"injectables/OtpSigninProvider.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":2093,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.provider",{"_index":2095,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["users.provider.ts",{"_index":764,"title":{},"body":{"injectables/CreateUsersProvider.html":{},"coverage.html":{}}}],["users.provider.ts:18",{"_index":766,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["users.provider.ts:38",{"_index":768,"title":{},"body":{"injectables/CreateUsersProvider.html":{}}}],["users/users.module",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":2053,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":159,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PaystackModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersquery",{"_index":2070,"title":{},"body":{"controllers/UsersController.html":{}}}],["usersrepository",{"_index":511,"title":{},"body":{"injectables/ClearOtpAndExpiryTimeProvider.html":{},"injectables/CreateUsersProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/FindOneUserByEmailProvider.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{},"injectables/StoreOtpAndExpireProvider.html":{},"injectables/UsersService.html":{}}}],["usersservice",{"_index":1141,"title":{"injectables/UsersService.html":{}},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/OtpSigninProvider.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/SignInProvider.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":471,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/GenerateTokensProvider.html":{},"injectables/RefreshTokenProvider.html":{},"guards/RolesGuard.html":{},"injectables/SignInProvider.html":{},"index.html":{}}}],["uuid",{"_index":1993,"title":{},"body":{"injectables/UploadToAwsProvider.html":{},"dependencies.html":{}}}],["uuid4",{"_index":1992,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["uuid4()}${extension",{"_index":2011,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["v",{"_index":1017,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["v4",{"_index":1991,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["valid",{"_index":82,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{}}}],["validate",{"_index":80,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["validatenested",{"_index":580,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["validating",{"_index":1844,"title":{},"body":{"guards/RolesGuard.html":{}}}],["validation",{"_index":106,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["validationschema",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":269,"title":{},"body":{"classes/ApplyForDiscountDto.html":{},"classes/CreateDeliveryStateDto.html":{},"classes/CreateDiscountDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/GetProductsBaseDto.html":{},"classes/GetProductsDto.html":{},"classes/GetUsersBaseDto.html":{},"classes/GetUsersDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/OtpSigninDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/PatchUserDto.html":{},"classes/ProductWithVariantDto.html":{},"classes/RefreshTokenDto.html":{},"classes/SignInDto.html":{},"dependencies.html":{}}}],["validfrom",{"_index":305,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"entities/Discount.html":{}}}],["validity",{"_index":300,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"injectables/DiscountsService.html":{}}}],["validuntil",{"_index":308,"title":{},"body":{"injectables/ApplyForDiscountProvider.html":{},"classes/CreateDiscountDto.html":{},"entities/Discount.html":{}}}],["value",{"_index":394,"title":{},"body":{"controllers/AuthController.html":{},"classes/PaginationQueryDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":1898,"title":{},"body":{"entities/Subscriber.html":{},"entities/User.html":{}}}],["variable",{"_index":2201,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2378,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variant",{"_index":632,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["variant.color",{"_index":1660,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["variant.dto",{"_index":584,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/InitiatePaymentDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/ProductWithVariantDto.html":{}}}],["variant.dto.ts",{"_index":672,"title":{},"body":{"classes/CreateProductVariantDto.html":{},"classes/PatchProductVariantDto.html":{},"coverage.html":{}}}],["variant.dto.ts:10",{"_index":1465,"title":{},"body":{"classes/PatchProductVariantDto.html":{}}}],["variant.dto.ts:14",{"_index":1468,"title":{},"body":{"classes/PatchProductVariantDto.html":{}}}],["variant.dto.ts:15",{"_index":676,"title":{},"body":{"classes/CreateProductVariantDto.html":{}}}],["variant.dto.ts:19",{"_index":681,"title":{},"body":{"classes/CreateProductVariantDto.html":{}}}],["variant.dto.ts:24",{"_index":680,"title":{},"body":{"classes/CreateProductVariantDto.html":{}}}],["variant.dto.ts:30",{"_index":678,"title":{},"body":{"classes/CreateProductVariantDto.html":{}}}],["variant.images",{"_index":1593,"title":{},"body":{"entities/ProductImage.html":{}}}],["variant.product",{"_index":1576,"title":{},"body":{"entities/Product.html":{}}}],["variant.productid",{"_index":1655,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["variant.quantity",{"_index":1666,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["variant.size",{"_index":1661,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["variant.soldout",{"_index":1659,"title":{},"body":{"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{}}}],["variantdto",{"_index":1182,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["variantdto.color",{"_index":1970,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantdto.id",{"_index":1967,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantdto.quantity",{"_index":1972,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantdto.size",{"_index":1971,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantdto.soldout",{"_index":1973,"title":{},"body":{"injectables/UpdateProductProvider.html":{}}}],["variantid",{"_index":1183,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"entities/Payment.html":{},"injectables/ProductVariantsService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["variants",{"_index":563,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"injectables/FindAllProductsProvider.html":{},"classes/InitiatePaymentDto.html":{},"injectables/InitiatePaymentProvider.html":{},"classes/PatchProductDto.html":{},"entities/Payment.html":{},"entities/Product.html":{},"classes/ProductWithVariantDto.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["variants.entity",{"_index":585,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductVariantsModule.html":{},"injectables/ProductVariantsService.html":{}}}],["variants.entity.ts",{"_index":1606,"title":{},"body":{"entities/ProductVariant.html":{},"coverage.html":{}}}],["variants.entity.ts:15",{"_index":1608,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:18",{"_index":1607,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:21",{"_index":1614,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:24",{"_index":1613,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:27",{"_index":1615,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:33",{"_index":1612,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.entity.ts:39",{"_index":1610,"title":{},"body":{"entities/ProductVariant.html":{}}}],["variants.images",{"_index":1023,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["variants.module",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"modules/PaystackModule.html":{},"modules/ProductsModule.html":{}}}],["variants.module.ts",{"_index":1619,"title":{},"body":{"modules/ProductVariantsModule.html":{}}}],["variants.service",{"_index":1162,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"modules/ProductVariantsModule.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["variants.service.ts",{"_index":1621,"title":{},"body":{"injectables/ProductVariantsService.html":{},"coverage.html":{}}}],["variants.service.ts:11",{"_index":1627,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["variants.service.ts:110",{"_index":1636,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["variants.service.ts:26",{"_index":1634,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["variants.service.ts:48",{"_index":1638,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["variants.service.ts:60",{"_index":1631,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["variants/dto/create",{"_index":583,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductVariantDto.html":{},"coverage.html":{}}}],["variants/dto/patch",{"_index":1134,"title":{},"body":{"classes/InitiatePaymentDto.html":{},"classes/PatchProductDto.html":{},"classes/PatchProductVariantDto.html":{},"classes/ProductWithVariantDto.html":{},"coverage.html":{}}}],["variants/product",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateProductDto.html":{},"injectables/CreateProductProvider.html":{},"entities/Payment.html":{},"modules/PaystackModule.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/ProductVariant.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["variants/providers/product",{"_index":1161,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{},"injectables/ProductVariantsService.html":{},"injectables/UpdateProductProvider.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{}}}],["variants[${i}][images",{"_index":1731,"title":{},"body":{"controllers/ProductsController.html":{}}}],["variantsimages",{"_index":622,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["variantsimages.push(filearray",{"_index":625,"title":{},"body":{"injectables/CreateProductProvider.html":{}}}],["various",{"_index":1388,"title":{},"body":{"interfaces/Paginated.html":{}}}],["vars",{"_index":99,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/CreateDiscountProvider.html":{},"injectables/CreateProductProvider.html":{},"injectables/CreateReviewProvider.html":{},"injectables/DeliveryStatesService.html":{},"injectables/DiscountsUsageService.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/FindOneByIdProvider.html":{},"injectables/UpdateProductProvider.html":{},"injectables/UsersService.html":{}}}],["verification",{"_index":2196,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["verified",{"_index":2194,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["verify",{"_index":1554,"title":{},"body":{"injectables/PaystackService.html":{},"injectables/RefreshTokenProvider.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["verifying",{"_index":2155,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["verifypayment",{"_index":1547,"title":{},"body":{"injectables/PaystackService.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["verifypayment(body",{"_index":1551,"title":{},"body":{"injectables/PaystackService.html":{}}}],["verifypayment(reference",{"_index":2153,"title":{},"body":{"injectables/VerifyPaymentProvider.html":{}}}],["verifypaymentprovider",{"_index":1538,"title":{"injectables/VerifyPaymentProvider.html":{}},"body":{"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"injectables/VerifyPaymentProvider.html":{},"coverage.html":{},"overview.html":{}}}],["version",{"_index":2375,"title":{},"body":{"properties.html":{}}}],["video",{"_index":2327,"title":{},"body":{"index.html":{}}}],["visit",{"_index":2316,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":2329,"title":{},"body":{"index.html":{}}}],["vr",{"_index":638,"title":{},"body":{"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{}}}],["vr.quantity",{"_index":1198,"title":{},"body":{"injectables/InitiatePaymentProvider.html":{}}}],["want",{"_index":1698,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["watch",{"_index":2301,"title":{},"body":{"index.html":{}}}],["wears",{"_index":1296,"title":{},"body":{"injectables/MailService.html":{}}}],["website",{"_index":2361,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":1305,"title":{},"body":{"injectables/MailService.html":{}}}],["where('variant.id",{"_index":1654,"title":{},"body":{"injectables/ProductVariantsService.html":{}}}],["whereoptions",{"_index":990,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["whereoptions.push(filteredconditions",{"_index":1018,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["whether",{"_index":42,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateProductProvider.html":{},"injectables/InitiatePaymentProvider.html":{},"guards/RolesGuard.html":{},"injectables/VerifyPaymentProvider.html":{}}}],["white",{"_index":2003,"title":{},"body":{"injectables/UploadToAwsProvider.html":{}}}],["without",{"_index":475,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["working",{"_index":2315,"title":{},"body":{"index.html":{}}}],["world",{"_index":259,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":1736,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["yes",{"_index":1072,"title":{},"body":{"injectables/GenerateTokensProvider.html":{},"injectables/PaginationProvider.html":{},"injectables/ProductVariantsService.html":{}}}],["you'd",{"_index":2355,"title":{},"body":{"index.html":{}}}],["zipcode",{"_index":1479,"title":{},"body":{"classes/PatchUserDto.html":{},"entities/User.html":{}}}],["zoom",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveryStatesModule.html":{},"modules/DiscountsModule.html":{},"modules/DiscountsUsageModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/PaginationModule.html":{},"modules/PaystackModule.html":{},"modules/ProductImagesModule.html":{},"modules/ProductVariantsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/SubscribersModule.html":{},"modules/UploadsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AccessTokenGuard.html":{"url":"guards/AccessTokenGuard.html","title":"guard - AccessTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AccessTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/access-token/access-token.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    guard for access token\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractRequestFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConfiguration: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/access-token/access-token.guard.ts:18\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/access-token/access-token.guard.ts:42\n                        \n                    \n\n\n            \n                \n                        function for checking if user has access token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                true or false depending on whether user is signed in or not\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractRequestFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractRequestFromHeader(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/access-token/access-token.guard.ts:77\n                        \n                    \n\n\n            \n                \n                        function for extracting the access token from the request headers\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                access token\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ConfigType } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\nimport jwtConfig from 'src/auth/config/jwt.config';\nimport { REQUEST_USER_KEY } from 'src/auth/constants/auth.constant';\n\n/**\n * guard for access token\n */\n@Injectable()\nexport class AccessTokenGuard implements CanActivate {\n  /**\n   * constructor\n   * @param jwtService\n   * @param jwtConfiguration\n   */\n  constructor(\n    /**\n     * Inject jwtService\n     */\n    private readonly jwtService: JwtService,\n\n    /**\n     * inject jwt config\n     */\n    @Inject(jwtConfig.KEY)\n    private readonly jwtConfiguration: ConfigType,\n  ) {}\n\n  /**\n   * function for checking if user has access token\n   * @param context\n   * @returns true or false depending on whether user is signed in or not\n   */\n  async canActivate(context: ExecutionContext): Promise {\n    // we can grab the request from the excetion context\n    const request = context.switchToHttp().getRequest();\n\n    // extract the token from the header\n    const token = this.extractRequestFromHeader(request);\n\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n\n    // validate the token\n    try {\n      // if the token is valid, jwt returns the payload which contains info for indetifying the user\n      const payload = await this.jwtService.verify(\n        token,\n        this.jwtConfiguration,\n      );\n\n      // setting the request.user = payload\n      request[REQUEST_USER_KEY] = payload;\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (_) {\n      throw new UnauthorizedException();\n    }\n\n    // accept or deny req based on validation\n    return true;\n  }\n\n  /**\n   * function for extracting the access token from the request headers\n   * @param request\n   * @returns access token\n   */\n  private extractRequestFromHeader(request: Request): string | undefined {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [_, token] = request.headers.authorization?.split(' ') ?? [];\n    return token;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActiveUserData.html":{"url":"interfaces/ActiveUserData.html","title":"interface - ActiveUserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActiveUserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/active-user-data.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for a user that has logged in (payload)\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    user email\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    user role\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    id for user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ActiveUserData {\n  /**\n   * id for user\n   */\n  sub: string;\n\n  /**\n   * user email\n   */\n  email: string;\n\n  /**\n   * user role\n   */\n  role: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDeliveryStatesModule\n\nDeliveryStatesModule\n\nAppModule -->\n\nDeliveryStatesModule->AppModule\n\n\n\n\n\nDiscountsModule\n\nDiscountsModule\n\nAppModule -->\n\nDiscountsModule->AppModule\n\n\n\n\n\nDiscountsUsageModule\n\nDiscountsUsageModule\n\nAppModule -->\n\nDiscountsUsageModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nAppModule -->\n\nPaymentModule->AppModule\n\n\n\n\n\nPaystackModule\n\nPaystackModule\n\nAppModule -->\n\nPaystackModule->AppModule\n\n\n\n\n\nProductImagesModule\n\nProductImagesModule\n\nAppModule -->\n\nProductImagesModule->AppModule\n\n\n\n\n\nProductVariantsModule\n\nProductVariantsModule\n\nAppModule -->\n\nProductVariantsModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nReviewsModule\n\nReviewsModule\n\nAppModule -->\n\nReviewsModule->AppModule\n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUploadsModule\n\nUploadsModule\n\nAppModule -->\n\nUploadsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            DeliveryStatesModule\n                        \n                        \n                            DiscountsModule\n                        \n                        \n                            DiscountsUsageModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            OrdersModule\n                        \n                        \n                            PaymentModule\n                        \n                        \n                            PaystackModule\n                        \n                        \n                            ProductImagesModule\n                        \n                        \n                            ProductVariantsModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            ReviewsModule\n                        \n                        \n                            SubscribersModule\n                        \n                        \n                            UploadsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport appConfig from './config/app.config';\nimport databaseConfig from './config/database.config';\nimport enviromentValidation from './config/enviroment.validation';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { MailModule } from './mail/mail.module';\nimport { SubscribersModule } from './subscribers/subscribers.module';\nimport { APP_GUARD, APP_INTERCEPTOR } from '@nestjs/core';\nimport { DataResponseInterceptor } from './common/interceptors/data-response/data-response.interceptor';\nimport { AuthenticationGuard } from './auth/guards/authentication/authentication.guard';\nimport { RolesGuard } from './auth/guards/roles/roles.guard';\nimport { AccessTokenGuard } from './auth/guards/access-token/access-token.guard';\nimport jwtConfig from './auth/config/jwt.config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ProductsModule } from './products/products.module';\nimport { ProductVariantsModule } from './product-variants/product-variants.module';\nimport { ProductImagesModule } from './product-images/product-images.module';\n\nimport { ReviewsModule } from './reviews/reviews.module';\nimport { UploadsModule } from './uploads/uploads.module';\nimport { DiscountsModule } from './discounts/discounts.module';\nimport { DiscountsUsageModule } from './discounts-usage/discounts-usage.module';\nimport { DeliveryStatesModule } from './delivery-states/delivery-states.module';\nimport { PaystackModule } from './paystack/paystack.module';\nimport { PaymentModule } from './payment/payment.module';\nimport { OrdersModule } from './orders/orders.module';\n\n/**\n * app environment\n */\nconst ENV = process.env.NODE_ENV;\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: !ENV ? '.env' : `.env.${ENV}`,\n      load: [appConfig, databaseConfig],\n      validationSchema: enviromentValidation,\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => {\n        return {\n          type: 'postgres',\n          autoLoadEntities: configService.get('database.autoLoadEntities'),\n          synchronize: configService.get('database.synchronize'),\n          port: +configService.get('database.port'),\n          username: configService.get('database.user'),\n          password: configService.get('database.password'),\n          host: configService.get('database.host'),\n          database: configService.get('database.name'),\n          ssl:\n            process.env.NODE_ENV === 'development'\n              ? false\n              : {\n                  rejectUnauthorized: false,\n                },\n          logging: process.env.NODE_ENV !== 'production',\n        };\n      },\n    }),\n    UsersModule,\n    AuthModule,\n    MailModule,\n    SubscribersModule,\n    // Importing an enviroment config specific for this module\n    ConfigModule.forFeature(jwtConfig),\n    // for asynchrousnously registering the jwt module and passing the config to the module\n    JwtModule.registerAsync(jwtConfig.asProvider()),\n    ProductsModule,\n    ProductVariantsModule,\n    ProductImagesModule,\n    ReviewsModule,\n    UploadsModule,\n    DiscountsModule,\n    DiscountsUsageModule,\n    DeliveryStatesModule,\n    PaystackModule,\n    PaymentModule,\n    OrdersModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: DataResponseInterceptor,\n    },\n    {\n      provide: APP_GUARD,\n      useClass: AuthenticationGuard,\n    },\n    {\n      provide: APP_GUARD,\n      useClass: RolesGuard,\n    },\n    AccessTokenGuard,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplyForDiscountDto.html":{"url":"classes/ApplyForDiscountDto.html","title":"class - ApplyForDiscountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplyForDiscountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/dtos/apply-for-discount.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/dtos/apply-for-discount.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class ApplyForDiscountDto {\n  @IsString()\n  @IsNotEmpty()\n  code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplyForDiscountProvider.html":{"url":"injectables/ApplyForDiscountProvider.html","title":"injectable - ApplyForDiscountProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApplyForDiscountProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/providers/apply-for-discount.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                applyForDiscount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(discountsRepository: Repository, discountsUsageService: DiscountsUsageService)\n                    \n                \n                        \n                            \n                                Defined in src/discounts/providers/apply-for-discount.provider.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        discountsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discountsUsageService\n                                                  \n                                                        \n                                                                        DiscountsUsageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        applyForDiscount\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyForDiscount(user: ActiveUserData, code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/discounts/providers/apply-for-discount.provider.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                discount\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { LessThanOrEqual, MoreThanOrEqual, Repository } from 'typeorm';\nimport { Discount } from '../discounts.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\nimport { DiscountsUsageService } from 'src/discounts-usage/providers/discounts-usage.service';\n\n@Injectable()\nexport class ApplyForDiscountProvider {\n  constructor(\n    /**\n     * injecting the discounts repository\n     */\n    @InjectRepository(Discount)\n    private readonly discountsRepository: Repository,\n\n    /**\n     * injecting the discounts usage service\n     */\n    private readonly discountsUsageService: DiscountsUsageService,\n  ) {}\n\n  /**\n   * @function checks the validity of the code and how many times the user has used it\n   * @param user\n   * @param code\n   * @returns discount\n   */\n  public async applyForDiscount(user: ActiveUserData, code: string) {\n    let discount: Discount;\n\n    try {\n      discount = await this.discountsRepository.findOne({\n        where: {\n          code,\n          validFrom: LessThanOrEqual(new Date()),\n          validUntil: MoreThanOrEqual(new Date()),\n        },\n      });\n    } catch (error) {\n      console.log(error);\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    //Handle the discount does not exist\n    if (!discount) {\n      throw new BadRequestException(\n        'The discount code has expired or does not exist',\n      );\n    }\n\n    // check the usage count\n    const usageCount = await this.discountsUsageService.countDiscountUsage(\n      discount.id,\n      user.sub,\n    );\n\n    if (usageCount >= discount.usageLimit) {\n      return null;\n    }\n\n    return discount;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n            \n                Description\n            \n            \n                controller for the auth route\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                otpSignin\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                refreshTokens\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        otpSignin\n                        \n                    \n                \n            \n            \n                \n                        \n                    otpSignin(otpSigninDto: OtpSigninDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It signs in the user with a valid otp'})@ApiResponse({status: 200, description: 'Login Successfully', example: undefined})@ApiBody({description: 'Contains the  otp', required: true, type: OtpSigninDto, examples: undefined})@HttpCode(HttpStatus.OK)@Auth(AuthType.None)@Patch('/otp-signin')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:115\n                        \n                    \n\n\n            \n                \n                        route for otp signin\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otpSigninDto\n                                            \n                                                            OtpSigninDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshTokens(refreshTokenDto: RefreshTokenDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It creates  new access and refresh tokens'})@ApiResponse({status: 200, description: 'Access and refresh tokens are created successfully', example: undefined})@ApiBody({description: 'Contains the refresh token', required: true, type: RefreshTokenDto, examples: undefined})@Post('refresh-tokens')@HttpCode(HttpStatus.OK)@Auth(AuthType.None)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:155\n                        \n                    \n\n\n            \n                \n                        route for refresh tokens\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshTokenDto\n                                            \n                                                            RefreshTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: SignInDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It signs in a user with valid email and password'})@ApiResponse({status: 200, description: 'User is signed in successfully', example: undefined})@ApiBody({description: 'Signs in a user', required: true, type: SignInDto, examples: undefined})@Post('/sign-in')@Auth(AuthType.None)@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:76\n                        \n                    \n\n\n            \n                \n                        route for sign in\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                access token and refresh token\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  HttpCode,\n  HttpStatus,\n  Patch,\n  Post,\n} from '@nestjs/common';\nimport { SignInDto } from './dtos/sign-in.dto';\nimport { AuthService } from './providers/auth.service';\nimport { Auth } from './decorator/auth.decorator';\nimport { AuthType } from './enums/auth-type.enum';\nimport { RefreshTokenDto } from './dtos/refresh-token.dto';\nimport { ApiBody, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { OtpSigninDto } from './dtos/otpSignin.dto';\n\n/**\n * controller for the auth route\n */\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  /**\n   * constructor\n   * @param authService\n   */\n  constructor(\n    /**\n     * injecting the auth service\n     */\n    private readonly authService: AuthService,\n  ) {}\n\n  /**\n   * route for sign in\n   * @param signInDto\n   * @returns access token and refresh token\n   */\n  @ApiOperation({\n    summary: 'It signs in a user with valid email and password',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'User is signed in successfully',\n    example: {\n      summary: 'Access and refresh token',\n      value: {\n        accessToken: 'jsbfiwhvfquobdfj',\n        refreshToken: 'jsbfiwhvfquobdfj',\n      },\n    },\n  })\n  @ApiBody({\n    description: 'Signs in a user',\n    required: true,\n    type: SignInDto,\n    examples: {\n      example1: {\n        summary: 'Valid request example',\n        value: {\n          email: 'iloghaluagneskc@gmail.com',\n          password: '@Password1',\n        },\n      },\n      example2: {\n        summary: 'Invalid request example (missing password)',\n        value: {\n          email: 'iloghaluagneskc@gmail.com',\n        },\n      },\n    },\n  })\n  @Post('/sign-in')\n  @Auth(AuthType.None)\n  @HttpCode(HttpStatus.OK)\n  public signIn(@Body() signInDto: SignInDto) {\n    return this.authService.signIn(signInDto);\n  }\n\n  /**\n   * route for otp signin\n   */\n  @ApiOperation({\n    summary: 'It signs in the user with a valid otp',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Login Successfully',\n    example: {\n      value: {\n        message: 'Login successfully',\n      },\n    },\n  })\n  @ApiBody({\n    description: 'Contains the  otp',\n    required: true,\n    type: OtpSigninDto,\n    examples: {\n      example1: {\n        summary: 'Valid request example',\n        value: {\n          otp: 2354,\n        },\n      },\n      example2: {\n        summary: 'Invalid request example (missing otp)',\n        value: {},\n      },\n    },\n  })\n  @HttpCode(HttpStatus.OK)\n  @Auth(AuthType.None)\n  @Patch('/otp-signin')\n  public otpSignin(@Body() otpSigninDto: OtpSigninDto) {\n    return this.authService.otpSignin(otpSigninDto);\n  }\n\n  /**\n   * route for refresh tokens\n   */\n  @ApiOperation({\n    summary: 'It creates  new access and refresh tokens',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Access and refresh tokens are created successfully',\n    example: {\n      value: {\n        accessToken: 'jsbfiwhvfquobdfj',\n        refreshToken: 'jsbfiwhvfquobdfj',\n      },\n    },\n  })\n  @ApiBody({\n    description: 'Contains the refresh token',\n    required: true,\n    type: RefreshTokenDto,\n    examples: {\n      example1: {\n        summary: 'Valid request example',\n        value: {\n          refreshToken: 'jbfwihfubfjkebiejhfbw',\n        },\n      },\n      example2: {\n        summary: 'Invalid request example (missing refresh token)',\n        value: {},\n      },\n    },\n  })\n  @Post('refresh-tokens')\n  @HttpCode(HttpStatus.OK)\n  @Auth(AuthType.None)\n  public async refreshTokens(@Body() refreshTokenDto: RefreshTokenDto) {\n    // console.log('re', refreshTokenDto);\n    return await this.authService.refreshTokens(refreshTokenDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nGenerateTokensProvider\n\nGenerateTokensProvider\n\nAuthModule -->\n\nGenerateTokensProvider->AuthModule\n\n\n\n\n\nOtpSigninProvider\n\nOtpSigninProvider\n\nAuthModule -->\n\nOtpSigninProvider->AuthModule\n\n\n\n\n\nRefreshTokenProvider\n\nRefreshTokenProvider\n\nAuthModule -->\n\nRefreshTokenProvider->AuthModule\n\n\n\n\n\nSignInProvider\n\nSignInProvider\n\nAuthModule -->\n\nSignInProvider->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            GenerateTokensProvider\n                        \n                        \n                            OtpSigninProvider\n                        \n                        \n                            RefreshTokenProvider\n                        \n                        \n                            SignInProvider\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { AuthService } from './providers/auth.service';\nimport { AuthController } from './auth.controller';\nimport { UsersModule } from 'src/users/users.module';\nimport { SignInProvider } from './providers/sign-in.provider';\nimport { GenerateTokensProvider } from './providers/generate-tokens.provider';\nimport { ConfigModule } from '@nestjs/config';\nimport jwtConfig from './config/jwt.config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { RefreshTokenProvider } from './providers/refresh-token.provider';\nimport { OtpSigninProvider } from './providers/otp-signin.provider';\n\n@Module({\n  providers: [\n    AuthService,\n\n    SignInProvider,\n    GenerateTokensProvider,\n\n    RefreshTokenProvider,\n    OtpSigninProvider,\n  ],\n  controllers: [AuthController],\n  imports: [\n    forwardRef(() => UsersModule),\n    ConfigModule.forFeature(jwtConfig),\n    // for asynchrousnously registering the jwt module and passing the config to the module\n    JwtModule.registerAsync(jwtConfig.asProvider()),\n  ],\n  exports: [],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                auth service for the auth module\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                otpSignin\n                            \n                            \n                                    Public\n                                    Async\n                                refreshTokens\n                            \n                            \n                                    Public\n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(signInProvider: SignInProvider, otpSigninProvider: OtpSigninProvider, refreshTokenProvider: RefreshTokenProvider)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        signInProvider\n                                                  \n                                                        \n                                                                        SignInProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        otpSigninProvider\n                                                  \n                                                        \n                                                                        OtpSigninProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        refreshTokenProvider\n                                                  \n                                                        \n                                                                        RefreshTokenProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        otpSignin\n                        \n                    \n                \n            \n            \n                \n                        \n                    otpSignin(otpSigninDto: OtpSigninDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:52\n                        \n                    \n\n\n            \n                \n                        function for resetting password\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otpSigninDto\n                                            \n                                                            OtpSigninDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshTokens(refreshTokenDto: RefreshTokenDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:61\n                        \n                    \n\n\n            \n                \n                        function for refreshing access token after it expires\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshTokenDto\n                                            \n                                                            RefreshTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                access and refresh tokens\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: SignInDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:43\n                        \n                    \n\n\n            \n                \n                        function for signing in a user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                access and refresh tokens\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SignInDto } from 'src/auth/dtos/sign-in.dto';\nimport { SignInProvider } from './sign-in.provider';\nimport { RefreshTokenDto } from 'src/auth/dtos/refresh-token.dto';\nimport { RefreshTokenProvider } from './refresh-token.provider';\nimport { OtpSigninDto } from '../dtos/otpSignin.dto';\nimport { OtpSigninProvider } from './otp-signin.provider';\n\n/**\n * auth service for the auth module\n */\n@Injectable()\nexport class AuthService {\n  /**\n   * constructor\n   * @param signInProvider\n   * @param forgotPasswordProvider\n   * @param resetPasswordProvider\n   * @param refreshTokenProvider\n   */\n  constructor(\n    /**\n     * injecting the sign in provider\n     */\n    private readonly signInProvider: SignInProvider,\n\n    /**\n     * injecting the otp sign in provider\n     */\n    private readonly otpSigninProvider: OtpSigninProvider,\n\n    /**\n     * injecting the refresh token provider\n     */\n    private readonly refreshTokenProvider: RefreshTokenProvider,\n  ) {}\n\n  /**\n   * function for signing in a user\n   * @param signInDto\n   * @returns access and refresh tokens\n   */\n  public async signIn(signInDto: SignInDto) {\n    return await this.signInProvider.signIn(signInDto);\n  }\n\n  /**\n   * function for resetting password\n   * @param resetPasswordDto\n   * @returns user\n   */\n  public async otpSignin(otpSigninDto: OtpSigninDto) {\n    return await this.otpSigninProvider.signInWithOtp(otpSigninDto);\n  }\n\n  /**\n   * function for refreshing access token after it expires\n   * @param refreshTokenDto\n   * @returns access and refresh tokens\n   */\n  public async refreshTokens(refreshTokenDto: RefreshTokenDto) {\n    return await this.refreshTokenProvider.refreshTokens(refreshTokenDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/authentication/authentication.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    guard for authentication\n\n                \n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authTypeGuardMap\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                defaultAuthType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, accessTokenGuard: AccessTokenGuard)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/authentication/authentication.guard.ts:33\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessTokenGuard\n                                                  \n                                                        \n                                                                        AccessTokenGuard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/authentication/authentication.guard.ts:59\n                        \n                    \n\n\n            \n                \n                        function for authenticating a user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                true or false based on whether user is logged in or not\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\n// import { Observable } from 'rxjs';\nimport { AccessTokenGuard } from '../access-token/access-token.guard';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\nimport { AUTH_TYPE_KEY } from 'src/auth/constants/auth.constant';\n\n/**\n * guard for authentication\n */\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  // using static means you can use the name of the property of the class without the \"this\" keyword\n  /**\n   * default auth type\n   */\n  private static readonly defaultAuthType = AuthType.Bearer;\n\n  /**\n   * map for auth types and guards they use\n   */\n  private readonly authTypeGuardMap: Record = {\n    [AuthType.Bearer]: this.accessTokenGuard,\n    [AuthType.None]: { canActivate: () => true },\n  };\n\n  /**\n   * constructor\n   * @param reflector\n   * @param accessTokenGuard\n   */\n  constructor(\n    /**\n     * injecting the reflector class\n     * The reflector class makes you access diff metadata from the execution context\n     */\n    private readonly reflector: Reflector,\n\n    /**\n     * Injecting the access token guard\n     *\n     */\n    private readonly accessTokenGuard: AccessTokenGuard,\n  ) {}\n\n  /**\n   * function for authenticating a user\n   * @param context\n   * @returns true or false based on whether user is logged in or not\n   */\n  async canActivate(context: ExecutionContext): Promise {\n    // Get all the auth types from reflector\n    // This returns an array of the auth types for a specific class or method in a class\n    const authTypes = this.reflector.getAllAndOverride(AUTH_TYPE_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]) ?? [AuthenticationGuard.defaultAuthType];\n\n    // create an array of the guards\n    const guards = authTypes.map((type) => this.authTypeGuardMap[type]).flat();\n\n    // Default error\n    const error = new UnauthorizedException();\n\n    // loop through the guards and fire the canActivate\n    for (const instance of guards) {\n      let canActivate;\n\n      try {\n        canActivate = await Promise.resolve(instance.canActivate(context));\n      } catch (err) {\n        throw err;\n      }\n\n      if (canActivate) {\n        return true;\n      }\n    }\n\n    throw error;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClearOtpAndExpiryTimeProvider.html":{"url":"injectables/ClearOtpAndExpiryTimeProvider.html","title":"injectable - ClearOtpAndExpiryTimeProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClearOtpAndExpiryTimeProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/clear-otp-and-expiry-time.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                clearOtpAndExpiryTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/clear-otp-and-expiry-time.provider.ts:7\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        clearOtpAndExpiryTime\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearOtpAndExpiryTime(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/clear-otp-and-expiry-time.provider.ts:25\n                        \n                    \n\n\n            \n                \n                        function for clearing otp after login\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from '../user.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class ClearOtpAndExpiryTimeProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * injecting the users repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for clearing otp after login\n   * @param user\n   * @returns user\n   */\n  public async clearOtpAndExpiryTime(user: User) {\n    const newUserObj = {\n      ...user,\n      otp: null,\n      otpExpire: null,\n    };\n\n    try {\n      return await this.usersRepository.save(newUserObj);\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDeliveryStateDto.html":{"url":"classes/CreateDeliveryStateDto.html","title":"class - CreateDeliveryStateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDeliveryStateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery-states/dtos/create-delivery-state.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                fee\n                            \n                            \n                                    \n                                    \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        fee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery-states/dtos/create-delivery-state.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery-states/dtos/create-delivery-state.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateDeliveryStateDto {\n  @IsString()\n  @IsNotEmpty()\n  state: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  fee: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDiscountDto.html":{"url":"classes/CreateDiscountDto.html","title":"class - CreateDiscountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDiscountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/dtos/create-discount.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                percentOff\n                            \n                            \n                                    \n                                    \n                                validUntil\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/dtos/create-discount.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        percentOff\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/dtos/create-discount.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        validUntil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/dtos/create-discount.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsDate, IsInt, IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateDiscountDto {\n  @IsString()\n  @IsNotEmpty()\n  code: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  percentOff: number;\n\n  @IsDate()\n  @IsNotEmpty()\n  validUntil: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateDiscountProvider.html":{"url":"injectables/CreateDiscountProvider.html","title":"injectable - CreateDiscountProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateDiscountProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/providers/create-discount.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createDiscount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(discountsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/discounts/providers/create-discount.provider.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        discountsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createDiscount\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDiscount(createDiscountDto: CreateDiscountDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/discounts/providers/create-discount.provider.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDiscountDto\n                                            \n                                                            CreateDiscountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                discount obj\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Discount } from '../discounts.entity';\nimport { Repository } from 'typeorm';\nimport { CreateDiscountDto } from '../dtos/create-discount.dto';\n\n@Injectable()\nexport class CreateDiscountProvider {\n  constructor(\n    /**\n     * injecting the discounts repository\n     */\n    @InjectRepository(Discount)\n    private readonly discountsRepository: Repository,\n  ) {}\n\n  /**\n   * @function creates a discount\n   * @param createDiscountDto\n   * @returns discount obj\n   */\n  public async createDiscount(\n    createDiscountDto: CreateDiscountDto,\n  ): Promise {\n    let discount = this.discountsRepository.create(createDiscountDto);\n\n    // save the discount to the db\n    try {\n      discount = await this.discountsRepository.save(discount);\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    return discount;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/createProductDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                brand\n                            \n                            \n                                    \n                                    \n                                category\n                            \n                            \n                                    \n                                    \n                                clothType\n                            \n                            \n                                    \n                                    \n                                discount\n                            \n                            \n                                    \n                                    \n                                dressStyle\n                            \n                            \n                                    \n                                    \n                                longDescription\n                            \n                            \n                                    \n                                    \n                                material\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                shortDescription\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                variants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        brand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        clothType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dressStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        longDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        material\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        shortDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProductVariant[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsNotEmpty()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProductDto.ts:57\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsInt,\n  IsNotEmpty,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { CreateProductVariantDto } from 'src/product-variants/dto/create-product-variant.dto';\nimport { ProductVariant } from 'src/product-variants/product-variants.entity';\n\nexport class CreateProductDto {\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  price: number;\n\n  @IsInt()\n  @IsNotEmpty()\n  discount: number;\n\n  @IsString()\n  @IsNotEmpty()\n  category: string;\n\n  @IsString()\n  @IsNotEmpty()\n  dressStyle: string;\n\n  @IsString()\n  @IsNotEmpty()\n  clothType: string;\n\n  @IsString()\n  @IsNotEmpty()\n  material: string;\n\n  @IsString()\n  @IsNotEmpty()\n  brand: string;\n\n  @IsString()\n  @IsNotEmpty()\n  shortDescription: string;\n\n  @IsString()\n  @IsNotEmpty()\n  longDescription: string;\n\n  @IsArray()\n  @IsNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => CreateProductVariantDto)\n  variants: ProductVariant[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateProductProvider.html":{"url":"injectables/CreateProductProvider.html","title":"injectable - CreateProductProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateProductProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/providers/create-product.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataSource: DataSource, uploadsService: UploadsService)\n                    \n                \n                        \n                            \n                                Defined in src/products/providers/create-product.provider.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uploadsService\n                                                  \n                                                        \n                                                                        UploadsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProduct(createProductDto: CreateProductDto, images: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/create-product.provider.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                images\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                a product\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { DataSource } from 'typeorm';\nimport { Product } from '../product.entity';\nimport { CreateProductDto } from '../dtos/createProductDto';\nimport { UploadsService } from 'src/uploads/providers/uploads.service';\nimport { ProductVariant } from 'src/product-variants/product-variants.entity';\nimport { ProductImage } from 'src/product-images/product-image.entity';\n\n@Injectable()\nexport class CreateProductProvider {\n  constructor(\n    /**\n     * Injecting datasource\n     */\n    private readonly dataSource: DataSource,\n\n    /**\n     * injecting uploads service\n     */\n    private readonly uploadsService: UploadsService,\n  ) {}\n\n  /**\n   * @function creates a product\n   * @param createProductDto\n   * @param images\n   * @returns a product\n   */\n  public async createProduct(\n    createProductDto: CreateProductDto,\n    images: { [key: string]: Express.Multer.File[] },\n  ): Promise {\n    // start query transaction\n    // create Query Runner instance\n    const queryRunner = this.dataSource.createQueryRunner();\n    try {\n      // connect query runner to datasource\n      await queryRunner.connect();\n      // start transaction\n      await queryRunner.startTransaction();\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error) {\n      throw new RequestTimeoutException('Could not connect to datasource');\n    }\n\n    try {\n      // create the product\n      const product = queryRunner.manager.create(Product, {\n        ...createProductDto,\n        variants: [],\n      });\n\n      // save the product\n      const savedProduct = await queryRunner.manager.save(product);\n\n      // upload the images in the variants\n      const variantsImages = [];\n\n      Object.entries(images).forEach(\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        ([key, fileArray]) => {\n          variantsImages.push(fileArray);\n        },\n      );\n\n      const storedImagesUrls = [];\n\n      // loop through the array of files and upload them\n      for (let i = 0; i  await this.uploadsService.uploadFile(file),\n          ),\n        );\n        storedImagesUrls.push(urls);\n      }\n\n      // loop through the product variants and create product variants\n      const savedVariants = [];\n\n      for (const variant of createProductDto.variants) {\n        /**\n         * param\n         * entity\n         * dto\n         */\n        const prVariant = queryRunner.manager.create(ProductVariant, {\n          ...variant,\n          product: savedProduct,\n        });\n\n        const vr = await queryRunner.manager.save(prVariant);\n        savedVariants.push(vr);\n      }\n\n      // loop through the images and create a product image\n      const productImages = storedImagesUrls\n        .map((imgUrls: string[], urlsIndex) =>\n          imgUrls.map((imgUrl, index) =>\n            queryRunner.manager.create(ProductImage, {\n              imagePath: imgUrl,\n              displayOrder: index,\n              productVariant: savedVariants[urlsIndex],\n            }),\n          ),\n        )\n        .flat();\n\n      productImages.map(async (image) => await queryRunner.manager.save(image));\n\n      // if successful commit\n      // ensures the txn is committed to the db\n      await queryRunner.commitTransaction();\n\n      // return product\n      return savedProduct;\n    } catch (error) {\n      // if unsuccessful rollback\n      // we rollback the txn here if it is not successful\n      await queryRunner.rollbackTransaction();\n      throw new ConflictException('Could not complete the transaction', {\n        description: String(error),\n      });\n    } finally {\n      // relsease the connection\n      // release connection whether it was successful or not\n      try {\n        await queryRunner.release();\n      } catch (error) {\n        throw new RequestTimeoutException('Could not release the connection', {\n          description: String(error),\n        });\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductVariantDto.html":{"url":"classes/CreateProductVariantDto.html","title":"class - CreateProductVariantDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductVariantDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-variants/dto/create-product-variant.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                color\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                images\n                            \n                            \n                                    \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/create-product-variant.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/create-product-variant.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/create-product-variant.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/create-product-variant.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsInt,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Min,\n  ValidateNested,\n} from 'class-validator';\n\nexport class CreateProductVariantDto {\n  @IsString()\n  @IsNotEmpty()\n  color: string;\n\n  @IsString()\n  @IsNotEmpty()\n  size: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  @Min(1)\n  quantity: number;\n\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => String)\n  images?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReviewDto.html":{"url":"classes/CreateReviewDto.html","title":"class - CreateReviewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReviewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/dtos/create-review.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                productId\n                            \n                            \n                                    \n                                    \n                                review\n                            \n                            \n                                    \n                                    \n                                reviewer\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                stars\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/create-review.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        review\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/create-review.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        reviewer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/create-review.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        stars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()@Min(1, {message: 'Rating must be at least 1 star'})@Max(5, {message: 'Rating cannot exceed 5 stars'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/create-review.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsNotEmpty, IsString, Max, Min } from 'class-validator';\n\nexport class CreateReviewDto {\n  @IsString()\n  @IsNotEmpty()\n  reviewer: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  @Min(1, { message: 'Rating must be at least 1 star' })\n  @Max(5, { message: 'Rating cannot exceed 5 stars' })\n  stars: number;\n\n  @IsString()\n  @IsNotEmpty()\n  review: string;\n\n  @IsString()\n  @IsNotEmpty()\n  productId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateReviewProvider.html":{"url":"injectables/CreateReviewProvider.html","title":"injectable - CreateReviewProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateReviewProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/providers/create-review.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createReview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reviewsRepository: Repository, productsService: ProductsService)\n                    \n                \n                        \n                            \n                                Defined in src/reviews/providers/create-review.provider.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reviewsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productsService\n                                                  \n                                                        \n                                                                        ProductsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createReview\n                        \n                    \n                \n            \n            \n                \n                        \n                    createReview(createReviewDto: CreateReviewDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/reviews/providers/create-review.provider.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createReviewDto\n                                            \n                                                            CreateReviewDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a review\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { CreateReviewDto } from '../dtos/create-review.dto';\nimport { Review } from '../reviews.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProductsService } from 'src/products/providers/products.service';\n\n@Injectable()\nexport class CreateReviewProvider {\n  constructor(\n    /**\n     * injecting the reviews repository\n     */\n    @InjectRepository(Review)\n    private readonly reviewsRepository: Repository,\n\n    /**\n     * injecting the products service\n     */\n    private readonly productsService: ProductsService,\n  ) {}\n\n  /**\n   * @function creates a review\n   * @param createReviewDto\n   * @param productId\n   * @returns  a review\n   */\n  public async createReview(createReviewDto: CreateReviewDto): Promise {\n    // find product\n    const product = await this.productsService.findProductById(\n      createReviewDto.productId,\n    );\n\n    // create a new review\n    let newReview = this.reviewsRepository.create({\n      reviewer: createReviewDto.reviewer,\n      review: createReviewDto.review,\n      stars: createReviewDto.stars,\n      product: product,\n    });\n\n    // save the review to the db\n    try {\n      newReview = await this.reviewsRepository.save(newReview);\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    return {\n      id: newReview.id,\n      reviewer: newReview.reviewer,\n      stars: newReview.stars,\n      review: newReview.review,\n      dateCreated: newReview.dateCreated,\n      product: newReview.product.id,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSubscriberDto.html":{"url":"classes/CreateSubscriberDto.html","title":"class - CreateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dtos/create-subscriber.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto for creating a subscriber\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the email of the subscriber', example: 'Favour@gmail.com'})@IsEmail()@MaxLength(96)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dtos/create-subscriber.dto.ts:18\n                        \n                    \n\n            \n                \n                    email address\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, MaxLength } from 'class-validator';\n\n/**\n * dto for creating a subscriber\n */\nexport class CreateSubscriberDto {\n  /**\n   * email address\n   */\n  @ApiProperty({\n    description: 'This is the email of the subscriber',\n    example: 'Favour@gmail.com',\n  })\n  @IsEmail()\n  @MaxLength(96)\n  @IsNotEmpty()\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto class for creating user dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the email of the user', example: 'Favour@gmail.com'})@IsEmail()@MaxLength(96)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:21\n                        \n                    \n\n            \n                \n                    user email address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the role of the user', example: 'Admin'})@IsEnum(Role)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:32\n                        \n                    \n\n            \n                \n                    user role\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsEnum, IsNotEmpty, MaxLength } from 'class-validator';\n// import { accountType } from '../enums/account-type.enum';\n// import { Role } from 'src/auth/enums/role-type.enum';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Role } from 'src/auth/enums/role-type.enum';\n\n/**\n * dto class for creating user dto\n */\nexport class CreateUserDto {\n  /**\n   * user email address\n   */\n  @ApiProperty({\n    description: 'This is the email of the user',\n    example: 'Favour@gmail.com',\n  })\n  @IsEmail()\n  @MaxLength(96)\n  @IsNotEmpty()\n  email: string;\n\n  /**\n   * user role\n   */\n  @ApiProperty({\n    description: 'This is the role of the user',\n    example: 'Admin',\n  })\n  @IsEnum(Role)\n  @IsNotEmpty()\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUsersProvider.html":{"url":"injectables/CreateUsersProvider.html","title":"injectable - CreateUsersProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateUsersProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/create-users.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider class for creating user\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/create-users.provider.ts:18\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/create-users.provider.ts:38\n                        \n                    \n\n\n            \n                \n                        function for creating user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                created user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  forwardRef,\n  Inject,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { CreateUserDto } from '../dtos/create-user.dto';\nimport { Repository } from 'typeorm';\nimport { User } from '../user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n/**\n * provider class for creating user\n */\n@Injectable()\nexport class CreateUsersProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   * @param hashingProvider\n   * @param mailService\n   */\n  constructor(\n    /**\n     * inhjecting the user repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for creating user\n   * @param createUserDto\n   * @returns created user\n   */\n  public async createUser(createUserDto: CreateUserDto) {\n    // create a new user\n    let newUser = this.usersRepository.create({\n      ...createUserDto,\n    });\n\n    // save the user to the db\n    try {\n      newUser = await this.usersRepository.save(newUser);\n    } catch (error) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    return {\n      id: newUser.id,\n      email: newUser.email,\n      role: newUser.role,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataResponseInterceptor.html":{"url":"injectables/DataResponseInterceptor.html","title":"injectable - DataResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/data-response/data-response.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for the data response interceptor\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/data-response/data-response.interceptor.ts:14\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/interceptors/data-response/data-response.interceptor.ts:32\n                        \n                    \n\n\n            \n                \n                        function for formatting the response data\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                the response in {apiVersion: \"1.0.0\", data: ...} format\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { map, Observable } from 'rxjs';\n\n/**\n * provider for the data response interceptor\n */\n@Injectable()\nexport class DataResponseInterceptor implements NestInterceptor {\n  /**\n   * constructor\n   * @param configService\n   */\n  constructor(\n    /**\n     * injecting config service\n     */\n    private readonly configService: ConfigService,\n  ) {}\n\n  /**\n   * function for formatting the response data\n   * @param context\n   * @param next\n   * @returns the response in {apiVersion: \"1.0.0\", data: ...} format\n   */\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    // console.log('Before ...');\n    // before method execution\n    return next.handle().pipe(\n      map((data) => ({\n        apiVersion: this.configService.get('appConfig.apiVersion'),\n        data: data,\n      })),\n    );\n    // After method execution\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DeliveryState.html":{"url":"entities/DeliveryState.html","title":"entity - DeliveryState","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DeliveryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery-states/delivery-state.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dateCreated\n                            \n                            \n                                    \n                                fee\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery-states/delivery-state.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery-states/delivery-state.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery-states/delivery-state.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery-states/delivery-state.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BeforeInsert,\n  BeforeUpdate,\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class DeliveryState {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  state: string;\n\n  @Column()\n  fee: number;\n\n  @CreateDateColumn()\n  dateCreated: Date;\n\n  @BeforeInsert()\n  @BeforeUpdate()\n  transformToLowercase() {\n    if (this.state) {\n      this.state = this.state.toLowerCase();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DeliveryStatesController.html":{"url":"controllers/DeliveryStatesController.html","title":"controller - DeliveryStatesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DeliveryStatesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery-states/delivery-states.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                delivery-states\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                createDeliveryState\n                            \n                            \n                                    \n                                    \n                                    Public\n                                findDeliveryStateByState\n                            \n                            \n                                    \n                                    \n                                    Public\n                                updateDeliveryState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        createDeliveryState\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDeliveryState(createDeliveryStateDto: CreateDeliveryStateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Roles(Role.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/delivery-states/delivery-states.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDeliveryStateDto\n                                            \n                                                            CreateDeliveryStateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        findDeliveryStateByState\n                        \n                    \n                \n            \n            \n                \n                        \n                    findDeliveryStateByState(state: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Auth(AuthType.None)@Get('/:state')\n                \n            \n\n                    \n                        \n                            Defined in src/delivery-states/delivery-states.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                delivery state\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        updateDeliveryState\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDeliveryState(stateId: string, updateDeliveryStateDto: UpdateDeliveryStateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.ADMIN)@Patch('/:stateId')\n                \n            \n\n                    \n                        \n                            Defined in src/delivery-states/delivery-states.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stateId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDeliveryStateDto\n                                            \n                                                            UpdateDeliveryStateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                updated delivery state\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post } from '@nestjs/common';\nimport { DeliveryStatesService } from './providers/delivery-states.service';\nimport { CreateDeliveryStateDto } from './dtos/create-delivery-state.dto';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { Role } from 'src/auth/enums/role-type.enum';\nimport { Auth } from 'src/auth/decorator/auth.decorator';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\nimport { UpdateDeliveryStateDto } from './dtos/update-delivery-state.dto';\n\n@Controller('delivery-states')\nexport class DeliveryStatesController {\n  constructor(\n    /**\n     * injecting the delivery states service\n     */\n    private readonly deliveryStatesService: DeliveryStatesService,\n  ) {}\n\n  /**\n   * @function creates a delivery state\n   * @param createDeliveryStateDto\n   */\n  @Post()\n  @Roles(Role.ADMIN)\n  public createDeliveryState(\n    @Body() createDeliveryStateDto: CreateDeliveryStateDto,\n  ) {\n    return this.deliveryStatesService.createDeliveryState(\n      createDeliveryStateDto,\n    );\n  }\n\n  /**\n   * @function finds a delivery state by name\n   * @param state\n   * @returns delivery state\n   */\n  @Auth(AuthType.None)\n  @Get('/:state')\n  public findDeliveryStateByState(@Param('state') state: string) {\n    return this.deliveryStatesService.findDeliveryStateByName(state);\n  }\n\n  /**\n   * @function updates a delivery state\n   * @param updateDeliveryStateDto\n   * @returns updated delivery state\n   */\n  @Roles(Role.ADMIN)\n  @Patch('/:stateId')\n  public updateDeliveryState(\n    @Param('stateId') stateId: string,\n    @Body() updateDeliveryStateDto: UpdateDeliveryStateDto,\n  ) {\n    return this.deliveryStatesService.updateDeliveryState(\n      stateId,\n      updateDeliveryStateDto,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DeliveryStatesModule.html":{"url":"modules/DeliveryStatesModule.html","title":"module - DeliveryStatesModule","body":"\n                   \n\n\n\n\n    Modules\n    DeliveryStatesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DeliveryStatesModule\n\n\n\ncluster_DeliveryStatesModule_providers\n\n\n\n\nDeliveryStatesService\n\nDeliveryStatesService\n\n\n\nDeliveryStatesModule\n\nDeliveryStatesModule\n\nDeliveryStatesModule -->\n\nDeliveryStatesService->DeliveryStatesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/delivery-states/delivery-states.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DeliveryStatesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DeliveryStatesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DeliveryStatesController } from './delivery-states.controller';\nimport { DeliveryStatesService } from './providers/delivery-states.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { DeliveryState } from './delivery-state.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([DeliveryState])],\n  controllers: [DeliveryStatesController],\n  providers: [DeliveryStatesService],\n})\nexport class DeliveryStatesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeliveryStatesService.html":{"url":"injectables/DeliveryStatesService.html","title":"injectable - DeliveryStatesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeliveryStatesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery-states/providers/delivery-states.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createDeliveryState\n                            \n                            \n                                    Public\n                                    Async\n                                findDeliveryStateByName\n                            \n                            \n                                    Public\n                                    Async\n                                updateDeliveryState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deliveryStateRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/delivery-states/providers/delivery-states.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deliveryStateRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createDeliveryState\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDeliveryState(createDeliveryStateDto: CreateDeliveryStateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/delivery-states/providers/delivery-states.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDeliveryStateDto\n                                            \n                                                            CreateDeliveryStateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                delivery state\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findDeliveryStateByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findDeliveryStateByName(state: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/delivery-states/providers/delivery-states.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                delivery state\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateDeliveryState\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDeliveryState(stateId: string, updateDeliveryStateDto: UpdateDeliveryStateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/delivery-states/providers/delivery-states.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stateId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDeliveryStateDto\n                                            \n                                                            UpdateDeliveryStateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                updated delivery state\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { DeliveryState } from '../delivery-state.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CreateDeliveryStateDto } from '../dtos/create-delivery-state.dto';\nimport { UpdateDeliveryStateDto } from '../dtos/update-delivery-state.dto';\n\n@Injectable()\nexport class DeliveryStatesService {\n  constructor(\n    /**\n     * injecting the delivery states repository\n     */\n    @InjectRepository(DeliveryState)\n    private readonly deliveryStateRepository: Repository,\n  ) {}\n\n  /**\n   * @function creates a delivery state resource\n   * @param createDeliveryStateDto\n   * @returns delivery state\n   */\n  public async createDeliveryState(\n    createDeliveryStateDto: CreateDeliveryStateDto,\n  ) {\n    let deliveryState: DeliveryState;\n\n    deliveryState = this.deliveryStateRepository.create(createDeliveryStateDto);\n\n    try {\n      deliveryState = await this.deliveryStateRepository.save(deliveryState);\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    return deliveryState;\n  }\n\n  /**\n   * @function finds a delivery state based on the state\n   * @param state\n   * @returns delivery state\n   */\n  public async findDeliveryStateByName(state: string) {\n    let deliveryState;\n    try {\n      deliveryState = await this.deliveryStateRepository.findOneBy({\n        state: state,\n      });\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (err: any) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    /**\n     * Handle the delivery state does not exist\n     */\n    if (!deliveryState) {\n      throw new BadRequestException('The delivery state does not exist');\n    }\n    return deliveryState;\n  }\n\n  /**\n   * @function updates a delivery state\n   * @param updateDeliveryStateDto\n   * @returns updated delivery state\n   */\n  public async updateDeliveryState(\n    stateId: string,\n    updateDeliveryStateDto: UpdateDeliveryStateDto,\n  ) {\n    let deliveryState;\n    // find the user\n    try {\n      deliveryState = await this.deliveryStateRepository.findOneBy({\n        id: stateId,\n      });\n    } catch (err) {\n      throw new RequestTimeoutException(err);\n    }\n    if (!deliveryState) {\n      throw new BadRequestException('Delivery state does not exist');\n    }\n    // update user\n    deliveryState = { ...deliveryState, ...updateDeliveryStateDto };\n\n    try {\n      await this.deliveryStateRepository.save(deliveryState);\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error: any) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n    return deliveryState;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Discount.html":{"url":"entities/Discount.html","title":"entity - Discount","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Discount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/discounts.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                percentOff\n                            \n                            \n                                    \n                                usageLimit\n                            \n                            \n                                    \n                                validFrom\n                            \n                            \n                                    \n                                validUntil\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/discounts.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/discounts.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        percentOff\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/discounts.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usageLimit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/discounts.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        validFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/discounts.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        validUntil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts/discounts.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Discount {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  code: string;\n\n  @Column()\n  percentOff: number;\n\n  @Column({ default: 1 })\n  usageLimit: number;\n\n  @Column({ type: 'timestamp', default: new Date() })\n  validFrom: Date;\n\n  @Column({ type: 'timestamp', nullable: true })\n  validUntil: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DiscountUsage.html":{"url":"entities/DiscountUsage.html","title":"entity - DiscountUsage","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DiscountUsage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts-usage/discounts-usage.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                discount\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                order\n                            \n                            \n                                    \n                                usedAt\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Discount\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts-usage/discounts-usage.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts-usage/discounts-usage.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, order => order.discountUsage, {nullable: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts-usage/discounts-usage.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts-usage/discounts-usage.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discounts-usage/discounts-usage.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Discount } from 'src/discounts/discounts.entity';\nimport { Order } from 'src/orders/order.entity';\nimport { User } from 'src/users/user.entity';\nimport {\n  CreateDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  OneToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class DiscountUsage {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @ManyToOne(() => User)\n  user: User;\n\n  @ManyToOne(() => Discount)\n  discount: Discount;\n\n  @OneToOne(() => Order, (order) => order.discountUsage, { nullable: true })\n  @JoinColumn()\n  order: Order;\n\n  @CreateDateColumn()\n  usedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DiscountsController.html":{"url":"controllers/DiscountsController.html","title":"controller - DiscountsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DiscountsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/discounts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                discounts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                applyForDiscount\n                            \n                            \n                                    \n                                    \n                                    Public\n                                createDiscount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        applyForDiscount\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyForDiscount(user: ActiveUserData, applyForDiscountDto: ApplyForDiscountDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/apply')@Roles(Role.USER)@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in src/discounts/discounts.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                applyForDiscountDto\n                                            \n                                                            ApplyForDiscountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        createDiscount\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDiscount(createDiscountDto: CreateDiscountDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Roles(Role.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/discounts/discounts.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDiscountDto\n                                            \n                                                            CreateDiscountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post } from '@nestjs/common';\nimport { DiscountsService } from './providers/discounts.service';\nimport { CreateDiscountDto } from './dtos/create-discount.dto';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { Role } from 'src/auth/enums/role-type.enum';\nimport { ActiveUser } from 'src/auth/decorator/active-user.decorator';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\nimport { ApplyForDiscountDto } from './dtos/apply-for-discount.dto';\n\n@Controller('discounts')\nexport class DiscountsController {\n  constructor(\n    /**\n     * injecting the discounts service\n     */\n    private readonly discountsService: DiscountsService,\n  ) {}\n\n  @Post()\n  @Roles(Role.ADMIN)\n  public createDiscount(@Body() createDiscountDto: CreateDiscountDto) {\n    return this.discountsService.createDiscount(createDiscountDto);\n  }\n\n  @Post('/apply')\n  @Roles(Role.USER)\n  @HttpCode(HttpStatus.OK)\n  public applyForDiscount(\n    @ActiveUser() user: ActiveUserData,\n    @Body() applyForDiscountDto: ApplyForDiscountDto,\n  ) {\n    return this.discountsService.applyForDiscount(\n      user,\n      applyForDiscountDto.code,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DiscountsModule.html":{"url":"modules/DiscountsModule.html","title":"module - DiscountsModule","body":"\n                   \n\n\n\n\n    Modules\n    DiscountsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DiscountsModule\n\n\n\ncluster_DiscountsModule_providers\n\n\n\ncluster_DiscountsModule_imports\n\n\n\n\nDiscountsUsageModule\n\nDiscountsUsageModule\n\n\n\nDiscountsModule\n\nDiscountsModule\n\nDiscountsModule -->\n\nDiscountsUsageModule->DiscountsModule\n\n\n\n\n\nApplyForDiscountProvider\n\nApplyForDiscountProvider\n\nDiscountsModule -->\n\nApplyForDiscountProvider->DiscountsModule\n\n\n\n\n\nCreateDiscountProvider\n\nCreateDiscountProvider\n\nDiscountsModule -->\n\nCreateDiscountProvider->DiscountsModule\n\n\n\n\n\nDiscountsService\n\nDiscountsService\n\nDiscountsModule -->\n\nDiscountsService->DiscountsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/discounts/discounts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApplyForDiscountProvider\n                        \n                        \n                            CreateDiscountProvider\n                        \n                        \n                            DiscountsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DiscountsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DiscountsUsageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DiscountsController } from './discounts.controller';\nimport { DiscountsService } from './providers/discounts.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Discount } from './discounts.entity';\nimport { ApplyForDiscountProvider } from './providers/apply-for-discount.provider';\nimport { CreateDiscountProvider } from './providers/create-discount.provider';\nimport { DiscountsUsageModule } from 'src/discounts-usage/discounts-usage.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Discount]), DiscountsUsageModule],\n  controllers: [DiscountsController],\n  providers: [\n    DiscountsService,\n    ApplyForDiscountProvider,\n    CreateDiscountProvider,\n  ],\n})\nexport class DiscountsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiscountsService.html":{"url":"injectables/DiscountsService.html","title":"injectable - DiscountsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiscountsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts/providers/discounts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                applyForDiscount\n                            \n                            \n                                    Public\n                                    Async\n                                createDiscount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createDiscountProvider: CreateDiscountProvider, applyForDiscountProvider: ApplyForDiscountProvider)\n                    \n                \n                        \n                            \n                                Defined in src/discounts/providers/discounts.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createDiscountProvider\n                                                  \n                                                        \n                                                                        CreateDiscountProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applyForDiscountProvider\n                                                  \n                                                        \n                                                                        ApplyForDiscountProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        applyForDiscount\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyForDiscount(user: ActiveUserData, code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/discounts/providers/discounts.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                discount\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createDiscount\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDiscount(createDiscountDto: CreateDiscountDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/discounts/providers/discounts.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDiscountDto\n                                            \n                                                            CreateDiscountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                created discount object\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateDiscountDto } from '../dtos/create-discount.dto';\nimport { CreateDiscountProvider } from './create-discount.provider';\nimport { Discount } from '../discounts.entity';\nimport { ApplyForDiscountProvider } from './apply-for-discount.provider';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\n\n@Injectable()\nexport class DiscountsService {\n  constructor(\n    /**\n     * injecting the create discount provider\n     */\n    private readonly createDiscountProvider: CreateDiscountProvider,\n\n    /**\n     * injecting the apply for discount provider\n     */\n    private readonly applyForDiscountProvider: ApplyForDiscountProvider,\n  ) {}\n\n  /**\n   * @function creates a discount\n   * @param createDiscountDto\n   * @returns created discount object\n   */\n  public async createDiscount(\n    createDiscountDto: CreateDiscountDto,\n  ): Promise {\n    return await this.createDiscountProvider.createDiscount(createDiscountDto);\n  }\n\n  /**\n   * @function checks the validity of the code and how many times the user has used it\n   * @param user\n   * @param code\n   * @returns discount\n   */\n  public async applyForDiscount(user: ActiveUserData, code: string) {\n    return await this.applyForDiscountProvider.applyForDiscount(user, code);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DiscountsUsageModule.html":{"url":"modules/DiscountsUsageModule.html","title":"module - DiscountsUsageModule","body":"\n                   \n\n\n\n\n    Modules\n    DiscountsUsageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DiscountsUsageModule\n\n\n\ncluster_DiscountsUsageModule_providers\n\n\n\ncluster_DiscountsUsageModule_exports\n\n\n\n\nDiscountsUsageService \n\nDiscountsUsageService \n\n\n\nDiscountsUsageModule\n\nDiscountsUsageModule\n\nDiscountsUsageService  -->\n\nDiscountsUsageModule->DiscountsUsageService \n\n\n\n\n\nDiscountsUsageService\n\nDiscountsUsageService\n\nDiscountsUsageModule -->\n\nDiscountsUsageService->DiscountsUsageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/discounts-usage/discounts-usage.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DiscountsUsageService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DiscountsUsageService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DiscountsUsageService } from './providers/discounts-usage.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { DiscountUsage } from './discounts-usage.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([DiscountUsage])],\n  providers: [DiscountsUsageService],\n  exports: [DiscountsUsageService],\n})\nexport class DiscountsUsageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiscountsUsageService.html":{"url":"injectables/DiscountsUsageService.html","title":"injectable - DiscountsUsageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiscountsUsageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discounts-usage/providers/discounts-usage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                countDiscountUsage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(discountsUsageRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/discounts-usage/providers/discounts-usage.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        discountsUsageRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        countDiscountUsage\n                        \n                    \n                \n            \n            \n                \n                        \n                    countDiscountUsage(discountId: string, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/discounts-usage/providers/discounts-usage.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                discountId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                discount usage count by a user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { DiscountUsage } from '../discounts-usage.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class DiscountsUsageService {\n  constructor(\n    /**\n     * injecting the discounts usage repository\n     */\n    @InjectRepository(DiscountUsage)\n    private readonly discountsUsageRepository: Repository,\n  ) {}\n\n  /**\n   * @function gets the discount usage count of a user\n   * @param discountId\n   * @param userId\n   * @returns discount usage count by a user\n   */\n  public async countDiscountUsage(discountId: string, userId: string) {\n    let usageCount;\n    try {\n      // Check usage limit\n      usageCount = await this.discountsUsageRepository.count({\n        where: {\n          discount: { id: discountId },\n          user: { id: userId },\n        },\n      });\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    return usageCount;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindAllProductsProvider.html":{"url":"injectables/FindAllProductsProvider.html","title":"injectable - FindAllProductsProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindAllProductsProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/providers/find-all-products.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productRepository: Repository, paginationProvider: PaginationProvider)\n                    \n                \n                        \n                            \n                                Defined in src/products/providers/find-all-products.provider.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paginationProvider\n                                                  \n                                                        \n                                                                        PaginationProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(productQuery: GetProductsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/find-all-products.provider.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productQuery\n                                            \n                                                            GetProductsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                a paginated list of products\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { GetProductsDto } from '../dtos/get-product.dto';\nimport { Paginated } from 'src/common/pagination/interfaces/paginated.interface';\nimport { Product } from '../product.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Between, In, Like, Repository } from 'typeorm';\nimport { PaginationProvider } from 'src/common/pagination/providers/pagination.provider';\n\n@Injectable()\nexport class FindAllProductsProvider {\n  constructor(\n    /**\n     * injecting the product repository\n     */\n    @InjectRepository(Product)\n    private readonly productRepository: Repository,\n\n    /**\n     * injecting the pagination provider\n     */\n    private readonly paginationProvider: PaginationProvider,\n  ) {}\n\n  /**\n   * @function finds all products And handle queries for filtering products\n   * @param productQuery\n   * @returns  a paginated list of products\n   */\n  public async findAll(\n    productQuery: GetProductsDto,\n  ): Promise> {\n    const { limit, page } = productQuery;\n\n    const whereOptions = [];\n\n    Object.keys(productQuery).forEach((key) => {\n      if (key === 'limit' || key === 'page' || !productQuery[key]) {\n        return;\n      }\n\n      const conditions = {\n        category: productQuery['category']\n          ? In(productQuery['category'].slice().split(','))\n          : undefined,\n        price: productQuery['price']\n          ? Between(\n              parseFloat(productQuery['price'].slice().split('-')[0]),\n              parseFloat(productQuery['price'].slice().split('-')[1]),\n            )\n          : undefined,\n        clothType: productQuery['clothType']\n          ? In(productQuery['clothType'].slice().split(','))\n          : undefined,\n        dressStyle: productQuery['dressStyle']\n          ? In(productQuery['dressStyle'].slice().split(','))\n          : undefined,\n        name: productQuery['name']\n          ? Like(`%${productQuery['name'].slice().split('-').join(' ')}%`)\n          : undefined,\n        variants: {\n          color: productQuery['colors']\n            ? In(productQuery['colors'].slice().split(','))\n            : undefined,\n          size: productQuery['sizes']\n            ? In(productQuery['sizes'].slice().split(','))\n            : undefined,\n        },\n      };\n\n      // Remove undefined nested conditions for variants\n      if (\n        conditions.variants.color === undefined &&\n        conditions.variants.size === undefined\n      ) {\n        conditions.variants = undefined;\n      }\n\n      // Remove undefined conditions\n      const filteredConditions = Object.fromEntries(\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        Object.entries(conditions).filter(([_, v]) => v !== undefined),\n      );\n\n      whereOptions.push(filteredConditions);\n    });\n\n    const checkWhereOptions = Object.keys(whereOptions).length;\n\n    const options = {\n      where: checkWhereOptions ? whereOptions : null,\n      relations: ['variants', 'variants.images'],\n    };\n\n    try {\n      const products = await this.paginationProvider.paginationQuery(\n        {\n          limit: limit,\n          page: page,\n        },\n        this.productRepository,\n        options,\n      );\n\n      return products;\n    } catch (error) {\n      throw new NotFoundException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindOneByIdProvider.html":{"url":"injectables/FindOneByIdProvider.html","title":"injectable - FindOneByIdProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindOneByIdProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/find-one-by-id.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider class for finding one user by id\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/find-one-by-id.provider.ts:14\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/find-one-by-id.provider.ts:32\n                        \n                    \n\n\n            \n                \n                        function for finding user based on id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { User } from '../user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n/**\n * provider class for finding one user by id\n */\n@Injectable()\nexport class FindOneByIdProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * injecting user repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for finding user based on id\n   * @param id\n   * @returns user\n   */\n  public async findById(id: string) {\n    let user;\n    try {\n      user = await this.usersRepository.findOneBy({\n        id,\n      });\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (err: any) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    /**\n     * Handle the user does not exist\n     */\n    if (!user) {\n      throw new BadRequestException('The user does not exist');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindOneUserByEmailProvider.html":{"url":"injectables/FindOneUserByEmailProvider.html","title":"injectable - FindOneUserByEmailProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindOneUserByEmailProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/find-one-user-by-email.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for finding user based on email\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findOneByEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/find-one-user-by-email.provider.ts:14\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/find-one-user-by-email.provider.ts:32\n                        \n                    \n\n\n            \n                \n                        function for finding user based on email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  RequestTimeoutException,\n  // UnauthorizedException,\n} from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { User } from '../user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n/**\n * provider for finding user based on email\n */\n@Injectable()\nexport class FindOneUserByEmailProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * Injecting usersRepository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for finding user based on email\n   * @param email\n   * @returns user\n   */\n  public async findOneByEmail(email: string) {\n    let user: User | undefined = undefined;\n\n    try {\n      user = await this.usersRepository.findOne({\n        where: { email: email },\n        select: ['id', 'email', 'role'],\n      });\n    } catch (error) {\n      throw new RequestTimeoutException(error, {\n        description: 'Could not fetch the user',\n      });\n    }\n\n    // if (!user) {\n    //   throw new UnauthorizedException('User does not exist');\n    // }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindUserByOtpAndExpiryTimeProvider.html":{"url":"injectables/FindUserByOtpAndExpiryTimeProvider.html","title":"injectable - FindUserByOtpAndExpiryTimeProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindUserByOtpAndExpiryTimeProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/find-user-by-reset-otp-and-expiry-time.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider class for finding user based on stored reset token and expiry time\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findUserByOtpAndExpiryTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/find-user-by-reset-otp-and-expiry-time.provider.ts:14\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findUserByOtpAndExpiryTime\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserByOtpAndExpiryTime(otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/find-user-by-reset-otp-and-expiry-time.provider.ts:32\n                        \n                    \n\n\n            \n                \n                        function for finding a user based on the stored reset token and expiry time\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  RequestTimeoutException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { MoreThan, Repository } from 'typeorm';\nimport { User } from '../user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n/**\n * provider class for finding user based on stored reset token and expiry time\n */\n@Injectable()\nexport class FindUserByOtpAndExpiryTimeProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * injecting the users repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for finding a user based on the stored reset token and expiry time\n   * @param otp\n   * @returns user\n   */\n  public async findUserByOtpAndExpiryTime(otp: string) {\n    let user;\n\n    try {\n      user = await this.usersRepository.find({\n        where: {\n          otp: otp,\n          otpExpire: MoreThan(new Date()),\n        },\n      });\n    } catch (error) {\n      throw new RequestTimeoutException(error, {\n        description: 'Could not fetch the user',\n      });\n    }\n\n    if (!user[0]) {\n      throw new UnauthorizedException('Otp is no longer valid');\n    }\n\n    return user[0];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GenerateTokensProvider.html":{"url":"injectables/GenerateTokensProvider.html","title":"injectable - GenerateTokensProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GenerateTokensProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/generate-tokens.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for generating tokens\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                generateTokens\n                            \n                            \n                                    Public\n                                    Async\n                                signToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConfiguration: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/generate-tokens.provider.ts:12\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        generateTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateTokens(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/generate-tokens.provider.ts:58\n                        \n                    \n\n\n            \n                \n                        function for generating tokens\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                access and refresh tokens\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        signToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    signToken(userId: string, expiresIn: number, payload?: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/generate-tokens.provider.ts:38\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        function for using jwt to sign the user info\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                expiresIn\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                the object containing payload when a user signs in\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport jwtConfig from '../config/jwt.config';\nimport { ConfigType } from '@nestjs/config';\nimport { ActiveUserData } from '../interfaces/active-user-data.interface';\nimport { User } from 'src/users/user.entity';\n\n/**\n * provider for generating tokens\n */\n@Injectable()\nexport class GenerateTokensProvider {\n  /**\n   * constructor\n   * @param jwtService\n   * @param jwtConfiguration\n   */\n  constructor(\n    /**\n     * Injecting the jwt service\n     */\n    private readonly jwtService: JwtService,\n\n    /**\n     * Injecting the jwt config\n     */\n    @Inject(jwtConfig.KEY)\n    private readonly jwtConfiguration: ConfigType,\n  ) {}\n\n  /**\n   * function for using jwt to sign the user info\n   * @param userId\n   * @param expiresIn\n   * @param payload\n   * @returns the object containing payload when a user signs in\n   */\n  public async signToken(userId: string, expiresIn: number, payload?: T) {\n    return await this.jwtService.signAsync(\n      {\n        sub: userId,\n        ...payload,\n      },\n      {\n        audience: this.jwtConfiguration.audience,\n        issuer: this.jwtConfiguration.issuer,\n        secret: this.jwtConfiguration.secret,\n        expiresIn,\n      },\n    );\n  }\n\n  /**\n   * function for generating tokens\n   * @param user\n   * @returns access and refresh tokens\n   */\n  public async generateTokens(user: User) {\n    const [accessToken, refreshToken] = await Promise.all([\n      // Generate the access token\n      this.signToken>(\n        user.id,\n        this.jwtConfiguration.accessTokenTtl,\n        {\n          email: user.email,\n          role: user.role,\n        },\n      ),\n      // Generate the refresh token\n      this.signToken(user.id, this.jwtConfiguration.refreshTokenTtl),\n    ]);\n\n    return {\n      accessToken,\n      refreshToken,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProductsBaseDto.html":{"url":"classes/GetProductsBaseDto.html","title":"class - GetProductsBaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProductsBaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/get-product.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                base dto fot products\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                category\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                clothType\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                colors\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                dressStyle\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                price\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                sizes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:21\n                        \n                    \n\n            \n                \n                    product category\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        clothType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:28\n                        \n                    \n\n            \n                \n                    productClothType\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        colors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:42\n                        \n                    \n\n            \n                \n                    product colors\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        dressStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:56\n                        \n                    \n\n            \n                \n                    product dressing style\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:14\n                        \n                    \n\n            \n                \n                    product name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:35\n                        \n                    \n\n            \n                \n                    product price\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        sizes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/get-product.dto.ts:49\n                        \n                    \n\n            \n                \n                    product sizes\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from 'class-validator';\nimport { IntersectionType } from '@nestjs/swagger';\nimport { PaginationQueryDto } from 'src/common/pagination/dtos/pagination-query.dto';\n\n/**\n * base dto fot products\n */\nclass GetProductsBaseDto {\n  /**\n   * product name\n   */\n  @IsString()\n  @IsOptional()\n  name?: string;\n\n  /**\n   * product category\n   */\n  @IsString()\n  @IsOptional()\n  category?: string;\n\n  /**\n   * productClothType\n   */\n  @IsString()\n  @IsOptional()\n  clothType?: string;\n\n  /**\n   * product price\n   */\n  @IsString()\n  @IsOptional()\n  price?: string;\n\n  /**\n   * product colors\n   */\n  @IsString()\n  @IsOptional()\n  colors?: string;\n\n  /**\n   * product sizes\n   */\n  @IsString()\n  @IsOptional()\n  sizes?: string;\n\n  /**\n   * product dressing style\n   */\n  @IsString()\n  @IsOptional()\n  dressStyle?: string;\n}\n\n/**\n * dto for get events\n */\nexport class GetProductsDto extends IntersectionType(\n  GetProductsBaseDto,\n  PaginationQueryDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProductsDto.html":{"url":"classes/GetProductsDto.html","title":"class - GetProductsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProductsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/get-product.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto for get events\n\n            \n\n            \n                Extends\n            \n            \n                            IntersectionType(\n  GetProductsBaseDto,\n  PaginationQueryDto,\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from 'class-validator';\nimport { IntersectionType } from '@nestjs/swagger';\nimport { PaginationQueryDto } from 'src/common/pagination/dtos/pagination-query.dto';\n\n/**\n * base dto fot products\n */\nclass GetProductsBaseDto {\n  /**\n   * product name\n   */\n  @IsString()\n  @IsOptional()\n  name?: string;\n\n  /**\n   * product category\n   */\n  @IsString()\n  @IsOptional()\n  category?: string;\n\n  /**\n   * productClothType\n   */\n  @IsString()\n  @IsOptional()\n  clothType?: string;\n\n  /**\n   * product price\n   */\n  @IsString()\n  @IsOptional()\n  price?: string;\n\n  /**\n   * product colors\n   */\n  @IsString()\n  @IsOptional()\n  colors?: string;\n\n  /**\n   * product sizes\n   */\n  @IsString()\n  @IsOptional()\n  sizes?: string;\n\n  /**\n   * product dressing style\n   */\n  @IsString()\n  @IsOptional()\n  dressStyle?: string;\n}\n\n/**\n * dto for get events\n */\nexport class GetProductsDto extends IntersectionType(\n  GetProductsBaseDto,\n  PaginationQueryDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersBaseDto.html":{"url":"classes/GetUsersBaseDto.html","title":"class - GetUsersBaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersBaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/get-user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto class for get user base\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                endDate\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/get-user.dto.ts:21\n                        \n                    \n\n            \n                \n                    end date\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/get-user.dto.ts:14\n                        \n                    \n\n            \n                \n                    start date\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IntersectionType } from '@nestjs/swagger';\nimport { IsDate, IsOptional } from 'class-validator';\nimport { PaginationQueryDto } from 'src/common/pagination/dtos/pagination-query.dto';\n\n/**\n * dto class for get user base\n */\nexport class GetUsersBaseDto {\n  /**\n   * start date\n   */\n  @IsDate()\n  @IsOptional()\n  startDate?: Date;\n\n  /**\n   * end date\n   */\n  @IsDate()\n  @IsOptional()\n  endDate?: Date;\n}\n\n/**\n * dto class for get user\n */\nexport class GetUsersDto extends IntersectionType(\n  GetUsersBaseDto,\n  PaginationQueryDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersDto.html":{"url":"classes/GetUsersDto.html","title":"class - GetUsersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/get-user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto class for get user\n\n            \n\n            \n                Extends\n            \n            \n                            IntersectionType(\n  GetUsersBaseDto,\n  PaginationQueryDto,\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IntersectionType } from '@nestjs/swagger';\nimport { IsDate, IsOptional } from 'class-validator';\nimport { PaginationQueryDto } from 'src/common/pagination/dtos/pagination-query.dto';\n\n/**\n * dto class for get user base\n */\nexport class GetUsersBaseDto {\n  /**\n   * start date\n   */\n  @IsDate()\n  @IsOptional()\n  startDate?: Date;\n\n  /**\n   * end date\n   */\n  @IsDate()\n  @IsOptional()\n  endDate?: Date;\n}\n\n/**\n * dto class for get user\n */\nexport class GetUsersDto extends IntersectionType(\n  GetUsersBaseDto,\n  PaginationQueryDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitiatePaymentDto.html":{"url":"classes/InitiatePaymentDto.html","title":"class - InitiatePaymentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitiatePaymentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/dtos/initiate-payment.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                deliveryAddress\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                deliveryPicker\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                discountId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                products\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        deliveryAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dtos/initiate-payment.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        deliveryPicker\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dtos/initiate-payment.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        discountId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dtos/initiate-payment.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductWithVariantDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsNotEmpty()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dtos/initiate-payment.dto.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsInt,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { PatchProductVariantDto } from 'src/product-variants/dto/patch-product-variant.dto';\n\nclass ProductWithVariantDto {\n  @IsString()\n  @IsNotEmpty()\n  productId: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  price: number;\n\n  @IsArray()\n  @IsNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => PatchProductVariantDto)\n  variants: PatchProductVariantDto[];\n}\n\nexport class InitiatePaymentDto {\n  @IsString()\n  @IsOptional()\n  deliveryPicker?: string;\n\n  @IsString()\n  @IsOptional()\n  deliveryAddress?: string;\n\n  @IsString()\n  @IsOptional()\n  discountId?: string;\n\n  @IsArray()\n  @IsNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => ProductWithVariantDto)\n  products: ProductWithVariantDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InitiatePaymentProvider.html":{"url":"injectables/InitiatePaymentProvider.html","title":"injectable - InitiatePaymentProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InitiatePaymentProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/providers/initiate-payment.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAuthHeader\n                            \n                            \n                                    Public\n                                    Async\n                                initializePayment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paystackConfiguration: ConfigType<>, dataSource: DataSource, usersService: UsersService, configService: ConfigService, productVariantsService: ProductVariantsService)\n                    \n                \n                        \n                            \n                                Defined in src/paystack/providers/initiate-payment.provider.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paystackConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productVariantsService\n                                                  \n                                                        \n                                                                        ProductVariantsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAuthHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAuthHeader()\n                \n            \n\n\n                    \n                        \n                            Defined in src/paystack/providers/initiate-payment.provider.ts:54\n                        \n                    \n\n\n            \n                \n                        function for getting the auth header\n\n\n                        \n                            Returns :         { Authorization: string; }\n\n                        \n                            \n                                authorization header for paystack\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        initializePayment\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializePayment(initiatePaymentDto: InitiatePaymentDto, user: ActiveUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paystack/providers/initiate-payment.provider.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                initiatePaymentDto\n                                            \n                                                            InitiatePaymentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  Inject,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { InitiatePaymentDto } from '../dtos/initiate-payment.dto';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\nimport paystackConfig from '../config/paystack.config';\nimport { ConfigService, ConfigType } from '@nestjs/config';\nimport { DataSource } from 'typeorm';\nimport axios from 'axios';\nimport { UsersService } from 'src/users/providers/users.service';\nimport { Payment } from 'src/payment/payment.entity';\nimport { paymentStatus } from 'src/payment/enums/paymentStatus.enum';\nimport { User } from 'src/users/user.entity';\nimport { ProductVariantsService } from 'src/product-variants/providers/product-variants.service';\nimport { Discount } from 'src/discounts/discounts.entity';\n\n@Injectable()\nexport class InitiatePaymentProvider {\n  constructor(\n    /**\n     * injecting the paystack config\n     */\n    @Inject(paystackConfig.KEY)\n    private readonly paystackConfiguration: ConfigType,\n\n    /**\n     * Injecting datasource\n     */\n    private readonly dataSource: DataSource,\n\n    /**\n     * injecting the users service\n     */\n    private readonly usersService: UsersService,\n\n    /**\n     * injecting config service\n     */\n    private readonly configService: ConfigService,\n\n    /**\n     * injecting the product variants service\n     */\n    private readonly productVariantsService: ProductVariantsService,\n  ) {}\n\n  /**\n   * function for getting the auth header\n   * @returns authorization header for paystack\n   */\n  private getAuthHeader() {\n    return { Authorization: `Bearer ${this.paystackConfiguration.secret}` };\n  }\n\n  public async initializePayment(\n    initiatePaymentDto: InitiatePaymentDto,\n    user: ActiveUserData,\n  ) {\n    // start transaction\n    // create Query Runner instance\n    const queryRunner = this.dataSource.createQueryRunner();\n    try {\n      // connect query runner to datasource\n      await queryRunner.connect();\n\n      // start transaction\n      await queryRunner.startTransaction();\n    } catch (error) {\n      console.log(error);\n      throw new RequestTimeoutException('Could not connect to datasource');\n    }\n\n    // find the user\n    const buyer: User = await this.usersService.findOneById(user.sub);\n\n    let discount: Discount;\n    // find the discount if there is one\n    if (initiatePaymentDto.discountId) {\n      discount = await queryRunner.manager.findOne(Discount, {\n        where: { id: initiatePaymentDto.discountId },\n      });\n    }\n\n    // user info should have details about address but if there is a set delivery address then use that\n    const deliveryAddress =\n      initiatePaymentDto.deliveryAddress ??\n      `${buyer.streetAddress}, ${buyer.city}, ${buyer.state}`;\n\n    const deliveryPicker =\n      initiatePaymentDto.deliveryPicker ??\n      `${buyer.firstName} ${buyer.lastName}`;\n\n    // Iterate through each product in the request\n    for (const product of initiatePaymentDto.products) {\n      const { productId, variants } = product;\n\n      // Iterate through each variant the user wants to buy\n      for (const variantDto of variants) {\n        const { id: variantId, quantity } = variantDto;\n\n        // check availability\n        await this.productVariantsService.checkVariantAvailability(\n          queryRunner.manager,\n          variantId,\n          productId,\n          quantity,\n        );\n      }\n    }\n\n    // get all product variants\n    const prdVariants = await Promise.all(\n      initiatePaymentDto.products\n        .map((prd) => prd.variants)\n        .flat()\n        .map(\n          async (vr) =>\n            await this.productVariantsService.findProductVariantById(vr.id),\n        ),\n    );\n\n    // calculate the total amount\n    let totalAmount = initiatePaymentDto.products\n      .map((prd) => {\n        // loop through inner variants\n        const totalQty = prd.variants\n          .map((vr) => vr.quantity)\n          .reduce((acc, cur) => cur + acc, 0);\n\n        return prd.price * totalQty;\n      })\n      .reduce((acc, cur) => acc + cur, 0);\n\n    totalAmount = initiatePaymentDto.discountId\n      ? totalAmount - (discount.percentOff / 100) * totalAmount\n      : totalAmount;\n\n    // initialize payment\n    let response;\n    try {\n      response = await axios.post(\n        `${this.paystackConfiguration.baseUrl}/transaction/initialize`,\n        {\n          email: buyer.email,\n          metadata: {\n            products: initiatePaymentDto.products,\n            user: buyer,\n            deliveryAddress,\n            deliveryPicker,\n            totalAmount,\n            discount: discount ?? {},\n          },\n          amount: totalAmount * 100,\n          callback_url: `${this.configService.get('appConfig.host')}/collections?success=yes`,\n        }, // Paystack accepts amounts in kobo\n        { headers: this.getAuthHeader() },\n      );\n\n      // Create payment record\n      await queryRunner.manager.save(Payment, {\n        userId: buyer.id,\n        amount: totalAmount,\n        provider: 'paystack',\n        providerReference: response.data.data.reference,\n        status: paymentStatus.PENDING,\n        authorizationUrl: response.data.data.authorization_url,\n        variants: prdVariants,\n      });\n\n      // if successful commit\n      // ensures the txn is committed to the db\n      await queryRunner.commitTransaction();\n\n      return response.data;\n    } catch (error) {\n      // we rollback the txn here if it is not successful\n      await queryRunner.rollbackTransaction();\n      throw new ConflictException('Could not complete the transaction', {\n        description: String(error),\n      });\n    } finally {\n      // relsease the connection\n      // release connection whether it was successful or not\n      try {\n        await queryRunner.release();\n      } catch (error) {\n        throw new RequestTimeoutException('Could not release the connection', {\n          description: String(error),\n        });\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_MailModule_exports\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { MailService } from './providers/mail.service';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { ConfigService } from '@nestjs/config';\nimport { join } from 'path';\nimport { EjsAdapter } from '@nestjs-modules/mailer/dist/adapters/ejs.adapter';\n\n// makes importation of mail module to any module\n@Global()\n@Module({\n  imports: [\n    MailerModule.forRootAsync({\n      // we need the config service to configure the mailer module\n      inject: [ConfigService],\n      // we use the useFactory to inject the mailer module\n      useFactory: async (config: ConfigService) => {\n        // console.log(\n        //   config.get('appConfig.mailHost'),\n        //   config.get('appConfig.smtpUsername'),\n        //   config.get('appConfig.smtpPassword'),\n        // );\n        return {\n          transport: {\n            host: config.get('appConfig.mailHost'),\n            secure: true,\n            port: 465,\n            auth: {\n              user: config.get('appConfig.smtpUsername'),\n              pass: config.get('appConfig.smtpPassword'),\n            },\n            // tls: { rejectUnauthorized: false },\n          },\n          default: {\n            from: `Nich Fashion `,\n          },\n          template: {\n            dir: join(__dirname, 'templates'),\n            adapter: new EjsAdapter({\n              inlineCssEnabled: true,\n            }),\n            options: {\n              strict: false,\n            },\n          },\n        };\n      },\n    }),\n  ],\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/providers/mail.service.ts\n        \n\n\n            \n                Description\n            \n            \n                service for the mail module\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                sendLoginOtp\n                            \n                            \n                                    Public\n                                    Async\n                                sendProductPurchaseMail\n                            \n                            \n                                    Public\n                                    Async\n                                sendResetOtp\n                            \n                            \n                                    Public\n                                    Async\n                                sendSubscriberMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService)\n                    \n                \n                        \n                            \n                                Defined in src/mail/providers/mail.service.ts:13\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendLoginOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendLoginOtp(user: User, otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/providers/mail.service.ts:49\n                        \n                    \n\n\n            \n                \n                        function for sending reset otp mail to user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendProductPurchaseMail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendProductPurchaseMail(user: User, products: Product[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/providers/mail.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                products\n                                            \n                                                            Product[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendResetOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendResetOtp(user: User, otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/providers/mail.service.ts:30\n                        \n                    \n\n\n            \n                \n                        function for sending reset otp mail to user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendSubscriberMail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendSubscriberMail(subscriber: Subscriber)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/providers/mail.service.ts:83\n                        \n                    \n\n\n            \n                \n                        function for sending mail to user when they subscribe to the newsletter\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                subscriber\n                                            \n                                                            Subscriber\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ROOT_PATH } from '../../config/paths.config';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { Injectable } from '@nestjs/common';\nimport * as path from 'path';\nimport { Product } from 'src/products/product.entity';\nimport { Subscriber } from 'src/subscribers/subscriber.entity';\nimport { User } from 'src/users/user.entity';\n\n/**\n * service for the mail module\n */\n@Injectable()\nexport class MailService {\n  /**\n   * constructor\n   * @param mailerService\n   */\n  constructor(\n    /**\n     * injecting mailer service\n     */\n    private mailerService: MailerService,\n  ) {}\n\n  /**\n   * function for sending reset otp mail to user\n   * @param user\n   * @param otp\n   */\n  public async sendResetOtp(user: User, otp: string): Promise {\n    await this.mailerService.sendMail({\n      to: user.email,\n      from: `Ticket Hive - Support Team  `,\n      subject: `🔐 Reset Your Password – Let's Get You Back on Track!`,\n      template: path.join(ROOT_PATH, '/src/mail/templates/resetOtp.ejs'),\n      context: {\n        // fullname: user.fullname,\n        email: user.email,\n        otp: otp,\n      },\n    });\n  }\n\n  /**\n   * function for sending reset otp mail to user\n   * @param user\n   * @param otp\n   */\n  public async sendLoginOtp(user: User, otp: string): Promise {\n    await this.mailerService.sendMail({\n      to: user.email,\n      from: `Nich Fashion - Team  `,\n      subject: `🔐 Login to Nich Fashion- Get your best wears`,\n      template: path.join(ROOT_PATH, '/src/mail/templates/loginOtp.ejs'),\n      context: {\n        email: user.email,\n        otp: otp,\n      },\n    });\n  }\n\n  public async sendProductPurchaseMail(\n    user: User,\n    products: Product[],\n  ): Promise {\n    await this.mailerService.sendMail({\n      to: user.email,\n      from: `Nich Fashion - Team  `,\n      subject: `🎟️ Your Product(s) Purchase Confirmation – Nich Fashion`,\n      template: path.join(ROOT_PATH, '/src/mail/templates/productBought.ejs'),\n      context: {\n        firstName: user.firstName,\n        email: user.email,\n        products: products,\n      },\n    });\n  }\n\n  /**\n   * function for sending mail to user when they subscribe to the newsletter\n   * @param subscriber\n   */\n  public async sendSubscriberMail(subscriber: Subscriber): Promise {\n    await this.mailerService.sendMail({\n      to: subscriber.email,\n      from: `Ticket Hive -Team  `,\n      subject: `Welcome to Ticket Hive's Newsletter! 🎉`,\n      template: path.join(ROOT_PATH, '/src/mail/templates/subscription.ejs'),\n      context: {\n        email: subscriber.email,\n        id: subscriber.id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Order.html":{"url":"entities/Order.html","title":"entity - Order","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/order.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                carrier\n                            \n                            \n                                    \n                                    Optional\n                                carrierPhoneNumber\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deliveryAddress\n                            \n                            \n                                    \n                                deliveryPicker\n                            \n                            \n                                    \n                                    Optional\n                                discountApplied\n                            \n                            \n                                    \n                                discountUsage\n                            \n                            \n                                    \n                                    Optional\n                                estimatedDeliveryDate\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                orderStatus\n                            \n                            \n                                    \n                                    \n                                products\n                            \n                            \n                                    \n                                totalAmount\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        carrier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        carrierPhoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deliveryAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deliveryPicker\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        discountApplied\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        discountUsage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DiscountUsage\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, discountUsage => discountUsage.order)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        estimatedDeliveryDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        orderStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: OrderStatus, default: undefined, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable({name: 'orders_products', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:50\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { OrderStatus } from './enums/order-status.enum';\nimport { Product } from 'src/products/product.entity';\nimport { DiscountUsage } from 'src/discounts-usage/discounts-usage.entity';\n\n@Entity()\nexport class Order {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @Column({\n    type: 'enum',\n    enum: OrderStatus,\n    default: OrderStatus.PLACED,\n    nullable: false,\n  })\n  orderStatus: OrderStatus;\n\n  @Column({ nullable: true })\n  carrier?: string;\n\n  @Column({ nullable: true })\n  carrierPhoneNumber?: string;\n\n  @Column()\n  deliveryAddress: string;\n\n  @Column()\n  deliveryPicker: string;\n\n  @Column({ nullable: true })\n  estimatedDeliveryDate?: Date;\n\n  @Column()\n  userId: string;\n\n  @Column('decimal', { nullable: true })\n  discountApplied?: number;\n\n  @OneToOne(() => DiscountUsage, (discountUsage) => discountUsage.order)\n  discountUsage: DiscountUsage;\n\n  @Column()\n  totalAmount: number;\n\n  @ManyToMany(() => Product)\n  @JoinTable({\n    name: 'orders_products',\n    joinColumn: { name: 'orderId', referencedColumnName: 'id' },\n    inverseJoinColumn: { name: 'productId', referencedColumnName: 'id' },\n  })\n  products: Product[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrdersController.html":{"url":"controllers/OrdersController.html","title":"controller - OrdersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrdersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/orders.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                orders\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('orders')\nexport class OrdersController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrdersModule.html":{"url":"modules/OrdersModule.html","title":"module - OrdersModule","body":"\n                   \n\n\n\n\n    Modules\n    OrdersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\n\nOrdersService\n\nOrdersService\n\n\n\nOrdersModule\n\nOrdersModule\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/orders/orders.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrdersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrdersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrdersController } from './orders.controller';\nimport { OrdersService } from './providers/orders.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Order } from './order.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Order])],\n  controllers: [OrdersController],\n  providers: [OrdersService],\n})\nexport class OrdersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrdersService.html":{"url":"injectables/OrdersService.html","title":"injectable - OrdersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrdersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/providers/orders.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class OrdersService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OtpSigninDto.html":{"url":"classes/OtpSigninDto.html","title":"class - OtpSigninDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OtpSigninDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/otpSignin.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                otp sign in dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                otp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        otp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the reset otp', example: 2343})@IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/otpSignin.dto.ts:17\n                        \n                    \n\n            \n                \n                    otp for signin\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsInt, IsNotEmpty } from 'class-validator';\n\n/**\n * otp sign in dto\n */\nexport class OtpSigninDto {\n  /**\n   * otp for signin\n   */\n  @ApiProperty({\n    description: 'This is the reset otp',\n    example: 2343,\n  })\n  @IsInt()\n  @IsNotEmpty()\n  otp: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtpSigninProvider.html":{"url":"injectables/OtpSigninProvider.html","title":"injectable - OtpSigninProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OtpSigninProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/otp-signin.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                signInWithOtp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, generateTokenProvider: GenerateTokensProvider)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/otp-signin.provider.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        generateTokenProvider\n                                                  \n                                                        \n                                                                        GenerateTokensProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        signInWithOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signInWithOtp(otpSigninDto: OtpSigninDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/otp-signin.provider.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otpSigninDto\n                                            \n                                                            OtpSigninDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/providers/users.service';\nimport { OtpSigninDto } from '../dtos/otpSignin.dto';\nimport * as crypto from 'crypto';\nimport { GenerateTokensProvider } from './generate-tokens.provider';\n\n@Injectable()\nexport class OtpSigninProvider {\n  constructor(\n    /**\n     * injecting users service\n     */\n    private readonly usersService: UsersService,\n\n    /**\n     * injecting the generateToken Provider\n     */\n    private readonly generateTokenProvider: GenerateTokensProvider,\n  ) {}\n\n  public async signInWithOtp(otpSigninDto: OtpSigninDto) {\n    // get the otp and hash it\n    const hashedOtp = crypto\n      .createHash('sha256')\n      .update(otpSigninDto.otp.toString())\n      .digest('hex');\n\n    // find the user based on the hased otp and timestamp\n    const user =\n      await this.usersService.findUserByResetOtpAndExpiryTime(hashedOtp);\n\n    // clear the otp and expiry time\n    await this.usersService.clearOtpAndExpiryTime(user);\n\n    // send access token and refresh token\n    // // generate an access token\n    const { accessToken, refreshToken } =\n      await this.generateTokenProvider.generateTokens(user);\n\n    return {\n      accessToken,\n      refreshToken,\n      user: {\n        id: user.id,\n        email: user.email,\n        role: user.role,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paginated.html":{"url":"interfaces/Paginated.html","title":"interface - Paginated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Paginated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pagination/interfaces/paginated.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for the response on paginated queries\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            links\n                                        \n                                \n                                \n                                        \n                                            meta\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the data to be returned\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        links:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    various links for the pages of the data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the metadata for the data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Paginated {\n  /**\n   * the data to be returned\n   */\n  data: T[];\n\n  /**\n   * the metadata for the data\n   */\n  meta: {\n    itemsPerPage: number;\n    totalItems: number;\n    currentPage: number;\n    totalPages: number;\n  };\n\n  /**\n   * various links for the pages of the data\n   */\n  links: {\n    first: string;\n    last: string;\n    current: string;\n    next: string;\n    previous: string;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaginationModule.html":{"url":"modules/PaginationModule.html","title":"module - PaginationModule","body":"\n                   \n\n\n\n\n    Modules\n    PaginationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaginationModule\n\n\n\ncluster_PaginationModule_providers\n\n\n\ncluster_PaginationModule_exports\n\n\n\n\nPaginationProvider \n\nPaginationProvider \n\n\n\nPaginationModule\n\nPaginationModule\n\nPaginationProvider  -->\n\nPaginationModule->PaginationProvider \n\n\n\n\n\nPaginationProvider\n\nPaginationProvider\n\nPaginationModule -->\n\nPaginationProvider->PaginationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/pagination/pagination.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaginationProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PaginationProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PaginationProvider } from './providers/pagination.provider';\n\n@Module({\n  providers: [PaginationProvider],\n  exports: [PaginationProvider],\n})\nexport class PaginationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaginationProvider.html":{"url":"injectables/PaginationProvider.html","title":"injectable - PaginationProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaginationProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pagination/providers/pagination.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for pagination\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                paginationQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in src/common/pagination/providers/pagination.provider.ts:14\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        paginationQuery\n                        \n                    \n                \n            \n            \n                \n                        \n                    paginationQuery(paginationQuery: PaginationQueryDto, repository: Repository, options?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/pagination/providers/pagination.provider.ts:34\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        function for paginating find all queries\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paginationQuery\n                                            \n                                                            PaginationQueryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                repository\n                                            \n                                                        Repository\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                data, metadata and links for the findAll queries\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { PaginationQueryDto } from '../dtos/pagination-query.dto';\nimport { ObjectLiteral, Repository } from 'typeorm';\n\n// inorder to inject a request to a provider\nimport { Request } from 'express';\nimport { REQUEST } from '@nestjs/core';\nimport { Paginated } from '../interfaces/paginated.interface';\n\n/**\n * provider for pagination\n */\n@Injectable()\nexport class PaginationProvider {\n  /**\n   * constructor\n   * @param request\n   */\n  constructor(\n    /**\n     * Injecting request\n     */\n    @Inject(REQUEST)\n    private readonly request: Request,\n  ) {}\n\n  /**\n   * function for paginating find all queries\n   * @param paginationQuery\n   * @param repository\n   * @param options\n   * @returns data, metadata and links for the findAll queries\n   */\n  public async paginationQuery(\n    paginationQuery: PaginationQueryDto,\n    repository: Repository,\n    options?: any,\n  ): Promise> {\n    const results = await repository.find({\n      // no of items to skip in one query\n      skip: (paginationQuery.page - 1) * paginationQuery.limit,\n      // the no items to take in one query\n      take: paginationQuery.limit,\n      relations: options.relations,\n      select: options.select,\n      where: options.where,\n    });\n\n    /**\n     * Create the request URLS\n     */\n    const baseURL =\n      this.request.protocol + '://' + this.request.headers.host + '/';\n\n    const newUrl = new URL(this.request.url, baseURL);\n\n    // console.log(newUrl);\n\n    const totalItems = await repository.count();\n    const totalPages = Math.ceil(totalItems / paginationQuery.limit);\n    const nextPage =\n      paginationQuery.page === totalPages\n        ? paginationQuery.page\n        : paginationQuery.page + 1;\n    const prevPage =\n      paginationQuery.page === 1\n        ? paginationQuery.page\n        : paginationQuery.page - 1;\n\n    const finalResponse: Paginated = {\n      data: results,\n      meta: {\n        itemsPerPage: paginationQuery.limit,\n        totalItems: totalItems,\n        currentPage: paginationQuery.page,\n        totalPages: totalPages,\n      },\n      links: {\n        first: `${newUrl.origin}${newUrl.pathname}?limit=${paginationQuery.limit}&page=1`,\n        last: `${newUrl.origin}${newUrl.pathname}?limit=${paginationQuery.limit}&page=${totalPages}`,\n        current: `${newUrl.origin}${newUrl.pathname}?limit=${paginationQuery.limit}&page=${paginationQuery.page}`,\n        next: `${newUrl.origin}${newUrl.pathname}?limit=${paginationQuery.limit}&page=${nextPage}`,\n        previous: `${newUrl.origin}${newUrl.pathname}?limit=${paginationQuery.limit}&page=${prevPage}`,\n      },\n    };\n\n    return finalResponse;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQueryDto.html":{"url":"classes/PaginationQueryDto.html","title":"class - PaginationQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pagination/dtos/pagination-query.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                dto for the pagination query\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/pagination/dtos/pagination-query.dto.ts:12\n                        \n                    \n\n            \n                \n                    limit for the number of items in the get all requests\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/pagination/dtos/pagination-query.dto.ts:19\n                        \n                    \n\n            \n                \n                    page number for the get all requests\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsPositive } from 'class-validator';\n\n/**\n * dto for the pagination query\n */\nexport class PaginationQueryDto {\n  /**\n   * limit for the number of items in the get all requests\n   */\n  @IsOptional()\n  limit?: number = 0;\n\n  /**\n   * page number for the get all requests\n   */\n  @IsOptional()\n  @IsPositive()\n  page?: number = 1;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchProductDto.html":{"url":"classes/PatchProductDto.html","title":"class - PatchProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/patch-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                brand\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                category\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                clothType\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                discount\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                dressStyle\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    \n                                longDescription\n                            \n                            \n                                    \n                                    \n                                material\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                price\n                            \n                            \n                                    \n                                    \n                                shortDescription\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                variants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        brand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        clothType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        dressStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        longDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        material\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        shortDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PatchProductVariantDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/patch-product.dto.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsInt, IsOptional, IsString } from 'class-validator';\nimport { PatchProductVariantDto } from 'src/product-variants/dto/patch-product-variant.dto';\n\nexport class PatchProductDto {\n  @IsString()\n  @IsOptional()\n  id?: string;\n\n  @IsString()\n  @IsOptional()\n  name?: string;\n\n  @IsInt()\n  @IsOptional()\n  price?: number;\n\n  @IsString()\n  @IsOptional()\n  discount?: string;\n\n  @IsString()\n  @IsOptional()\n  category?: string;\n\n  @IsString()\n  @IsOptional()\n  dressStyle?: string;\n\n  @IsString()\n  @IsOptional()\n  clothType?: string;\n\n  @IsString()\n  @IsOptional()\n  material: string;\n\n  @IsString()\n  @IsOptional()\n  brand: string;\n\n  @IsString()\n  @IsOptional()\n  shortDescription: string;\n\n  @IsString()\n  @IsOptional()\n  longDescription: string;\n\n  @IsArray()\n  @IsOptional()\n  variants?: PatchProductVariantDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchProductVariantDto.html":{"url":"classes/PatchProductVariantDto.html","title":"class - PatchProductVariantDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchProductVariantDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-variants/dto/patch-product-variant.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(\n  CreateProductVariantDto,\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                soldOut\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/patch-product-variant.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        soldOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/dto/patch-product-variant.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateProductVariantDto } from './create-product-variant.dto';\nimport { IsBoolean, IsOptional, IsString } from 'class-validator';\n\nexport class PatchProductVariantDto extends PartialType(\n  CreateProductVariantDto,\n) {\n  @IsString()\n  @IsOptional()\n  id?: string;\n\n  @IsBoolean()\n  @IsOptional()\n  soldOut?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUserDto.html":{"url":"classes/PatchUserDto.html","title":"class - PatchUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/patch-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                country\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lasttName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                state\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                streetAddress\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lasttName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        streetAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/patch-user.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\nimport { IsInt, IsOptional, IsString } from 'class-validator';\n\nexport class PatchUserDto extends PartialType(CreateUserDto) {\n  @IsOptional()\n  @IsString()\n  firstName?: string;\n\n  @IsOptional()\n  @IsString()\n  lasttName?: string;\n\n  @IsOptional()\n  @IsString()\n  country?: string;\n\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @IsOptional()\n  @IsString()\n  state?: string;\n\n  @IsOptional()\n  @IsString()\n  city?: string;\n\n  @IsOptional()\n  @IsString()\n  streetAddress?: string;\n\n  @IsOptional()\n  @IsInt()\n  zipCode?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Payment.html":{"url":"entities/Payment.html","title":"entity - Payment","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Payment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/payment.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                payment entity\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                    Optional\n                                authorizationUrl\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                provider\n                            \n                            \n                                    \n                                providerReference\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                userId\n                            \n                            \n                                    \n                                    \n                                variants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {precision: 10, scale: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        authorizationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        providerReference\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         paymentStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: paymentStatus, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProductVariant[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable({name: 'payment_variants', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/payment.entity.ts:55\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { paymentStatus } from './enums/paymentStatus.enum';\nimport { ProductVariant } from 'src/product-variants/product-variants.entity';\n\n/**\n * payment entity\n */\n@Entity()\nexport class Payment {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({\n    type: 'enum',\n    enum: paymentStatus,\n    default: paymentStatus.PENDING,\n  })\n  status: paymentStatus;\n\n  @Column()\n  provider: string;\n\n  @Column({ unique: true })\n  providerReference: string;\n\n  @Column({ nullable: true })\n  authorizationUrl?: string;\n\n  @Column('decimal', { precision: 10, scale: 2 })\n  amount: number;\n\n  @Column({ nullable: false })\n  userId: string;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @ManyToMany(() => ProductVariant)\n  @JoinTable({\n    name: 'payment_variants',\n    joinColumn: { name: 'paymentId', referencedColumnName: 'id' },\n    inverseJoinColumn: { name: 'variantId', referencedColumnName: 'id' },\n  })\n  variants: ProductVariant[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaymentController.html":{"url":"controllers/PaymentController.html","title":"controller - PaymentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaymentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/payment.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                payment\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('payment')\nexport class PaymentController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentModule.html":{"url":"modules/PaymentModule.html","title":"module - PaymentModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/payment/payment.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            PaymentController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Payment } from './payment.entity';\nimport { PaymentController } from './payment.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Payment])],\n  controllers: [PaymentController],\n})\nexport class PaymentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaystackController.html":{"url":"controllers/PaystackController.html","title":"controller - PaystackController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaystackController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/paystack.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                paystack\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                handlePaymentWebhook\n                            \n                            \n                                    \n                                    \n                                    Public\n                                initiatePayment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        handlePaymentWebhook\n                        \n                    \n                \n            \n            \n                \n                        \n                    handlePaymentWebhook(body: any, signature: string, req: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/webhook')@Auth(AuthType.None)@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in src/paystack/paystack.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                signature\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        initiatePayment\n                        \n                    \n                \n            \n            \n                \n                        \n                    initiatePayment(initiatePaymentDto: InitiatePaymentDto, user: ActiveUserData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/initiate-payment')@Roles(Role.USER)\n                \n            \n\n                    \n                        \n                            Defined in src/paystack/paystack.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                initiatePaymentDto\n                                            \n                                                            InitiatePaymentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Headers,\n  HttpCode,\n  HttpStatus,\n  Post,\n  Req,\n} from '@nestjs/common';\nimport { PaystackService } from './providers/paystack.service';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { Role } from 'src/auth/enums/role-type.enum';\nimport { InitiatePaymentDto } from './dtos/initiate-payment.dto';\nimport { ActiveUser } from 'src/auth/decorator/active-user.decorator';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\nimport { Auth } from 'src/auth/decorator/auth.decorator';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\n\n@Controller('paystack')\nexport class PaystackController {\n  constructor(\n    /**\n     * injecting the paystack service\n     */\n    private readonly paystackService: PaystackService,\n  ) {}\n\n  @Post('/initiate-payment')\n  @Roles(Role.USER)\n  //   @Auth(AuthType.None)\n  public initiatePayment(\n    @Body() initiatePaymentDto: InitiatePaymentDto,\n    @ActiveUser() user: ActiveUserData,\n  ) {\n    return this.paystackService.initiatePayment(initiatePaymentDto, user);\n  }\n\n  @Post('/webhook')\n  @Auth(AuthType.None)\n  @HttpCode(HttpStatus.OK)\n  async handlePaymentWebhook(\n    @Body() body: any,\n    @Headers('x-paystack-signature') signature: string,\n    @Req() req: any,\n  ) {\n    return this.paystackService.verifyPayment(body, signature, req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaystackModule.html":{"url":"modules/PaystackModule.html","title":"module - PaystackModule","body":"\n                   \n\n\n\n\n    Modules\n    PaystackModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaystackModule\n\n\n\ncluster_PaystackModule_providers\n\n\n\ncluster_PaystackModule_imports\n\n\n\n\nProductVariantsModule\n\nProductVariantsModule\n\n\n\nPaystackModule\n\nPaystackModule\n\nPaystackModule -->\n\nProductVariantsModule->PaystackModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nPaystackModule -->\n\nProductsModule->PaystackModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nPaystackModule -->\n\nUsersModule->PaystackModule\n\n\n\n\n\nInitiatePaymentProvider\n\nInitiatePaymentProvider\n\nPaystackModule -->\n\nInitiatePaymentProvider->PaystackModule\n\n\n\n\n\nPaystackService\n\nPaystackService\n\nPaystackModule -->\n\nPaystackService->PaystackModule\n\n\n\n\n\nVerifyPaymentProvider\n\nVerifyPaymentProvider\n\nPaystackModule -->\n\nVerifyPaymentProvider->PaystackModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/paystack/paystack.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            InitiatePaymentProvider\n                        \n                        \n                            PaystackService\n                        \n                        \n                            VerifyPaymentProvider\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaystackController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProductVariantsModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { PaystackController } from './paystack.controller';\nimport { PaystackService } from './providers/paystack.service';\nimport { InitiatePaymentProvider } from './providers/initiate-payment.provider';\nimport paystackConfig from './config/paystack.config';\nimport { UsersModule } from 'src/users/users.module';\nimport { ProductsModule } from 'src/products/products.module';\nimport { ProductVariantsModule } from 'src/product-variants/product-variants.module';\nimport { VerifyPaymentProvider } from './providers/verify-payment.provider';\n\n@Module({\n  imports: [\n    UsersModule,\n    ProductsModule,\n    ProductVariantsModule,\n    ConfigModule.forFeature(paystackConfig),\n  ],\n  controllers: [PaystackController],\n  providers: [PaystackService, InitiatePaymentProvider, VerifyPaymentProvider],\n})\nexport class PaystackModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaystackService.html":{"url":"injectables/PaystackService.html","title":"injectable - PaystackService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaystackService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/providers/paystack.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                initiatePayment\n                            \n                            \n                                    Public\n                                    Async\n                                verifyPayment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(initiatePaymentProvider: InitiatePaymentProvider, verifyPaymentProvider: VerifyPaymentProvider)\n                    \n                \n                        \n                            \n                                Defined in src/paystack/providers/paystack.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initiatePaymentProvider\n                                                  \n                                                        \n                                                                        InitiatePaymentProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        verifyPaymentProvider\n                                                  \n                                                        \n                                                                        VerifyPaymentProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        initiatePayment\n                        \n                    \n                \n            \n            \n                \n                        \n                    initiatePayment(initiatePaymentDto: InitiatePaymentDto, user: ActiveUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paystack/providers/paystack.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                initiatePaymentDto\n                                            \n                                                            InitiatePaymentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        verifyPayment\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyPayment(body: any, signature: string, req: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paystack/providers/paystack.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                signature\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InitiatePaymentProvider } from './initiate-payment.provider';\nimport { InitiatePaymentDto } from '../dtos/initiate-payment.dto';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\nimport { VerifyPaymentProvider } from './verify-payment.provider';\n\n@Injectable()\nexport class PaystackService {\n  constructor(\n    /**\n     * injecting the initiate payment provider\n     */\n    private readonly initiatePaymentProvider: InitiatePaymentProvider,\n\n    /**\n     * injecting the verify payment provider\n     */\n    private readonly verifyPaymentProvider: VerifyPaymentProvider,\n  ) {}\n\n  public async initiatePayment(\n    initiatePaymentDto: InitiatePaymentDto,\n    user: ActiveUserData,\n  ) {\n    return await this.initiatePaymentProvider.initializePayment(\n      initiatePaymentDto,\n      user,\n    );\n  }\n\n  public async verifyPayment(body: any, signature: string, req: any) {\n    return await this.verifyPaymentProvider.paymentWebhook(\n      body,\n      signature,\n      req,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Product.html":{"url":"entities/Product.html","title":"entity - Product","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/product.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                brand\n                            \n                            \n                                    \n                                category\n                            \n                            \n                                    \n                                clothType\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                discount\n                            \n                            \n                                    \n                                dressStyle\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                longDescription\n                            \n                            \n                                    \n                                material\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                    Optional\n                                reviews\n                            \n                            \n                                    \n                                shortDescription\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    Optional\n                                variants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        brand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        clothType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {precision: 5, scale: 2, default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dressStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        longDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        material\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {precision: 10, scale: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        reviews\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Review[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, review => review.product, {cascade: true, eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        shortDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProductVariant[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, variant => variant.product, {cascade: true, eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:53\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ProductVariant } from 'src/product-variants/product-variants.entity';\nimport { Review } from 'src/reviews/reviews.entity';\nimport {\n  BeforeInsert,\n  BeforeUpdate,\n  Column,\n  CreateDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Product {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column('decimal', { precision: 10, scale: 2 })\n  price: number;\n\n  @Column('decimal', { precision: 5, scale: 2, default: 0 })\n  discount: number;\n\n  @Column()\n  category: string;\n\n  @Column()\n  dressStyle: string;\n\n  @Column()\n  clothType: string;\n\n  @Column()\n  material: string;\n\n  @Column()\n  brand: string;\n\n  @Column()\n  shortDescription: string;\n\n  @Column()\n  longDescription: string;\n\n  @OneToMany(() => ProductVariant, (variant) => variant.product, {\n    cascade: true,\n    eager: true,\n  })\n  variants?: ProductVariant[];\n\n  @OneToMany(() => Review, (review) => review.product, {\n    cascade: true,\n    eager: true,\n  })\n  reviews?: Review[];\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @BeforeInsert()\n  @BeforeUpdate()\n  transformToLowercase() {\n    if (this.name) {\n      this.name = this.name.toLowerCase();\n    }\n    if (this.category) {\n      this.category = this.category.toLowerCase();\n    }\n    if (this.dressStyle) {\n      this.dressStyle = this.dressStyle.toLowerCase();\n    }\n    if (this.clothType) {\n      this.clothType = this.clothType.toLowerCase();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProductImage.html":{"url":"entities/ProductImage.html","title":"entity - ProductImage","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProductImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-images/product-image.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                displayOrder\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                imagePath\n                            \n                            \n                                    \n                                    \n                                productVariant\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        displayOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int', {default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-images/product-image.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-images/product-image.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        imagePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-images/product-image.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        productVariant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductVariant\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, variant => variant.images, {onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-images/product-image.entity.ts:25\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ProductVariant } from 'src/product-variants/product-variants.entity';\nimport {\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class ProductImage {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  imagePath: string;\n\n  @Column('int', { default: 0 })\n  displayOrder: number;\n\n  @ManyToOne(() => ProductVariant, (variant) => variant.images, {\n    onDelete: 'CASCADE',\n  })\n  @JoinColumn()\n  productVariant: ProductVariant;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductImagesModule.html":{"url":"modules/ProductImagesModule.html","title":"module - ProductImagesModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductImagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductImagesModule\n\n\n\ncluster_ProductImagesModule_providers\n\n\n\n\nProductImagesService\n\nProductImagesService\n\n\n\nProductImagesModule\n\nProductImagesModule\n\nProductImagesModule -->\n\nProductImagesService->ProductImagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product-images/product-images.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductImagesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductImagesService } from './providers/product-images.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProductImage } from './product-image.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ProductImage])],\n  providers: [ProductImagesService],\n})\nexport class ProductImagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductImagesService.html":{"url":"injectables/ProductImagesService.html","title":"injectable - ProductImagesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductImagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-images/providers/product-images.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ProductImagesService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProductVariant.html":{"url":"entities/ProductVariant.html","title":"entity - ProductVariant","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProductVariant\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-variants/product-variants.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                color\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                images\n                            \n                            \n                                    \n                                    \n                                product\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                soldOut\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProductImage[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, image => image.productVariant, {cascade: true, eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, product => product.variants, {onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        soldOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-variants/product-variants.entity.ts:27\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ProductImage } from 'src/product-images/product-image.entity';\nimport { Product } from 'src/products/product.entity';\nimport {\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  OneToMany,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class ProductVariant {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  color: string;\n\n  @Column()\n  size: string;\n\n  @Column('int')\n  quantity: number;\n\n  @Column({ default: false })\n  soldOut: boolean;\n\n  @ManyToOne(() => Product, (product) => product.variants, {\n    onDelete: 'CASCADE',\n  })\n  @JoinColumn()\n  product: Product;\n\n  @OneToMany(() => ProductImage, (image) => image.productVariant, {\n    cascade: true,\n    eager: true,\n  })\n  images?: ProductImage[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductVariantsModule.html":{"url":"modules/ProductVariantsModule.html","title":"module - ProductVariantsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductVariantsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductVariantsModule\n\n\n\ncluster_ProductVariantsModule_exports\n\n\n\ncluster_ProductVariantsModule_providers\n\n\n\n\nProductVariantsService \n\nProductVariantsService \n\n\n\nProductVariantsModule\n\nProductVariantsModule\n\nProductVariantsService  -->\n\nProductVariantsModule->ProductVariantsService \n\n\n\n\n\nProductVariantsService\n\nProductVariantsService\n\nProductVariantsModule -->\n\nProductVariantsService->ProductVariantsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product-variants/product-variants.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductVariantsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProductVariantsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductVariantsService } from './providers/product-variants.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProductVariant } from './product-variants.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ProductVariant])],\n  providers: [ProductVariantsService],\n  exports: [ProductVariantsService],\n})\nexport class ProductVariantsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductVariantsService.html":{"url":"injectables/ProductVariantsService.html","title":"injectable - ProductVariantsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductVariantsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-variants/providers/product-variants.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                checkVariantAvailability\n                            \n                            \n                                    Public\n                                    Async\n                                findProductVariantById\n                            \n                            \n                                    Async\n                                rollbackStock\n                            \n                            \n                                    Public\n                                    Async\n                                saveProductVariant\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productVariantRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/product-variants/providers/product-variants.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productVariantRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        checkVariantAvailability\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkVariantAvailability(manager: EntityManager, variantId: string, productId: string, quantity: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product-variants/providers/product-variants.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                manager\n                                            \n                                                        EntityManager\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                variantId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                quantity\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findProductVariantById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductVariantById(variantId: string, productId?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product-variants/providers/product-variants.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                variantId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a product variant\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        rollbackStock\n                        \n                    \n                \n            \n            \n                \n                        \n                    rollbackStock(variantId: string, productId: string, quantity: number, manager: EntityManager)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product-variants/providers/product-variants.service.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                variantId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                quantity\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                manager\n                                            \n                                                        EntityManager\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        saveProductVariant\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveProductVariant(variant: ProductVariant)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product-variants/providers/product-variants.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                variant\n                                            \n                                                            ProductVariant\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a product variant\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { EntityManager, Repository } from 'typeorm';\nimport { ProductVariant } from '../product-variants.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class ProductVariantsService {\n  constructor(\n    /**\n     * injecting the product variant repository\n     */\n    @InjectRepository(ProductVariant)\n    private readonly productVariantRepository: Repository,\n  ) {}\n\n  /**\n   * @function finds a product variant by id\n   * @param variantId\n   * @param productId\n   * @returns a product variant\n   */\n  public async findProductVariantById(\n    variantId: string,\n    productId?: string,\n  ): Promise {\n    const variant = await this.productVariantRepository.findOne({\n      where: { id: variantId, product: productId ? { id: productId } : null },\n    });\n\n    if (!variant) {\n      throw new NotFoundException(\n        `Variant with ID ${variantId} not found for product ${productId}`,\n      );\n    }\n\n    return variant;\n  }\n\n  /**\n   * @function saves a variant\n   * @param variant\n   * @returns  a product variant\n   */\n  public async saveProductVariant(\n    variant: ProductVariant,\n  ): Promise {\n    return await this.productVariantRepository.save(variant);\n  }\n  /**\n   * @function checks variant availability\n   * @param manager\n   * @param variantId\n   * @param productId\n   * @param quantity\n   */\n  public async checkVariantAvailability(\n    manager: EntityManager,\n    variantId: string,\n    productId: string,\n    quantity: number,\n  ) {\n    // Fetch the variant from the database, ensuring it belongs to the specified product\n    // Fetch the variant with a pessimistic lock to prevent concurrent access\n    const variant = await manager\n      .createQueryBuilder(ProductVariant, 'variant')\n      .setLock('pessimistic_write') // Lock the row\n      .where('variant.id = :id AND variant.productId = :productId', {\n        id: variantId,\n        productId,\n      })\n      .getOne();\n\n    // Check if the variant exists\n    if (!variant) {\n      throw new BadRequestException(\n        `Variant with ID ${variantId} not found for product ${productId}`,\n      );\n    }\n\n    // Check if the variant is sold out\n    if (variant.soldOut) {\n      throw new BadRequestException(\n        `Variant ${variantId} (color: ${variant.color}, size: ${variant.size}) is sold out`,\n      );\n    }\n\n    // Optional: Check if the requested quantity exceeds available stock\n    if (quantity > variant.quantity) {\n      throw new BadRequestException(\n        `Requested quantity (${quantity}) for variant ${variantId} exceeds available stock (${variant.quantity})`,\n      );\n    }\n\n    // Reserve the stock by decrementing the quantity\n    variant.quantity -= quantity;\n\n    if (variant.quantity  {\n    // Fetch the variant with a lock\n    const variant = await manager\n      .createQueryBuilder(ProductVariant, 'variant')\n      .setLock('pessimistic_write')\n      .where('variant.id = :id AND variant.productId = :productId', {\n        id: variantId,\n        productId,\n      })\n      .getOne();\n\n    if (variant) {\n      // Restore the quantity\n      variant.quantity += quantity;\n      variant.soldOut = false; // Reset soldOut if quantity becomes positive\n      await manager.save(variant);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductWithVariantDto.html":{"url":"classes/ProductWithVariantDto.html","title":"class - ProductWithVariantDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductWithVariantDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/dtos/initiate-payment.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                productId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                variants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dtos/initiate-payment.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dtos/initiate-payment.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PatchProductVariantDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsNotEmpty()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dtos/initiate-payment.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsInt,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { PatchProductVariantDto } from 'src/product-variants/dto/patch-product-variant.dto';\n\nclass ProductWithVariantDto {\n  @IsString()\n  @IsNotEmpty()\n  productId: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  price: number;\n\n  @IsArray()\n  @IsNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => PatchProductVariantDto)\n  variants: PatchProductVariantDto[];\n}\n\nexport class InitiatePaymentDto {\n  @IsString()\n  @IsOptional()\n  deliveryPicker?: string;\n\n  @IsString()\n  @IsOptional()\n  deliveryAddress?: string;\n\n  @IsString()\n  @IsOptional()\n  discountId?: string;\n\n  @IsArray()\n  @IsNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => ProductWithVariantDto)\n  products: ProductWithVariantDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                createProduct\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                deleteProduct\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                findAllProducts\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                findProductById\n                            \n                            \n                                    \n                                    \n                                    Public\n                                patchProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProduct(createProductDto: CreateProductDto, files: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiConsumes('multipart/form-data')@UseInterceptors(undefined)@Roles(Role.ADMIN)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                files\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProduct(productId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:productId')@Roles(Role.ADMIN)@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a message that the item was successfully deleted\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        findAllProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllProducts(productQuery: GetProductsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It finds all products '})@ApiResponse({status: 200, description: 'All products are fetched and paginated'})@ApiQuery({name: 'limit', type: 'number', required: false, description: 'The number of entries returned per query', example: 10})@ApiQuery({name: 'page', type: 'number', required: false, description: 'The position of the page number that you want the api to return', example: 1})@Auth(AuthType.None)@Get('')\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:133\n                        \n                    \n\n\n            \n                \n                        route for getting all products\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productQuery\n                                            \n                                                            GetProductsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                all products\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        findProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductById(productId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It finds a product based on its id'})@ApiResponse({status: 200, description: 'Product is fetched successfully based on its id'})@ApiParam({name: 'eventId', required: true, type: String, description: 'The unique identifier of the product', example: '12345'})@ApiHeaders(['undefined', 'undefined'])@Auth(AuthType.None)@Get('/:productId')\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:100\n                        \n                    \n\n\n            \n                \n                        route for getting a product by the product id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                a particular event\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        patchProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchProduct(productId: string, patchProductDto: PatchProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:productId')@Roles(Role.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patchProductDto\n                                            \n                                                            PatchProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                updated product\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  Query,\n  UploadedFiles,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { CreateProductDto } from './dtos/createProductDto';\nimport {\n  ApiConsumes,\n  ApiHeaders,\n  ApiOperation,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n} from '@nestjs/swagger';\nimport { FileFieldsInterceptor } from '@nestjs/platform-express';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { Role } from 'src/auth/enums/role-type.enum';\nimport { ProductsService } from './providers/products.service';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\nimport { Auth } from 'src/auth/decorator/auth.decorator';\nimport { GetProductsDto } from './dtos/get-product.dto';\nimport { PatchProductDto } from './dtos/patch-product.dto';\n\n@Controller('products')\nexport class ProductsController {\n  constructor(\n    /**\n     * injecting the products service\n     */\n    private readonly productsService: ProductsService,\n  ) {}\n\n  /**\n   * @function createProduct\n   * @param createProductDto\n   * @param user\n   * @param files\n   */\n  @ApiConsumes('multipart/form-data')\n  @UseInterceptors(\n    FileFieldsInterceptor(\n      // Dynamically generate interceptor fields\n      Array.from({ length: 10 }, (_, i) => ({\n        name: `variants[${i}][images]`,\n        maxCount: 6,\n      })),\n    ),\n  )\n  @Roles(Role.ADMIN)\n  @Post()\n  public createProduct(\n    @Body() createProductDto: CreateProductDto,\n    @UploadedFiles() files: { [key: string]: Express.Multer.File[] },\n  ) {\n    return this.productsService.createProduct(createProductDto, files);\n  }\n\n  /**\n   * route for getting a product by the product id\n   * @param eventId\n   * @returns a particular event\n   */\n  @ApiOperation({\n    summary: 'It finds a product based on its id',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Product is fetched successfully based on its id',\n  })\n  @ApiParam({\n    name: 'eventId',\n    required: true,\n    type: String,\n    description: 'The unique identifier of the product',\n    example: '12345',\n  })\n  @ApiHeaders([\n    {\n      name: 'Authorization',\n      required: true,\n      description: 'Bearer token for authorization',\n    },\n    {\n      name: 'X-Custom-Header',\n      required: false,\n      description: 'A custom optional header',\n    },\n  ])\n  @Auth(AuthType.None)\n  @Get('/:productId')\n  public findProductById(@Param('productId') productId: string) {\n    return this.productsService.findProductById(productId);\n  }\n\n  /**\n   * route for getting all products\n   * @param productQuery\n   * @returns all products\n   */\n  @ApiOperation({\n    summary: 'It finds all products ',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'All products are fetched and paginated',\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: 'number',\n    required: false,\n    description: 'The number of entries returned per query',\n    example: 10,\n  })\n  @ApiQuery({\n    name: 'page',\n    type: 'number',\n    required: false,\n    description:\n      'The position of the page number that you want the api to return',\n    example: 1,\n  })\n  @Auth(AuthType.None)\n  @Get('')\n  public findAllProducts(@Query() productQuery: GetProductsDto) {\n    return this.productsService.findAll(productQuery);\n  }\n\n  /**\n   * @function updates a product\n   * @param productId\n   * @param patchProductDto\n   * @returns updated product\n   */\n  @Patch('/:productId')\n  @Roles(Role.ADMIN)\n  public patchProduct(\n    @Param('productId') productId: string,\n    @Body() patchProductDto: PatchProductDto,\n  ) {\n    return this.productsService.updateProduct(productId, patchProductDto);\n  }\n\n  /**\n   * @function deletes a product\n   * @param productId\n   * @returns a message that the item was successfully deleted\n   */\n  @Delete('/:productId')\n  @Roles(Role.ADMIN)\n  @HttpCode(HttpStatus.NO_CONTENT) // This set\n  public deleteProduct(\n    @Param('productId') productId: string,\n  ): Promise {\n    return this.productsService.deleteProduct(productId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_exports\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_ProductsModule_imports\n\n\n\n\nPaginationModule\n\nPaginationModule\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nPaginationModule->ProductsModule\n\n\n\n\n\nProductVariantsModule\n\nProductVariantsModule\n\nProductsModule -->\n\nProductVariantsModule->ProductsModule\n\n\n\n\n\nUploadsModule\n\nUploadsModule\n\nProductsModule -->\n\nUploadsModule->ProductsModule\n\n\n\n\n\nProductsService \n\nProductsService \n\nProductsService  -->\n\nProductsModule->ProductsService \n\n\n\n\n\nCreateProductProvider\n\nCreateProductProvider\n\nProductsModule -->\n\nCreateProductProvider->ProductsModule\n\n\n\n\n\nFindAllProductsProvider\n\nFindAllProductsProvider\n\nProductsModule -->\n\nFindAllProductsProvider->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nUpdateProductProvider\n\nUpdateProductProvider\n\nProductsModule -->\n\nUpdateProductProvider->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateProductProvider\n                        \n                        \n                            FindAllProductsProvider\n                        \n                        \n                            ProductsService\n                        \n                        \n                            UpdateProductProvider\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PaginationModule\n                        \n                        \n                            ProductVariantsModule\n                        \n                        \n                            UploadsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductsController } from './products.controller';\nimport { ProductsService } from './providers/products.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Product } from './product.entity';\nimport { CreateProductProvider } from './providers/create-product.provider';\nimport { UploadsModule } from 'src/uploads/uploads.module';\nimport { PaginationModule } from 'src/common/pagination/pagination.module';\nimport { ProductVariantsModule } from 'src/product-variants/product-variants.module';\nimport { FindAllProductsProvider } from './providers/find-all-products.provider';\nimport { UpdateProductProvider } from './providers/update-product.provider';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Product]),\n    UploadsModule,\n    PaginationModule,\n    ProductVariantsModule,\n  ],\n  controllers: [ProductsController],\n  providers: [\n    ProductsService,\n    CreateProductProvider,\n    FindAllProductsProvider,\n    UpdateProductProvider,\n  ],\n  exports: [ProductsService],\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/providers/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createProduct\n                            \n                            \n                                    Public\n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findProductById\n                            \n                            \n                                    Public\n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createProductProvider: CreateProductProvider, productRepository: Repository, findAllProductsProvider: FindAllProductsProvider, updateProductProvider: UpdateProductProvider)\n                    \n                \n                        \n                            \n                                Defined in src/products/providers/products.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createProductProvider\n                                                  \n                                                        \n                                                                        CreateProductProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        findAllProductsProvider\n                                                  \n                                                        \n                                                                        FindAllProductsProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateProductProvider\n                                                  \n                                                        \n                                                                        UpdateProductProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProduct(createProductDto: CreateProductDto, files: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                files\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                the created product\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProduct(productId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a message that the item was successfully deleted\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(productQuery: GetProductsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productQuery\n                                            \n                                                            GetProductsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                all products\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductById(productId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                product by id\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProduct(id: string, patchProductDto: PatchProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patchProductDto\n                                            \n                                                            PatchProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                updated product\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { CreateProductProvider } from './create-product.provider';\nimport { CreateProductDto } from '../dtos/createProductDto';\nimport { Repository } from 'typeorm';\nimport { Product } from '../product.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { GetProductsDto } from '../dtos/get-product.dto';\nimport { Paginated } from 'src/common/pagination/interfaces/paginated.interface';\nimport { PatchProductDto } from '../dtos/patch-product.dto';\nimport { FindAllProductsProvider } from './find-all-products.provider';\nimport { UpdateProductProvider } from './update-product.provider';\n\n@Injectable()\nexport class ProductsService {\n  constructor(\n    /**\n     * injecting the create product provider\n     */\n\n    private readonly createProductProvider: CreateProductProvider,\n\n    /**\n     * injecting the product repository\n     */\n    @InjectRepository(Product)\n    private readonly productRepository: Repository,\n\n    /**\n     * injecting the find all products provider\n     */\n    private readonly findAllProductsProvider: FindAllProductsProvider,\n\n    /**\n     * injecting the update product provider\n     */\n    private readonly updateProductProvider: UpdateProductProvider,\n  ) {}\n\n  /**\n   * @function creates a product\n   * @param createProductDto\n   * @param files\n   * @returns the created product\n   */\n  public async createProduct(\n    createProductDto: CreateProductDto,\n    files: { [key: string]: Express.Multer.File[] },\n  ): Promise {\n    return this.createProductProvider.createProduct(createProductDto, files);\n  }\n\n  /**\n   * @function to get product by id\n   * @param productId\n   * @returns product by id\n   */\n  public async findProductById(productId: string): Promise {\n    try {\n      const product = await this.productRepository.findOneBy({\n        id: productId,\n      });\n\n      if (!product) {\n        throw new NotFoundException(`product with ${productId}  not found`);\n      }\n\n      return product;\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n\n  /**\n   * @function for getting all products\n   * @param productQuery\n   * @returns all products\n   */\n  public async findAll(\n    productQuery: GetProductsDto,\n  ): Promise> {\n    return await this.findAllProductsProvider.findAll(productQuery);\n  }\n\n  /**\n   * @function updates a product\n   * @param id\n   * @param patchProductDto\n   * @returns updated product\n   */\n  public async updateProduct(\n    id: string,\n    patchProductDto: PatchProductDto,\n  ): Promise {\n    return await this.updateProductProvider.updateProduct(id, patchProductDto);\n  }\n\n  /**\n   * @function deletes a product\n   * @param productId\n   * @returns a message that the item was successfully deleted\n   */\n  public async deleteProduct(productId: string): Promise {\n    try {\n      await this.productRepository.delete(productId);\n      return {\n        message: `Product ${productId}, was successfully deleted`,\n      };\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenDto.html":{"url":"classes/RefreshTokenDto.html","title":"class - RefreshTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/refresh-token.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                refresh token dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the refresh token', example: 'hdfbwojefbnqpkfbjoqfehfewfeqwf234jr'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/refresh-token.dto.ts:17\n                        \n                    \n\n            \n                \n                    refresh token\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\n/**\n * refresh token dto\n */\nexport class RefreshTokenDto {\n  /**\n   * refresh token\n   */\n  @ApiProperty({\n    description: 'This is the refresh token',\n    example: 'hdfbwojefbnqpkfbjoqfehfewfeqwf234jr',\n  })\n  @IsNotEmpty()\n  @IsString()\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RefreshTokenProvider.html":{"url":"injectables/RefreshTokenProvider.html","title":"injectable - RefreshTokenProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RefreshTokenProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/refresh-token.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for resfresh token\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                refreshTokens\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConfiguration: ConfigType<>, generateTokenProvider: GenerateTokensProvider, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/refresh-token.provider.ts:19\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        generateTokenProvider\n                                                  \n                                                        \n                                                                        GenerateTokensProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshTokens(refreshTokenDto: RefreshTokenDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/refresh-token.provider.ts:56\n                        \n                    \n\n\n            \n                \n                        function for using the refresh token to generate a new access and refresh token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshTokenDto\n                                            \n                                                            RefreshTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                access and refresh tokend\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  forwardRef,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { RefreshTokenDto } from '../dtos/refresh-token.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport jwtConfig from '../config/jwt.config';\nimport { ConfigType } from '@nestjs/config';\nimport { GenerateTokensProvider } from './generate-tokens.provider';\nimport { UsersService } from 'src/users/providers/users.service';\nimport { ActiveUserData } from '../interfaces/active-user-data.interface';\n\n/**\n * provider for resfresh token\n */\n@Injectable()\nexport class RefreshTokenProvider {\n  /**\n   * constructor\n   * @param jwtService\n   * @param jwtConfiguration\n   * @param generateTokenProvider\n   * @param usersService\n   */\n  constructor(\n    /**\n     * Injecting the jwt service\n     */\n    private readonly jwtService: JwtService,\n\n    /**\n     * Injecting the jwt config\n     */\n    @Inject(jwtConfig.KEY)\n    private readonly jwtConfiguration: ConfigType,\n\n    /**\n     * injecting the generate token provider\n     */\n    private readonly generateTokenProvider: GenerateTokensProvider,\n\n    /**\n     * Injecting the usersService\n     */\n    @Inject(forwardRef(() => UsersService))\n    private readonly usersService: UsersService,\n  ) {}\n\n  /**\n   * function for using the refresh token to generate a new access and refresh token\n   * @param refreshTokenDto\n   * @returns access and refresh tokend\n   */\n  public async refreshTokens(refreshTokenDto: RefreshTokenDto) {\n    try {\n      // verify the refresh token using the jwtService\n      const { sub } = await this.jwtService.verifyAsync\n      >(refreshTokenDto.refreshToken, {\n        secret: this.jwtConfiguration.secret,\n        audience: this.jwtConfiguration.audience,\n        issuer: this.jwtConfiguration.issuer,\n      });\n\n      // based on the id gotten, fetch the user from the db\n      const user = await this.usersService.findOneById(sub);\n\n      // generate the tokens\n      return await this.generateTokenProvider.generateTokens(user);\n    } catch (error) {\n      throw new UnauthorizedException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Review.html":{"url":"entities/Review.html","title":"entity - Review","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Review\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/reviews.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dateCreated\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                product\n                            \n                            \n                                    \n                                review\n                            \n                            \n                                    \n                                reviewer\n                            \n                            \n                                    \n                                    \n                                stars\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, product => product.reviews)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        review\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reviewer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        stars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})@Check('\"stars\" BETWEEN 1 AND 5')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Product } from 'src/products/product.entity';\nimport {\n  Check,\n  Column,\n  CreateDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Review {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  reviewer: string;\n\n  @Column('text')\n  review: string;\n\n  @Column({ type: 'int' })\n  @Check('\"stars\" BETWEEN 1 AND 5') // This ad\n  stars: number;\n\n  @CreateDateColumn()\n  dateCreated: Date;\n\n  @ManyToOne(() => Product, (product) => product.reviews)\n  product: Product;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ReviewsController.html":{"url":"controllers/ReviewsController.html","title":"controller - ReviewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ReviewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/reviews.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                reviews\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                createReview\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                deleteProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        createReview\n                        \n                    \n                \n            \n            \n                \n                        \n                    createReview(createReviewDto: CreateReviewDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('')@Auth(AuthType.None)\n                \n            \n\n                    \n                        \n                            Defined in src/reviews/reviews.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createReviewDto\n                                            \n                                                            CreateReviewDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                review\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProduct(reviewId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:reviewId')@Roles(Role.ADMIN)@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in src/reviews/reviews.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reviewId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a message that the item was successfully deleted\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Post,\n} from '@nestjs/common';\nimport { ReviewsService } from './providers/reviews.service';\nimport { CreateReviewDto } from './dtos/create-review.dto';\nimport { Auth } from 'src/auth/decorator/auth.decorator';\nimport { AuthType } from 'src/auth/enums/auth-type.enum';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { Role } from 'src/auth/enums/role-type.enum';\n\n@Controller('reviews')\nexport class ReviewsController {\n  constructor(\n    /**\n     * injecting the reviews service\n     */\n    private readonly reviewsService: ReviewsService,\n  ) {}\n\n  /**\n   * @function creates a review\n   * @param createReviewDto\n   * @returns review\n   */\n  @Post('')\n  @Auth(AuthType.None)\n  public createReview(@Body() createReviewDto: CreateReviewDto): Promise {\n    return this.reviewsService.createReview(createReviewDto);\n  }\n\n  /**\n   * @function deletes a product\n   * @param productId\n   * @returns a message that the item was successfully deleted\n   */\n  @Delete('/:reviewId')\n  @Roles(Role.ADMIN)\n  @HttpCode(HttpStatus.NO_CONTENT) // This set\n  public deleteProduct(\n    @Param('reviewId') reviewId: string,\n  ): Promise {\n    return this.reviewsService.deleteReview(reviewId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReviewsModule.html":{"url":"modules/ReviewsModule.html","title":"module - ReviewsModule","body":"\n                   \n\n\n\n\n    Modules\n    ReviewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReviewsModule\n\n\n\ncluster_ReviewsModule_imports\n\n\n\ncluster_ReviewsModule_providers\n\n\n\n\nProductsModule\n\nProductsModule\n\n\n\nReviewsModule\n\nReviewsModule\n\nReviewsModule -->\n\nProductsModule->ReviewsModule\n\n\n\n\n\nCreateReviewProvider\n\nCreateReviewProvider\n\nReviewsModule -->\n\nCreateReviewProvider->ReviewsModule\n\n\n\n\n\nReviewsService\n\nReviewsService\n\nReviewsModule -->\n\nReviewsService->ReviewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/reviews/reviews.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateReviewProvider\n                        \n                        \n                            ReviewsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ReviewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProductsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ReviewsController } from './reviews.controller';\nimport { ReviewsService } from './providers/reviews.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Review } from './reviews.entity';\nimport { CreateReviewProvider } from './providers/create-review.provider';\nimport { ProductsModule } from 'src/products/products.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Review]), ProductsModule],\n  controllers: [ReviewsController],\n  providers: [ReviewsService, CreateReviewProvider],\n})\nexport class ReviewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReviewsService.html":{"url":"injectables/ReviewsService.html","title":"injectable - ReviewsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReviewsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/providers/reviews.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createReview\n                            \n                            \n                                    Public\n                                    Async\n                                deleteReview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createReviewProvider: CreateReviewProvider, reviewsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/reviews/providers/reviews.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createReviewProvider\n                                                  \n                                                        \n                                                                        CreateReviewProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reviewsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createReview\n                        \n                    \n                \n            \n            \n                \n                        \n                    createReview(createReviewDto: CreateReviewDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/reviews/providers/reviews.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createReviewDto\n                                            \n                                                            CreateReviewDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a review\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteReview\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteReview(reviewId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/reviews/providers/reviews.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reviewId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a message that the review was successfully deleted\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { CreateReviewProvider } from './create-review.provider';\nimport { CreateReviewDto } from '../dtos/create-review.dto';\nimport { Repository } from 'typeorm';\nimport { Review } from '../reviews.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class ReviewsService {\n  constructor(\n    /**\n     * injecting the create review provider\n     */\n    private readonly createReviewProvider: CreateReviewProvider,\n\n    /**\n     * injecting the reviews repository\n     */\n    @InjectRepository(Review)\n    private readonly reviewsRepository: Repository,\n  ) {}\n\n  /**\n   * @function creates a review\n   * @param createReviewDto\n   * @param productId\n   * @returns a review\n   */\n  public async createReview(createReviewDto: CreateReviewDto): Promise {\n    return this.createReviewProvider.createReview(createReviewDto);\n  }\n\n  /**\n   * @function deletes a review\n   * @param reviewId\n   * @returns a message that the review was successfully deleted\n   */\n  public async deleteReview(reviewId: string): Promise {\n    try {\n      await this.reviewsRepository.delete(reviewId);\n      return {\n        message: `Product ${reviewId}, was successfully deleted`,\n      };\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/roles/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    role guard\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/roles/roles.guard.ts:16\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/roles/roles.guard.ts:31\n                        \n                    \n\n\n            \n                \n                        function for validating role of user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true or false depending whether the users role meets the role requirements in the role decorator\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  ForbiddenException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { ROLES_KEY } from 'src/auth/constants/role.constant';\nimport { Role } from 'src/auth/enums/role-type.enum';\n\n/**\n * role guard\n */\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  // using static means you can use the name of the property of the class without the \"this\" keyword\n  //   private static readonly defaultRoleType: Role = Role.ADMIN;\n\n  /**\n   * constructor\n   * @param reflector\n   */\n  constructor(private reflector: Reflector) {}\n\n  /**\n   * function for validating role of user\n   * @param context\n   * @returns true or false depending whether the users role meets the role requirements in the role decorator\n   */\n  canActivate(context: ExecutionContext): boolean {\n    const requiredRoles = this.reflector.getAllAndOverride(ROLES_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    if (!requiredRoles) {\n      return true; //  allow access.\n    }\n\n    const { user } = context.switchToHttp().getRequest();\n\n    if (!user) {\n      throw new ForbiddenException('User not found.');\n    }\n\n    const hasRole = requiredRoles.some((role) => user.role === role);\n\n    if (!hasRole) {\n      throw new ForbiddenException(\n        'You do not have permission to access this resource.',\n      );\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/sign-in.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                sign in dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the email of the user', example: 'Favour@gmail.com'})@IsEmail()@MaxLength(96)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/sign-in.dto.ts:19\n                        \n                    \n\n            \n                \n                    user email address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the role of the user', example: 'Admin'})@IsEnum(Role)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/sign-in.dto.ts:30\n                        \n                    \n\n            \n                \n                    user role\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsEnum, IsNotEmpty, MaxLength } from 'class-validator';\nimport { Role } from '../enums/role-type.enum';\n\n/**\n * sign in dto\n */\nexport class SignInDto {\n  /**\n   * user email address\n   */\n  @ApiProperty({\n    description: 'This is the email of the user',\n    example: 'Favour@gmail.com',\n  })\n  @IsEmail()\n  @MaxLength(96)\n  @IsNotEmpty()\n  email: string;\n\n  /**\n   * user role\n   */\n  @ApiProperty({\n    description: 'This is the role of the user',\n    example: 'Admin',\n  })\n  @IsEnum(Role)\n  @IsNotEmpty()\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SignInProvider.html":{"url":"injectables/SignInProvider.html","title":"injectable - SignInProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SignInProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/sign-in.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider for sigining in users\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, mailService: MailService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/sign-in.provider.ts:17\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: SignInDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/sign-in.provider.ts:42\n                        \n                    \n\n\n            \n                \n                        function for signing in users\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                access and refresh tokens\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  forwardRef,\n  Inject,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { SignInDto } from '../dtos/sign-in.dto';\nimport { UsersService } from 'src/users/providers/users.service';\nimport { randomInt } from 'crypto';\nimport * as crypto from 'crypto';\nimport { MailService } from 'src/mail/providers/mail.service';\n\n/**\n * provider for sigining in users\n */\n@Injectable()\nexport class SignInProvider {\n  /**\n   * constructor\n   * @param usersService\n   * @param hashingProvider\n   * @param generateTokenProvider\n   */\n  constructor(\n    /**\n     * injecting the user service\n     */\n    @Inject(forwardRef(() => UsersService))\n    private readonly usersService: UsersService,\n\n    /**\n     * injecting the mail service\n     */\n    private readonly mailService: MailService,\n  ) {}\n\n  /**\n   * function for signing in users\n   * @param signInDto\n   * @returns access and refresh tokens\n   */\n  public async signIn(signInDto: SignInDto) {\n    // find  the user using the email ID\n    // throw an exception if the user does not exist\n\n    let user: any;\n    user = await this.usersService.findOneByEmail(signInDto.email);\n\n    // if user does not exist already, create user\n    if (!user) {\n      user = await this.usersService.createUser({\n        email: signInDto.email,\n        role: signInDto.role,\n      });\n    }\n\n    // generate otp\n    const otp = randomInt(1000, 1000000);\n\n    const hashedOtp = crypto\n      .createHash('sha256')\n      .update(otp.toString())\n      .digest('hex');\n\n    // store the otp in the db\n    await this.usersService.storeTokenOtpAndOtpExpire(user, hashedOtp);\n\n    try {\n      await this.mailService.sendLoginOtp(user, otp.toString());\n    } catch (error) {\n      console.log(error);\n      throw new RequestTimeoutException(error);\n    }\n\n    return {\n      user: {\n        id: user.id,\n        role: user.role,\n        email: user.email,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StoreOtpAndExpireProvider.html":{"url":"injectables/StoreOtpAndExpireProvider.html","title":"injectable - StoreOtpAndExpireProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StoreOtpAndExpireProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/store-otp-and-expire.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                provider class for storing otp and expiry date\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                storeOtpAndExpire\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/store-otp-and-expire.provider.ts:10\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        storeOtpAndExpire\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeOtpAndExpire(user: User, otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/store-otp-and-expire.provider.ts:29\n                        \n                    \n\n\n            \n                \n                        function for storing otp and expiry date\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '../user.entity';\n\n/**\n * provider class for storing otp and expiry date\n */\n@Injectable()\nexport class StoreOtpAndExpireProvider {\n  /**\n   * constructor\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * Injecting the users repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  /**\n   * function for storing otp and expiry date\n   * @param user\n   * @param otp\n   * @returns user\n   */\n  public async storeOtpAndExpire(user: User, otp: string) {\n    const resetExpires = new Date(Date.now() + 5 * 60 * 1000);\n    const newUserObj = { ...user, otp: otp, otpExpire: resetExpires };\n    try {\n      return await this.usersRepository.save(newUserObj);\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Subscriber.html":{"url":"entities/Subscriber.html","title":"entity - Subscriber","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Subscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscriber.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                subscriber entity for the table in the database\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/subscriber.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/subscriber.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * subscriber entity for the table in the database\n */\n@Entity()\nexport class Subscriber {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: false,\n    unique: true,\n  })\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SubscribersController.html":{"url":"controllers/SubscribersController.html","title":"controller - SubscribersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SubscribersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                subscribers\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('subscribers')\nexport class SubscribersController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubscribersModule.html":{"url":"modules/SubscribersModule.html","title":"module - SubscribersModule","body":"\n                   \n\n\n\n\n    Modules\n    SubscribersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\ncluster_SubscribersModule_imports\n\n\n\n\nMailModule\n\nMailModule\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nSubscribersModule -->\n\nMailModule->SubscribersModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/subscribers/subscribers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubscribersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SubscribersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MailModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SubscribersService } from './providers/subscribers.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Subscriber } from './subscriber.entity';\nimport { MailModule } from 'src/mail/mail.module';\nimport { SubscribersController } from './subscribers.controller';\n\n@Module({\n  controllers: [SubscribersController],\n  providers: [SubscribersService],\n  imports: [TypeOrmModule.forFeature([Subscriber]), MailModule],\n})\nexport class SubscribersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubscribersService.html":{"url":"injectables/SubscribersService.html","title":"injectable - SubscribersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubscribersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/providers/subscribers.service.ts\n        \n\n\n            \n                Description\n            \n            \n                service for the subscriber module\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createSubscriber\n                            \n                            \n                                    Public\n                                    Async\n                                unsubscribeEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subscriberRepository: Repository, mailService: MailService)\n                    \n                \n                        \n                            \n                                Defined in src/subscribers/providers/subscribers.service.ts:12\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subscriberRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createSubscriber\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSubscriber(createSubscriberDto: CreateSubscriberDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/providers/subscribers.service.ts:36\n                        \n                    \n\n\n            \n                \n                        function for creatng a subscriber\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                message that subscriber has successfully subscribed to the newsletter\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        unsubscribeEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    unsubscribeEmail(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/providers/subscribers.service.ts:55\n                        \n                    \n\n\n            \n                \n                        function for unsubscribing from newsletter\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                message that subscriber has unsubscribed from the newsletter\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { CreateSubscriberDto } from '../dtos/create-subscriber.dto';\nimport { Repository } from 'typeorm';\nimport { Subscriber } from '../subscriber.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { MailService } from 'src/mail/providers/mail.service';\n\n/**\n * service for the subscriber module\n */\n@Injectable()\nexport class SubscribersService {\n  /**\n   * constructor\n   * @param subscriberRepository\n   * @param mailService\n   */\n  constructor(\n    /**\n     * injecting the subscriber repository\n     */\n    @InjectRepository(Subscriber)\n    private readonly subscriberRepository: Repository,\n\n    /**\n     * injecting the mail service\n     */\n    private readonly mailService: MailService,\n  ) {}\n\n  /**\n   * function for creatng a subscriber\n   * @param createSubscriberDto\n   * @returns message that subscriber has successfully subscribed to the newsletter\n   */\n  public async createSubscriber(createSubscriberDto: CreateSubscriberDto) {\n    const subscriber = this.subscriberRepository.create(createSubscriberDto);\n\n    try {\n      await this.subscriberRepository.save(subscriber);\n      await this.mailService.sendSubscriberMail(subscriber);\n      return {\n        message: 'Subscribed to newsletter successfully',\n      };\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n\n  /**\n   * function for unsubscribing from newsletter\n   * @param id\n   * @returns message that subscriber has unsubscribed from the newsletter\n   */\n  public async unsubscribeEmail(id: number) {\n    try {\n      await this.subscriberRepository.delete(id);\n      return {\n        message: 'Unsubscribed from newsletter successfully',\n      };\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDeliveryStateDto.html":{"url":"classes/UpdateDeliveryStateDto.html","title":"class - UpdateDeliveryStateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDeliveryStateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery-states/dtos/update-delivery-state.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(\n  CreateDeliveryStateDto,\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateDeliveryStateDto } from './create-delivery-state.dto';\nimport { PartialType } from '@nestjs/mapped-types';\n\nexport class UpdateDeliveryStateDto extends PartialType(\n  CreateDeliveryStateDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateProductProvider.html":{"url":"injectables/UpdateProductProvider.html","title":"injectable - UpdateProductProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateProductProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/providers/update-product.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productRepository: Repository, productVariantsService: ProductVariantsService)\n                    \n                \n                        \n                            \n                                Defined in src/products/providers/update-product.provider.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productVariantsService\n                                                  \n                                                        \n                                                                        ProductVariantsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProduct(id: string, patchProductDto: PatchProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/update-product.provider.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patchProductDto\n                                            \n                                                            PatchProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { PatchProductDto } from '../dtos/patch-product.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Product } from '../product.entity';\nimport { ProductVariantsService } from 'src/product-variants/providers/product-variants.service';\n\n@Injectable()\nexport class UpdateProductProvider {\n  constructor(\n    /**\n     * injecting the product repository\n     */\n    @InjectRepository(Product)\n    private readonly productRepository: Repository,\n\n    /**\n     * injecting the product variant service\n     */\n    private readonly productVariantsService: ProductVariantsService,\n  ) {}\n\n  public async updateProduct(id: string, patchProductDto: PatchProductDto) {\n    let product;\n    // find the prd\n    try {\n      product = await this.productRepository.findOne({\n        where: { id },\n      });\n    } catch (err) {\n      throw new RequestTimeoutException(err);\n    }\n    if (!product) {\n      throw new BadRequestException('Product does not exist');\n    }\n    // update product\n    // Update top-level product fields (if provided)\n    let productUpdated = false;\n    if (patchProductDto.name !== undefined) {\n      product.name = patchProductDto.name;\n      productUpdated = true;\n    }\n    if (patchProductDto.price !== undefined) {\n      product.price = patchProductDto.price;\n      productUpdated = true;\n    }\n    if (patchProductDto.discount !== undefined) {\n      product.discount = patchProductDto.discount;\n      productUpdated = true;\n    }\n\n    if (patchProductDto.category !== undefined) {\n      product.category = patchProductDto.category;\n      productUpdated = true;\n    }\n\n    if (patchProductDto.dressStyle !== undefined) {\n      product.dressStyle = patchProductDto.dressStyle;\n      productUpdated = true;\n    }\n\n    if (patchProductDto.clothType !== undefined) {\n      product.clothType = patchProductDto.clothType;\n      productUpdated = true;\n    }\n\n    if (patchProductDto.material !== undefined) {\n      product.material = patchProductDto.material;\n      productUpdated = true;\n    }\n\n    if (patchProductDto.brand !== undefined) {\n      product.brand = patchProductDto.brand;\n      productUpdated = true;\n    }\n\n    try {\n      // Save product only if top-level fields were updated\n      if (productUpdated) {\n        await this.productRepository.save(product);\n      }\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error: any) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n\n    // Update only the specified variants\n    if (patchProductDto.variants && patchProductDto.variants.length > 0) {\n      for (const variantDto of patchProductDto.variants) {\n        const variant =\n          await this.productVariantsService.findProductVariantById(\n            variantDto.id,\n            product.id,\n          );\n        // Manually update only the provided fields\n        if (variantDto.color !== undefined) variant.color = variantDto.color;\n        if (variantDto.size !== undefined) variant.size = variantDto.size;\n        if (variantDto.quantity !== undefined)\n          variant.quantity = variantDto.quantity;\n        if (variantDto.soldOut !== undefined)\n          variant.soldOut = variantDto.soldOut;\n\n        // Save the variant directly\n        await this.productVariantsService.saveProductVariant(variant);\n      }\n    }\n\n    // Return the updated product with its variants (for response)\n    return this.productRepository.findOne({\n      where: { id },\n      relations: ['variants'],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadToAwsProvider.html":{"url":"injectables/UploadToAwsProvider.html","title":"injectable - UploadToAwsProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadToAwsProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/uploads/providers/upload-to-aws.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                fileUpload\n                            \n                            \n                                    Private\n                                generateFileName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/uploads/providers/upload-to-aws.provider.ts:8\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        fileUpload\n                        \n                    \n                \n            \n            \n                \n                        \n                    fileUpload(file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/uploads/providers/upload-to-aws.provider.ts:25\n                        \n                    \n\n\n            \n                \n                        function for uploading image file to aws\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                stored file\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateFileName\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateFileName(file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/uploads/providers/upload-to-aws.provider.ts:49\n                        \n                    \n\n\n            \n                \n                        function for generating the image filename\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    function for generating the image file name\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                the image file name\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { S3 } from 'aws-sdk';\nimport * as path from 'path';\nimport { v4 as uuid4 } from 'uuid';\n\n@Injectable()\nexport class UploadToAwsProvider {\n  /**\n   * constructor\n   * @param configService\n   */\n  constructor(\n    /**\n     * injecting the config service\n     */\n    private readonly configService: ConfigService,\n  ) {}\n\n  /**\n   * function for uploading image file to aws\n   * @param file\n   * @returns stored file\n   */\n  public async fileUpload(file: Express.Multer.File) {\n    const s3 = new S3();\n\n    try {\n      const uploadResult = await s3\n        .upload({\n          Bucket: this.configService.get('appConfig.awsBucketName'),\n          Body: file.buffer,\n          Key: this.generateFileName(file),\n          ContentType: file.mimetype,\n        })\n        .promise();\n\n      return uploadResult.Key;\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n\n  /**\n   *function for generating the image filename\n   * @param file function for generating the image file name\n   * @returns the image file name\n   */\n  private generateFileName(file: Express.Multer.File) {\n    // extract file name\n    const name = file.originalname.split('.')[0];\n\n    // Remove white spaces\n    name.replace(/|s/g, '').trim();\n\n    // extract the extension\n    const extension = path.extname(file.originalname);\n\n    // generate time stamp\n    const timestamp = new Date().getTime().toString().trim();\n\n    // return file uuid\n    return `${name}-${timestamp}-${uuid4()}${extension}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UploadsModule.html":{"url":"modules/UploadsModule.html","title":"module - UploadsModule","body":"\n                   \n\n\n\n\n    Modules\n    UploadsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UploadsModule\n\n\n\ncluster_UploadsModule_exports\n\n\n\ncluster_UploadsModule_providers\n\n\n\n\nUploadsService \n\nUploadsService \n\n\n\nUploadsModule\n\nUploadsModule\n\nUploadsService  -->\n\nUploadsModule->UploadsService \n\n\n\n\n\nUploadToAwsProvider\n\nUploadToAwsProvider\n\nUploadsModule -->\n\nUploadToAwsProvider->UploadsModule\n\n\n\n\n\nUploadsService\n\nUploadsService\n\nUploadsModule -->\n\nUploadsService->UploadsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/uploads/uploads.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UploadToAwsProvider\n                        \n                        \n                            UploadsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UploadsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UploadsService } from './providers/uploads.service';\nimport { UploadToAwsProvider } from './providers/upload-to-aws.provider';\n\n@Module({\n  providers: [UploadsService, UploadToAwsProvider],\n  exports: [UploadsService],\n})\nexport class UploadsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadsService.html":{"url":"injectables/UploadsService.html","title":"injectable - UploadsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/uploads/providers/uploads.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uploadToAwsProvider: UploadToAwsProvider, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/uploads/providers/uploads.service.ts:10\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uploadToAwsProvider\n                                                  \n                                                        \n                                                                        UploadToAwsProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/uploads/providers/uploads.service.ts:33\n                        \n                    \n\n\n            \n                \n                        function for uploading image file\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                url for image file\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  Injectable,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { UploadToAwsProvider } from './upload-to-aws.provider';\n\n@Injectable()\nexport class UploadsService {\n  /**\n   * constructor\n   * @param uploadToAwsProvider\n   * @param configService\n   */\n  constructor(\n    /**\n     * injecting the upload to aws provider\n     */\n    private readonly uploadToAwsProvider: UploadToAwsProvider,\n\n    /**\n     * injecting config service\n     */\n    private readonly configService: ConfigService,\n  ) {}\n\n  /**\n   * function for uploading image file\n   * @param file\n   * @returns url for image file\n   */\n  public async uploadFile(file: Express.Multer.File) {\n    // throw error for unsupported mimetype\n    if (!['image/jpeg', 'image/png', 'image/jpg'].includes(file.mimetype)) {\n      throw new BadRequestException('mime type not supported');\n    }\n\n    try {\n      // upload the file to the aws s3 bucket and a url has been generated\n      const name = await this.uploadToAwsProvider.fileUpload(file);\n\n      return `${this.configService.get('appConfig.awsCloudFrontUrl')}/${name}`;\n    } catch (error) {\n      throw new ConflictException(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                user entity for user table in the database\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    Optional\n                                country\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    Optional\n                                otp\n                            \n                            \n                                    \n                                    Optional\n                                otpExpire\n                            \n                            \n                                    \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                    Optional\n                                state\n                            \n                            \n                                    \n                                    Optional\n                                streetAddress\n                            \n                            \n                                    \n                                    Optional\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        otp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        otpExpire\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 20, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: Role, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        streetAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 96, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:64\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Role } from 'src/auth/enums/role-type.enum';\nimport { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * user entity for user table in the database\n */\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  firstName?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  lastName?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 20,\n    nullable: true,\n  })\n  phoneNumber?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  country?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  state?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  city?: string;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  streetAddress?: string;\n\n  @Column({\n    nullable: true,\n  })\n  zipCode?: number;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: false,\n    unique: true,\n  })\n  email: string;\n\n  @Column({\n    type: 'enum',\n    enum: Role,\n    nullable: false,\n  })\n  role: Role;\n\n  @Column({\n    type: 'varchar',\n    length: 96,\n    nullable: true,\n  })\n  otp?: string;\n\n  @Column({\n    type: 'timestamp',\n    nullable: true,\n  })\n  otpExpire?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                findAllUsers\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                findUser\n                            \n                            \n                                    \n                                    \n                                    Public\n                                patchUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It deletes a user based on their id'})@ApiResponse({status: 204, description: 'User successfully deleted'})@ApiParam({name: 'userId', required: true, type: String, description: 'The unique identifier of the user', example: '12345'})@ApiHeaders(['undefined', 'undefined'])@Delete('/:userId')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:156\n                        \n                    \n\n\n            \n                \n                        route for deleting a user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                a message indicating user was deleted\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        findAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllUsers(usersQuery: GetUsersDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It finds all users '})@ApiResponse({status: 200, description: 'All users are fetched and paginated'})@ApiQuery({name: 'limit', type: 'number', required: false, description: 'The number of entries returned per query', example: 10})@ApiQuery({name: 'page', type: 'number', required: false, description: 'The position of the page number that you want the api to return', example: 1})@ApiHeaders(['undefined', 'undefined'])@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:111\n                        \n                    \n\n\n            \n                \n                        route for getting all users\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                usersQuery\n                                            \n                                                            GetUsersDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                all users\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        findUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUser(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'It finds a user based on their id'})@ApiResponse({status: 200, description: 'User is fetched successfully based on user id'})@ApiParam({name: 'userId', required: true, type: String, description: 'The unique identifier of the user', example: '12345'})@ApiHeaders(['undefined', 'undefined'])@Get('/:userId')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:67\n                        \n                    \n\n\n            \n                \n                        route for getting a user by user id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                a user\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        patchUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchUsers(patchUserDto: PatchUserDto, user: ActiveUserData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@Roles(Role.USER, Role.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Query,\n} from '@nestjs/common';\n\nimport { UsersService } from './providers/users.service';\nimport { PatchUserDto } from './dtos/patch-user.dto';\nimport { Role } from 'src/auth/enums/role-type.enum';\nimport { Roles } from 'src/auth/decorator/role.decorator';\nimport { ActiveUser } from 'src/auth/decorator/active-user.decorator';\nimport { ActiveUserData } from 'src/auth/interfaces/active-user-data.interface';\nimport {\n  ApiHeaders,\n  ApiOperation,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n} from '@nestjs/swagger';\nimport { GetUsersDto } from './dtos/get-user.dto';\n\n@Controller('users')\nexport class UsersController {\n  constructor(\n    /**\n     * injecting the usersService\n     */\n    private readonly usersService: UsersService,\n  ) {}\n\n  /**\n   * route for getting a user by user id\n   * @param userId\n   * @returns a user\n   */\n  @ApiOperation({\n    summary: 'It finds a user based on their id',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'User is fetched successfully based on user id',\n  })\n  @ApiParam({\n    name: 'userId',\n    required: true,\n    type: String,\n    description: 'The unique identifier of the user',\n    example: '12345',\n  })\n  @ApiHeaders([\n    {\n      name: 'Authorization',\n      required: true,\n      description: 'Bearer token for authorization',\n    },\n    {\n      name: 'X-Custom-Header',\n      required: false,\n      description: 'A custom optional header',\n    },\n  ])\n  @Get('/:userId')\n  public findUser(@Param('userId') userId: string) {\n    return this.usersService.findOneById(userId);\n  }\n\n  /**\n   * route for getting all users\n   * @param usersQuery\n   * @returns all users\n   */\n  @ApiOperation({\n    summary: 'It finds all users ',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'All users are fetched and paginated',\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: 'number',\n    required: false,\n    description: 'The number of entries returned per query',\n    example: 10,\n  })\n  @ApiQuery({\n    name: 'page',\n    type: 'number',\n    required: false,\n    description:\n      'The position of the page number that you want the api to return',\n    example: 1,\n  })\n  @ApiHeaders([\n    {\n      name: 'Authorization',\n      required: true,\n      description: 'Bearer token for authorization',\n    },\n    {\n      name: 'X-Custom-Header',\n      required: false,\n      description: 'A custom optional header',\n    },\n  ])\n  @Get()\n  public findAllUsers(@Query() usersQuery: GetUsersDto) {\n    return this.usersService.findAll(usersQuery);\n  }\n\n  @Patch()\n  @Roles(Role.USER, Role.ADMIN)\n  public patchUsers(\n    @Body() patchUserDto: PatchUserDto,\n    @ActiveUser() user: ActiveUserData,\n  ) {\n    return this.usersService.updateUser(user.sub, patchUserDto);\n  }\n\n  /**\n   * route for deleting a user\n   * @param userId\n   * @returns a message indicating user was deleted\n   */\n  @ApiOperation({\n    summary: 'It deletes a user based on their id',\n  })\n  @ApiResponse({\n    status: 204,\n    description: 'User successfully deleted',\n  })\n  @ApiParam({\n    name: 'userId',\n    required: true,\n    type: String,\n    description: 'The unique identifier of the user',\n    example: '12345',\n  })\n  @ApiHeaders([\n    {\n      name: 'Authorization',\n      required: true,\n      description: 'Bearer token for authorization',\n    },\n    {\n      name: 'X-Custom-Header',\n      required: false,\n      description: 'A custom optional header',\n    },\n  ])\n  @Delete('/:userId')\n  public deleteUser(@Param('userId') userId: string) {\n    return this.usersService.deleteUser(userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_imports\n\n\n\n\nPaginationModule\n\nPaginationModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPaginationModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nClearOtpAndExpiryTimeProvider\n\nClearOtpAndExpiryTimeProvider\n\nUsersModule -->\n\nClearOtpAndExpiryTimeProvider->UsersModule\n\n\n\n\n\nCreateUsersProvider\n\nCreateUsersProvider\n\nUsersModule -->\n\nCreateUsersProvider->UsersModule\n\n\n\n\n\nFindOneByIdProvider\n\nFindOneByIdProvider\n\nUsersModule -->\n\nFindOneByIdProvider->UsersModule\n\n\n\n\n\nFindOneUserByEmailProvider\n\nFindOneUserByEmailProvider\n\nUsersModule -->\n\nFindOneUserByEmailProvider->UsersModule\n\n\n\n\n\nFindUserByOtpAndExpiryTimeProvider\n\nFindUserByOtpAndExpiryTimeProvider\n\nUsersModule -->\n\nFindUserByOtpAndExpiryTimeProvider->UsersModule\n\n\n\n\n\nStoreOtpAndExpireProvider\n\nStoreOtpAndExpireProvider\n\nUsersModule -->\n\nStoreOtpAndExpireProvider->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClearOtpAndExpiryTimeProvider\n                        \n                        \n                            CreateUsersProvider\n                        \n                        \n                            FindOneByIdProvider\n                        \n                        \n                            FindOneUserByEmailProvider\n                        \n                        \n                            FindUserByOtpAndExpiryTimeProvider\n                        \n                        \n                            StoreOtpAndExpireProvider\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PaginationModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { UsersService } from './providers/users.service';\nimport { UsersController } from './users.controller';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { CreateUsersProvider } from './providers/create-users.provider';\nimport { User } from './user.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { FindOneUserByEmailProvider } from './providers/find-one-user-by-email.provider';\nimport { StoreOtpAndExpireProvider } from './providers/store-otp-and-expire.provider';\nimport { FindUserByOtpAndExpiryTimeProvider } from './providers/find-user-by-reset-otp-and-expiry-time.provider';\nimport { FindOneByIdProvider } from './providers/find-one-by-id.provider';\nimport { PaginationModule } from 'src/common/pagination/pagination.module';\nimport { ClearOtpAndExpiryTimeProvider } from './providers/clear-otp-and-expiry-time.provider';\n\n@Module({\n  providers: [\n    UsersService,\n    CreateUsersProvider,\n    FindOneUserByEmailProvider,\n    StoreOtpAndExpireProvider,\n    FindUserByOtpAndExpiryTimeProvider,\n    FindOneByIdProvider,\n    ClearOtpAndExpiryTimeProvider,\n  ],\n  controllers: [UsersController],\n  imports: [\n    forwardRef(() => AuthModule),\n    TypeOrmModule.forFeature([User]),\n    PaginationModule,\n  ],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/users.service.ts\n        \n\n\n            \n                Description\n            \n            \n                service provider for the user module\ninjectable\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                clearOtpAndExpiryTime\n                            \n                            \n                                    Public\n                                    Async\n                                createUser\n                            \n                            \n                                    Public\n                                    Async\n                                deleteUser\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOneByEmail\n                            \n                            \n                                    Public\n                                    Async\n                                findOneById\n                            \n                            \n                                    Public\n                                    Async\n                                findUserByResetOtpAndExpiryTime\n                            \n                            \n                                    Public\n                                    Async\n                                storeTokenOtpAndOtpExpire\n                            \n                            \n                                    Public\n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createUserProvider: CreateUsersProvider, findOneUserByEmailProvider: FindOneUserByEmailProvider, storeOtpAndExpiresProvider: StoreOtpAndExpireProvider, findUserByOtpAndExpiresProvider: FindUserByOtpAndExpiryTimeProvider, findOneByIdProvider: FindOneByIdProvider, paginationprovider: PaginationProvider, usersRepository: Repository, clearOtpAndExpiryTimeProvider: ClearOtpAndExpiryTimeProvider)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/users.service.ts:27\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createUserProvider\n                                                  \n                                                        \n                                                                        CreateUsersProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        findOneUserByEmailProvider\n                                                  \n                                                        \n                                                                        FindOneUserByEmailProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storeOtpAndExpiresProvider\n                                                  \n                                                        \n                                                                        StoreOtpAndExpireProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        findUserByOtpAndExpiresProvider\n                                                  \n                                                        \n                                                                        FindUserByOtpAndExpiryTimeProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        findOneByIdProvider\n                                                  \n                                                        \n                                                                        FindOneByIdProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paginationprovider\n                                                  \n                                                        \n                                                                        PaginationProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clearOtpAndExpiryTimeProvider\n                                                  \n                                                        \n                                                                        ClearOtpAndExpiryTimeProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        clearOtpAndExpiryTime\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearOtpAndExpiryTime(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:126\n                        \n                    \n\n\n            \n                \n                        function for clearing otp after login\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:87\n                        \n                    \n\n\n            \n                \n                        function for creating a new user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                the create user\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:168\n                        \n                    \n\n\n            \n                \n                        a function for deleting a user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                a message on successful deletion\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(userQuery: GetUsersDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:144\n                        \n                    \n\n\n            \n                \n                        function for getting all users\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userQuery\n                                            \n                                                            GetUsersDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                all users\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:96\n                        \n                    \n\n\n            \n                \n                        function for getting the user based on the email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                a user based on the email\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:135\n                        \n                    \n\n\n            \n                \n                        function for getting the user based on id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                user based on the user id\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findUserByResetOtpAndExpiryTime\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserByResetOtpAndExpiryTime(otp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:115\n                        \n                    \n\n\n            \n                \n                        function for getting the user based on the stored reset token and expiry date\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                the user based on the stored reset token and expiry date\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        storeTokenOtpAndOtpExpire\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeTokenOtpAndOtpExpire(user: User, token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:106\n                        \n                    \n\n\n            \n                \n                        function for storing the reset token and expiry date of the token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                a user with stored reset token and expiry date\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(id: string, patchUserDto: PatchUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:179\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patchUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { CreateUsersProvider } from './create-users.provider';\nimport { CreateUserDto } from '../dtos/create-user.dto';\nimport { FindOneUserByEmailProvider } from './find-one-user-by-email.provider';\nimport { StoreOtpAndExpireProvider } from './store-otp-and-expire.provider';\nimport { User } from '../user.entity';\nimport { FindUserByOtpAndExpiryTimeProvider } from './find-user-by-reset-otp-and-expiry-time.provider';\n\nimport { FindOneByIdProvider } from './find-one-by-id.provider';\nimport { GetUsersDto } from '../dtos/get-user.dto';\nimport { Paginated } from 'src/common/pagination/interfaces/paginated.interface';\nimport { PaginationProvider } from 'src/common/pagination/providers/pagination.provider';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ClearOtpAndExpiryTimeProvider } from './clear-otp-and-expiry-time.provider';\nimport { PatchUserDto } from '../dtos/patch-user.dto';\n\n/**\n * service provider for the user module\n * injectable\n */\n@Injectable()\nexport class UsersService {\n  /**\n   * constructor\n   * @param createUserProvider\n   * @param findOneUserByEmailProvider\n   * @param storeOtpAndExpiresProvider\n   * @param findUserByResetOtpAndExpiresProvider\n   * @param changeUserPasswordProvider\n   * @param findOneByIdProvider\n   * @param paginationprovider\n   * @param usersRepository\n   */\n  constructor(\n    /**\n     * injecting the create user provider\n     */\n    private readonly createUserProvider: CreateUsersProvider,\n\n    /**\n     * Injecting the findOneUserByEmailProvider\n     */\n    private readonly findOneUserByEmailProvider: FindOneUserByEmailProvider,\n\n    /**\n     * injecting the store otp and expires provider\n     */\n    private readonly storeOtpAndExpiresProvider: StoreOtpAndExpireProvider,\n\n    /**\n     * injecting the find user by reset otp and expires provider\n     */\n    private readonly findUserByOtpAndExpiresProvider: FindUserByOtpAndExpiryTimeProvider,\n\n    /**\n     * injecting the find one by id provider\n     */\n    private readonly findOneByIdProvider: FindOneByIdProvider,\n\n    /**\n     * injecting the pagination provider\n     */\n    private readonly paginationprovider: PaginationProvider,\n\n    /**\n     * injecting the user repository\n     */\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n\n    /**\n     * injecting the clear otp and expiry time provider\n     */\n    private readonly clearOtpAndExpiryTimeProvider: ClearOtpAndExpiryTimeProvider,\n  ) {}\n\n  /**\n   * function for creating a new user\n   * @param createUserDto\n   * @returns the create user\n   */\n  public async createUser(createUserDto: CreateUserDto) {\n    return await this.createUserProvider.createUser(createUserDto);\n  }\n\n  /**\n   * function for getting the user based on the email\n   * @param email\n   * @returns a user based on the email\n   */\n  public async findOneByEmail(email: string) {\n    return this.findOneUserByEmailProvider.findOneByEmail(email);\n  }\n\n  /**\n   * function for storing the reset token and expiry date of the token\n   * @param user\n   * @param token\n   * @returns a user with stored reset token and expiry date\n   */\n  public async storeTokenOtpAndOtpExpire(user: User, token: string) {\n    return await this.storeOtpAndExpiresProvider.storeOtpAndExpire(user, token);\n  }\n\n  /**\n   * function for getting the user based on the stored reset token and expiry date\n   * @param otp\n   * @returns the user based on the stored reset token and expiry date\n   */\n  public async findUserByResetOtpAndExpiryTime(otp: string) {\n    return await this.findUserByOtpAndExpiresProvider.findUserByOtpAndExpiryTime(\n      otp,\n    );\n  }\n\n  /**\n   * function for clearing otp after login\n   * @param user\n   * @returns user\n   */\n  public async clearOtpAndExpiryTime(user: User) {\n    return await this.clearOtpAndExpiryTimeProvider.clearOtpAndExpiryTime(user);\n  }\n\n  /**\n   * function for getting the user based on id\n   * @param id\n   * @returns user based on the user id\n   */\n  public async findOneById(id: string) {\n    return await this.findOneByIdProvider.findById(id);\n  }\n\n  /**\n   * function for getting all users\n   * @param userQuery\n   * @returns all users\n   */\n  public async findAll(userQuery: GetUsersDto): Promise> {\n    try {\n      const user = this.paginationprovider.paginationQuery(\n        {\n          limit: userQuery.limit,\n          page: userQuery.page,\n        },\n        this.usersRepository,\n        {\n          relations: null,\n        },\n      );\n\n      return user;\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n\n  /**\n   * a function for deleting a user\n   * @param userId\n   * @returns a message on successful deletion\n   */\n  public async deleteUser(userId: string) {\n    try {\n      await this.usersRepository.delete(userId);\n      return {\n        message: `User ${userId}, was successfully deleted`,\n      };\n    } catch (error) {\n      throw new RequestTimeoutException(error);\n    }\n  }\n\n  public async updateUser(id: string, patchUserDto: PatchUserDto) {\n    let user;\n    // find the user\n    try {\n      user = await this.usersRepository.findOneBy({\n        id: id,\n      });\n    } catch (err) {\n      throw new RequestTimeoutException(err);\n    }\n    if (!user) {\n      throw new BadRequestException('User does not exist');\n    }\n    // update user\n    user = { ...user, ...patchUserDto };\n\n    try {\n      await this.usersRepository.save(user);\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error: any) {\n      throw new RequestTimeoutException(\n        'Unable to process your request at the moment, please try later',\n        {\n          description: 'Error connecting to the database',\n        },\n      );\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VerifyPaymentProvider.html":{"url":"injectables/VerifyPaymentProvider.html","title":"injectable - VerifyPaymentProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VerifyPaymentProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/providers/verify-payment.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAuthHeader\n                            \n                            \n                                    Public\n                                    Async\n                                paymentWebhook\n                            \n                            \n                                    Private\n                                    Async\n                                verifyPayment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paystackConfiguration: ConfigType<>, dataSource: DataSource, productVariantsService: ProductVariantsService, productsService: ProductsService, mailService: MailService)\n                    \n                \n                        \n                            \n                                Defined in src/paystack/providers/verify-payment.provider.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paystackConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productVariantsService\n                                                  \n                                                        \n                                                                        ProductVariantsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productsService\n                                                  \n                                                        \n                                                                        ProductsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAuthHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAuthHeader()\n                \n            \n\n\n                    \n                        \n                            Defined in src/paystack/providers/verify-payment.provider.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         { Authorization: string; }\n\n                        \n                            \n                                authorization header for paystack\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        paymentWebhook\n                        \n                    \n                \n            \n            \n                \n                        \n                    paymentWebhook(body: any, signature: string, req: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paystack/providers/verify-payment.provider.ts:206\n                        \n                    \n\n\n            \n                \n                        function called by paystack server after user pays\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                signature\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                reference for payment\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        verifyPayment\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyPayment(reference: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paystack/providers/verify-payment.provider.ts:65\n                        \n                    \n\n\n            \n                \n                        function for verifying the payment\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reference\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                data after payment\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  HttpException,\n  HttpStatus,\n  Inject,\n  Injectable,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport paystackConfig from '../config/paystack.config';\nimport { ConfigType } from '@nestjs/config';\nimport { DataSource } from 'typeorm';\nimport * as crypto from 'crypto';\nimport axios from 'axios';\nimport { Payment } from 'src/payment/payment.entity';\nimport { paymentStatus } from 'src/payment/enums/paymentStatus.enum';\nimport { ProductVariantsService } from 'src/product-variants/providers/product-variants.service';\nimport { Order } from 'src/orders/order.entity';\nimport { ProductsService } from 'src/products/providers/products.service';\nimport { DiscountUsage } from 'src/discounts-usage/discounts-usage.entity';\nimport { MailService } from 'src/mail/providers/mail.service';\n\n@Injectable()\nexport class VerifyPaymentProvider {\n  constructor(\n    /**\n     * injecting the paystack config\n     */\n    @Inject(paystackConfig.KEY)\n    private readonly paystackConfiguration: ConfigType,\n\n    /**\n     * Injecting datasource\n     */\n    private readonly dataSource: DataSource,\n\n    /**\n     * injecting the product variants service\n     */\n    private readonly productVariantsService: ProductVariantsService,\n\n    /**\n     * injecting the products service\n     */\n    private readonly productsService: ProductsService,\n\n    /**\n     * injecting the mail service\n     */\n    private readonly mailService: MailService,\n  ) {}\n\n  /**\n   * @function for getting the auth header\n   * @returns authorization header for paystack\n   */\n  private getAuthHeader() {\n    return { Authorization: `Bearer ${this.paystackConfiguration.secret}` };\n  }\n\n  /**\n   * function for verifying the payment\n   * @param reference\n   * @returns data after payment\n   */\n  private async verifyPayment(reference: string): Promise {\n    // create Query Runner instance\n    const queryRunner = this.dataSource.createQueryRunner();\n\n    try {\n      // connect query runner to datasource\n      await queryRunner.connect();\n\n      // start transaction\n      await queryRunner.startTransaction();\n    } catch (error) {\n      console.log(error);\n      throw new RequestTimeoutException('Could not connect to datasource');\n    }\n    try {\n      // send request to verify payment\n      const response = await axios.get(\n        `${this.paystackConfiguration.baseUrl}/transaction/verify/${reference}`,\n        { headers: this.getAuthHeader() },\n      );\n\n      const {\n        products,\n        user,\n        deliveryAddress,\n        deliveryPicker,\n        totalAmount,\n        discount,\n      } = response.data.data.metadata;\n\n      const prdsDb = await Promise.all(\n        products\n          .map((prd) => prd.productId)\n          .map(\n            async (prdId) => await this.productsService.findProductById(prdId),\n          ),\n      );\n\n      // Get purchase by payment reference\n      const payment = await queryRunner.manager.findOne(Payment, {\n        where: { providerReference: reference },\n      });\n\n      if (!payment) {\n        throw new Error('Purchase not found');\n      }\n\n      if (response.data.data.status === 'success') {\n        // Update payment status\n        payment.status = paymentStatus.SUCCESS;\n\n        console.log('createing order');\n        // create order\n        const order = await queryRunner.manager.save(Order, {\n          userId: user.id,\n          deliveryAddress: deliveryAddress,\n          totalAmount: totalAmount,\n          deliveryPicker: deliveryPicker,\n          products: prdsDb,\n        });\n\n        // if there is a discount the add it to the discount usage\n        if (discount.id) {\n          // create the discount usage\n          const discountUsage = await queryRunner.manager.save(DiscountUsage, {\n            user: user,\n            discount: discount,\n            order: order,\n          });\n\n          // add the discount applied to the order\n          order.discountApplied = discount.percentOff;\n\n          // add the discount usage to the order\n          order.discountUsage = discountUsage;\n\n          // save both the discount usage and order\n          await queryRunner.manager.save(Order, order);\n          await queryRunner.manager.save(DiscountUsage, discountUsage);\n        }\n      } else {\n        // Payment failed\n        payment.status = paymentStatus.FAILED;\n\n        // rollback\n        for (const product of products) {\n          const { productId, variants } = product;\n\n          // Iterate through each variant the user wants to buy\n          for (const variantDto of variants) {\n            const { id: variantId, quantity } = variantDto;\n\n            // check availability\n            await this.productVariantsService.rollbackStock(\n              variantId,\n              productId,\n              quantity,\n              queryRunner.manager,\n            );\n          }\n        }\n      }\n\n      // Save updated paymet\n      await queryRunner.manager.save(Payment, payment);\n\n      await queryRunner.commitTransaction();\n\n      // send a mail to the user\n      try {\n        await this.mailService.sendProductPurchaseMail(user, prdsDb);\n      } catch (err) {\n        throw new ConflictException(err);\n      }\n\n      return response.data;\n    } catch (error) {\n      await queryRunner.rollbackTransaction();\n      throw new ConflictException('Could not complete the transaction', {\n        description: String(error),\n      });\n    } finally {\n      // relsease the connection\n      // release connection whether it was successful or not\n      try {\n        await queryRunner.release();\n      } catch (error) {\n        throw new RequestTimeoutException('Could not release the connection', {\n          description: String(error),\n        });\n      }\n    }\n  }\n\n  /**\n   * function called by paystack server after user pays\n   * @param body\n   * @param signature\n   * @param req\n   * @returns reference for payment\n   */\n  public async paymentWebhook(body: any, signature: string, req: any) {\n    // regenerate the signature\n    const hash = crypto\n      .createHmac('sha512', this.paystackConfiguration.secret)\n      .update(JSON.stringify(req.body))\n      .digest('hex');\n\n    if (hash !== signature) {\n      throw new HttpException('Invalid signature', HttpStatus.FORBIDDEN);\n    }\n\n    const { data, event } = body;\n\n    if (event !== 'charge.success') {\n      throw new HttpException('Invalid event type', HttpStatus.BAD_REQUEST);\n    }\n\n    // verify payment\n    const paymentData = await this.verifyPayment(data.reference);\n\n    // console.log('Payment successful:', paymentData);\n\n    if (paymentData.data.status === 'success') {\n      return { message: 'Payment verified and processed successfully' };\n    } else {\n      throw new HttpException(\n        'Payment verification failed',\n        HttpStatus.BAD_REQUEST,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app.module.ts\n            \n            variable\n            ENV\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/auth/constants/auth.constant.ts\n            \n            variable\n            AUTH_TYPE_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/constants/auth.constant.ts\n            \n            variable\n            REQUEST_USER_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/constants/role.constant.ts\n            \n            variable\n            ROLES_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/decorator/active-user.decorator.ts\n            \n            variable\n            ActiveUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/decorator/auth.decorator.ts\n            \n            variable\n            Auth\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/decorator/role.decorator.ts\n            \n            variable\n            Roles\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/auth/dtos/otpSignin.dto.ts\n            \n            class\n            OtpSigninDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/auth/dtos/refresh-token.dto.ts\n            \n            class\n            RefreshTokenDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/auth/dtos/sign-in.dto.ts\n            \n            class\n            SignInDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/guards/access-token/access-token.guard.ts\n            \n            guard\n            AccessTokenGuard\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/guards/authentication/authentication.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/auth/guards/roles/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/interfaces/active-user-data.interface.ts\n            \n            interface\n            ActiveUserData\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/providers/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/auth/providers/generate-tokens.provider.ts\n            \n            injectable\n            GenerateTokensProvider\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/providers/otp-signin.provider.ts\n            \n            injectable\n            OtpSigninProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/providers/refresh-token.provider.ts\n            \n            injectable\n            RefreshTokenProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/providers/sign-in.provider.ts\n            \n            injectable\n            SignInProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/common/interceptors/data-response/data-response.interceptor.ts\n            \n            injectable\n            DataResponseInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/common/pagination/dtos/pagination-query.dto.ts\n            \n            class\n            PaginationQueryDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/common/pagination/interfaces/paginated.interface.ts\n            \n            interface\n            Paginated\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/common/pagination/providers/pagination.provider.ts\n            \n            injectable\n            PaginationProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/config/paths.config.ts\n            \n            variable\n            ROOT_PATH\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/delivery-states/delivery-state.entity.ts\n            \n            entity\n            DeliveryState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/delivery-states/delivery-states.controller.ts\n            \n            controller\n            DeliveryStatesController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/delivery-states/dtos/create-delivery-state.dto.ts\n            \n            class\n            CreateDeliveryStateDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/delivery-states/dtos/update-delivery-state.dto.ts\n            \n            class\n            UpdateDeliveryStateDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/delivery-states/providers/delivery-states.service.ts\n            \n            injectable\n            DeliveryStatesService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/discounts-usage/discounts-usage.entity.ts\n            \n            entity\n            DiscountUsage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/discounts-usage/providers/discounts-usage.service.ts\n            \n            injectable\n            DiscountsUsageService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/discounts/discounts.controller.ts\n            \n            controller\n            DiscountsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/discounts/discounts.entity.ts\n            \n            entity\n            Discount\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/discounts/dtos/apply-for-discount.dto.ts\n            \n            class\n            ApplyForDiscountDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/discounts/dtos/create-discount.dto.ts\n            \n            class\n            CreateDiscountDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/discounts/providers/apply-for-discount.provider.ts\n            \n            injectable\n            ApplyForDiscountProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/discounts/providers/create-discount.provider.ts\n            \n            injectable\n            CreateDiscountProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/discounts/providers/discounts.service.ts\n            \n            injectable\n            DiscountsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/mail/providers/mail.service.ts\n            \n            injectable\n            MailService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/orders/order.entity.ts\n            \n            entity\n            Order\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/orders/orders.controller.ts\n            \n            controller\n            OrdersController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/orders/providers/orders.service.ts\n            \n            injectable\n            OrdersService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/payment/payment.controller.ts\n            \n            controller\n            PaymentController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/payment/payment.entity.ts\n            \n            entity\n            Payment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/paystack/dtos/initiate-payment.dto.ts\n            \n            class\n            InitiatePaymentDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/paystack/dtos/initiate-payment.dto.ts\n            \n            class\n            ProductWithVariantDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/paystack/paystack.controller.ts\n            \n            controller\n            PaystackController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/paystack/providers/initiate-payment.provider.ts\n            \n            injectable\n            InitiatePaymentProvider\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/paystack/providers/paystack.service.ts\n            \n            injectable\n            PaystackService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/paystack/providers/verify-payment.provider.ts\n            \n            injectable\n            VerifyPaymentProvider\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/product-images/product-image.entity.ts\n            \n            entity\n            ProductImage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product-images/providers/product-images.service.ts\n            \n            injectable\n            ProductImagesService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product-variants/dto/create-product-variant.dto.ts\n            \n            class\n            CreateProductVariantDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/product-variants/dto/patch-product-variant.dto.ts\n            \n            class\n            PatchProductVariantDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/product-variants/product-variants.entity.ts\n            \n            entity\n            ProductVariant\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product-variants/providers/product-variants.service.ts\n            \n            injectable\n            ProductVariantsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/products/dtos/createProductDto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/products/dtos/get-product.dto.ts\n            \n            class\n            GetProductsBaseDto\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/products/dtos/get-product.dto.ts\n            \n            class\n            GetProductsDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/products/dtos/patch-product.dto.ts\n            \n            class\n            PatchProductDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/products/product.entity.ts\n            \n            entity\n            Product\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/products/providers/create-product.provider.ts\n            \n            injectable\n            CreateProductProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/providers/find-all-products.provider.ts\n            \n            injectable\n            FindAllProductsProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/providers/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/products/providers/update-product.provider.ts\n            \n            injectable\n            UpdateProductProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/reviews/dtos/create-review.dto.ts\n            \n            class\n            CreateReviewDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/reviews/providers/create-review.provider.ts\n            \n            injectable\n            CreateReviewProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/reviews/providers/reviews.service.ts\n            \n            injectable\n            ReviewsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/reviews/reviews.controller.ts\n            \n            controller\n            ReviewsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/reviews/reviews.entity.ts\n            \n            entity\n            Review\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/dtos/create-subscriber.dto.ts\n            \n            class\n            CreateSubscriberDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/subscribers/providers/subscribers.service.ts\n            \n            injectable\n            SubscribersService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/subscribers/subscriber.entity.ts\n            \n            entity\n            Subscriber\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.controller.ts\n            \n            controller\n            SubscribersController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/uploads/providers/upload-to-aws.provider.ts\n            \n            injectable\n            UploadToAwsProvider\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/uploads/providers/uploads.service.ts\n            \n            injectable\n            UploadsService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/dtos/get-user.dto.ts\n            \n            class\n            GetUsersBaseDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/dtos/get-user.dto.ts\n            \n            class\n            GetUsersDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/users/dtos/patch-user.dto.ts\n            \n            class\n            PatchUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/providers/clear-otp-and-expiry-time.provider.ts\n            \n            injectable\n            ClearOtpAndExpiryTimeProvider\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/users/providers/create-users.provider.ts\n            \n            injectable\n            CreateUsersProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/providers/find-one-by-id.provider.ts\n            \n            injectable\n            FindOneByIdProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/providers/find-one-user-by-email.provider.ts\n            \n            injectable\n            FindOneUserByEmailProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/providers/find-user-by-reset-otp-and-expiry-time.provider.ts\n            \n            injectable\n            FindUserByOtpAndExpiryTimeProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/providers/store-otp-and-expire.provider.ts\n            \n            injectable\n            StoreOtpAndExpireProvider\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/providers/users.service.ts\n            \n            injectable\n            UsersService\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/users/user.entity.ts\n            \n            entity\n            User\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                60 %\n                (3/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.26\n        \n            @nestjs-modules/mailer : ^2.0.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^4.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/platform-express : ^10.4.15\n        \n            @nestjs/swagger : ^11.0.6\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            @types/multer : ^1.4.12\n        \n            aws-sdk : ^2.1692.0\n        \n            axios : ^1.8.4\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            joi : ^17.13.3\n        \n            pg : ^8.13.3\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n        \n            uuid : ^11.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthType   (src/.../auth-type.enum.ts)\n                        \n                        \n                            OrderStatus   (src/.../order-status.enum.ts)\n                        \n                        \n                            paymentStatus   (src/.../paymentStatus.enum.ts)\n                        \n                        \n                            Role   (src/.../role-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/enums/auth-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthType\n                    \n                \n                        \n                            \n                                 Bearer\n                            \n                        \n                        \n                            \n                                 None\n                            \n                        \n            \n        \n\n    src/orders/enums/order-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderStatus\n                    \n                \n                        \n                            \n                                 PLACED\n                            \n                        \n                        \n                            \n                                Value : placed\n                            \n                        \n                        \n                            \n                                 PROCESSING\n                            \n                        \n                        \n                            \n                                Value : processing\n                            \n                        \n                        \n                            \n                                 SHIPPED\n                            \n                        \n                        \n                            \n                                Value : shipped\n                            \n                        \n                        \n                            \n                                 DELIVERY\n                            \n                        \n                        \n                            \n                                Value : delivery\n                            \n                        \n                        \n                            \n                                 DELIVERED\n                            \n                        \n                        \n                            \n                                Value : delivered\n                            \n                        \n            \n        \n\n    src/payment/enums/paymentStatus.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        paymentStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n                        \n                            \n                                Value : failed\n                            \n                        \n            \n        \n\n    src/auth/enums/role-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                        the boostrap nest function\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DeliveryStatesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DiscountsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DiscountsUsageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrdersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaginationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaystackModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductImagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductVariantsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReviewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubscribersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UploadsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_DeliveryStatesModule\n\n\n\ncluster_DeliveryStatesModule_providers\n\n\n\ncluster_DiscountsModule\n\n\n\ncluster_DiscountsModule_providers\n\n\n\ncluster_DiscountsUsageModule\n\n\n\ncluster_DiscountsUsageModule_exports\n\n\n\ncluster_DiscountsUsageModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\ncluster_PaginationModule\n\n\n\ncluster_PaginationModule_exports\n\n\n\ncluster_PaginationModule_providers\n\n\n\ncluster_PaystackModule\n\n\n\ncluster_PaystackModule_providers\n\n\n\ncluster_ProductImagesModule\n\n\n\ncluster_ProductImagesModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_exports\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_ProductVariantsModule\n\n\n\ncluster_ProductVariantsModule_exports\n\n\n\ncluster_ProductVariantsModule_providers\n\n\n\ncluster_ReviewsModule\n\n\n\ncluster_ReviewsModule_providers\n\n\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\ncluster_UploadsModule\n\n\n\ncluster_UploadsModule_exports\n\n\n\ncluster_UploadsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDeliveryStatesModule\n\nDeliveryStatesModule\n\nAppModule -->\n\nDeliveryStatesModule->AppModule\n\n\n\n\n\nDiscountsModule\n\nDiscountsModule\n\nAppModule -->\n\nDiscountsModule->AppModule\n\n\n\n\n\nDiscountsUsageModule\n\nDiscountsUsageModule\n\nDiscountsModule -->\n\nDiscountsUsageModule->DiscountsModule\n\n\n\nAppModule -->\n\nDiscountsUsageModule->AppModule\n\n\n\n\n\nDiscountsUsageService \n\nDiscountsUsageService \n\nDiscountsUsageService  -->\n\nDiscountsUsageModule->DiscountsUsageService \n\n\n\n\n\nMailModule\n\nMailModule\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nSubscribersModule -->\n\nMailModule->SubscribersModule\n\n\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nAppModule -->\n\nPaymentModule->AppModule\n\n\n\n\n\nPaystackModule\n\nPaystackModule\n\nAppModule -->\n\nPaystackModule->AppModule\n\n\n\n\n\nProductImagesModule\n\nProductImagesModule\n\nAppModule -->\n\nProductImagesModule->AppModule\n\n\n\n\n\nProductVariantsModule\n\nProductVariantsModule\n\nPaystackModule -->\n\nProductVariantsModule->PaystackModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nProductVariantsModule->ProductsModule\n\n\n\nAppModule -->\n\nProductVariantsModule->AppModule\n\n\n\n\n\nProductVariantsService \n\nProductVariantsService \n\nProductVariantsService  -->\n\nProductVariantsModule->ProductVariantsService \n\n\n\nPaystackModule -->\n\nProductsModule->PaystackModule\n\n\n\n\n\nReviewsModule\n\nReviewsModule\n\nReviewsModule -->\n\nProductsModule->ReviewsModule\n\n\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nProductsService \n\nProductsService \n\nProductsService  -->\n\nProductsModule->ProductsService \n\n\n\nAppModule -->\n\nReviewsModule->AppModule\n\n\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUploadsModule\n\nUploadsModule\n\nProductsModule -->\n\nUploadsModule->ProductsModule\n\n\n\nAppModule -->\n\nUploadsModule->AppModule\n\n\n\n\n\nUploadsService \n\nUploadsService \n\nUploadsService  -->\n\nUploadsModule->UploadsService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nPaystackModule -->\n\nUsersModule->PaystackModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nGenerateTokensProvider\n\nGenerateTokensProvider\n\nAuthModule -->\n\nGenerateTokensProvider->AuthModule\n\n\n\n\n\nOtpSigninProvider\n\nOtpSigninProvider\n\nAuthModule -->\n\nOtpSigninProvider->AuthModule\n\n\n\n\n\nRefreshTokenProvider\n\nRefreshTokenProvider\n\nAuthModule -->\n\nRefreshTokenProvider->AuthModule\n\n\n\n\n\nSignInProvider\n\nSignInProvider\n\nAuthModule -->\n\nSignInProvider->AuthModule\n\n\n\n\n\nDeliveryStatesService\n\nDeliveryStatesService\n\nDeliveryStatesModule -->\n\nDeliveryStatesService->DeliveryStatesModule\n\n\n\n\n\nApplyForDiscountProvider\n\nApplyForDiscountProvider\n\nDiscountsModule -->\n\nApplyForDiscountProvider->DiscountsModule\n\n\n\n\n\nCreateDiscountProvider\n\nCreateDiscountProvider\n\nDiscountsModule -->\n\nCreateDiscountProvider->DiscountsModule\n\n\n\n\n\nDiscountsService\n\nDiscountsService\n\nDiscountsModule -->\n\nDiscountsService->DiscountsModule\n\n\n\n\n\nDiscountsUsageService\n\nDiscountsUsageService\n\nDiscountsUsageModule -->\n\nDiscountsUsageService->DiscountsUsageModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\nPaginationProvider \n\nPaginationProvider \n\n\n\nPaginationModule\n\nPaginationModule\n\nProductsModule -->\n\nPaginationModule->ProductsModule\n\n\n\nUsersModule -->\n\nPaginationModule->UsersModule\n\n\n\nPaginationProvider  -->\n\nPaginationModule->PaginationProvider \n\n\n\n\n\nPaginationProvider\n\nPaginationProvider\n\nPaginationModule -->\n\nPaginationProvider->PaginationModule\n\n\n\n\n\nInitiatePaymentProvider\n\nInitiatePaymentProvider\n\nPaystackModule -->\n\nInitiatePaymentProvider->PaystackModule\n\n\n\n\n\nPaystackService\n\nPaystackService\n\nPaystackModule -->\n\nPaystackService->PaystackModule\n\n\n\n\n\nVerifyPaymentProvider\n\nVerifyPaymentProvider\n\nPaystackModule -->\n\nVerifyPaymentProvider->PaystackModule\n\n\n\n\n\nProductImagesService\n\nProductImagesService\n\nProductImagesModule -->\n\nProductImagesService->ProductImagesModule\n\n\n\n\n\nCreateProductProvider\n\nCreateProductProvider\n\nProductsModule -->\n\nCreateProductProvider->ProductsModule\n\n\n\n\n\nFindAllProductsProvider\n\nFindAllProductsProvider\n\nProductsModule -->\n\nFindAllProductsProvider->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nUpdateProductProvider\n\nUpdateProductProvider\n\nProductsModule -->\n\nUpdateProductProvider->ProductsModule\n\n\n\n\n\nProductVariantsService\n\nProductVariantsService\n\nProductVariantsModule -->\n\nProductVariantsService->ProductVariantsModule\n\n\n\n\n\nCreateReviewProvider\n\nCreateReviewProvider\n\nReviewsModule -->\n\nCreateReviewProvider->ReviewsModule\n\n\n\n\n\nReviewsService\n\nReviewsService\n\nReviewsModule -->\n\nReviewsService->ReviewsModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\nUploadToAwsProvider\n\nUploadToAwsProvider\n\nUploadsModule -->\n\nUploadToAwsProvider->UploadsModule\n\n\n\n\n\nUploadsService\n\nUploadsService\n\nUploadsModule -->\n\nUploadsService->UploadsModule\n\n\n\n\n\nClearOtpAndExpiryTimeProvider\n\nClearOtpAndExpiryTimeProvider\n\nUsersModule -->\n\nClearOtpAndExpiryTimeProvider->UsersModule\n\n\n\n\n\nCreateUsersProvider\n\nCreateUsersProvider\n\nUsersModule -->\n\nCreateUsersProvider->UsersModule\n\n\n\n\n\nFindOneByIdProvider\n\nFindOneByIdProvider\n\nUsersModule -->\n\nFindOneByIdProvider->UsersModule\n\n\n\n\n\nFindOneUserByEmailProvider\n\nFindOneUserByEmailProvider\n\nUsersModule -->\n\nFindOneUserByEmailProvider->UsersModule\n\n\n\n\n\nFindUserByOtpAndExpiryTimeProvider\n\nFindUserByOtpAndExpiryTimeProvider\n\nUsersModule -->\n\nFindUserByOtpAndExpiryTimeProvider->UsersModule\n\n\n\n\n\nStoreOtpAndExpireProvider\n\nStoreOtpAndExpireProvider\n\nUsersModule -->\n\nStoreOtpAndExpireProvider->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    11 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    36 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    22 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActiveUser   (src/.../active-user.decorator.ts)\n                        \n                        \n                            Auth   (src/.../auth.decorator.ts)\n                        \n                        \n                            AUTH_TYPE_KEY   (src/.../auth.constant.ts)\n                        \n                        \n                            ENV   (src/.../app.module.ts)\n                        \n                        \n                            REQUEST_USER_KEY   (src/.../auth.constant.ts)\n                        \n                        \n                            Roles   (src/.../role.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../role.constant.ts)\n                        \n                        \n                            ROOT_PATH   (src/.../paths.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/decorator/active-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ActiveUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (field: keyof ActiveUserData | undefined, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user: ActiveUserData = request[REQUEST_USER_KEY];\n\n    return field ? user?.[field] : user;\n  },\n)\n                    \n                \n\n            \n                \n                    Custom param decorator for the active user\n\n                \n            \n\n        \n    \n\n    src/auth/decorator/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...authTypes: AuthType[]) =>\n  SetMetadata(AUTH_TYPE_KEY, authTypes)\n                    \n                \n\n            \n                \n                    decorator for guarding user authentication\n\n                \n            \n\n        \n    \n\n    src/auth/constants/auth.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_TYPE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'authType'\n                    \n                \n\n            \n                \n                    constant for auth type\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REQUEST_USER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n\n            \n                \n                    constant for request user\n\n                \n            \n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENV\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV\n                    \n                \n\n            \n                \n                    app environment\n\n                \n            \n\n        \n    \n\n    src/auth/decorator/role.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Role[]) => SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n            \n                \n                    decoraror for gaurding the user roles\n\n                \n            \n\n        \n    \n\n    src/auth/constants/role.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roles'\n                    \n                \n\n            \n                \n                    constant for the roles\n\n                \n            \n\n        \n    \n\n    src/config/paths.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROOT_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.cwd()\n                    \n                \n\n            \n                \n                    setting the default root\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
